Implementation smell,Namespace,Class,File,Method,Description
Long Method,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The method has 144 lines of code.
Complex Method,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,Cyclomatic complexity of the method is 15
Complex Method,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,Cyclomatic complexity of the method is 27
Complex Method,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,Cyclomatic complexity of the method is 11
Complex Method,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,Cyclomatic complexity of the method is 10
Complex Method,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,Cyclomatic complexity of the method is 18
Complex Method,PAWNEdit,Settings,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Settings.cs,ReadSettings,Cyclomatic complexity of the method is 8
Long Statement,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The length of the statement  "			MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 229.
Long Statement,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,CaughtException,The length of the statement  "	MessageBox.Show ("Exception:\n" + ex.Message + "\n______________\n" + ex.InnerException + "\n______________\n" + ex.Source + "\n______________\n" + ex.StackTrace + "\n______________\n" + ex.TargetSite + "\n______________\n" + ex.Data); " is 235.
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: try {  	string text = null;  	bool streamcomment = false;  	int ind = 0;  	for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  		text = scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			// The unindenting.  			if (!streamcomment) {  				// Remove new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				// Unindent.  				ind = 0;  				foreach (char ch in text) {  					if (text.Length > ind + 1) {  						if (text.Substring (ind' 2).CompareTo ("//") == 0) {  							break;  						}  					}  					if (text.Length > 0) {  						if (ch != '\t' && ch != ' ')  							break;  						text = text.Remove (0' 1);  					}  					ind++;  				}  				// Set the line.  				scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: try {  	string text = null;  	bool streamcomment = false;  	int ind = 0;  	for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  		text = scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			// The unindenting.  			if (!streamcomment) {  				// Remove new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				// Unindent.  				ind = 0;  				foreach (char ch in text) {  					if (text.Length > ind + 1) {  						if (text.Substring (ind' 2).CompareTo ("//") == 0) {  							break;  						}  					}  					if (text.Length > 0) {  						if (ch != '\t' && ch != ' ')  							break;  						text = text.Remove (0' 1);  					}  					ind++;  				}  				// Set the line.  				scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  	text = scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		// The unindenting.  		if (!streamcomment) {  			// Remove new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			// Unindent.  			ind = 0;  			foreach (char ch in text) {  				if (text.Length > ind + 1) {  					if (text.Substring (ind' 2).CompareTo ("//") == 0) {  						break;  					}  				}  				if (text.Length > 0) {  					if (ch != '\t' && ch != ' ')  						break;  					text = text.Remove (0' 1);  				}  				ind++;  			}  			// Set the line.  			scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  	text = scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		// The unindenting.  		if (!streamcomment) {  			// Remove new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			// Unindent.  			ind = 0;  			foreach (char ch in text) {  				if (text.Length > ind + 1) {  					if (text.Substring (ind' 2).CompareTo ("//") == 0) {  						break;  					}  				}  				if (text.Length > 0) {  					if (ch != '\t' && ch != ' ')  						break;  					text = text.Remove (0' 1);  				}  				ind++;  			}  			// Set the line.  			scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	// The unindenting.  	if (!streamcomment) {  		// Remove new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		// Unindent.  		ind = 0;  		foreach (char ch in text) {  			if (text.Length > ind + 1) {  				if (text.Substring (ind' 2).CompareTo ("//") == 0) {  					break;  				}  			}  			if (text.Length > 0) {  				if (ch != '\t' && ch != ' ')  					break;  				text = text.Remove (0' 1);  			}  			ind++;  		}  		// Set the line.  		scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	// The unindenting.  	if (!streamcomment) {  		// Remove new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		// Unindent.  		ind = 0;  		foreach (char ch in text) {  			if (text.Length > ind + 1) {  				if (text.Substring (ind' 2).CompareTo ("//") == 0) {  					break;  				}  			}  			if (text.Length > 0) {  				if (ch != '\t' && ch != ' ')  					break;  				text = text.Remove (0' 1);  			}  			ind++;  		}  		// Set the line.  		scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (!streamcomment) {  	// Remove new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	// Unindent.  	ind = 0;  	foreach (char ch in text) {  		if (text.Length > ind + 1) {  			if (text.Substring (ind' 2).CompareTo ("//") == 0) {  				break;  			}  		}  		if (text.Length > 0) {  			if (ch != '\t' && ch != ' ')  				break;  			text = text.Remove (0' 1);  		}  		ind++;  	}  	// Set the line.  	scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (!streamcomment) {  	// Remove new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	// Unindent.  	ind = 0;  	foreach (char ch in text) {  		if (text.Length > ind + 1) {  			if (text.Substring (ind' 2).CompareTo ("//") == 0) {  				break;  			}  		}  		if (text.Length > 0) {  			if (ch != '\t' && ch != ' ')  				break;  			text = text.Remove (0' 1);  		}  		ind++;  	}  	// Set the line.  	scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (text.EndsWith ("\r\n"))  	text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: foreach (char ch in text) {  	if (text.Length > ind + 1) {  		if (text.Substring (ind' 2).CompareTo ("//") == 0) {  			break;  		}  	}  	if (text.Length > 0) {  		if (ch != '\t' && ch != ' ')  			break;  		text = text.Remove (0' 1);  	}  	ind++;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (text.Length > ind + 1) {  	if (text.Substring (ind' 2).CompareTo ("//") == 0) {  		break;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,UnIndentScintillaText,The following statement contains a magic number: if (text.Substring (ind' 2).CompareTo ("//") == 0) {  	break;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: try {  	// First let's unindent.  	UnIndentScintillaText (scintilla);  	// Then indent.  	string text = null;  	int tabind = 0;  	int tabincdec = 0;  	bool streamcomment = false;  	bool instring = false;  	int ind = 0;  	for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  		text = scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			// The indenting.  			if (!streamcomment) {  				// Remove excess spaces and new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				while (text.EndsWith (" ") || text.EndsWith ("\t")) {  					if (text.Length < 1)  						break;  					text = text.Substring (0' text.Length - 1);  				}  				// If the tab index is below 0' set it to 0.  				if (tabind < 0)  					tabind = 0;  				// Add the current tab index.  				for (int i = 0; i < tabind; i++) {  					text = text.Insert (0' "\t");  				}  				// Indent.  				tabincdec = 0;  				ind = 0;  				foreach (char ch in text) {  					if (ch == '\"') {  						if (instring) {  							instring = false;  						}  						else {  							instring = true;  						}  					}  					if (text.Length > ind + 1) {  						if (text.Substring (ind' 2).CompareTo ("//") == 0) {  							break;  						}  					}  					if (!instring) {  						if (ch == '{') {  							tabincdec++;  						}  						else if (ch == '}') {  							tabincdec--;  						}  					}  					ind++;  				}  				// A (failed) attempt to fix indentation for code like this  				// if(1 == 1)  				// int i = 0;  				// else  				// int i = 1;  				/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  				tabind += tabincdec;  				// Remove wrong tabs on closing braces (assuming there was one on this line)  				if (tabincdec < 0) {  					bool removetab = true;  					foreach (char ch in text) {  						if (ch != '\t' && ch != '}') {  							removetab = false;  							break;  						}  						else if (ch == '}') {  							removetab = true;  							break;  						}  					}  					if (removetab && text.IndexOf ("\t") >= 0) {  						text = text.Remove (text.IndexOf ("\t")' 1);  					}  				}  				// Set the line.  				scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: try {  	// First let's unindent.  	UnIndentScintillaText (scintilla);  	// Then indent.  	string text = null;  	int tabind = 0;  	int tabincdec = 0;  	bool streamcomment = false;  	bool instring = false;  	int ind = 0;  	for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  		text = scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			// The indenting.  			if (!streamcomment) {  				// Remove excess spaces and new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				while (text.EndsWith (" ") || text.EndsWith ("\t")) {  					if (text.Length < 1)  						break;  					text = text.Substring (0' text.Length - 1);  				}  				// If the tab index is below 0' set it to 0.  				if (tabind < 0)  					tabind = 0;  				// Add the current tab index.  				for (int i = 0; i < tabind; i++) {  					text = text.Insert (0' "\t");  				}  				// Indent.  				tabincdec = 0;  				ind = 0;  				foreach (char ch in text) {  					if (ch == '\"') {  						if (instring) {  							instring = false;  						}  						else {  							instring = true;  						}  					}  					if (text.Length > ind + 1) {  						if (text.Substring (ind' 2).CompareTo ("//") == 0) {  							break;  						}  					}  					if (!instring) {  						if (ch == '{') {  							tabincdec++;  						}  						else if (ch == '}') {  							tabincdec--;  						}  					}  					ind++;  				}  				// A (failed) attempt to fix indentation for code like this  				// if(1 == 1)  				// int i = 0;  				// else  				// int i = 1;  				/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  				tabind += tabincdec;  				// Remove wrong tabs on closing braces (assuming there was one on this line)  				if (tabincdec < 0) {  					bool removetab = true;  					foreach (char ch in text) {  						if (ch != '\t' && ch != '}') {  							removetab = false;  							break;  						}  						else if (ch == '}') {  							removetab = true;  							break;  						}  					}  					if (removetab && text.IndexOf ("\t") >= 0) {  						text = text.Remove (text.IndexOf ("\t")' 1);  					}  				}  				// Set the line.  				scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  	text = scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		// The indenting.  		if (!streamcomment) {  			// Remove excess spaces and new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			while (text.EndsWith (" ") || text.EndsWith ("\t")) {  				if (text.Length < 1)  					break;  				text = text.Substring (0' text.Length - 1);  			}  			// If the tab index is below 0' set it to 0.  			if (tabind < 0)  				tabind = 0;  			// Add the current tab index.  			for (int i = 0; i < tabind; i++) {  				text = text.Insert (0' "\t");  			}  			// Indent.  			tabincdec = 0;  			ind = 0;  			foreach (char ch in text) {  				if (ch == '\"') {  					if (instring) {  						instring = false;  					}  					else {  						instring = true;  					}  				}  				if (text.Length > ind + 1) {  					if (text.Substring (ind' 2).CompareTo ("//") == 0) {  						break;  					}  				}  				if (!instring) {  					if (ch == '{') {  						tabincdec++;  					}  					else if (ch == '}') {  						tabincdec--;  					}  				}  				ind++;  			}  			// A (failed) attempt to fix indentation for code like this  			// if(1 == 1)  			// int i = 0;  			// else  			// int i = 1;  			/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  			tabind += tabincdec;  			// Remove wrong tabs on closing braces (assuming there was one on this line)  			if (tabincdec < 0) {  				bool removetab = true;  				foreach (char ch in text) {  					if (ch != '\t' && ch != '}') {  						removetab = false;  						break;  					}  					else if (ch == '}') {  						removetab = true;  						break;  					}  				}  				if (removetab && text.IndexOf ("\t") >= 0) {  					text = text.Remove (text.IndexOf ("\t")' 1);  				}  			}  			// Set the line.  			scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: for (int lineind = 0; lineind < scintilla.Lines.Count; lineind++) {  	text = scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		// The indenting.  		if (!streamcomment) {  			// Remove excess spaces and new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			while (text.EndsWith (" ") || text.EndsWith ("\t")) {  				if (text.Length < 1)  					break;  				text = text.Substring (0' text.Length - 1);  			}  			// If the tab index is below 0' set it to 0.  			if (tabind < 0)  				tabind = 0;  			// Add the current tab index.  			for (int i = 0; i < tabind; i++) {  				text = text.Insert (0' "\t");  			}  			// Indent.  			tabincdec = 0;  			ind = 0;  			foreach (char ch in text) {  				if (ch == '\"') {  					if (instring) {  						instring = false;  					}  					else {  						instring = true;  					}  				}  				if (text.Length > ind + 1) {  					if (text.Substring (ind' 2).CompareTo ("//") == 0) {  						break;  					}  				}  				if (!instring) {  					if (ch == '{') {  						tabincdec++;  					}  					else if (ch == '}') {  						tabincdec--;  					}  				}  				ind++;  			}  			// A (failed) attempt to fix indentation for code like this  			// if(1 == 1)  			// int i = 0;  			// else  			// int i = 1;  			/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  			tabind += tabincdec;  			// Remove wrong tabs on closing braces (assuming there was one on this line)  			if (tabincdec < 0) {  				bool removetab = true;  				foreach (char ch in text) {  					if (ch != '\t' && ch != '}') {  						removetab = false;  						break;  					}  					else if (ch == '}') {  						removetab = true;  						break;  					}  				}  				if (removetab && text.IndexOf ("\t") >= 0) {  					text = text.Remove (text.IndexOf ("\t")' 1);  				}  			}  			// Set the line.  			scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	// The indenting.  	if (!streamcomment) {  		// Remove excess spaces and new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		while (text.EndsWith (" ") || text.EndsWith ("\t")) {  			if (text.Length < 1)  				break;  			text = text.Substring (0' text.Length - 1);  		}  		// If the tab index is below 0' set it to 0.  		if (tabind < 0)  			tabind = 0;  		// Add the current tab index.  		for (int i = 0; i < tabind; i++) {  			text = text.Insert (0' "\t");  		}  		// Indent.  		tabincdec = 0;  		ind = 0;  		foreach (char ch in text) {  			if (ch == '\"') {  				if (instring) {  					instring = false;  				}  				else {  					instring = true;  				}  			}  			if (text.Length > ind + 1) {  				if (text.Substring (ind' 2).CompareTo ("//") == 0) {  					break;  				}  			}  			if (!instring) {  				if (ch == '{') {  					tabincdec++;  				}  				else if (ch == '}') {  					tabincdec--;  				}  			}  			ind++;  		}  		// A (failed) attempt to fix indentation for code like this  		// if(1 == 1)  		// int i = 0;  		// else  		// int i = 1;  		/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  		tabind += tabincdec;  		// Remove wrong tabs on closing braces (assuming there was one on this line)  		if (tabincdec < 0) {  			bool removetab = true;  			foreach (char ch in text) {  				if (ch != '\t' && ch != '}') {  					removetab = false;  					break;  				}  				else if (ch == '}') {  					removetab = true;  					break;  				}  			}  			if (removetab && text.IndexOf ("\t") >= 0) {  				text = text.Remove (text.IndexOf ("\t")' 1);  			}  		}  		// Set the line.  		scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	// The indenting.  	if (!streamcomment) {  		// Remove excess spaces and new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		while (text.EndsWith (" ") || text.EndsWith ("\t")) {  			if (text.Length < 1)  				break;  			text = text.Substring (0' text.Length - 1);  		}  		// If the tab index is below 0' set it to 0.  		if (tabind < 0)  			tabind = 0;  		// Add the current tab index.  		for (int i = 0; i < tabind; i++) {  			text = text.Insert (0' "\t");  		}  		// Indent.  		tabincdec = 0;  		ind = 0;  		foreach (char ch in text) {  			if (ch == '\"') {  				if (instring) {  					instring = false;  				}  				else {  					instring = true;  				}  			}  			if (text.Length > ind + 1) {  				if (text.Substring (ind' 2).CompareTo ("//") == 0) {  					break;  				}  			}  			if (!instring) {  				if (ch == '{') {  					tabincdec++;  				}  				else if (ch == '}') {  					tabincdec--;  				}  			}  			ind++;  		}  		// A (failed) attempt to fix indentation for code like this  		// if(1 == 1)  		// int i = 0;  		// else  		// int i = 1;  		/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  		tabind += tabincdec;  		// Remove wrong tabs on closing braces (assuming there was one on this line)  		if (tabincdec < 0) {  			bool removetab = true;  			foreach (char ch in text) {  				if (ch != '\t' && ch != '}') {  					removetab = false;  					break;  				}  				else if (ch == '}') {  					removetab = true;  					break;  				}  			}  			if (removetab && text.IndexOf ("\t") >= 0) {  				text = text.Remove (text.IndexOf ("\t")' 1);  			}  		}  		// Set the line.  		scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (!streamcomment) {  	// Remove excess spaces and new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	while (text.EndsWith (" ") || text.EndsWith ("\t")) {  		if (text.Length < 1)  			break;  		text = text.Substring (0' text.Length - 1);  	}  	// If the tab index is below 0' set it to 0.  	if (tabind < 0)  		tabind = 0;  	// Add the current tab index.  	for (int i = 0; i < tabind; i++) {  		text = text.Insert (0' "\t");  	}  	// Indent.  	tabincdec = 0;  	ind = 0;  	foreach (char ch in text) {  		if (ch == '\"') {  			if (instring) {  				instring = false;  			}  			else {  				instring = true;  			}  		}  		if (text.Length > ind + 1) {  			if (text.Substring (ind' 2).CompareTo ("//") == 0) {  				break;  			}  		}  		if (!instring) {  			if (ch == '{') {  				tabincdec++;  			}  			else if (ch == '}') {  				tabincdec--;  			}  		}  		ind++;  	}  	// A (failed) attempt to fix indentation for code like this  	// if(1 == 1)  	// int i = 0;  	// else  	// int i = 1;  	/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  	tabind += tabincdec;  	// Remove wrong tabs on closing braces (assuming there was one on this line)  	if (tabincdec < 0) {  		bool removetab = true;  		foreach (char ch in text) {  			if (ch != '\t' && ch != '}') {  				removetab = false;  				break;  			}  			else if (ch == '}') {  				removetab = true;  				break;  			}  		}  		if (removetab && text.IndexOf ("\t") >= 0) {  			text = text.Remove (text.IndexOf ("\t")' 1);  		}  	}  	// Set the line.  	scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (!streamcomment) {  	// Remove excess spaces and new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	while (text.EndsWith (" ") || text.EndsWith ("\t")) {  		if (text.Length < 1)  			break;  		text = text.Substring (0' text.Length - 1);  	}  	// If the tab index is below 0' set it to 0.  	if (tabind < 0)  		tabind = 0;  	// Add the current tab index.  	for (int i = 0; i < tabind; i++) {  		text = text.Insert (0' "\t");  	}  	// Indent.  	tabincdec = 0;  	ind = 0;  	foreach (char ch in text) {  		if (ch == '\"') {  			if (instring) {  				instring = false;  			}  			else {  				instring = true;  			}  		}  		if (text.Length > ind + 1) {  			if (text.Substring (ind' 2).CompareTo ("//") == 0) {  				break;  			}  		}  		if (!instring) {  			if (ch == '{') {  				tabincdec++;  			}  			else if (ch == '}') {  				tabincdec--;  			}  		}  		ind++;  	}  	// A (failed) attempt to fix indentation for code like this  	// if(1 == 1)  	// int i = 0;  	// else  	// int i = 1;  	/*if (lineind < scintilla.Lines.Count)                             {                                 if (text.IndexOf("if") != -1 || text.IndexOf("else") != -1)                                 {                                     text2 = scintilla.Lines[lineind + 1].Text;                                     if (text2.EndsWith("\r\n")) text2 = text2.Substring(0' text2.Length - 2);                                     if (text2.EndsWith("\n")) text2 = text2.Substring(0' text2.Length - 1);                                      bool inc = true; // increment or no                                     foreach (char ch in text2)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     foreach (char ch in text)                                     {                                         if (ch == '{')                                         {                                             inc = false;                                         }                                         if (ch == '}')                                         {                                             inc = true;                                         }                                     }                                     if (inc)                                     {                                         MessageBox.Show("line: " + lineind + " " + text2);                                         text2 = text2.Insert(0' "\t");                                         scintilla.Lines[lineind + 1].Text = text2;                                         MessageBox.Show("line2: " + lineind + " " + text2);                                     }                                              }                             }*/// Set the new tab index.  	tabind += tabincdec;  	// Remove wrong tabs on closing braces (assuming there was one on this line)  	if (tabincdec < 0) {  		bool removetab = true;  		foreach (char ch in text) {  			if (ch != '\t' && ch != '}') {  				removetab = false;  				break;  			}  			else if (ch == '}') {  				removetab = true;  				break;  			}  		}  		if (removetab && text.IndexOf ("\t") >= 0) {  			text = text.Remove (text.IndexOf ("\t")' 1);  		}  	}  	// Set the line.  	scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (text.EndsWith ("\r\n"))  	text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: foreach (char ch in text) {  	if (ch == '\"') {  		if (instring) {  			instring = false;  		}  		else {  			instring = true;  		}  	}  	if (text.Length > ind + 1) {  		if (text.Substring (ind' 2).CompareTo ("//") == 0) {  			break;  		}  	}  	if (!instring) {  		if (ch == '{') {  			tabincdec++;  		}  		else if (ch == '}') {  			tabincdec--;  		}  	}  	ind++;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (text.Length > ind + 1) {  	if (text.Substring (ind' 2).CompareTo ("//") == 0) {  		break;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,IndentScintillaText,The following statement contains a magic number: if (text.Substring (ind' 2).CompareTo ("//") == 0) {  	break;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: try {  	if (!Directory.Exists ("includes")) {  		MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	else {  		string[] files = Directory.GetFiles ("includes"' "*.inc");  		string nameonly = null;  		TreeNode include = null;  		string newfile = null;  		string[] contents = null;  		string funcname = null;  		TreeNode func = null;  		foreach (string file in files) {  			nameonly = file.Substring (9);  			include = new TreeNode ();  			include.Text = nameonly;  			treeView1.Nodes.Add (include);  			newfile = Directory.GetCurrentDirectory () + "\\" + file;  			contents = File.ReadAllLines (newfile);  			foreach (string line in contents) {  				if (line.Contains ("native ")) {  					funcname = line.Substring (line.IndexOf ("native ") + 7);  					int len = funcname.IndexOf ("(");  					if (len < 1)  						continue;  					funcname = funcname.Substring (0' len);  					if (funcname.Contains (":")) {  						funcname = funcname.Substring (funcname.IndexOf (":") + 1);  					}  					func = new TreeNode ();  					func.Text = "native " + funcname;  					include.Nodes.Add (func);  				}  				else if (line.Contains ("stock ")) {  					funcname = line.Substring (line.IndexOf ("stock ") + 6);  					int len = funcname.IndexOf ("(");  					if (len < 1)  						continue;  					funcname = funcname.Substring (0' len);  					if (funcname.Contains (":")) {  						funcname = funcname.Substring (funcname.IndexOf (":") + 1);  					}  					func = new TreeNode ();  					func.Text = "stock " + funcname;  					include.Nodes.Add (func);  				}  				// TO-DO: Plain functions.  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: try {  	if (!Directory.Exists ("includes")) {  		MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	else {  		string[] files = Directory.GetFiles ("includes"' "*.inc");  		string nameonly = null;  		TreeNode include = null;  		string newfile = null;  		string[] contents = null;  		string funcname = null;  		TreeNode func = null;  		foreach (string file in files) {  			nameonly = file.Substring (9);  			include = new TreeNode ();  			include.Text = nameonly;  			treeView1.Nodes.Add (include);  			newfile = Directory.GetCurrentDirectory () + "\\" + file;  			contents = File.ReadAllLines (newfile);  			foreach (string line in contents) {  				if (line.Contains ("native ")) {  					funcname = line.Substring (line.IndexOf ("native ") + 7);  					int len = funcname.IndexOf ("(");  					if (len < 1)  						continue;  					funcname = funcname.Substring (0' len);  					if (funcname.Contains (":")) {  						funcname = funcname.Substring (funcname.IndexOf (":") + 1);  					}  					func = new TreeNode ();  					func.Text = "native " + funcname;  					include.Nodes.Add (func);  				}  				else if (line.Contains ("stock ")) {  					funcname = line.Substring (line.IndexOf ("stock ") + 6);  					int len = funcname.IndexOf ("(");  					if (len < 1)  						continue;  					funcname = funcname.Substring (0' len);  					if (funcname.Contains (":")) {  						funcname = funcname.Substring (funcname.IndexOf (":") + 1);  					}  					func = new TreeNode ();  					func.Text = "stock " + funcname;  					include.Nodes.Add (func);  				}  				// TO-DO: Plain functions.  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: try {  	if (!Directory.Exists ("includes")) {  		MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	else {  		string[] files = Directory.GetFiles ("includes"' "*.inc");  		string nameonly = null;  		TreeNode include = null;  		string newfile = null;  		string[] contents = null;  		string funcname = null;  		TreeNode func = null;  		foreach (string file in files) {  			nameonly = file.Substring (9);  			include = new TreeNode ();  			include.Text = nameonly;  			treeView1.Nodes.Add (include);  			newfile = Directory.GetCurrentDirectory () + "\\" + file;  			contents = File.ReadAllLines (newfile);  			foreach (string line in contents) {  				if (line.Contains ("native ")) {  					funcname = line.Substring (line.IndexOf ("native ") + 7);  					int len = funcname.IndexOf ("(");  					if (len < 1)  						continue;  					funcname = funcname.Substring (0' len);  					if (funcname.Contains (":")) {  						funcname = funcname.Substring (funcname.IndexOf (":") + 1);  					}  					func = new TreeNode ();  					func.Text = "native " + funcname;  					include.Nodes.Add (func);  				}  				else if (line.Contains ("stock ")) {  					funcname = line.Substring (line.IndexOf ("stock ") + 6);  					int len = funcname.IndexOf ("(");  					if (len < 1)  						continue;  					funcname = funcname.Substring (0' len);  					if (funcname.Contains (":")) {  						funcname = funcname.Substring (funcname.IndexOf (":") + 1);  					}  					func = new TreeNode ();  					func.Text = "stock " + funcname;  					include.Nodes.Add (func);  				}  				// TO-DO: Plain functions.  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: if (!Directory.Exists ("includes")) {  	MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error);  	return;  }  else {  	string[] files = Directory.GetFiles ("includes"' "*.inc");  	string nameonly = null;  	TreeNode include = null;  	string newfile = null;  	string[] contents = null;  	string funcname = null;  	TreeNode func = null;  	foreach (string file in files) {  		nameonly = file.Substring (9);  		include = new TreeNode ();  		include.Text = nameonly;  		treeView1.Nodes.Add (include);  		newfile = Directory.GetCurrentDirectory () + "\\" + file;  		contents = File.ReadAllLines (newfile);  		foreach (string line in contents) {  			if (line.Contains ("native ")) {  				funcname = line.Substring (line.IndexOf ("native ") + 7);  				int len = funcname.IndexOf ("(");  				if (len < 1)  					continue;  				funcname = funcname.Substring (0' len);  				if (funcname.Contains (":")) {  					funcname = funcname.Substring (funcname.IndexOf (":") + 1);  				}  				func = new TreeNode ();  				func.Text = "native " + funcname;  				include.Nodes.Add (func);  			}  			else if (line.Contains ("stock ")) {  				funcname = line.Substring (line.IndexOf ("stock ") + 6);  				int len = funcname.IndexOf ("(");  				if (len < 1)  					continue;  				funcname = funcname.Substring (0' len);  				if (funcname.Contains (":")) {  					funcname = funcname.Substring (funcname.IndexOf (":") + 1);  				}  				func = new TreeNode ();  				func.Text = "stock " + funcname;  				include.Nodes.Add (func);  			}  			// TO-DO: Plain functions.  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: if (!Directory.Exists ("includes")) {  	MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error);  	return;  }  else {  	string[] files = Directory.GetFiles ("includes"' "*.inc");  	string nameonly = null;  	TreeNode include = null;  	string newfile = null;  	string[] contents = null;  	string funcname = null;  	TreeNode func = null;  	foreach (string file in files) {  		nameonly = file.Substring (9);  		include = new TreeNode ();  		include.Text = nameonly;  		treeView1.Nodes.Add (include);  		newfile = Directory.GetCurrentDirectory () + "\\" + file;  		contents = File.ReadAllLines (newfile);  		foreach (string line in contents) {  			if (line.Contains ("native ")) {  				funcname = line.Substring (line.IndexOf ("native ") + 7);  				int len = funcname.IndexOf ("(");  				if (len < 1)  					continue;  				funcname = funcname.Substring (0' len);  				if (funcname.Contains (":")) {  					funcname = funcname.Substring (funcname.IndexOf (":") + 1);  				}  				func = new TreeNode ();  				func.Text = "native " + funcname;  				include.Nodes.Add (func);  			}  			else if (line.Contains ("stock ")) {  				funcname = line.Substring (line.IndexOf ("stock ") + 6);  				int len = funcname.IndexOf ("(");  				if (len < 1)  					continue;  				funcname = funcname.Substring (0' len);  				if (funcname.Contains (":")) {  					funcname = funcname.Substring (funcname.IndexOf (":") + 1);  				}  				func = new TreeNode ();  				func.Text = "stock " + funcname;  				include.Nodes.Add (func);  			}  			// TO-DO: Plain functions.  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: if (!Directory.Exists ("includes")) {  	MessageBox.Show ("It appears you do not have an includes folder' download the SA-MP includes at www.sa-mp.com/download by getting the Windows server package."' "Includes Don't Exist."' MessageBoxButtons.OK' MessageBoxIcon.Error);  	return;  }  else {  	string[] files = Directory.GetFiles ("includes"' "*.inc");  	string nameonly = null;  	TreeNode include = null;  	string newfile = null;  	string[] contents = null;  	string funcname = null;  	TreeNode func = null;  	foreach (string file in files) {  		nameonly = file.Substring (9);  		include = new TreeNode ();  		include.Text = nameonly;  		treeView1.Nodes.Add (include);  		newfile = Directory.GetCurrentDirectory () + "\\" + file;  		contents = File.ReadAllLines (newfile);  		foreach (string line in contents) {  			if (line.Contains ("native ")) {  				funcname = line.Substring (line.IndexOf ("native ") + 7);  				int len = funcname.IndexOf ("(");  				if (len < 1)  					continue;  				funcname = funcname.Substring (0' len);  				if (funcname.Contains (":")) {  					funcname = funcname.Substring (funcname.IndexOf (":") + 1);  				}  				func = new TreeNode ();  				func.Text = "native " + funcname;  				include.Nodes.Add (func);  			}  			else if (line.Contains ("stock ")) {  				funcname = line.Substring (line.IndexOf ("stock ") + 6);  				int len = funcname.IndexOf ("(");  				if (len < 1)  					continue;  				funcname = funcname.Substring (0' len);  				if (funcname.Contains (":")) {  					funcname = funcname.Substring (funcname.IndexOf (":") + 1);  				}  				func = new TreeNode ();  				func.Text = "stock " + funcname;  				include.Nodes.Add (func);  			}  			// TO-DO: Plain functions.  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: foreach (string file in files) {  	nameonly = file.Substring (9);  	include = new TreeNode ();  	include.Text = nameonly;  	treeView1.Nodes.Add (include);  	newfile = Directory.GetCurrentDirectory () + "\\" + file;  	contents = File.ReadAllLines (newfile);  	foreach (string line in contents) {  		if (line.Contains ("native ")) {  			funcname = line.Substring (line.IndexOf ("native ") + 7);  			int len = funcname.IndexOf ("(");  			if (len < 1)  				continue;  			funcname = funcname.Substring (0' len);  			if (funcname.Contains (":")) {  				funcname = funcname.Substring (funcname.IndexOf (":") + 1);  			}  			func = new TreeNode ();  			func.Text = "native " + funcname;  			include.Nodes.Add (func);  		}  		else if (line.Contains ("stock ")) {  			funcname = line.Substring (line.IndexOf ("stock ") + 6);  			int len = funcname.IndexOf ("(");  			if (len < 1)  				continue;  			funcname = funcname.Substring (0' len);  			if (funcname.Contains (":")) {  				funcname = funcname.Substring (funcname.IndexOf (":") + 1);  			}  			func = new TreeNode ();  			func.Text = "stock " + funcname;  			include.Nodes.Add (func);  		}  		// TO-DO: Plain functions.  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: foreach (string file in files) {  	nameonly = file.Substring (9);  	include = new TreeNode ();  	include.Text = nameonly;  	treeView1.Nodes.Add (include);  	newfile = Directory.GetCurrentDirectory () + "\\" + file;  	contents = File.ReadAllLines (newfile);  	foreach (string line in contents) {  		if (line.Contains ("native ")) {  			funcname = line.Substring (line.IndexOf ("native ") + 7);  			int len = funcname.IndexOf ("(");  			if (len < 1)  				continue;  			funcname = funcname.Substring (0' len);  			if (funcname.Contains (":")) {  				funcname = funcname.Substring (funcname.IndexOf (":") + 1);  			}  			func = new TreeNode ();  			func.Text = "native " + funcname;  			include.Nodes.Add (func);  		}  		else if (line.Contains ("stock ")) {  			funcname = line.Substring (line.IndexOf ("stock ") + 6);  			int len = funcname.IndexOf ("(");  			if (len < 1)  				continue;  			funcname = funcname.Substring (0' len);  			if (funcname.Contains (":")) {  				funcname = funcname.Substring (funcname.IndexOf (":") + 1);  			}  			func = new TreeNode ();  			func.Text = "stock " + funcname;  			include.Nodes.Add (func);  		}  		// TO-DO: Plain functions.  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: foreach (string file in files) {  	nameonly = file.Substring (9);  	include = new TreeNode ();  	include.Text = nameonly;  	treeView1.Nodes.Add (include);  	newfile = Directory.GetCurrentDirectory () + "\\" + file;  	contents = File.ReadAllLines (newfile);  	foreach (string line in contents) {  		if (line.Contains ("native ")) {  			funcname = line.Substring (line.IndexOf ("native ") + 7);  			int len = funcname.IndexOf ("(");  			if (len < 1)  				continue;  			funcname = funcname.Substring (0' len);  			if (funcname.Contains (":")) {  				funcname = funcname.Substring (funcname.IndexOf (":") + 1);  			}  			func = new TreeNode ();  			func.Text = "native " + funcname;  			include.Nodes.Add (func);  		}  		else if (line.Contains ("stock ")) {  			funcname = line.Substring (line.IndexOf ("stock ") + 6);  			int len = funcname.IndexOf ("(");  			if (len < 1)  				continue;  			funcname = funcname.Substring (0' len);  			if (funcname.Contains (":")) {  				funcname = funcname.Substring (funcname.IndexOf (":") + 1);  			}  			func = new TreeNode ();  			func.Text = "stock " + funcname;  			include.Nodes.Add (func);  		}  		// TO-DO: Plain functions.  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: nameonly = file.Substring (9);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: foreach (string line in contents) {  	if (line.Contains ("native ")) {  		funcname = line.Substring (line.IndexOf ("native ") + 7);  		int len = funcname.IndexOf ("(");  		if (len < 1)  			continue;  		funcname = funcname.Substring (0' len);  		if (funcname.Contains (":")) {  			funcname = funcname.Substring (funcname.IndexOf (":") + 1);  		}  		func = new TreeNode ();  		func.Text = "native " + funcname;  		include.Nodes.Add (func);  	}  	else if (line.Contains ("stock ")) {  		funcname = line.Substring (line.IndexOf ("stock ") + 6);  		int len = funcname.IndexOf ("(");  		if (len < 1)  			continue;  		funcname = funcname.Substring (0' len);  		if (funcname.Contains (":")) {  			funcname = funcname.Substring (funcname.IndexOf (":") + 1);  		}  		func = new TreeNode ();  		func.Text = "stock " + funcname;  		include.Nodes.Add (func);  	}  	// TO-DO: Plain functions.  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: foreach (string line in contents) {  	if (line.Contains ("native ")) {  		funcname = line.Substring (line.IndexOf ("native ") + 7);  		int len = funcname.IndexOf ("(");  		if (len < 1)  			continue;  		funcname = funcname.Substring (0' len);  		if (funcname.Contains (":")) {  			funcname = funcname.Substring (funcname.IndexOf (":") + 1);  		}  		func = new TreeNode ();  		func.Text = "native " + funcname;  		include.Nodes.Add (func);  	}  	else if (line.Contains ("stock ")) {  		funcname = line.Substring (line.IndexOf ("stock ") + 6);  		int len = funcname.IndexOf ("(");  		if (len < 1)  			continue;  		funcname = funcname.Substring (0' len);  		if (funcname.Contains (":")) {  			funcname = funcname.Substring (funcname.IndexOf (":") + 1);  		}  		func = new TreeNode ();  		func.Text = "stock " + funcname;  		include.Nodes.Add (func);  	}  	// TO-DO: Plain functions.  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: if (line.Contains ("native ")) {  	funcname = line.Substring (line.IndexOf ("native ") + 7);  	int len = funcname.IndexOf ("(");  	if (len < 1)  		continue;  	funcname = funcname.Substring (0' len);  	if (funcname.Contains (":")) {  		funcname = funcname.Substring (funcname.IndexOf (":") + 1);  	}  	func = new TreeNode ();  	func.Text = "native " + funcname;  	include.Nodes.Add (func);  }  else if (line.Contains ("stock ")) {  	funcname = line.Substring (line.IndexOf ("stock ") + 6);  	int len = funcname.IndexOf ("(");  	if (len < 1)  		continue;  	funcname = funcname.Substring (0' len);  	if (funcname.Contains (":")) {  		funcname = funcname.Substring (funcname.IndexOf (":") + 1);  	}  	func = new TreeNode ();  	func.Text = "stock " + funcname;  	include.Nodes.Add (func);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: if (line.Contains ("native ")) {  	funcname = line.Substring (line.IndexOf ("native ") + 7);  	int len = funcname.IndexOf ("(");  	if (len < 1)  		continue;  	funcname = funcname.Substring (0' len);  	if (funcname.Contains (":")) {  		funcname = funcname.Substring (funcname.IndexOf (":") + 1);  	}  	func = new TreeNode ();  	func.Text = "native " + funcname;  	include.Nodes.Add (func);  }  else if (line.Contains ("stock ")) {  	funcname = line.Substring (line.IndexOf ("stock ") + 6);  	int len = funcname.IndexOf ("(");  	if (len < 1)  		continue;  	funcname = funcname.Substring (0' len);  	if (funcname.Contains (":")) {  		funcname = funcname.Substring (funcname.IndexOf (":") + 1);  	}  	func = new TreeNode ();  	func.Text = "stock " + funcname;  	include.Nodes.Add (func);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: funcname = line.Substring (line.IndexOf ("native ") + 7);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: if (line.Contains ("stock ")) {  	funcname = line.Substring (line.IndexOf ("stock ") + 6);  	int len = funcname.IndexOf ("(");  	if (len < 1)  		continue;  	funcname = funcname.Substring (0' len);  	if (funcname.Contains (":")) {  		funcname = funcname.Substring (funcname.IndexOf (":") + 1);  	}  	func = new TreeNode ();  	func.Text = "stock " + funcname;  	include.Nodes.Add (func);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,LoadIncludes,The following statement contains a magic number: funcname = line.Substring (line.IndexOf ("stock ") + 6);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: try {  	TabPage cur = tabControl1.SelectedTab;  	foreach (Tabs.Tab_t tab in tabs.tabs) {  		if (tab.page == cur) {  			string text = null;  			for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  				text = tab.scintilla.Lines [lineind].Text;  				if (text.Length > 0) {  					if (text.EndsWith ("\r\n"))  						text = text.Substring (0' text.Length - 2);  					if (text.EndsWith ("\n"))  						text = text.Substring (0' text.Length - 1);  					while (text.EndsWith (" ") || text.EndsWith ("\t")) {  						if (text.Length < 1)  							break;  						text = text.Substring (0' text.Length - 1);  					}  					tab.scintilla.Lines [lineind].Text = text;  				}  			}  			break;  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: foreach (Tabs.Tab_t tab in tabs.tabs) {  	if (tab.page == cur) {  		string text = null;  		for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  			text = tab.scintilla.Lines [lineind].Text;  			if (text.Length > 0) {  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				while (text.EndsWith (" ") || text.EndsWith ("\t")) {  					if (text.Length < 1)  						break;  					text = text.Substring (0' text.Length - 1);  				}  				tab.scintilla.Lines [lineind].Text = text;  			}  		}  		break;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: if (tab.page == cur) {  	string text = null;  	for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  		text = tab.scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			while (text.EndsWith (" ") || text.EndsWith ("\t")) {  				if (text.Length < 1)  					break;  				text = text.Substring (0' text.Length - 1);  			}  			tab.scintilla.Lines [lineind].Text = text;  		}  	}  	break;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  	text = tab.scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		while (text.EndsWith (" ") || text.EndsWith ("\t")) {  			if (text.Length < 1)  				break;  			text = text.Substring (0' text.Length - 1);  		}  		tab.scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > 0) {  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	while (text.EndsWith (" ") || text.EndsWith ("\t")) {  		if (text.Length < 1)  			break;  		text = text.Substring (0' text.Length - 1);  	}  	tab.scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: if (text.EndsWith ("\r\n"))  	text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,removeExcessSToolStripMenuItem_Click,The following statement contains a magic number: text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: try {  	TabPage cur = tabControl1.SelectedTab;  	foreach (Tabs.Tab_t tab in tabs.tabs) {  		if (tab.page == cur) {  			string text = null;  			bool streamcomment = false;  			bool instring = false;  			int ind = 0;  			for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  				text = tab.scintilla.Lines [lineind].Text;  				if (text.Length > 0) {  					// Fixes for comments.  					if (text.StartsWith ("//")) {  						continue;  					}  					if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  						streamcomment = true;  					}  					else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  						streamcomment = false;  					}  					if (!streamcomment) {  						// Remove new lines for the local variable.  						if (text.EndsWith ("\r\n"))  							text = text.Substring (0' text.Length - 2);  						if (text.EndsWith ("\n"))  							text = text.Substring (0' text.Length - 1);  						reset:  						ind = 0;  						foreach (char ch in text) {  							if (text.Length > 0) {  								if (ch == '\"') {  									if (instring) {  										instring = false;  									}  									else {  										instring = true;  									}  								}  							}  							if (text.Length > ind + 4 && !instring) {  								if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  									text = text.Remove (ind' 4);  									text = text.Insert (ind' "\t");  									instring = false;  									goto reset;  								}  							}  							ind++;  						}  						tab.scintilla.Lines [lineind].Text = text;  					}  				}  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: try {  	TabPage cur = tabControl1.SelectedTab;  	foreach (Tabs.Tab_t tab in tabs.tabs) {  		if (tab.page == cur) {  			string text = null;  			bool streamcomment = false;  			bool instring = false;  			int ind = 0;  			for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  				text = tab.scintilla.Lines [lineind].Text;  				if (text.Length > 0) {  					// Fixes for comments.  					if (text.StartsWith ("//")) {  						continue;  					}  					if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  						streamcomment = true;  					}  					else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  						streamcomment = false;  					}  					if (!streamcomment) {  						// Remove new lines for the local variable.  						if (text.EndsWith ("\r\n"))  							text = text.Substring (0' text.Length - 2);  						if (text.EndsWith ("\n"))  							text = text.Substring (0' text.Length - 1);  						reset:  						ind = 0;  						foreach (char ch in text) {  							if (text.Length > 0) {  								if (ch == '\"') {  									if (instring) {  										instring = false;  									}  									else {  										instring = true;  									}  								}  							}  							if (text.Length > ind + 4 && !instring) {  								if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  									text = text.Remove (ind' 4);  									text = text.Insert (ind' "\t");  									instring = false;  									goto reset;  								}  							}  							ind++;  						}  						tab.scintilla.Lines [lineind].Text = text;  					}  				}  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: try {  	TabPage cur = tabControl1.SelectedTab;  	foreach (Tabs.Tab_t tab in tabs.tabs) {  		if (tab.page == cur) {  			string text = null;  			bool streamcomment = false;  			bool instring = false;  			int ind = 0;  			for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  				text = tab.scintilla.Lines [lineind].Text;  				if (text.Length > 0) {  					// Fixes for comments.  					if (text.StartsWith ("//")) {  						continue;  					}  					if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  						streamcomment = true;  					}  					else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  						streamcomment = false;  					}  					if (!streamcomment) {  						// Remove new lines for the local variable.  						if (text.EndsWith ("\r\n"))  							text = text.Substring (0' text.Length - 2);  						if (text.EndsWith ("\n"))  							text = text.Substring (0' text.Length - 1);  						reset:  						ind = 0;  						foreach (char ch in text) {  							if (text.Length > 0) {  								if (ch == '\"') {  									if (instring) {  										instring = false;  									}  									else {  										instring = true;  									}  								}  							}  							if (text.Length > ind + 4 && !instring) {  								if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  									text = text.Remove (ind' 4);  									text = text.Insert (ind' "\t");  									instring = false;  									goto reset;  								}  							}  							ind++;  						}  						tab.scintilla.Lines [lineind].Text = text;  					}  				}  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: try {  	TabPage cur = tabControl1.SelectedTab;  	foreach (Tabs.Tab_t tab in tabs.tabs) {  		if (tab.page == cur) {  			string text = null;  			bool streamcomment = false;  			bool instring = false;  			int ind = 0;  			for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  				text = tab.scintilla.Lines [lineind].Text;  				if (text.Length > 0) {  					// Fixes for comments.  					if (text.StartsWith ("//")) {  						continue;  					}  					if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  						streamcomment = true;  					}  					else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  						streamcomment = false;  					}  					if (!streamcomment) {  						// Remove new lines for the local variable.  						if (text.EndsWith ("\r\n"))  							text = text.Substring (0' text.Length - 2);  						if (text.EndsWith ("\n"))  							text = text.Substring (0' text.Length - 1);  						reset:  						ind = 0;  						foreach (char ch in text) {  							if (text.Length > 0) {  								if (ch == '\"') {  									if (instring) {  										instring = false;  									}  									else {  										instring = true;  									}  								}  							}  							if (text.Length > ind + 4 && !instring) {  								if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  									text = text.Remove (ind' 4);  									text = text.Insert (ind' "\t");  									instring = false;  									goto reset;  								}  							}  							ind++;  						}  						tab.scintilla.Lines [lineind].Text = text;  					}  				}  			}  		}  	}  }  catch (Exception ex) {  	CaughtException (ex);  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (Tabs.Tab_t tab in tabs.tabs) {  	if (tab.page == cur) {  		string text = null;  		bool streamcomment = false;  		bool instring = false;  		int ind = 0;  		for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  			text = tab.scintilla.Lines [lineind].Text;  			if (text.Length > 0) {  				// Fixes for comments.  				if (text.StartsWith ("//")) {  					continue;  				}  				if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  					streamcomment = true;  				}  				else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  					streamcomment = false;  				}  				if (!streamcomment) {  					// Remove new lines for the local variable.  					if (text.EndsWith ("\r\n"))  						text = text.Substring (0' text.Length - 2);  					if (text.EndsWith ("\n"))  						text = text.Substring (0' text.Length - 1);  					reset:  					ind = 0;  					foreach (char ch in text) {  						if (text.Length > 0) {  							if (ch == '\"') {  								if (instring) {  									instring = false;  								}  								else {  									instring = true;  								}  							}  						}  						if (text.Length > ind + 4 && !instring) {  							if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  								text = text.Remove (ind' 4);  								text = text.Insert (ind' "\t");  								instring = false;  								goto reset;  							}  						}  						ind++;  					}  					tab.scintilla.Lines [lineind].Text = text;  				}  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (Tabs.Tab_t tab in tabs.tabs) {  	if (tab.page == cur) {  		string text = null;  		bool streamcomment = false;  		bool instring = false;  		int ind = 0;  		for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  			text = tab.scintilla.Lines [lineind].Text;  			if (text.Length > 0) {  				// Fixes for comments.  				if (text.StartsWith ("//")) {  					continue;  				}  				if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  					streamcomment = true;  				}  				else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  					streamcomment = false;  				}  				if (!streamcomment) {  					// Remove new lines for the local variable.  					if (text.EndsWith ("\r\n"))  						text = text.Substring (0' text.Length - 2);  					if (text.EndsWith ("\n"))  						text = text.Substring (0' text.Length - 1);  					reset:  					ind = 0;  					foreach (char ch in text) {  						if (text.Length > 0) {  							if (ch == '\"') {  								if (instring) {  									instring = false;  								}  								else {  									instring = true;  								}  							}  						}  						if (text.Length > ind + 4 && !instring) {  							if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  								text = text.Remove (ind' 4);  								text = text.Insert (ind' "\t");  								instring = false;  								goto reset;  							}  						}  						ind++;  					}  					tab.scintilla.Lines [lineind].Text = text;  				}  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (Tabs.Tab_t tab in tabs.tabs) {  	if (tab.page == cur) {  		string text = null;  		bool streamcomment = false;  		bool instring = false;  		int ind = 0;  		for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  			text = tab.scintilla.Lines [lineind].Text;  			if (text.Length > 0) {  				// Fixes for comments.  				if (text.StartsWith ("//")) {  					continue;  				}  				if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  					streamcomment = true;  				}  				else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  					streamcomment = false;  				}  				if (!streamcomment) {  					// Remove new lines for the local variable.  					if (text.EndsWith ("\r\n"))  						text = text.Substring (0' text.Length - 2);  					if (text.EndsWith ("\n"))  						text = text.Substring (0' text.Length - 1);  					reset:  					ind = 0;  					foreach (char ch in text) {  						if (text.Length > 0) {  							if (ch == '\"') {  								if (instring) {  									instring = false;  								}  								else {  									instring = true;  								}  							}  						}  						if (text.Length > ind + 4 && !instring) {  							if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  								text = text.Remove (ind' 4);  								text = text.Insert (ind' "\t");  								instring = false;  								goto reset;  							}  						}  						ind++;  					}  					tab.scintilla.Lines [lineind].Text = text;  				}  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (Tabs.Tab_t tab in tabs.tabs) {  	if (tab.page == cur) {  		string text = null;  		bool streamcomment = false;  		bool instring = false;  		int ind = 0;  		for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  			text = tab.scintilla.Lines [lineind].Text;  			if (text.Length > 0) {  				// Fixes for comments.  				if (text.StartsWith ("//")) {  					continue;  				}  				if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  					streamcomment = true;  				}  				else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  					streamcomment = false;  				}  				if (!streamcomment) {  					// Remove new lines for the local variable.  					if (text.EndsWith ("\r\n"))  						text = text.Substring (0' text.Length - 2);  					if (text.EndsWith ("\n"))  						text = text.Substring (0' text.Length - 1);  					reset:  					ind = 0;  					foreach (char ch in text) {  						if (text.Length > 0) {  							if (ch == '\"') {  								if (instring) {  									instring = false;  								}  								else {  									instring = true;  								}  							}  						}  						if (text.Length > ind + 4 && !instring) {  							if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  								text = text.Remove (ind' 4);  								text = text.Insert (ind' "\t");  								instring = false;  								goto reset;  							}  						}  						ind++;  					}  					tab.scintilla.Lines [lineind].Text = text;  				}  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (tab.page == cur) {  	string text = null;  	bool streamcomment = false;  	bool instring = false;  	int ind = 0;  	for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  		text = tab.scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			if (!streamcomment) {  				// Remove new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				reset:  				ind = 0;  				foreach (char ch in text) {  					if (text.Length > 0) {  						if (ch == '\"') {  							if (instring) {  								instring = false;  							}  							else {  								instring = true;  							}  						}  					}  					if (text.Length > ind + 4 && !instring) {  						if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  							text = text.Remove (ind' 4);  							text = text.Insert (ind' "\t");  							instring = false;  							goto reset;  						}  					}  					ind++;  				}  				tab.scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (tab.page == cur) {  	string text = null;  	bool streamcomment = false;  	bool instring = false;  	int ind = 0;  	for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  		text = tab.scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			if (!streamcomment) {  				// Remove new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				reset:  				ind = 0;  				foreach (char ch in text) {  					if (text.Length > 0) {  						if (ch == '\"') {  							if (instring) {  								instring = false;  							}  							else {  								instring = true;  							}  						}  					}  					if (text.Length > ind + 4 && !instring) {  						if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  							text = text.Remove (ind' 4);  							text = text.Insert (ind' "\t");  							instring = false;  							goto reset;  						}  					}  					ind++;  				}  				tab.scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (tab.page == cur) {  	string text = null;  	bool streamcomment = false;  	bool instring = false;  	int ind = 0;  	for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  		text = tab.scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			if (!streamcomment) {  				// Remove new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				reset:  				ind = 0;  				foreach (char ch in text) {  					if (text.Length > 0) {  						if (ch == '\"') {  							if (instring) {  								instring = false;  							}  							else {  								instring = true;  							}  						}  					}  					if (text.Length > ind + 4 && !instring) {  						if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  							text = text.Remove (ind' 4);  							text = text.Insert (ind' "\t");  							instring = false;  							goto reset;  						}  					}  					ind++;  				}  				tab.scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (tab.page == cur) {  	string text = null;  	bool streamcomment = false;  	bool instring = false;  	int ind = 0;  	for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  		text = tab.scintilla.Lines [lineind].Text;  		if (text.Length > 0) {  			// Fixes for comments.  			if (text.StartsWith ("//")) {  				continue;  			}  			if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  				streamcomment = true;  			}  			else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  				streamcomment = false;  			}  			if (!streamcomment) {  				// Remove new lines for the local variable.  				if (text.EndsWith ("\r\n"))  					text = text.Substring (0' text.Length - 2);  				if (text.EndsWith ("\n"))  					text = text.Substring (0' text.Length - 1);  				reset:  				ind = 0;  				foreach (char ch in text) {  					if (text.Length > 0) {  						if (ch == '\"') {  							if (instring) {  								instring = false;  							}  							else {  								instring = true;  							}  						}  					}  					if (text.Length > ind + 4 && !instring) {  						if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  							text = text.Remove (ind' 4);  							text = text.Insert (ind' "\t");  							instring = false;  							goto reset;  						}  					}  					ind++;  				}  				tab.scintilla.Lines [lineind].Text = text;  			}  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  	text = tab.scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		if (!streamcomment) {  			// Remove new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			reset:  			ind = 0;  			foreach (char ch in text) {  				if (text.Length > 0) {  					if (ch == '\"') {  						if (instring) {  							instring = false;  						}  						else {  							instring = true;  						}  					}  				}  				if (text.Length > ind + 4 && !instring) {  					if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  						text = text.Remove (ind' 4);  						text = text.Insert (ind' "\t");  						instring = false;  						goto reset;  					}  				}  				ind++;  			}  			tab.scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  	text = tab.scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		if (!streamcomment) {  			// Remove new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			reset:  			ind = 0;  			foreach (char ch in text) {  				if (text.Length > 0) {  					if (ch == '\"') {  						if (instring) {  							instring = false;  						}  						else {  							instring = true;  						}  					}  				}  				if (text.Length > ind + 4 && !instring) {  					if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  						text = text.Remove (ind' 4);  						text = text.Insert (ind' "\t");  						instring = false;  						goto reset;  					}  				}  				ind++;  			}  			tab.scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  	text = tab.scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		if (!streamcomment) {  			// Remove new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			reset:  			ind = 0;  			foreach (char ch in text) {  				if (text.Length > 0) {  					if (ch == '\"') {  						if (instring) {  							instring = false;  						}  						else {  							instring = true;  						}  					}  				}  				if (text.Length > ind + 4 && !instring) {  					if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  						text = text.Remove (ind' 4);  						text = text.Insert (ind' "\t");  						instring = false;  						goto reset;  					}  				}  				ind++;  			}  			tab.scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: for (int lineind = 0; lineind < tab.scintilla.Lines.Count; lineind++) {  	text = tab.scintilla.Lines [lineind].Text;  	if (text.Length > 0) {  		// Fixes for comments.  		if (text.StartsWith ("//")) {  			continue;  		}  		if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  			streamcomment = true;  		}  		else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  			streamcomment = false;  		}  		if (!streamcomment) {  			// Remove new lines for the local variable.  			if (text.EndsWith ("\r\n"))  				text = text.Substring (0' text.Length - 2);  			if (text.EndsWith ("\n"))  				text = text.Substring (0' text.Length - 1);  			reset:  			ind = 0;  			foreach (char ch in text) {  				if (text.Length > 0) {  					if (ch == '\"') {  						if (instring) {  							instring = false;  						}  						else {  							instring = true;  						}  					}  				}  				if (text.Length > ind + 4 && !instring) {  					if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  						text = text.Remove (ind' 4);  						text = text.Insert (ind' "\t");  						instring = false;  						goto reset;  					}  				}  				ind++;  			}  			tab.scintilla.Lines [lineind].Text = text;  		}  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	if (!streamcomment) {  		// Remove new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		reset:  		ind = 0;  		foreach (char ch in text) {  			if (text.Length > 0) {  				if (ch == '\"') {  					if (instring) {  						instring = false;  					}  					else {  						instring = true;  					}  				}  			}  			if (text.Length > ind + 4 && !instring) {  				if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  					text = text.Remove (ind' 4);  					text = text.Insert (ind' "\t");  					instring = false;  					goto reset;  				}  			}  			ind++;  		}  		tab.scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	if (!streamcomment) {  		// Remove new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		reset:  		ind = 0;  		foreach (char ch in text) {  			if (text.Length > 0) {  				if (ch == '\"') {  					if (instring) {  						instring = false;  					}  					else {  						instring = true;  					}  				}  			}  			if (text.Length > ind + 4 && !instring) {  				if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  					text = text.Remove (ind' 4);  					text = text.Insert (ind' "\t");  					instring = false;  					goto reset;  				}  			}  			ind++;  		}  		tab.scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	if (!streamcomment) {  		// Remove new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		reset:  		ind = 0;  		foreach (char ch in text) {  			if (text.Length > 0) {  				if (ch == '\"') {  					if (instring) {  						instring = false;  					}  					else {  						instring = true;  					}  				}  			}  			if (text.Length > ind + 4 && !instring) {  				if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  					text = text.Remove (ind' 4);  					text = text.Insert (ind' "\t");  					instring = false;  					goto reset;  				}  			}  			ind++;  		}  		tab.scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > 0) {  	// Fixes for comments.  	if (text.StartsWith ("//")) {  		continue;  	}  	if (text.IndexOf ("/*") != -1 && text.IndexOf ("*/") == -1) {  		streamcomment = true;  	}  	else if (text.IndexOf ("*/") != -1 && text.IndexOf ("/*") == -1) {  		streamcomment = false;  	}  	if (!streamcomment) {  		// Remove new lines for the local variable.  		if (text.EndsWith ("\r\n"))  			text = text.Substring (0' text.Length - 2);  		if (text.EndsWith ("\n"))  			text = text.Substring (0' text.Length - 1);  		reset:  		ind = 0;  		foreach (char ch in text) {  			if (text.Length > 0) {  				if (ch == '\"') {  					if (instring) {  						instring = false;  					}  					else {  						instring = true;  					}  				}  			}  			if (text.Length > ind + 4 && !instring) {  				if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  					text = text.Remove (ind' 4);  					text = text.Insert (ind' "\t");  					instring = false;  					goto reset;  				}  			}  			ind++;  		}  		tab.scintilla.Lines [lineind].Text = text;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (!streamcomment) {  	// Remove new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	reset:  	ind = 0;  	foreach (char ch in text) {  		if (text.Length > 0) {  			if (ch == '\"') {  				if (instring) {  					instring = false;  				}  				else {  					instring = true;  				}  			}  		}  		if (text.Length > ind + 4 && !instring) {  			if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  				text = text.Remove (ind' 4);  				text = text.Insert (ind' "\t");  				instring = false;  				goto reset;  			}  		}  		ind++;  	}  	tab.scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (!streamcomment) {  	// Remove new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	reset:  	ind = 0;  	foreach (char ch in text) {  		if (text.Length > 0) {  			if (ch == '\"') {  				if (instring) {  					instring = false;  				}  				else {  					instring = true;  				}  			}  		}  		if (text.Length > ind + 4 && !instring) {  			if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  				text = text.Remove (ind' 4);  				text = text.Insert (ind' "\t");  				instring = false;  				goto reset;  			}  		}  		ind++;  	}  	tab.scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (!streamcomment) {  	// Remove new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	reset:  	ind = 0;  	foreach (char ch in text) {  		if (text.Length > 0) {  			if (ch == '\"') {  				if (instring) {  					instring = false;  				}  				else {  					instring = true;  				}  			}  		}  		if (text.Length > ind + 4 && !instring) {  			if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  				text = text.Remove (ind' 4);  				text = text.Insert (ind' "\t");  				instring = false;  				goto reset;  			}  		}  		ind++;  	}  	tab.scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (!streamcomment) {  	// Remove new lines for the local variable.  	if (text.EndsWith ("\r\n"))  		text = text.Substring (0' text.Length - 2);  	if (text.EndsWith ("\n"))  		text = text.Substring (0' text.Length - 1);  	reset:  	ind = 0;  	foreach (char ch in text) {  		if (text.Length > 0) {  			if (ch == '\"') {  				if (instring) {  					instring = false;  				}  				else {  					instring = true;  				}  			}  		}  		if (text.Length > ind + 4 && !instring) {  			if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  				text = text.Remove (ind' 4);  				text = text.Insert (ind' "\t");  				instring = false;  				goto reset;  			}  		}  		ind++;  	}  	tab.scintilla.Lines [lineind].Text = text;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.EndsWith ("\r\n"))  	text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: text = text.Substring (0' text.Length - 2);  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (char ch in text) {  	if (text.Length > 0) {  		if (ch == '\"') {  			if (instring) {  				instring = false;  			}  			else {  				instring = true;  			}  		}  	}  	if (text.Length > ind + 4 && !instring) {  		if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  			text = text.Remove (ind' 4);  			text = text.Insert (ind' "\t");  			instring = false;  			goto reset;  		}  	}  	ind++;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (char ch in text) {  	if (text.Length > 0) {  		if (ch == '\"') {  			if (instring) {  				instring = false;  			}  			else {  				instring = true;  			}  		}  	}  	if (text.Length > ind + 4 && !instring) {  		if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  			text = text.Remove (ind' 4);  			text = text.Insert (ind' "\t");  			instring = false;  			goto reset;  		}  	}  	ind++;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: foreach (char ch in text) {  	if (text.Length > 0) {  		if (ch == '\"') {  			if (instring) {  				instring = false;  			}  			else {  				instring = true;  			}  		}  	}  	if (text.Length > ind + 4 && !instring) {  		if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  			text = text.Remove (ind' 4);  			text = text.Insert (ind' "\t");  			instring = false;  			goto reset;  		}  	}  	ind++;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > ind + 4 && !instring) {  	if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  		text = text.Remove (ind' 4);  		text = text.Insert (ind' "\t");  		instring = false;  		goto reset;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > ind + 4 && !instring) {  	if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  		text = text.Remove (ind' 4);  		text = text.Insert (ind' "\t");  		instring = false;  		goto reset;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Length > ind + 4 && !instring) {  	if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  		text = text.Remove (ind' 4);  		text = text.Insert (ind' "\t");  		instring = false;  		goto reset;  	}  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  	text = text.Remove (ind' 4);  	text = text.Insert (ind' "\t");  	instring = false;  	goto reset;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: if (text.Substring (ind' 4).CompareTo ("    ") == 0) {  	text = text.Remove (ind' 4);  	text = text.Insert (ind' "\t");  	instring = false;  	goto reset;  }  
Magic Number,PAWNEdit,Form1,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Form1.cs,replace4SpacesWithTabsToolStripMenuItem_Click,The following statement contains a magic number: text = text.Remove (ind' 4);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: try {  	string title = (mainform.tabControl1.TabPages.Count + 1).ToString ();  	Tab_t newtab = new Tab_t ();  	newtab.build = new RichTextBox ();  	newtab.groupbox = new GroupBox ();  	newtab.page = new TabPage ();  	newtab.scintilla = new Scintilla ();  	newtab.split = new Splitter ();  	Random randomizer = new Random ();  	// build  	newtab.build.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.build.Location = new System.Drawing.Point (3' 16);  	newtab.build.Name = "buildRichTextBox1" + title;  	newtab.build.Size = new System.Drawing.Size (561' 81);  	newtab.build.TabIndex = 0;  	newtab.build.Text = "";  	// groupbox  	newtab.groupbox.Controls.Add (newtab.build);  	newtab.groupbox.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.groupbox.Location = new System.Drawing.Point (3' 362);  	newtab.groupbox.Name = "buildGroupBox" + title;  	newtab.groupbox.Size = new System.Drawing.Size (567' 100);  	newtab.groupbox.TabIndex = 0;  	newtab.groupbox.TabStop = false;  	newtab.groupbox.Text = "Build Output";  	newtab.groupbox.ForeColor = Color.Black;  	// page   	newtab.page.Controls.Add (newtab.scintilla);  	newtab.page.Controls.Add (newtab.split);  	newtab.page.Controls.Add (newtab.groupbox);  	newtab.page.Location = new System.Drawing.Point (4' 22);  	newtab.page.Name = "buildTabPage" + title;  	newtab.page.Padding = new System.Windows.Forms.Padding (3);  	newtab.page.Size = new System.Drawing.Size (573' 465);  	newtab.page.TabIndex = 0;  	newtab.page.Text = "buildTabPage" + title;  	// scintilla  	newtab.scintilla.Dock = System.Windows.Forms.DockStyle.Fill;  	newtab.scintilla.Location = new System.Drawing.Point (3' 3);  	newtab.scintilla.Name = "buildScintilla" + title;  	newtab.scintilla.Size = new System.Drawing.Size (567' 356);  	newtab.scintilla.TabIndex = 2;  	newtab.scintilla.Indentation.TabWidth = 4;  	// Style list - http://scintillanet.codeplex.com/SourceControl/changeset/view/99922#1941361  	newtab.scintilla.ConfigurationManager.Language = "cpp";  	// Make this Pawn later.  	// split  	newtab.split.Dock = System.Windows.Forms.DockStyle.Bottom;  	newtab.split.Location = new System.Drawing.Point (3' 359);  	newtab.split.Name = "buildSplitter" + title;  	newtab.split.Size = new System.Drawing.Size (567' 6);  	newtab.split.TabIndex = 1;  	newtab.split.TabStop = false;  	mainform.tabControl1.TabPages.Add (newtab.page);  	newtab.Filename = "bare.pwn";  	newtab.Filedir = "C:\\Users\\Byt3\\Desktop\\SA-MP\\Test\\gamemodes";  	tabs.Add (newtab);  	mainform.tabControl1.SelectedIndex++;  	UpdateTabs ();  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.build.Location = new System.Drawing.Point (3' 16);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.build.Location = new System.Drawing.Point (3' 16);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.build.Size = new System.Drawing.Size (561' 81);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.build.Size = new System.Drawing.Size (561' 81);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.groupbox.Location = new System.Drawing.Point (3' 362);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.groupbox.Location = new System.Drawing.Point (3' 362);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.groupbox.Size = new System.Drawing.Size (567' 100);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.groupbox.Size = new System.Drawing.Size (567' 100);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.page.Location = new System.Drawing.Point (4' 22);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.page.Location = new System.Drawing.Point (4' 22);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.page.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.page.Size = new System.Drawing.Size (573' 465);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.page.Size = new System.Drawing.Size (573' 465);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.scintilla.Location = new System.Drawing.Point (3' 3);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.scintilla.Location = new System.Drawing.Point (3' 3);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.scintilla.Size = new System.Drawing.Size (567' 356);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.scintilla.Size = new System.Drawing.Size (567' 356);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.scintilla.TabIndex = 2;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.scintilla.Indentation.TabWidth = 4;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.split.Location = new System.Drawing.Point (3' 359);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.split.Location = new System.Drawing.Point (3' 359);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.split.Size = new System.Drawing.Size (567' 6);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,NewTab,The following statement contains a magic number: newtab.split.Size = new System.Drawing.Size (567' 6);  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: try {  	foreach (Tab_t tab in tabs) {  		if (tab.scintilla != null) {  			// Default  			tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  			tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  			tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  			// Line Comment  			tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  			tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  			tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  			// Stream Comment  			tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  			tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  			tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  			// Document Comment  			tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  			tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  			tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  			// Number  			tab.scintilla.Styles [4].Font = settings.settings.number.font;  			tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  			tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  			// Keywords  			tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  			tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  			tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  			// String  			tab.scintilla.Styles [6].Font = settings.settings.str.font;  			tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  			tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  			// Character  			tab.scintilla.Styles [7].Font = settings.settings.character.font;  			tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  			tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  			// Preprocessor  			tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  			tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  			tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  			// Operator  			tab.scintilla.Styles [10].Font = settings.settings.operat.font;  			tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  			tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  			// Identifier  			tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  			tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  			tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  			// String EOL  			tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  			tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  			tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  			// Verbatim  			tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  			tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  			tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  			// Regular Expression  			tab.scintilla.Styles [14].Font = settings.settings.regex.font;  			tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  			tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  			// Comment line doc? or stream doc?  			tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  			tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  			tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  			// Keywords 2  			tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  			tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  			tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  		}  	}  }  catch (Exception ex) {  	mainform.CaughtException (ex);  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: foreach (Tab_t tab in tabs) {  	if (tab.scintilla != null) {  		// Default  		tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  		tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  		tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  		// Line Comment  		tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  		tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  		tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  		// Stream Comment  		tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  		tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  		tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  		// Document Comment  		tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  		tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  		tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  		// Number  		tab.scintilla.Styles [4].Font = settings.settings.number.font;  		tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  		tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  		// Keywords  		tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  		tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  		tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  		// String  		tab.scintilla.Styles [6].Font = settings.settings.str.font;  		tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  		tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  		// Character  		tab.scintilla.Styles [7].Font = settings.settings.character.font;  		tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  		tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  		// Preprocessor  		tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  		tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  		tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  		// Operator  		tab.scintilla.Styles [10].Font = settings.settings.operat.font;  		tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  		tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  		// Identifier  		tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  		tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  		tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  		// String EOL  		tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  		tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  		tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  		// Verbatim  		tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  		tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  		tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  		// Regular Expression  		tab.scintilla.Styles [14].Font = settings.settings.regex.font;  		tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  		tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  		// Comment line doc? or stream doc?  		tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  		tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  		tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  		// Keywords 2  		tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  		tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  		tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  	}  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: if (tab.scintilla != null) {  	// Default  	tab.scintilla.Styles [0].Font = settings.settings.defaulttext.font;  	tab.scintilla.Styles [0].ForeColor = settings.settings.defaulttext.forecolor;  	tab.scintilla.Styles [0].BackColor = settings.settings.defaulttext.backcolor;  	// Line Comment  	tab.scintilla.Styles [1].Font = settings.settings.linecomment.font;  	tab.scintilla.Styles [1].ForeColor = settings.settings.linecomment.forecolor;  	tab.scintilla.Styles [1].BackColor = settings.settings.linecomment.backcolor;  	// Stream Comment  	tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  	tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  	tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  	// Document Comment  	tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  	tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  	tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  	// Number  	tab.scintilla.Styles [4].Font = settings.settings.number.font;  	tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  	tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  	// Keywords  	tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  	tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  	tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  	// String  	tab.scintilla.Styles [6].Font = settings.settings.str.font;  	tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  	tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  	// Character  	tab.scintilla.Styles [7].Font = settings.settings.character.font;  	tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  	tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  	// Preprocessor  	tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  	tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  	tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  	// Operator  	tab.scintilla.Styles [10].Font = settings.settings.operat.font;  	tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  	tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  	// Identifier  	tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  	tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  	tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  	// String EOL  	tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  	tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  	tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  	// Verbatim  	tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  	tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  	tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  	// Regular Expression  	tab.scintilla.Styles [14].Font = settings.settings.regex.font;  	tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  	tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  	// Comment line doc? or stream doc?  	tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  	tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  	tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  	// Keywords 2  	tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  	tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  	tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  }  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [2].Font = settings.settings.streamcomment.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [2].ForeColor = settings.settings.streamcomment.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [2].BackColor = settings.settings.streamcomment.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [3].Font = settings.settings.doccomment.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [3].ForeColor = settings.settings.doccomment.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [3].BackColor = settings.settings.doccomment.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [4].Font = settings.settings.number.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [4].ForeColor = settings.settings.number.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [4].BackColor = settings.settings.number.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [5].Font = settings.settings.keyword.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [5].ForeColor = settings.settings.keyword.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [5].BackColor = settings.settings.keyword.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [6].Font = settings.settings.str.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [6].ForeColor = settings.settings.str.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [6].BackColor = settings.settings.str.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [7].Font = settings.settings.character.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [7].ForeColor = settings.settings.character.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [7].BackColor = settings.settings.character.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [9].Font = settings.settings.preprocessor.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [9].ForeColor = settings.settings.preprocessor.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [9].BackColor = settings.settings.preprocessor.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [10].Font = settings.settings.operat.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [10].ForeColor = settings.settings.operat.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [10].BackColor = settings.settings.operat.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [11].Font = settings.settings.identifier.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [11].ForeColor = settings.settings.identifier.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [11].BackColor = settings.settings.identifier.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [12].Font = settings.settings.stringeol.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [12].ForeColor = settings.settings.stringeol.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [12].BackColor = settings.settings.stringeol.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [13].Font = settings.settings.verbatim.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [13].ForeColor = settings.settings.verbatim.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [13].BackColor = settings.settings.verbatim.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [14].Font = settings.settings.regex.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [14].ForeColor = settings.settings.regex.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [14].BackColor = settings.settings.regex.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [15].Font = settings.settings.doclinecomment.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [15].ForeColor = settings.settings.doclinecomment.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [15].BackColor = settings.settings.doclinecomment.backcolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [16].Font = settings.settings.keyword2.font;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [16].ForeColor = settings.settings.keyword2.forecolor;  
Magic Number,PAWNEdit,Tabs,C:\repos\Byt3-Hub_PAWNEdit\Backup\PAWNEdit\Tabs.cs,UpdateTabs,The following statement contains a magic number: tab.scintilla.Styles [16].BackColor = settings.settings.keyword2.backcolor;  
