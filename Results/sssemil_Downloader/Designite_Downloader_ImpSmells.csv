Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,button1_Click_1,Cyclomatic complexity of the method is 10
Complex Method,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,Cyclomatic complexity of the method is 13
Long Statement,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,button1_Click_1,The length of the statement  "					DialogResult result = MessageBox.Show ("File with the same name already exists' would you like to overwrite it?"' "Warning."' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 176.
Long Statement,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,aboutToolStripMenuItem_Click,The length of the statement  "	MessageBox.Show (" Desined and created under GNU General Public License by sssemil inc.Â© \n Downloader by sssemil: " + version); " is 128.
Long Statement,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,Form1_Load,The length of the statement  "		using (StreamReader reader = File.OpenText (Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData) + "\\downloader.ini")) { " is 138.
Long Statement,Downloader,Form2,C:\repos\sssemil_Downloader\Downloader\Form2.cs,button1_Click,The length of the statement  "		textBox1.Text = Directory.GetParent (Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments)).FullName + "\\Downloads"; " is 129.
Long Statement,Downloader,Form2,C:\repos\sssemil_Downloader\Downloader\Form2.cs,button1_Click,The length of the statement  "	StreamWriter sw = File.CreateText (Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData) + "\\downloader.ini"); " is 127.
Long Statement,Downloader,Form2,C:\repos\sssemil_Downloader\Downloader\Form2.cs,Form2_Load,The length of the statement  "		using (StreamReader reader = File.OpenText (Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData) + "\\downloader.ini")) { " is 138.
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: try {  	System.Net.WebRequest req = System.Net.HttpWebRequest.Create (textBox1.Text);  	req.Method = "HEAD";  	using (System.Net.WebResponse resp = req.GetResponse ()) {  		int ContentLength;  		if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  			Uri uri = new Uri (textBox1.Text);  			filename = System.IO.Path.GetFileName (uri.LocalPath);  			if (ln2 == "Auto") {  				if (ContentLength >= 1000000000) {  					ln2 = "GB";  				}  				else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  					ln2 = "MB";  				}  				else if (ContentLength >= 1000 && ContentLength <= 1000000) {  					ln2 = "KB";  				}  				else {  					ln2 = "Bytes";  				}  			}  			if (ln2 == "Bytes") {  				ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  			}  			else if (ln2 == "KB") {  				ContentLength = ContentLength / 1000;  				ReportStatus (ContentLength.ToString () + " KB - " + filename);  			}  			else if (ln2 == "MB") {  				ContentLength = ContentLength / 1000000;  				ReportStatus (ContentLength.ToString () + " MB - " + filename);  			}  			else if (ln2 == "GB") {  				ContentLength = ContentLength / 100000000;  				ReportStatus (ContentLength.ToString () + " GB - " + filename);  			}  		}  	}  }  catch (Exception ex) {  	ReportStatus (ex.Message);  	button1.Enabled = true;  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: using (System.Net.WebResponse resp = req.GetResponse ()) {  	int ContentLength;  	if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  		Uri uri = new Uri (textBox1.Text);  		filename = System.IO.Path.GetFileName (uri.LocalPath);  		if (ln2 == "Auto") {  			if (ContentLength >= 1000000000) {  				ln2 = "GB";  			}  			else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  				ln2 = "MB";  			}  			else if (ContentLength >= 1000 && ContentLength <= 1000000) {  				ln2 = "KB";  			}  			else {  				ln2 = "Bytes";  			}  		}  		if (ln2 == "Bytes") {  			ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  		}  		else if (ln2 == "KB") {  			ContentLength = ContentLength / 1000;  			ReportStatus (ContentLength.ToString () + " KB - " + filename);  		}  		else if (ln2 == "MB") {  			ContentLength = ContentLength / 1000000;  			ReportStatus (ContentLength.ToString () + " MB - " + filename);  		}  		else if (ln2 == "GB") {  			ContentLength = ContentLength / 100000000;  			ReportStatus (ContentLength.ToString () + " GB - " + filename);  		}  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (int.TryParse (resp.Headers.Get ("Content-Length")' out ContentLength)) {  	Uri uri = new Uri (textBox1.Text);  	filename = System.IO.Path.GetFileName (uri.LocalPath);  	if (ln2 == "Auto") {  		if (ContentLength >= 1000000000) {  			ln2 = "GB";  		}  		else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  			ln2 = "MB";  		}  		else if (ContentLength >= 1000 && ContentLength <= 1000000) {  			ln2 = "KB";  		}  		else {  			ln2 = "Bytes";  		}  	}  	if (ln2 == "Bytes") {  		ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  	}  	else if (ln2 == "KB") {  		ContentLength = ContentLength / 1000;  		ReportStatus (ContentLength.ToString () + " KB - " + filename);  	}  	else if (ln2 == "MB") {  		ContentLength = ContentLength / 1000000;  		ReportStatus (ContentLength.ToString () + " MB - " + filename);  	}  	else if (ln2 == "GB") {  		ContentLength = ContentLength / 100000000;  		ReportStatus (ContentLength.ToString () + " GB - " + filename);  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Auto") {  	if (ContentLength >= 1000000000) {  		ln2 = "GB";  	}  	else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  		ln2 = "MB";  	}  	else if (ContentLength >= 1000 && ContentLength <= 1000000) {  		ln2 = "KB";  	}  	else {  		ln2 = "Bytes";  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Auto") {  	if (ContentLength >= 1000000000) {  		ln2 = "GB";  	}  	else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  		ln2 = "MB";  	}  	else if (ContentLength >= 1000 && ContentLength <= 1000000) {  		ln2 = "KB";  	}  	else {  		ln2 = "Bytes";  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Auto") {  	if (ContentLength >= 1000000000) {  		ln2 = "GB";  	}  	else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  		ln2 = "MB";  	}  	else if (ContentLength >= 1000 && ContentLength <= 1000000) {  		ln2 = "KB";  	}  	else {  		ln2 = "Bytes";  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Auto") {  	if (ContentLength >= 1000000000) {  		ln2 = "GB";  	}  	else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  		ln2 = "MB";  	}  	else if (ContentLength >= 1000 && ContentLength <= 1000000) {  		ln2 = "KB";  	}  	else {  		ln2 = "Bytes";  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Auto") {  	if (ContentLength >= 1000000000) {  		ln2 = "GB";  	}  	else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  		ln2 = "MB";  	}  	else if (ContentLength >= 1000 && ContentLength <= 1000000) {  		ln2 = "KB";  	}  	else {  		ln2 = "Bytes";  	}  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000000) {  	ln2 = "GB";  }  else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000000) {  	ln2 = "GB";  }  else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000000) {  	ln2 = "GB";  }  else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000000) {  	ln2 = "GB";  }  else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000000) {  	ln2 = "GB";  }  else if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000000 && ContentLength <= 1000000000) {  	ln2 = "MB";  }  else if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ContentLength >= 1000 && ContentLength <= 1000000) {  	ln2 = "KB";  }  else {  	ln2 = "Bytes";  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Bytes") {  	ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  }  else if (ln2 == "KB") {  	ContentLength = ContentLength / 1000;  	ReportStatus (ContentLength.ToString () + " KB - " + filename);  }  else if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Bytes") {  	ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  }  else if (ln2 == "KB") {  	ContentLength = ContentLength / 1000;  	ReportStatus (ContentLength.ToString () + " KB - " + filename);  }  else if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "Bytes") {  	ReportStatus (ContentLength.ToString () + " Bytes - " + filename);  }  else if (ln2 == "KB") {  	ContentLength = ContentLength / 1000;  	ReportStatus (ContentLength.ToString () + " KB - " + filename);  }  else if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "KB") {  	ContentLength = ContentLength / 1000;  	ReportStatus (ContentLength.ToString () + " KB - " + filename);  }  else if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "KB") {  	ContentLength = ContentLength / 1000;  	ReportStatus (ContentLength.ToString () + " KB - " + filename);  }  else if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "KB") {  	ContentLength = ContentLength / 1000;  	ReportStatus (ContentLength.ToString () + " KB - " + filename);  }  else if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: ContentLength = ContentLength / 1000;  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "MB") {  	ContentLength = ContentLength / 1000000;  	ReportStatus (ContentLength.ToString () + " MB - " + filename);  }  else if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: ContentLength = ContentLength / 1000000;  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: if (ln2 == "GB") {  	ContentLength = ContentLength / 100000000;  	ReportStatus (ContentLength.ToString () + " GB - " + filename);  }  
Magic Number,Downloader,Form1,C:\repos\sssemil_Downloader\Downloader\Form1.cs,textBox1_TextChanged,The following statement contains a magic number: ContentLength = ContentLength / 100000000;  
