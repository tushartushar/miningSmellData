Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,ToUsefulString,Cyclomatic complexity of the method is 8
Long Statement,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,NewException,The length of the statement  "		return new SpecificationException (string.Format (message' parameters.Select (x => x.ToUsefulString ()).Cast<object> ().ToArray ())); " is 133.
Long Statement,RedBadger.Xpf.Specs,UIElementMockingExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\UIElementSpecs.cs,MeasureOverride,The length of the statement  "	object result = typeof(UIElement).GetMethod ("MeasureOverride"' BindingFlags.Instance | BindingFlags.NonPublic' null' new[] { " is 125.
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: sb.Append (String.Join ("'\n"' enumerable.Select (x => x.ToUsefulString ().Tab ()).Take (10).ToArray ()));  
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: if (enumerable.Count () > 10) {  	if (enumerable.Count () > 11) {  		sb.AppendLine (String.Format ("'\n ...({0} more elements)"' enumerable.Count () - 10));  	} else {  		sb.AppendLine ("'\n" + enumerable.Last ().ToUsefulString ().Tab ());  	}  } else {  	sb.AppendLine ();  }  
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: if (enumerable.Count () > 10) {  	if (enumerable.Count () > 11) {  		sb.AppendLine (String.Format ("'\n ...({0} more elements)"' enumerable.Count () - 10));  	} else {  		sb.AppendLine ("'\n" + enumerable.Last ().ToUsefulString ().Tab ());  	}  } else {  	sb.AppendLine ();  }  
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: if (enumerable.Count () > 10) {  	if (enumerable.Count () > 11) {  		sb.AppendLine (String.Format ("'\n ...({0} more elements)"' enumerable.Count () - 10));  	} else {  		sb.AppendLine ("'\n" + enumerable.Last ().ToUsefulString ().Tab ());  	}  } else {  	sb.AppendLine ();  }  
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: if (enumerable.Count () > 11) {  	sb.AppendLine (String.Format ("'\n ...({0} more elements)"' enumerable.Count () - 10));  } else {  	sb.AppendLine ("'\n" + enumerable.Last ().ToUsefulString ().Tab ());  }  
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: if (enumerable.Count () > 11) {  	sb.AppendLine (String.Format ("'\n ...({0} more elements)"' enumerable.Count () - 10));  } else {  	sb.AppendLine ("'\n" + enumerable.Last ().ToUsefulString ().Tab ());  }  
Magic Number,RedBadger.Xpf.Specs.Extensions,MSpecExtensions,D:\newReposJune17\redbadger_XPF\XPF\RedBadger.Xpf.Specs\Extensions\MSpecExtensions.cs,EachToUsefulString,The following statement contains a magic number: sb.AppendLine (String.Format ("'\n ...({0} more elements)"' enumerable.Count () - 10));  
