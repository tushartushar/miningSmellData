Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadNumericLiteral,Cyclomatic complexity of the method is 24
Complex Method,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadStringLiteral,Cyclomatic complexity of the method is 20
Complex Method,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,skipWhite2,Cyclomatic complexity of the method is 10
Complex Method,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,ReadCore,Cyclomatic complexity of the method is 24
Complex Method,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,readKeyName,Cyclomatic complexity of the method is 10
Complex Method,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,readMlString,Cyclomatic complexity of the method is 12
Complex Method,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,Cyclomatic complexity of the method is 30
Complex Method,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,readTfnns,Cyclomatic complexity of the method is 15
Complex Method,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,Save,Cyclomatic complexity of the method is 26
Complex Method,Hjson,JsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\JsonReader.cs,ReadCore,Cyclomatic complexity of the method is 22
Complex Method,Hjson,JsonUtil,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\JsonUtil.cs,ToJson,Cyclomatic complexity of the method is 8
Complex Method,Hjson,JsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\JsonWriter.cs,Save,Cyclomatic complexity of the method is 17
Complex Method,Hjson,JsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\JsonWriter.cs,getEscapedChar,Cyclomatic complexity of the method is 8
Long Parameter List,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,Save,The method has 7 parameters. Parameters: value' tw' level' hasComment' separator' noIndent' isRootObject
Long Parameter List,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,writeString,The method has 5 parameters. Parameters: value' tw' level' hasComment' separator
Long Statement,Hjson,HjsonDsf,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonDsf.cs,Stringify,The length of the statement  "              throw new Exception("value may not be empty' start with a quote or contain a punctuator character except colon: " + text); " is 122.
Long Statement,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,readKeyName,The length of the statement  "          throw ParseError("Found '"+ch+"' where a key name was expected (check your syntax or use quotes if the key name includes {}[]': or whitespace)"); " is 145.
Long Statement,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,writeString,The length of the statement  "        else if (!value.Any(c => needsEscapeML(c)) && !value.Contains("'''") && !value.All(c => BaseReader.IsWhite(c))) writeMLString(value' tw' level' separator); " is 155.
Complex Conditional,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadStringLiteral,The conditional expression  "allowML!=null && exitCh=='\'' && PeekChar()=='\'' && sb.Length==0"  is complex.
Complex Conditional,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,The conditional expression  "ch==''' || ch=='}' || ch==']' || ch=='#' || ch=='/' && (text.Length>p+1 && (text[p+1]=='/' || text[p+1]=='*'))"  is complex.
Complex Conditional,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,readTfnns,The conditional expression  "isEol || c==''' ||            c=='}' || c==']' ||            c=='#' ||            c=='/' && (PeekChar(1)=='/' || PeekChar(1)=='*')"  is complex.
Complex Conditional,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,getWsc,The conditional expression  "c=='\n' ||            c=='#' ||            c=='/' && i+1<str.Length && (str[i+1]=='/' || str[i+1]=='*')"  is complex.
Complex Conditional,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,writeString,The conditional expression  "doEscape ||          BaseReader.IsWhite(left) || BaseReader.IsWhite(right) ||          left=='"' ||          left=='\'' ||          left=='#' ||          left=='/' && (left1=='*' || left1=='/') ||          HjsonValue.IsPunctuatorChar(left) ||          HjsonReader.TryParseNumericLiteral(value' true' out dummy) ||          startsWithKeyword(value)"  is complex.
Empty Catch Block,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,Read,The method has an empty catch block.
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadNumericLiteral,The following statement contains a magic number: val=val*10+(c-'0');
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadNumericLiteral,The following statement contains a magic number: double d=10;
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadNumericLiteral,The following statement contains a magic number: d*=10;
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadNumericLiteral,The following statement contains a magic number: exp=exp*10+(c-'0');
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadNumericLiteral,The following statement contains a magic number: val*=Math.Pow(10' exp*expSign);
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadStringLiteral,The following statement contains a magic number: switch (c)          {            case '"':            case '\'':            case '\\':            case '/': sb.Append((char)c); break;            case 'b': sb.Append('\x8'); break;            case 'f': sb.Append('\f'); break;            case 'n': sb.Append('\n'); break;            case 'r': sb.Append('\r'); break;            case 't': sb.Append('\t'); break;            case 'u':              ushort cp=0;              for (int i=0; i<4; i++)              {                cp <<= 4;                if ((c=ReadChar())<0)                  throw ParseError("Incomplete unicode character escape literal");                if (c>='0' && c<='9') cp+=(ushort)(c-'0');                else if (c>='A' && c<='F') cp+=(ushort)(c-'A'+10);                else if (c>='a' && c<='f') cp+=(ushort)(c-'a'+10);                else throw ParseError("Bad \\u char "+(char)c);              }              sb.Append((char)cp);              break;            default:              throw ParseError("Invalid JSON string literal; unexpected escape character");          }
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadStringLiteral,The following statement contains a magic number: switch (c)          {            case '"':            case '\'':            case '\\':            case '/': sb.Append((char)c); break;            case 'b': sb.Append('\x8'); break;            case 'f': sb.Append('\f'); break;            case 'n': sb.Append('\n'); break;            case 'r': sb.Append('\r'); break;            case 't': sb.Append('\t'); break;            case 'u':              ushort cp=0;              for (int i=0; i<4; i++)              {                cp <<= 4;                if ((c=ReadChar())<0)                  throw ParseError("Incomplete unicode character escape literal");                if (c>='0' && c<='9') cp+=(ushort)(c-'0');                else if (c>='A' && c<='F') cp+=(ushort)(c-'A'+10);                else if (c>='a' && c<='f') cp+=(ushort)(c-'a'+10);                else throw ParseError("Bad \\u char "+(char)c);              }              sb.Append((char)cp);              break;            default:              throw ParseError("Invalid JSON string literal; unexpected escape character");          }
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadStringLiteral,The following statement contains a magic number: switch (c)          {            case '"':            case '\'':            case '\\':            case '/': sb.Append((char)c); break;            case 'b': sb.Append('\x8'); break;            case 'f': sb.Append('\f'); break;            case 'n': sb.Append('\n'); break;            case 'r': sb.Append('\r'); break;            case 't': sb.Append('\t'); break;            case 'u':              ushort cp=0;              for (int i=0; i<4; i++)              {                cp <<= 4;                if ((c=ReadChar())<0)                  throw ParseError("Incomplete unicode character escape literal");                if (c>='0' && c<='9') cp+=(ushort)(c-'0');                else if (c>='A' && c<='F') cp+=(ushort)(c-'A'+10);                else if (c>='a' && c<='f') cp+=(ushort)(c-'a'+10);                else throw ParseError("Bad \\u char "+(char)c);              }              sb.Append((char)cp);              break;            default:              throw ParseError("Invalid JSON string literal; unexpected escape character");          }
Magic Number,Hjson,BaseReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\BaseReader.cs,ReadStringLiteral,The following statement contains a magic number: switch (c)          {            case '"':            case '\'':            case '\\':            case '/': sb.Append((char)c); break;            case 'b': sb.Append('\x8'); break;            case 'f': sb.Append('\f'); break;            case 'n': sb.Append('\n'); break;            case 'r': sb.Append('\r'); break;            case 't': sb.Append('\t'); break;            case 'u':              ushort cp=0;              for (int i=0; i<4; i++)              {                cp <<= 4;                if ((c=ReadChar())<0)                  throw ParseError("Incomplete unicode character escape literal");                if (c>='0' && c<='9') cp+=(ushort)(c-'0');                else if (c>='A' && c<='F') cp+=(ushort)(c-'A'+10);                else if (c>='a' && c<='f') cp+=(ushort)(c-'a'+10);                else throw ParseError("Bad \\u char "+(char)c);              }              sb.Append((char)cp);              break;            default:              throw ParseError("Invalid JSON string literal; unexpected escape character");          }
Magic Number,Hjson,DsfHex,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonDsf.cs,Parse,The following statement contains a magic number: return long.Parse(text.Substring(2)' NumberStyles.HexNumber);
Magic Number,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,readMlString,The following statement contains a magic number: var indent=Column-3;
Magic Number,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,The following statement contains a magic number: val=val*10+(c-'0');
Magic Number,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,The following statement contains a magic number: double d=10;
Magic Number,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,The following statement contains a magic number: d*=10;
Magic Number,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,The following statement contains a magic number: exp=exp*10+(c-'0');
Magic Number,Hjson,HjsonReader,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonReader.cs,TryParseNumericLiteral,The following statement contains a magic number: val*=Math.Pow(10' exp*expSign);
Magic Number,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,nl,The following statement contains a magic number: tw.Write(new string(' '' level*2));
Magic Number,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,writeString,The following statement contains a magic number: char left1=value.Length>1?value[1]:'\0'' left2=value.Length>2?value[2]:'\0';
Magic Number,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,writeString,The following statement contains a magic number: char left1=value.Length>1?value[1]:'\0'' left2=value.Length>2?value[2]:'\0';
Magic Number,Hjson,HjsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\HjsonWriter.cs,startsWithKeyword,The following statement contains a magic number: p=4;
Magic Number,Hjson,JsonWriter,D:\research\architectureSmells\repos\laktak_hjson-cs\Hjson\JsonWriter.cs,nl,The following statement contains a magic number: tw.Write(new string(' '' level*2));
