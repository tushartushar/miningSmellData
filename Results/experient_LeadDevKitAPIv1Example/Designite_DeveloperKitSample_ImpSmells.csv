Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,Cyclomatic complexity of the method is 20
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ButtonLeadCaptureByQRCode_Click,The length of the statement  "		DisplayErrorMessage ("You must enter the QRCode Data."' "For samples from the Demo Show please use the \"Badge QRCode Samples\" link shown."); " is 142.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ButtonLeadCaptureByKeyName_Click,The length of the statement  "		DisplayErrorMessage ("You must enter the Attendee's Connect Key."' "For samples from the Demo Show please use the \"Badge QRCode Samples\" link shown."); " is 153.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ButtonLeadCaptureByKeyName_Click,The length of the statement  "		DisplayErrorMessage ("You must enter at least one letter of the Attendee's Last Name."' "For samples from the Demo Show please use the \"Badge QRCode Samples\" link shown."); " is 174.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ButtonLeadCaptureByKeyName_Click,The length of the statement  "				string ResponseJSON = Service.GetLeadInfoJSON (TempActInfo' TextBoxAttendeeConnectKey.Text' TextBoxAttendeeLastName.Text); " is 122.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ButtonLeadCaptureByKeyName_Click,The length of the statement  "				LeadInfoResult Response = Service.GetLeadInfo (TempActInfo' TextBoxAttendeeConnectKey.Text' TextBoxAttendeeLastName.Text); " is 122.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ButtonDisplayFields_Click,The length of the statement  "					ResultsWriteLine ("In addition to the core contact fields in the LeadInfo class' " + "this show also contains the following Demographic fields.  Each field is shown below " + "along with it's list of possible values.  Fields with no possible values may contain " + "free-form text."); " is 284.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,HandleWebException,The length of the statement  "		Msg.Add (string.Format ("The status code is {0}' the status message is {1}."' (int)HR.StatusCode' HR.StatusDescription)); " is 121.
Long Statement,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,CreateAPICredentials,The length of the statement  "	APICredentials NewAPICredentials = new APICredentials (TextBoxActCode.Text.Trim ()' TextBoxBadgeID.Text.Trim ()' TextBoxAPIKey.Text.Trim ()); " is 141.
Long Statement,Experient.DeveloperKitSample,ExperientService,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\ServiceClasses\ExperientService.cs,GetLeadInfoJSON,The length of the statement  "	string URL = string.Format ("{0}?apikey={1}&actcode={2}&badgeid={3}&barcode={4}"' LeadInfoURL' HttpUtility.UrlEncode (apiCred.APIKey' Encoding.UTF8)' HttpUtility.UrlEncode (apiCred.ActivationCode' Encoding.UTF8)' HttpUtility.UrlEncode (apiCred.BadgeID' Encoding.UTF8)' HttpUtility.UrlEncode (qrCodeData' Encoding.UTF8)); " is 320.
Long Statement,Experient.DeveloperKitSample,ExperientService,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\ServiceClasses\ExperientService.cs,GetLeadInfoJSON,The length of the statement  "	string URL = string.Format ("{0}?apikey={1}&actcode={2}&badgeid={3}&connectkey={4}&lastinitial={5}"' LeadInfoURL' HttpUtility.UrlEncode (apiCred.APIKey' Encoding.UTF8)' HttpUtility.UrlEncode (apiCred.ActivationCode' Encoding.UTF8)' HttpUtility.UrlEncode (apiCred.BadgeID' Encoding.UTF8)' HttpUtility.UrlEncode (connectKey' Encoding.UTF8)' HttpUtility.UrlEncode (lastName.Substring (0' 1)' Encoding.UTF8)); " is 405.
Long Statement,Experient.DeveloperKitSample,ExperientService,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\ServiceClasses\ExperientService.cs,QueryFieldsJSON,The length of the statement  "	string URL = string.Format ("{0}?apikey={1}&actcode={2}&badgeid={3}"' LeadInfoURL' HttpUtility.UrlEncode (apiCred.APIKey' Encoding.UTF8)' HttpUtility.UrlEncode (apiCred.ActivationCode' Encoding.UTF8)' HttpUtility.UrlEncode (apiCred.BadgeID' Encoding.UTF8)); " is 257.
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: if (msgs != null) {  	foreach (var M in msgs) {  		string SeverityName;  		switch (M.Severity) {  		case 10:  			SeverityName = "Info";  			break;  		case 20:  			SeverityName = "Question";  			break;  		case 100:  			SeverityName = "Warning";  			break;  		case 500:  			SeverityName = "Problem";  			break;  		case 1000:  			SeverityName = "Error";  			break;  		default:  			SeverityName = "Unknown";  			break;  		}  		ResultsWriteLine ("Message ID: {0}"' M.MessageID);  		ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  		ResultsWriteLine ("Text: {0}"' M.Message);  		ResultsWriteLine ();  	}  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: if (msgs != null) {  	foreach (var M in msgs) {  		string SeverityName;  		switch (M.Severity) {  		case 10:  			SeverityName = "Info";  			break;  		case 20:  			SeverityName = "Question";  			break;  		case 100:  			SeverityName = "Warning";  			break;  		case 500:  			SeverityName = "Problem";  			break;  		case 1000:  			SeverityName = "Error";  			break;  		default:  			SeverityName = "Unknown";  			break;  		}  		ResultsWriteLine ("Message ID: {0}"' M.MessageID);  		ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  		ResultsWriteLine ("Text: {0}"' M.Message);  		ResultsWriteLine ();  	}  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: if (msgs != null) {  	foreach (var M in msgs) {  		string SeverityName;  		switch (M.Severity) {  		case 10:  			SeverityName = "Info";  			break;  		case 20:  			SeverityName = "Question";  			break;  		case 100:  			SeverityName = "Warning";  			break;  		case 500:  			SeverityName = "Problem";  			break;  		case 1000:  			SeverityName = "Error";  			break;  		default:  			SeverityName = "Unknown";  			break;  		}  		ResultsWriteLine ("Message ID: {0}"' M.MessageID);  		ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  		ResultsWriteLine ("Text: {0}"' M.Message);  		ResultsWriteLine ();  	}  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: if (msgs != null) {  	foreach (var M in msgs) {  		string SeverityName;  		switch (M.Severity) {  		case 10:  			SeverityName = "Info";  			break;  		case 20:  			SeverityName = "Question";  			break;  		case 100:  			SeverityName = "Warning";  			break;  		case 500:  			SeverityName = "Problem";  			break;  		case 1000:  			SeverityName = "Error";  			break;  		default:  			SeverityName = "Unknown";  			break;  		}  		ResultsWriteLine ("Message ID: {0}"' M.MessageID);  		ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  		ResultsWriteLine ("Text: {0}"' M.Message);  		ResultsWriteLine ();  	}  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: if (msgs != null) {  	foreach (var M in msgs) {  		string SeverityName;  		switch (M.Severity) {  		case 10:  			SeverityName = "Info";  			break;  		case 20:  			SeverityName = "Question";  			break;  		case 100:  			SeverityName = "Warning";  			break;  		case 500:  			SeverityName = "Problem";  			break;  		case 1000:  			SeverityName = "Error";  			break;  		default:  			SeverityName = "Unknown";  			break;  		}  		ResultsWriteLine ("Message ID: {0}"' M.MessageID);  		ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  		ResultsWriteLine ("Text: {0}"' M.Message);  		ResultsWriteLine ();  	}  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: foreach (var M in msgs) {  	string SeverityName;  	switch (M.Severity) {  	case 10:  		SeverityName = "Info";  		break;  	case 20:  		SeverityName = "Question";  		break;  	case 100:  		SeverityName = "Warning";  		break;  	case 500:  		SeverityName = "Problem";  		break;  	case 1000:  		SeverityName = "Error";  		break;  	default:  		SeverityName = "Unknown";  		break;  	}  	ResultsWriteLine ("Message ID: {0}"' M.MessageID);  	ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  	ResultsWriteLine ("Text: {0}"' M.Message);  	ResultsWriteLine ();  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: foreach (var M in msgs) {  	string SeverityName;  	switch (M.Severity) {  	case 10:  		SeverityName = "Info";  		break;  	case 20:  		SeverityName = "Question";  		break;  	case 100:  		SeverityName = "Warning";  		break;  	case 500:  		SeverityName = "Problem";  		break;  	case 1000:  		SeverityName = "Error";  		break;  	default:  		SeverityName = "Unknown";  		break;  	}  	ResultsWriteLine ("Message ID: {0}"' M.MessageID);  	ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  	ResultsWriteLine ("Text: {0}"' M.Message);  	ResultsWriteLine ();  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: foreach (var M in msgs) {  	string SeverityName;  	switch (M.Severity) {  	case 10:  		SeverityName = "Info";  		break;  	case 20:  		SeverityName = "Question";  		break;  	case 100:  		SeverityName = "Warning";  		break;  	case 500:  		SeverityName = "Problem";  		break;  	case 1000:  		SeverityName = "Error";  		break;  	default:  		SeverityName = "Unknown";  		break;  	}  	ResultsWriteLine ("Message ID: {0}"' M.MessageID);  	ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  	ResultsWriteLine ("Text: {0}"' M.Message);  	ResultsWriteLine ();  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: foreach (var M in msgs) {  	string SeverityName;  	switch (M.Severity) {  	case 10:  		SeverityName = "Info";  		break;  	case 20:  		SeverityName = "Question";  		break;  	case 100:  		SeverityName = "Warning";  		break;  	case 500:  		SeverityName = "Problem";  		break;  	case 1000:  		SeverityName = "Error";  		break;  	default:  		SeverityName = "Unknown";  		break;  	}  	ResultsWriteLine ("Message ID: {0}"' M.MessageID);  	ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  	ResultsWriteLine ("Text: {0}"' M.Message);  	ResultsWriteLine ();  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: foreach (var M in msgs) {  	string SeverityName;  	switch (M.Severity) {  	case 10:  		SeverityName = "Info";  		break;  	case 20:  		SeverityName = "Question";  		break;  	case 100:  		SeverityName = "Warning";  		break;  	case 500:  		SeverityName = "Problem";  		break;  	case 1000:  		SeverityName = "Error";  		break;  	default:  		SeverityName = "Unknown";  		break;  	}  	ResultsWriteLine ("Message ID: {0}"' M.MessageID);  	ResultsWriteLine ("Severity: {0} ({1})"' M.Severity' SeverityName);  	ResultsWriteLine ("Text: {0}"' M.Message);  	ResultsWriteLine ();  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: switch (M.Severity) {  case 10:  	SeverityName = "Info";  	break;  case 20:  	SeverityName = "Question";  	break;  case 100:  	SeverityName = "Warning";  	break;  case 500:  	SeverityName = "Problem";  	break;  case 1000:  	SeverityName = "Error";  	break;  default:  	SeverityName = "Unknown";  	break;  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: switch (M.Severity) {  case 10:  	SeverityName = "Info";  	break;  case 20:  	SeverityName = "Question";  	break;  case 100:  	SeverityName = "Warning";  	break;  case 500:  	SeverityName = "Problem";  	break;  case 1000:  	SeverityName = "Error";  	break;  default:  	SeverityName = "Unknown";  	break;  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: switch (M.Severity) {  case 10:  	SeverityName = "Info";  	break;  case 20:  	SeverityName = "Question";  	break;  case 100:  	SeverityName = "Warning";  	break;  case 500:  	SeverityName = "Problem";  	break;  case 1000:  	SeverityName = "Error";  	break;  default:  	SeverityName = "Unknown";  	break;  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: switch (M.Severity) {  case 10:  	SeverityName = "Info";  	break;  case 20:  	SeverityName = "Question";  	break;  case 100:  	SeverityName = "Warning";  	break;  case 500:  	SeverityName = "Problem";  	break;  case 1000:  	SeverityName = "Error";  	break;  default:  	SeverityName = "Unknown";  	break;  }  
Magic Number,Experient.DeveloperKitSample,Form1,C:\repos\experient_LeadDevKitAPIv1Example\DeveloperKitSample\Form1.cs,ResultsWrite,The following statement contains a magic number: switch (M.Severity) {  case 10:  	SeverityName = "Info";  	break;  case 20:  	SeverityName = "Question";  	break;  case 100:  	SeverityName = "Warning";  	break;  case 500:  	SeverityName = "Problem";  	break;  case 1000:  	SeverityName = "Error";  	break;  default:  	SeverityName = "Unknown";  	break;  }  
