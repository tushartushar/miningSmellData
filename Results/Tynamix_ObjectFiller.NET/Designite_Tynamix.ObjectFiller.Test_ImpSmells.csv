Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tynamix.ObjectFiller.Test,MyClassWithCstr,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\EnumTest.cs,MyClassWithCstr,The method has 5 parameters. Parameters: standard' numbered' flags' manual' ignored
Long Statement,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The length of the statement  "            filler.Setup().OnProperty(x => x.ArrayList).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10)); " is 130.
Long Statement,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The length of the statement  "                .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10)) " is 121.
Long Statement,Tynamix.ObjectFiller.Test.BugfixTests,Bug89FillTypesInheritsFromDictionary,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\BugfixTests\Bug89FillTypesInheritsFromDictionary.cs,ADerivedDictionaryShallGetFilledAllProperties,The length of the statement  "            Assert.IsTrue(result.Bs.SomeDate > DateTime.MinValue.AddSeconds(1) && result.Bs.SomeDate < DateTime.MaxValue.AddSeconds(-1)); " is 125.
Long Statement,Tynamix.ObjectFiller.Test.BugfixTests,Bug89FillTypesInheritsFromList,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\BugfixTests\Bug89FillTypesInheritsFromList.cs,ADerivedListShallGetFilledAllProperties,The length of the statement  "            Assert.IsTrue(result.Bs.SomeDate > DateTime.MinValue.AddSeconds(1) && result.Bs.SomeDate < DateTime.MaxValue.AddSeconds(-1)); " is 125.
Magic Number,Tynamix.ObjectFiller.Test,AddressFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\AddressFillingTest.cs,SetupTheAdressWithStaticValues,The following statement contains a magic number: addressFiller.Setup()                  .OnType<int>().Use(10)                  .OnProperty(x => x.City).Use("Dresden")                  .OnProperty(x => x.Country).Use("Germany")                  .OnProperty(x => x.PostalCode).Use(() => "0011100");
Magic Number,Tynamix.ObjectFiller.Test,AddressFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\AddressFillingTest.cs,SetupTheAdressWithStaticValues,The following statement contains a magic number: Assert.AreEqual(10' address.HouseNumber);
Magic Number,Tynamix.ObjectFiller.Test,AddressFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\AddressFillingTest.cs,RandomListPluginShallReturnDifferentValues,The following statement contains a magic number: var addresses = addressFiller.Create(1000);
Magic Number,Tynamix.ObjectFiller.Test,AddressFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\AddressFillingTest.cs,RandomListPluginShallReturnDifferentValues,The following statement contains a magic number: addresses = addressFiller.Create(1000);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: filler.Setup().OnProperty(x => x.ArrayList).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: filler.Setup().OnProperty(x => x.ArrayList).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: filler.Setup().OnProperty(x => x.ArrayList).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: filler.Setup().OnProperty(x => x.ArrayList).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: Assert.IsTrue(arrayList.ArrayList.Count >= 3 && arrayList.ArrayList.Count <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: Assert.IsTrue(arrayList.ArrayList.Count >= 3 && arrayList.ArrayList.Count <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: Assert.IsTrue(arrayList.ArrayList.ToArray().Cast<string>().All(x => x.Length >= 20 && x.Length <= 25));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestCityNames,The following statement contains a magic number: Assert.IsTrue(arrayList.ArrayList.ToArray().Cast<string>().All(x => x.Length >= 20 && x.Length <= 25));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.MnemonicStrings).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10))                  .OnProperty(x => x.StringArray).Use(new Collectionizer<string' MnemonicString>(new MnemonicString(1' 20' 25)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.MnemonicStrings.Count() >= 3 && collection.MnemonicStrings.Count() <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.MnemonicStrings.Count() >= 3 && collection.MnemonicStrings.Count() <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.MnemonicStrings.All(x => x.Length >= 20 && x.Length <= 25));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.MnemonicStrings.All(x => x.Length >= 20 && x.Length <= 25));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.StringArray.Count() >= 3 && collection.MnemonicStrings.Count() <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.StringArray.Count() >= 3 && collection.MnemonicStrings.Count() <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.StringArray.All(x => x.Length >= 20 && x.Length <= 25));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestMnemonicStringPlugin,The following statement contains a magic number: Assert.IsTrue(collection.StringArray.All(x => x.Length >= 20 && x.Length <= 25));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.IntRange)                  .Use(new Collectionizer<int' IntRange>(new IntRange(10' 15)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.IntRange)                  .Use(new Collectionizer<int' IntRange>(new IntRange(10' 15)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.IntRange)                  .Use(new Collectionizer<int' IntRange>(new IntRange(10' 15)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.IntRange)                  .Use(new Collectionizer<int' IntRange>(new IntRange(10' 15)' 3' 10));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: Assert.IsTrue(collection.IntRange.Count >= 3 && collection.IntRange.Count() <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: Assert.IsTrue(collection.IntRange.Count >= 3 && collection.IntRange.Count() <= 10);
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: Assert.IsTrue(collection.IntRange.All(x => x >= 10 && x <= 15));
Magic Number,Tynamix.ObjectFiller.Test,CollectionizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\CollectionizerTest.cs,TestIntRangePlugin,The following statement contains a magic number: Assert.IsTrue(collection.IntRange.All(x => x >= 10 && x <= 15));
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenGettingDatesBetweenNowAnd31DaysAgo,The following statement contains a magic number: filler.Setup().OnType<DateTime>().Use(                  new DateTimeRange(DateTime.Now.AddDays(-31)));
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenGettingDatesBetweenNowAnd31DaysAgo,The following statement contains a magic number: var d = filler.Create(1000);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenGettingDatesBetweenNowAnd31DaysAgo,The following statement contains a magic number: Assert.IsTrue(d.All(x => x.Date < DateTime.Now && x.Date > DateTime.Now.AddDays(-31)));
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateIsBiggerThenEndDateTheDatesShouldBeSwitched,The following statement contains a magic number: filler.Setup().OnType<DateTime>().Use(                  new DateTimeRange(DateTime.Now' DateTime.Now.AddDays(-31)));
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateIsBiggerThenEndDateTheDatesShouldBeSwitched,The following statement contains a magic number: var d = filler.Create(1000);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateIsBiggerThenEndDateTheDatesShouldBeSwitched,The following statement contains a magic number: Assert.IsTrue(d.All(x => x.Date < DateTime.Now && x.Date > DateTime.Now.AddDays(-31)));
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateAndEndDateIsSetItShouldFindOnlyDatesInBetweenThisTwoDates,The following statement contains a magic number: var startDate = new DateTime(2000' 11' 10);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateAndEndDateIsSetItShouldFindOnlyDatesInBetweenThisTwoDates,The following statement contains a magic number: var startDate = new DateTime(2000' 11' 10);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateAndEndDateIsSetItShouldFindOnlyDatesInBetweenThisTwoDates,The following statement contains a magic number: var startDate = new DateTime(2000' 11' 10);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateAndEndDateIsSetItShouldFindOnlyDatesInBetweenThisTwoDates,The following statement contains a magic number: var endDate = new DateTime(2006' 1' 30);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateAndEndDateIsSetItShouldFindOnlyDatesInBetweenThisTwoDates,The following statement contains a magic number: var endDate = new DateTime(2006' 1' 30);
Magic Number,Tynamix.ObjectFiller.Test,DateTimeRangeTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DateTimeRangeTest.cs,WhenStartDateAndEndDateIsSetItShouldFindOnlyDatesInBetweenThisTwoDates,The following statement contains a magic number: var d = filler.Create(1000);
Magic Number,Tynamix.ObjectFiller.Test,DefaultDatatypeMappingsTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\DefaultDatatypeMappingsTest.cs,Ensure_that_each_primitive_datatype_is_mapped_by_default,The following statement contains a magic number: var myClasses = filler.Create(100).ToArray();
Magic Number,Tynamix.ObjectFiller.Test,EnumTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\EnumTest.cs,Must_support_enums_out_of_the_box,The following statement contains a magic number: n < 1000
Magic Number,Tynamix.ObjectFiller.Test,EnumTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\EnumTest.cs,Must_support_class_with_enums_as_ctor_out_of_the_box,The following statement contains a magic number: n < 1000
Magic Number,Tynamix.ObjectFiller.Test,HashStackTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\HashStackTests.cs,HashStack_ContainsTest,The following statement contains a magic number: s.Push(5);
Magic Number,Tynamix.ObjectFiller.Test,HashStackTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\HashStackTests.cs,HashStack_ContainsTest,The following statement contains a magic number: Assert.AreEqual(true' s.Contains(5));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[0]) > 0 && int.Parse(ipAddresses[0]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[1]) > 0 && int.Parse(ipAddresses[1]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGenerator,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 300' 300' 300));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 300' 300' 300));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 300' 300' 300));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 300' 300' 300));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[0]) > 0 && int.Parse(ipAddresses[0]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[1]) > 0 && int.Parse(ipAddresses[1]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithWrongNumbersAndFirstSegmentMaximumOf10,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 10' 10' 10));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 10' 10' 10));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 10' 10' 10));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 10' 10' 10));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[0]) > 0 && int.Parse(ipAddresses[0]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[1]) > 0 && int.Parse(ipAddresses[1]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 10));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: filler.Setup().OnProperty(x => x.IpAddress).Use(new IpAddress(10' 10));
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[0]) > 0 && int.Parse(ipAddresses[0]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[1]) > 0 && int.Parse(ipAddresses[1]) <= 10);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[2]) > 0 && int.Parse(ipAddresses[2]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,IpAddressPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\IpAddressPluginTest.cs,TestIpAddressGeneratorWithFirstTwoSegmentSetup,The following statement contains a magic number: Assert.IsTrue(int.Parse(ipAddresses[3]) > 0 && int.Parse(ipAddresses[3]) <= 255);
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,TestUseEnumerable,The following statement contains a magic number: eFiller.Setup()                  .ListItemCount(20)                  .OnProperty(x => x.EntityICollection'                              x => x.EntityIList' x => x.ObservableCollection'                              x => x.EntityIEnumerable).IgnoreIt()              .OnProperty(x => x.EntityArray).IgnoreIt()                  .SetupFor<Entity>()                  .OnProperty(x => x.Id).Use(Enumerable.Range(1' 22).Select(x => (int)Math.Pow(2' x)));
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,TestUseEnumerable,The following statement contains a magic number: eFiller.Setup()                  .ListItemCount(20)                  .OnProperty(x => x.EntityICollection'                              x => x.EntityIList' x => x.ObservableCollection'                              x => x.EntityIEnumerable).IgnoreIt()              .OnProperty(x => x.EntityArray).IgnoreIt()                  .SetupFor<Entity>()                  .OnProperty(x => x.Id).Use(Enumerable.Range(1' 22).Select(x => (int)Math.Pow(2' x)));
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,TestUseEnumerable,The following statement contains a magic number: eFiller.Setup()                  .ListItemCount(20)                  .OnProperty(x => x.EntityICollection'                              x => x.EntityIList' x => x.ObservableCollection'                              x => x.EntityIEnumerable).IgnoreIt()              .OnProperty(x => x.EntityArray).IgnoreIt()                  .SetupFor<Entity>()                  .OnProperty(x => x.Id).Use(Enumerable.Range(1' 22).Select(x => (int)Math.Pow(2' x)));
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,TestUseEnumerable,The following statement contains a magic number: int lastPowNum = (int)Math.Pow(2' i + 1);
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,GenerateTestDataForASortedList,The following statement contains a magic number: filler.Setup().OnType<int>().Use(Enumerable.Range(1' 1000));
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,GenerateTestDataForASortedList,The following statement contains a magic number: var result = filler.Create(10).ToList();
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,GenerateTestDataForASortedList,The following statement contains a magic number: Assert.AreEqual(10' result.Count);
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,GenerateTestDataForADictionary,The following statement contains a magic number: var result = filler.Create(10).ToList();
Magic Number,Tynamix.ObjectFiller.Test,ListFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ListFillingTest.cs,GenerateTestDataForADictionary,The following statement contains a magic number: Assert.AreEqual(10' result.Count);
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_Many_MinWords_And_Many_MinSentences,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.InDerFremde' 51' 100' 100));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_Many_MinWords_And_Many_MinSentences,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.InDerFremde' 51' 100' 100));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_Many_MinWords_And_Many_MinSentences,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.InDerFremde' 51' 100' 100));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_France_High_Values_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LeMasque' 20' 50' 100' 250' 500));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_France_High_Values_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LeMasque' 20' 50' 100' 250' 500));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_France_High_Values_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LeMasque' 20' 50' 100' 250' 500));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_France_High_Values_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LeMasque' 20' 50' 100' 250' 500));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_France_High_Values_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LeMasque' 20' 50' 100' 250' 500));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_LoremIpsum_Seed_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LoremIpsum' 3' 5' 1' 5' 3' 1234));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_LoremIpsum_Seed_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LoremIpsum' 3' 5' 1' 5' 3' 1234));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_LoremIpsum_Seed_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LoremIpsum' 3' 5' 1' 5' 3' 1234));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_LoremIpsum_Seed_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LoremIpsum' 3' 5' 1' 5' 3' 1234));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,Test_With_LoremIpsum_Seed_Settings,The following statement contains a magic number: book.Setup()                  .OnProperty(x => x.ISBN).Use(new Lipsum(LipsumFlavor.LoremIpsum' 3' 5' 1' 5' 3' 1234));
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,LoremIpsum_should_provide_different_data,The following statement contains a magic number: var alowedDelta = 2;
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,LoremIpsum_should_provide_different_data,The following statement contains a magic number: var resultElements = filler.Create(100);
Magic Number,Tynamix.ObjectFiller.Test,LoremIpsumPluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\LoremIpsumPluginTest.cs,LoremIpsum_should_provide_different_data,The following statement contains a magic number: Assert.AreEqual((double)100' groupedResult.Count()' alowedDelta);
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,TestFillPerson,The following statement contains a magic number: filler.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnType<string>().Use(new MnemonicString(10))                  .OnProperty(person => person.FirstName).Use<MnemonicString>()                  .OnProperty(person => person.LastName).Use(new RandomListItem<string>("Maik"' "Tom"' "Anton"))                  .OnProperty(person => person.Age).Use(() => Tynamix.ObjectFiller.Random.Next(12' 83))                  .SetupFor<Address>()                  .OnProperty(x => x.City' x => x.Country).IgnoreIt();
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,TestFillPerson,The following statement contains a magic number: filler.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnType<string>().Use(new MnemonicString(10))                  .OnProperty(person => person.FirstName).Use<MnemonicString>()                  .OnProperty(person => person.LastName).Use(new RandomListItem<string>("Maik"' "Tom"' "Anton"))                  .OnProperty(person => person.Age).Use(() => Tynamix.ObjectFiller.Random.Next(12' 83))                  .SetupFor<Address>()                  .OnProperty(x => x.City' x => x.Country).IgnoreIt();
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,TestFillPerson,The following statement contains a magic number: filler.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnType<string>().Use(new MnemonicString(10))                  .OnProperty(person => person.FirstName).Use<MnemonicString>()                  .OnProperty(person => person.LastName).Use(new RandomListItem<string>("Maik"' "Tom"' "Anton"))                  .OnProperty(person => person.Age).Use(() => Tynamix.ObjectFiller.Random.Next(12' 83))                  .SetupFor<Address>()                  .OnProperty(x => x.City' x => x.Country).IgnoreIt();
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,CreateMultipleInstances,The following statement contains a magic number: IEnumerable<LibraryFillingTest.Person> pList = filler.Create(10);
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,CreateMultipleInstances,The following statement contains a magic number: Assert.AreEqual(10' pList.Count());
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,SetRandomSeedShallGenerateSameData,The following statement contains a magic number: var address1 = filler.SetRandomSeed(1234).Create();
Magic Number,Tynamix.ObjectFiller.Test,ObjectFillerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\ObjectFillerTest.cs,SetRandomSeedShallGenerateSameData,The following statement contains a magic number: var address2 = filler2.SetRandomSeed(1234).Create();
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,Must_be_able_to_handle_private_setters,The following statement contains a magic number: Assert.AreEqual(123' obj.WithoutSetter);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_A,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_A,The following statement contains a magic number: Assert.AreEqual(26' chars.Count);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_A_fixed_len,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_A_random_len,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_a,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_a,The following statement contains a magic number: Assert.AreEqual(26' chars.Count);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_a_composite,The following statement contains a magic number: Assert.IsTrue(s.Length == 3);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_a_composite,The following statement contains a magic number: chars.Add(s[2]);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_a_composite,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_a_composite,The following statement contains a magic number: Assert.AreEqual(26' chars.Count);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_aaa,The following statement contains a magic number: Assert.IsTrue(s.Length == 5);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_aaa,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_N,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_N,The following statement contains a magic number: Assert.AreEqual(10' chars.Count);
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_X,The following statement contains a magic number: n < 10000
Magic Number,Tynamix.ObjectFiller.Test,PatternGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PatternGeneratorTest.cs,StringPatternGenerator_X,The following statement contains a magic number: Assert.AreEqual(16' chars.Count);
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,TestFillPersonWithEnumerable,The following statement contains a magic number: pFiller.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnProperty(x => x.Age).Use(Enumerable.Range(18' 60));
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,TestFillPersonWithEnumerable,The following statement contains a magic number: pFiller.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnProperty(x => x.Age).Use(Enumerable.Range(18' 60));
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,GeneratePersonWithGivenSetOfNamesAndAges,The following statement contains a magic number: List<int> ages = new List<int> { 10' 15' 18' 22' 26 };
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,GeneratePersonWithGivenSetOfNamesAndAges,The following statement contains a magic number: List<int> ages = new List<int> { 10' 15' 18' 22' 26 };
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,GeneratePersonWithGivenSetOfNamesAndAges,The following statement contains a magic number: List<int> ages = new List<int> { 10' 15' 18' 22' 26 };
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,GeneratePersonWithGivenSetOfNamesAndAges,The following statement contains a magic number: List<int> ages = new List<int> { 10' 15' 18' 22' 26 };
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,GeneratePersonWithGivenSetOfNamesAndAges,The following statement contains a magic number: List<int> ages = new List<int> { 10' 15' 18' 22' 26 };
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,BigComplicated,The following statement contains a magic number: pFiller.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnProperty(p => p.LastName' p => p.FirstName).DoIt(At.TheEnd).Use(new RealNames(NameStyle.FirstName))                  .OnProperty(p => p.Age).Use(() =>Random.Next(10' 32))                  .SetupFor<Address>()                  .OnProperty(a => a.City).Use(new MnemonicString(1))                  .OnProperty(a => a.Street).IgnoreIt();
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,BigComplicated,The following statement contains a magic number: pFiller.Setup()                  .OnType<IAddress>().CreateInstanceOf<Address>()                  .OnProperty(p => p.LastName' p => p.FirstName).DoIt(At.TheEnd).Use(new RealNames(NameStyle.FirstName))                  .OnProperty(p => p.Age).Use(() =>Random.Next(10' 32))                  .SetupFor<Address>()                  .OnProperty(a => a.City).Use(new MnemonicString(1))                  .OnProperty(a => a.Street).IgnoreIt();
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,FluentTest,The following statement contains a magic number: pFiller.Setup()                  .OnProperty(x => x.Age).Use(() => 18)                  .OnType<IAddress>().CreateInstanceOf<Address>();
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,FluentTest,The following statement contains a magic number: Assert.AreEqual(18' p.Age);
Magic Number,Tynamix.ObjectFiller.Test,PersonFillingTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\PersonFillingTest.cs,TestPropertyOrderDoNameLast,The following statement contains a magic number: Assert.AreEqual(3' p.NameCount);
Magic Number,Tynamix.ObjectFiller.Test,RandomAccessTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomAccessTest.cs,GetRandomIntOnDifferentThreadsGetsDifferentResults,The following statement contains a magic number: var numberToGenerate = 1000;
Magic Number,Tynamix.ObjectFiller.Test,RandomAccessTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomAccessTest.cs,GetRandomIntOnDifferentThreadsGetsDifferentResults,The following statement contains a magic number: var intRange = new IntRange(1' 10);
Magic Number,Tynamix.ObjectFiller.Test,RandomizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomizerTest.cs,GetRandomInt,The following statement contains a magic number: var number = Randomizer<int>.Create(new IntRange(1' 2));
Magic Number,Tynamix.ObjectFiller.Test,RandomizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomizerTest.cs,GetRandomInt,The following statement contains a magic number: Assert.IsTrue(number == 1 || number == 2);
Magic Number,Tynamix.ObjectFiller.Test,RandomizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomizerTest.cs,RandomizerCreatesAListOfRandomItemsIfNeeded,The following statement contains a magic number: int amount = 5;
Magic Number,Tynamix.ObjectFiller.Test,RandomizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomizerTest.cs,RandomizerCreatesAListOfRandomItemsWithAPlugin,The following statement contains a magic number: int amount = 5;
Magic Number,Tynamix.ObjectFiller.Test,RandomizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomizerTest.cs,RandomizerCreatesAListOfItemBasedOnAFactory,The following statement contains a magic number: int amount = 5;
Magic Number,Tynamix.ObjectFiller.Test,RandomizerTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RandomizerTest.cs,RandomizerCreatesAListOfItemBasedOnASetup,The following statement contains a magic number: int amount = 5;
Magic Number,Tynamix.ObjectFiller.Test,RangePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RangePluginTest.cs,TestIntRangeWithMaxValue,The following statement contains a magic number: int max = 100;
Magic Number,Tynamix.ObjectFiller.Test,RangePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RangePluginTest.cs,TestIntRangeWithMaxValue,The following statement contains a magic number: Assert.IsTrue(sl.ChildList.All(x => x < 100));
Magic Number,Tynamix.ObjectFiller.Test,RangePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RangePluginTest.cs,TestIntRangeWithMinMaxValue,The following statement contains a magic number: int max = 100;
Magic Number,Tynamix.ObjectFiller.Test,RangePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RangePluginTest.cs,TestIntRangeWithMinMaxValue,The following statement contains a magic number: int min = 50;
Magic Number,Tynamix.ObjectFiller.Test,RangePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RangePluginTest.cs,TestFloateRangeWithMinMaxValue,The following statement contains a magic number: int max = 100;
Magic Number,Tynamix.ObjectFiller.Test,RangePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RangePluginTest.cs,TestFloateRangeWithMinMaxValue,The following statement contains a magic number: int min = 50;
Magic Number,Tynamix.ObjectFiller.Test,RealNamePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RealNamePluginTest.cs,TestRealNameFirstNameLastName,The following statement contains a magic number: Assert.AreEqual(2' p.Name.Split(' ').Length);
Magic Number,Tynamix.ObjectFiller.Test,RealNamePluginTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\RealNamePluginTest.cs,TestRealNameLastNameFirstName,The following statement contains a magic number: Assert.AreEqual(2' p.Name.Split(' ').Length);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,GetFillerSetup,The following statement contains a magic number: return filler.Setup()                   .OnType<IAddress>().CreateInstanceOf<Address>()                   .OnProperty(x => x.Age).Use(new IntRange(18' 35))                   .OnProperty(x => x.FirstName).Use(new RealNames(NameStyle.FirstName))                   .OnProperty(x => x.LastName).Use(new RealNames(NameStyle.LastName))                   .SetupFor<Address>()                   .OnProperty(x => x.HouseNumber).Use(new IntRange(1' 100))                   .Result;
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,GetFillerSetup,The following statement contains a magic number: return filler.Setup()                   .OnType<IAddress>().CreateInstanceOf<Address>()                   .OnProperty(x => x.Age).Use(new IntRange(18' 35))                   .OnProperty(x => x.FirstName).Use(new RealNames(NameStyle.FirstName))                   .OnProperty(x => x.LastName).Use(new RealNames(NameStyle.LastName))                   .SetupFor<Address>()                   .OnProperty(x => x.HouseNumber).Use(new IntRange(1' 100))                   .Result;
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,GetFillerSetup,The following statement contains a magic number: return filler.Setup()                   .OnType<IAddress>().CreateInstanceOf<Address>()                   .OnProperty(x => x.Age).Use(new IntRange(18' 35))                   .OnProperty(x => x.FirstName).Use(new RealNames(NameStyle.FirstName))                   .OnProperty(x => x.LastName).Use(new RealNames(NameStyle.LastName))                   .SetupFor<Address>()                   .OnProperty(x => x.HouseNumber).Use(new IntRange(1' 100))                   .Result;
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerDefaultSetup,The following statement contains a magic number: Assert.IsTrue(p.Age < 35 && p.Age >= 18);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerDefaultSetup,The following statement contains a magic number: Assert.IsTrue(p.Age < 35 && p.Age >= 18);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerDefaultSetup,The following statement contains a magic number: Assert.IsTrue(p.Address.HouseNumber < 100 && p.Age >= 1);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithExtensions,The following statement contains a magic number: Assert.IsTrue(p.Age < 35 && p.Age >= 18);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithExtensions,The following statement contains a magic number: Assert.IsTrue(p.Age < 35 && p.Age >= 18);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithExtensions,The following statement contains a magic number: Assert.IsTrue(p.Address.HouseNumber < 100 && p.Age >= 1);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithOverrides,The following statement contains a magic number: filler.Setup(GetFillerSetup())                  .OnProperty(x => x.Age).Use(() => 1000)                  .SetupFor<Address>()                  .OnProperty(x => x.HouseNumber).Use(() => 9999);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithOverrides,The following statement contains a magic number: filler.Setup(GetFillerSetup())                  .OnProperty(x => x.Age).Use(() => 1000)                  .SetupFor<Address>()                  .OnProperty(x => x.HouseNumber).Use(() => 9999);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithOverrides,The following statement contains a magic number: Assert.AreEqual(p.Age' 1000);
Magic Number,Tynamix.ObjectFiller.Test,SaveFillerSetupTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SaveFillerSetupTest.cs,UseSavedFillerSetupWithOverrides,The following statement contains a magic number: Assert.AreEqual(p.Address.HouseNumber' 9999);
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSByte { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSByte { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSByte { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSByte { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSByte { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSByte__Should_work,The following statement contains a magic number: Assert.AreEqual((SByte)(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt16 { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt16 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt16 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt16 { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt16 { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((Int16)(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt32 { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt32 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt32 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt32 { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt32 { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((Int32)(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt64 { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt64 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt64 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt64 { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorInt64 { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((Int64)(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt16 { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt16 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt16 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt16__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt16)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorByte { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorByte { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorByte { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorByte__Should_work,The following statement contains a magic number: Assert.AreEqual((Byte)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt32 { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt32 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt32 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt32__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt32)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt64 { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt64 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorUInt64 { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorUInt64__Should_work,The following statement contains a magic number: Assert.AreEqual((UInt64)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorChar__Should_work,The following statement contains a magic number: Assert.AreEqual((Char)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorChar__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorChar { From = 'A'' Step = (Char)3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSingle { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSingle { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSingle { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSingle { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorSingle { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorSingle__Should_work,The following statement contains a magic number: Assert.AreEqual((Single)(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)2' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDouble { From = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)4' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)5' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDouble { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDouble { From = 3' Step = 3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)6' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)9' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDouble { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDouble { From = 3' Step = -3 };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)3' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDouble__Should_work,The following statement contains a magic number: Assert.AreEqual((Double)(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: Assert.AreEqual(new DateTime().AddDays(2)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: Assert.AreEqual(date.AddDays(2)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDateTime { From = date' Step = TimeSpan.FromDays(3) };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: Assert.AreEqual(date.AddDays(3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: Assert.AreEqual(date.AddDays(6)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: generator = new SequenceGeneratorDateTime { From = date' Step = TimeSpan.FromDays(-3) };
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: Assert.AreEqual(date.AddDays(-3)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SequenceGeneratorTest,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SequenceGeneratorTest.cs,SequenceGeneratorDateTime__Should_work,The following statement contains a magic number: Assert.AreEqual(date.AddDays(-6)' generator.GetValue());
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,ExplicitSetupShallJustFillPropertiesWhichAreSetUpEvenInSubtypes,The following statement contains a magic number: filler.Setup(true)                  .SetupFor<Child>().OnProperty(x => x.IntValue).Use(new IntRange(1' 20));
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,ExplicitSetupShallJustFillPropertiesWhichAreSetUpEvenInSubtypes,The following statement contains a magic number: Assert.IsTrue(parent.Child.IntValue > 1 && parent.Child.IntValue < 20);
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,ExplicitSetupShallJustFillPropertiesWhichAreSetUpAndNoInstanceShallCreateForSubTypesIfNotSetup,The following statement contains a magic number: filler.Setup(true)                 .OnProperty(x => x.SomeId).Use(new IntRange(1' 20));
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,SetupsCanBeCreatedWithFactoryMethod,The following statement contains a magic number: var childSetup = FillerSetup.Create<Child>().OnProperty(x => x.IntValue).Use(42).Result;
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,SetupsCanBeCreatedWithFactoryMethod,The following statement contains a magic number: Assert.AreEqual(42' child.IntValue);
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,SetupsCanBeCreatedWithFactoryMethodBasedOnExistingSetupManager,The following statement contains a magic number: var childSetup = FillerSetup.Create<Child>().OnProperty(x => x.IntValue).Use(42).Result;
Magic Number,Tynamix.ObjectFiller.Test,SetupTests,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SetupTests.cs,SetupsCanBeCreatedWithFactoryMethodBasedOnExistingSetupManager,The following statement contains a magic number: Assert.AreEqual(42' child.IntValue);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.Strings10).Use(new Collectionizer<string' CityName>(1'10))                  .OnProperty(x => x.Strings2050).Use(new Collectionizer<string' StreetName>(20' 50))                  .OnProperty(x => x.Strings50100).Use(new Collectionizer<string' RealNames>(50' 100))                  .OnProperty(x => x.Item).Use(1);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.Strings10).Use(new Collectionizer<string' CityName>(1'10))                  .OnProperty(x => x.Strings2050).Use(new Collectionizer<string' StreetName>(20' 50))                  .OnProperty(x => x.Strings50100).Use(new Collectionizer<string' RealNames>(50' 100))                  .OnProperty(x => x.Item).Use(1);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.Strings10).Use(new Collectionizer<string' CityName>(1'10))                  .OnProperty(x => x.Strings2050).Use(new Collectionizer<string' StreetName>(20' 50))                  .OnProperty(x => x.Strings50100).Use(new Collectionizer<string' RealNames>(50' 100))                  .OnProperty(x => x.Item).Use(1);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.Strings10).Use(new Collectionizer<string' CityName>(1'10))                  .OnProperty(x => x.Strings2050).Use(new Collectionizer<string' StreetName>(20' 50))                  .OnProperty(x => x.Strings50100).Use(new Collectionizer<string' RealNames>(50' 100))                  .OnProperty(x => x.Item).Use(1);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: filler.Setup()                  .OnProperty(x => x.Strings10).Use(new Collectionizer<string' CityName>(1'10))                  .OnProperty(x => x.Strings2050).Use(new Collectionizer<string' StreetName>(20' 50))                  .OnProperty(x => x.Strings50100).Use(new Collectionizer<string' RealNames>(50' 100))                  .OnProperty(x => x.Item).Use(1);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: Assert.IsTrue(result.Strings10.Count > 0 && result.Strings10.Count <= 10);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: Assert.IsTrue(result.Strings2050.Count >= 20 && result.Strings2050.Count <= 50);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: Assert.IsTrue(result.Strings2050.Count >= 20 && result.Strings2050.Count <= 50);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: Assert.IsTrue(result.Strings50100.Length >= 50 && result.Strings50100.Length <= 100);
Magic Number,Tynamix.ObjectFiller.Test,TestSpecifyListCount,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\SpecifyListCount.cs,Generate10Strings,The following statement contains a magic number: Assert.IsTrue(result.Strings50100.Length >= 50 && result.Strings50100.Length <= 100);
Magic Number,Tynamix.ObjectFiller.Test.BugfixTests,Bug87ErrorWhenNameInParentIsSameAsParent,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\BugfixTests\Bug87ErrorWhenNameInParentIsSameAsParent.cs,ParentShallGetFilledWithourError,The following statement contains a magic number: filler.Setup()                    .OnProperty(x => x.MakeTheError).Use(12345)                    .SetupFor<Child>()                    .OnProperty(x => x.MakeTheError).Use("TEST");
Magic Number,Tynamix.ObjectFiller.Test.BugfixTests,Bug87ErrorWhenNameInParentIsSameAsParent,D:\research\architectureSmells\repos1\Tynamix_ObjectFiller.NET\Tynamix.ObjectFiller.Test\BugfixTests\Bug87ErrorWhenNameInParentIsSameAsParent.cs,ParentShallGetFilledWithourError,The following statement contains a magic number: Assert.AreEqual(12345' filledObject.MakeTheError);
