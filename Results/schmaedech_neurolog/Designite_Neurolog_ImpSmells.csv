Implementation smell,Namespace,Class,File,Method,Description
Long Method,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,TestClass,The method has 521 lines of code.
Complex Method,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeD2,Cyclomatic complexity of the method is 8
Complex Method,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,Cyclomatic complexity of the method is 8
Complex Method,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,PhyFFT,Cyclomatic complexity of the method is 21
Complex Method,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,Input,Cyclomatic complexity of the method is 8
Complex Method,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,Cyclomatic complexity of the method is 8
Complex Method,Neurolog,Windows,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Windows.cs,setWindowType,Cyclomatic complexity of the method is 9
Complex Method,Neurolog,Windows,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Windows.cs,apply,Cyclomatic complexity of the method is 27
Complex Method,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,Cyclomatic complexity of the method is 11
Complex Method,Neurolog.Sessions,Worker,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Sessions\Worker.cs,SendPostAndGetResponse,Cyclomatic complexity of the method is 9
Long Parameter List,BioSCADA,Sample,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Sample.cs,Sample,The method has 9 parameters.
Long Parameter List,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,AddSample,The method has 8 parameters.
Long Parameter List,Neurolog.Blueteeth,Acquisition,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Acquisition.cs,Acquisition,The method has 5 parameters.
Long Parameter List,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeD2Cmj,The method has 5 parameters.
Long Parameter List,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeCmj,The method has 5 parameters.
Long Parameter List,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,PhyFFT,The method has 12 parameters.
Long Parameter List,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,solveTridiag,The method has 5 parameters.
Long Statement,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The length of the statement  "		AlarmMessageBus.log ((System.Windows.Media.Brush)new System.Windows.Media.BrushConverter ().ConvertFrom ("#94bb65")' "Raw: " + Protocol.Raw + " Meditação:" + Protocol.Meditation + " Atenção: " + Protocol.Attention); " is 215.
Long Statement,BioSCADA,Sample,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Sample.cs,ToString,The length of the statement  "	return "<?xml version='1.0' encoding='utf-8'?> <Samples><Sample><Login>" + Login + "</Login><Timestamp>" + Timestamp + "</Timestamp> <Batery>" + Battery + "</Batery>  <Atention>" + Attention + "</Atention> <Meditation>" + Meditation + "</Meditation> <Alpha1>" + Alpha1 + "</Alpha1><Beta1>" + Beta1 + "</Beta1> <Coherence>" + Coherence + "</Coherence> <TAG>" + TAG + "</TAG></Sample></Samples>"; " is 394.
Long Statement,BioSCADA,DevicePanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\DevicePanel.xaml.cs,Connect,The length of the statement  "		AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "dispositivo não pode conectar' verifique o dispositivo!"); " is 134.
Long Statement,BioSCADA,DevicePanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\DevicePanel.xaml.cs,get_ports,The length of the statement  "		AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não há portas disponíveis' verifique o dispositivo!"); " is 130.
Long Statement,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The length of the statement  "		PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true); " is 166.
Long Statement,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,AddRAN,The length of the statement  "	Protocol.Attention = 800 + a * (float)Math.Sin (((float)Protocol.Meditationlist.Count / 1) * ((2f * (float)Math.PI) * fs)); " is 123.
Long Statement,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,AddRAN,The length of the statement  "	Protocol.AddSample (dDate.ToString ("yyyy-MM-dd HH:mm:ss.fff")' Protocol.Battery.ToString ()' Protocol.Meditation.ToString ()' Protocol.Attention.ToString ()' Protocol.Alpha1.ToString ()' Protocol.Beta1.ToString ()' Protocol.Coherence.ToString ()' TAGs); " is 254.
Long Statement,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,AddSample,The length of the statement  "	Sample sampling = new Sample (User.ID.ToString ()' p2' p3' m.ToString ()' a.ToString ()' al1.ToString ()' bt1.ToString ()' co.ToString ()' p7); " is 143.
Long Statement,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,CreateAcquisitionXML,The length of the statement  "	acquisition = new Acquisition (Int32.Parse (User.ID)' newAquisitionDate.ToString ("yyyy-MM-dd HH:mm:ss.fff")' Protocol.filename' 0' Protocol.Type); " is 147.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,GetStats,The length of the statement  "			//PhyFFT phyfft = new PhyFFT(rrArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true); " is 159.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,GetSamplesFromServer,The length of the statement  "	string url = Protocol.config.AppSettings.Settings ["BioSCADA.Server"].Value + "bsweb/services/GetNeurologSamplesXML.php"; " is 121.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The length of the statement  "	string datar = "" + "?id=" + User.ID + "&timestamp=" + Protocol.acquisition.Timestamp + "&file=" + Protocol.acquisition.File + "&size=" + Protocol.acquisition.Size + "&type=" + Protocol.Type; " is 191.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The length of the statement  "			string data = "" + "?idacquisition=" + idacquisition + "&id=" + User.ID + "&type=" + Protocol.acquisition.Type + "&samples=" + s.ToString (); " is 141.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The length of the statement  "			AlarmMessageBus.log ((Brush)this.TryFindResource ("BlueColor")' "enviando " + samplePointer + " de " + Protocol.samples.Count + " ..."); " is 136.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The length of the statement  "			string data = "" + "?idacquisition=" + idacquisition + "&id=" + User.ID + "&type=" + Protocol.acquisition.Type + "&samples=" + s.ToString (); " is 141.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The length of the statement  "			AlarmMessageBus.log ((Brush)this.TryFindResource ("BlueColor")' "enviando " + samplePointer + " de " + sampleCount + " ..."); " is 125.
Long Statement,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Down,The length of the statement  "		AlarmMessageBus.log ((Brush)this.TryFindResource ("RedColor")' "não foi possível enviar as amostras' verifique a conexão com a internet"); " is 138.
Long Statement,BioSCADA,UserLogin,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\UserLogin.xaml.cs,GetConnected,The length of the statement  "	/*http://server.bioscada.com.br/BioSCADARequest.php?action=login&login=admin&pass=lec$admin*/string url = Protocol.config.AppSettings.Settings ["BioSCADA.Server"].Value + "crypta.php?action=getperson&" + "login=" + login + "&pass=" + pass; " is 239.
Long Statement,Neurolog.Blueteeth,Acquisition,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Acquisition.cs,ToString,The length of the statement  "	return "<?xml version='1.0' encoding='utf-8'?> <Acquisitions><Acquisition> <Id>" + Id + "</Id> <Timestamp>" + Timestamp + "</Timestamp>  <File>" + File + "</File> <Size>" + Size + "</Size> <Type>" + Type + "</Type></Acquisition></Acquisitions>"; " is 245.
Long Statement,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,_thinkGearWrapper_ThinkGearChanged,The length of the statement  "		file.WriteLine (DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss.fff") + ";" + e.ThinkGearState.ToString () + ";" + Protocol.TAGs); " is 126.
Long Statement,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,_thinkGearWrapper_ThinkGearChanged,The length of the statement  "		Protocol.AddSample (logging.Timestamp' Protocol.Battery.ToString ()' Protocol.Meditation.ToString ()' Protocol.Attention.ToString ()' Protocol.Alpha1.ToString ()' Protocol.Beta1.ToString ()' Protocol.Coherence.ToString ()' Protocol.TAGs.ToString ()); " is 250.
Long Statement,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The length of the statement  "			AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port); " is 128.
Long Statement,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The length of the statement  "				AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port); " is 128.
Long Statement,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The length of the statement  "				AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#94bb65")' "NeuroSky conectado! Clique em Play para iniciar a sessão. "); " is 137.
Long Statement,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The length of the statement  "		AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port); " is 128.
Long Statement,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The length of the statement  "		//result[2] = ( n*sumXY-sumX*sumY )/( (float)Math.sqrt( (n*sumX2-(float)Math.pow(sumX' 2))*(n*sumY2-Math.pow(sumY'2)) ) ); " is 122.
Long Statement,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,TestClass,The length of the statement  "	/*(K-1)D+L = N*/new PhyFFT (sintet' 1/*freq*/' 256/*samples*/' 0/*K*/' 256/*L*/' 128/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true); " is 149.
Long Statement,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The length of the statement  "		//result[2] = ( n*sumXY-sumX*sumY )/( (float)Math.sqrt( (n*sumX2-(float)Math.pow(sumX' 2))*(n*sumY2-Math.pow(sumY'2)) ) ); " is 122.
Long Statement,Neurolog,Windows,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Windows.cs,win_blackman_harris,The length of the statement  "	w = (0.35875F - 0.48829F * (float)Math.Cos (a * j) + 0.14128F * (float)Math.Cos (2 * a * j) - 0.01168F * (float)Math.Cos (3F * a * j)); " is 135.
Long Statement,Neurolog.Sessions,Worker,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Sessions\Worker.cs,SendPostAndGetResponse,The length of the statement  "		AlarmMessageBus.log ((System.Windows.Media.Brush)new System.Windows.Media.BrushConverter ().ConvertFrom ("#7b0100")' "falhou envio para núvem! "); " is 146.
Complex Conditional,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeD2,The conditional expression  "slopeX != null && slopeX.Count > 0 && slopeY != null && slopeY.Count > 0"  is complex.
Empty Catch Block,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,GetStats,The method has an empty catch block.
Empty Catch Block,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,GetStats,The method has an empty catch block.
Empty Catch Block,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The method has an empty catch block.
Empty Catch Block,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The method has an empty catch block.
Empty Catch Block,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,Send,The method has an empty catch block.
Empty Catch Block,BioSCADA,UserLogin,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\UserLogin.xaml.cs,GetConnected,The method has an empty catch block.
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 90);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Title.FontSpec.Size = 18;  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.XAxis.Title.FontSpec.Size = 23;  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Title.FontSpec.Size = 23;  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Title.FontSpec.Size = 23;  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: myCurve = graphPanel.AddCurve ("Atenção"' atentionList' Color.FromArgb (40' 79' 115)' SymbolType.Circle);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: myCurve = graphPanel.AddCurve ("Atenção"' atentionList' Color.FromArgb (40' 79' 115)' SymbolType.Circle);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: myCurve = graphPanel.AddCurve ("Atenção"' atentionList' Color.FromArgb (40' 79' 115)' SymbolType.Circle);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Scale.FontSpec.FontColor = Color.FromArgb (148' 187' 101);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Scale.FontSpec.FontColor = Color.FromArgb (148' 187' 101);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Scale.FontSpec.FontColor = Color.FromArgb (148' 187' 101);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Title.FontSpec.FontColor = Color.FromArgb (148' 187' 101);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Title.FontSpec.FontColor = Color.FromArgb (148' 187' 101);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.YAxis.Title.FontSpec.FontColor = Color.FromArgb (148' 187' 101);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Scale.FontSpec.FontColor = Color.FromArgb (40' 79' 115);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Scale.FontSpec.FontColor = Color.FromArgb (40' 79' 115);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Scale.FontSpec.FontColor = Color.FromArgb (40' 79' 115);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Title.FontSpec.FontColor = Color.FromArgb (40' 79' 115);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Title.FontSpec.FontColor = Color.FromArgb (40' 79' 115);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Y2Axis.Title.FontSpec.FontColor = Color.FromArgb (40' 79' 115);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Chart.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 45.0f);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Chart.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 45.0f);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Chart.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 45.0f);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Chart.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 45.0f);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Chart.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 45.0f);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,InitializeChart,The following statement contains a magic number: graphPanel.Chart.Fill = new Fill (Color.FromArgb (255' 255' 255)' Color.FromArgb (250' 250' 250)' 45.0f);  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (ChartPlay) {  	double x = (double)waveList.Count;  	double y = Protocol.Attention;  	double y2 = Protocol.Meditation;  	if (y + y2 > 0) {  		waveList.Add (x' y);  		atentionList.Add (x' y2);  		if (x < 500) {  			graphPanel.XAxis.Scale.Min = 0;  			graphPanel.XAxis.Scale.Max = x + 100;  			zg1.RestoreScale (graphPanel);  		}  		else {  			graphPanel.XAxis.Scale.Min = x - 500;  			graphPanel.XAxis.Scale.Max = x + 100;  		}  	}  	zg1.AxisChange ();  	zg1.Invalidate ();  	zg1.Refresh ();  	AlarmMessageBus.log ((System.Windows.Media.Brush)new System.Windows.Media.BrushConverter ().ConvertFrom ("#94bb65")' "Raw: " + Protocol.Raw + " Meditação:" + Protocol.Meditation + " Atenção: " + Protocol.Attention);  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (ChartPlay) {  	double x = (double)waveList.Count;  	double y = Protocol.Attention;  	double y2 = Protocol.Meditation;  	if (y + y2 > 0) {  		waveList.Add (x' y);  		atentionList.Add (x' y2);  		if (x < 500) {  			graphPanel.XAxis.Scale.Min = 0;  			graphPanel.XAxis.Scale.Max = x + 100;  			zg1.RestoreScale (graphPanel);  		}  		else {  			graphPanel.XAxis.Scale.Min = x - 500;  			graphPanel.XAxis.Scale.Max = x + 100;  		}  	}  	zg1.AxisChange ();  	zg1.Invalidate ();  	zg1.Refresh ();  	AlarmMessageBus.log ((System.Windows.Media.Brush)new System.Windows.Media.BrushConverter ().ConvertFrom ("#94bb65")' "Raw: " + Protocol.Raw + " Meditação:" + Protocol.Meditation + " Atenção: " + Protocol.Attention);  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (ChartPlay) {  	double x = (double)waveList.Count;  	double y = Protocol.Attention;  	double y2 = Protocol.Meditation;  	if (y + y2 > 0) {  		waveList.Add (x' y);  		atentionList.Add (x' y2);  		if (x < 500) {  			graphPanel.XAxis.Scale.Min = 0;  			graphPanel.XAxis.Scale.Max = x + 100;  			zg1.RestoreScale (graphPanel);  		}  		else {  			graphPanel.XAxis.Scale.Min = x - 500;  			graphPanel.XAxis.Scale.Max = x + 100;  		}  	}  	zg1.AxisChange ();  	zg1.Invalidate ();  	zg1.Refresh ();  	AlarmMessageBus.log ((System.Windows.Media.Brush)new System.Windows.Media.BrushConverter ().ConvertFrom ("#94bb65")' "Raw: " + Protocol.Raw + " Meditação:" + Protocol.Meditation + " Atenção: " + Protocol.Attention);  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (ChartPlay) {  	double x = (double)waveList.Count;  	double y = Protocol.Attention;  	double y2 = Protocol.Meditation;  	if (y + y2 > 0) {  		waveList.Add (x' y);  		atentionList.Add (x' y2);  		if (x < 500) {  			graphPanel.XAxis.Scale.Min = 0;  			graphPanel.XAxis.Scale.Max = x + 100;  			zg1.RestoreScale (graphPanel);  		}  		else {  			graphPanel.XAxis.Scale.Min = x - 500;  			graphPanel.XAxis.Scale.Max = x + 100;  		}  	}  	zg1.AxisChange ();  	zg1.Invalidate ();  	zg1.Refresh ();  	AlarmMessageBus.log ((System.Windows.Media.Brush)new System.Windows.Media.BrushConverter ().ConvertFrom ("#94bb65")' "Raw: " + Protocol.Raw + " Meditação:" + Protocol.Meditation + " Atenção: " + Protocol.Attention);  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (y + y2 > 0) {  	waveList.Add (x' y);  	atentionList.Add (x' y2);  	if (x < 500) {  		graphPanel.XAxis.Scale.Min = 0;  		graphPanel.XAxis.Scale.Max = x + 100;  		zg1.RestoreScale (graphPanel);  	}  	else {  		graphPanel.XAxis.Scale.Min = x - 500;  		graphPanel.XAxis.Scale.Max = x + 100;  	}  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (y + y2 > 0) {  	waveList.Add (x' y);  	atentionList.Add (x' y2);  	if (x < 500) {  		graphPanel.XAxis.Scale.Min = 0;  		graphPanel.XAxis.Scale.Max = x + 100;  		zg1.RestoreScale (graphPanel);  	}  	else {  		graphPanel.XAxis.Scale.Min = x - 500;  		graphPanel.XAxis.Scale.Max = x + 100;  	}  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (y + y2 > 0) {  	waveList.Add (x' y);  	atentionList.Add (x' y2);  	if (x < 500) {  		graphPanel.XAxis.Scale.Min = 0;  		graphPanel.XAxis.Scale.Max = x + 100;  		zg1.RestoreScale (graphPanel);  	}  	else {  		graphPanel.XAxis.Scale.Min = x - 500;  		graphPanel.XAxis.Scale.Max = x + 100;  	}  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (y + y2 > 0) {  	waveList.Add (x' y);  	atentionList.Add (x' y2);  	if (x < 500) {  		graphPanel.XAxis.Scale.Min = 0;  		graphPanel.XAxis.Scale.Max = x + 100;  		zg1.RestoreScale (graphPanel);  	}  	else {  		graphPanel.XAxis.Scale.Min = x - 500;  		graphPanel.XAxis.Scale.Max = x + 100;  	}  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (x < 500) {  	graphPanel.XAxis.Scale.Min = 0;  	graphPanel.XAxis.Scale.Max = x + 100;  	zg1.RestoreScale (graphPanel);  }  else {  	graphPanel.XAxis.Scale.Min = x - 500;  	graphPanel.XAxis.Scale.Max = x + 100;  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (x < 500) {  	graphPanel.XAxis.Scale.Min = 0;  	graphPanel.XAxis.Scale.Max = x + 100;  	zg1.RestoreScale (graphPanel);  }  else {  	graphPanel.XAxis.Scale.Min = x - 500;  	graphPanel.XAxis.Scale.Max = x + 100;  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (x < 500) {  	graphPanel.XAxis.Scale.Min = 0;  	graphPanel.XAxis.Scale.Max = x + 100;  	zg1.RestoreScale (graphPanel);  }  else {  	graphPanel.XAxis.Scale.Min = x - 500;  	graphPanel.XAxis.Scale.Max = x + 100;  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: if (x < 500) {  	graphPanel.XAxis.Scale.Min = 0;  	graphPanel.XAxis.Scale.Max = x + 100;  	zg1.RestoreScale (graphPanel);  }  else {  	graphPanel.XAxis.Scale.Min = x - 500;  	graphPanel.XAxis.Scale.Max = x + 100;  }  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: graphPanel.XAxis.Scale.Max = x + 100;  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: graphPanel.XAxis.Scale.Min = x - 500;  
Magic Number,BioSCADA,Chart,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\Chart.cs,updatePanel,The following statement contains a magic number: graphPanel.XAxis.Scale.Max = x + 100;  
Magic Number,BioSCADA,ChartPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\View\ChartPanel.xaml.cs,ChartPanel,The following statement contains a magic number: dispatcherTimer.Interval = new TimeSpan (0' 0' 0' 0' 500);  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: if (MeditationArray.Length > 4) {  	MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  	PhyFFT phyfft = new PhyFFT (MeditationArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	Coherence = phyfft.getCoherence ();  	double x = (double)Protocol.Meditationlist.Count;  	MeditationPairList.Add (x' Meditation);  	coherencePairList.Add (x' Coherence);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,RunPhyfft,The following statement contains a magic number: MeditationArray = Interpolation.Interpolation4 (MeditationArray' 4);  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,AddRAN,The following statement contains a magic number: Protocol.Attention = 800 + a * (float)Math.Sin (((float)Protocol.Meditationlist.Count / 1) * ((2f * (float)Math.PI) * fs));  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: try {  	sw = new StreamWriter (filePath' false);  	for (i = 0; i < dt.Columns.Count - 1; i++) {  		sw.Write (dt.Columns [i].ColumnName + (char)9);  	}  	sw.Write (dt.Columns [i].ColumnName);  	sw.WriteLine ();  	foreach (DataRow row in dt.Rows) {  		object[] array = row.ItemArray;  		for (i = 0; i < array.Length - 1; i++) {  			sw.Write (array [i].ToString () + (char)9);  		}  		sw.Write (array [i].ToString ());  		sw.WriteLine ();  	}  	sw.Close ();  }  catch (Exception ex) {  	Console.WriteLine ("Protocol:Operação invalida: \n" + ex.ToString ());  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: try {  	sw = new StreamWriter (filePath' false);  	for (i = 0; i < dt.Columns.Count - 1; i++) {  		sw.Write (dt.Columns [i].ColumnName + (char)9);  	}  	sw.Write (dt.Columns [i].ColumnName);  	sw.WriteLine ();  	foreach (DataRow row in dt.Rows) {  		object[] array = row.ItemArray;  		for (i = 0; i < array.Length - 1; i++) {  			sw.Write (array [i].ToString () + (char)9);  		}  		sw.Write (array [i].ToString ());  		sw.WriteLine ();  	}  	sw.Close ();  }  catch (Exception ex) {  	Console.WriteLine ("Protocol:Operação invalida: \n" + ex.ToString ());  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: for (i = 0; i < dt.Columns.Count - 1; i++) {  	sw.Write (dt.Columns [i].ColumnName + (char)9);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: sw.Write (dt.Columns [i].ColumnName + (char)9);  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: foreach (DataRow row in dt.Rows) {  	object[] array = row.ItemArray;  	for (i = 0; i < array.Length - 1; i++) {  		sw.Write (array [i].ToString () + (char)9);  	}  	sw.Write (array [i].ToString ());  	sw.WriteLine ();  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: for (i = 0; i < array.Length - 1; i++) {  	sw.Write (array [i].ToString () + (char)9);  }  
Magic Number,BioSCADA,Protocol,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Protocol.cs,WriteTxT,The following statement contains a magic number: sw.Write (array [i].ToString () + (char)9);  
Magic Number,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,GetStats,The following statement contains a magic number: try {  	DataTable dt = ds.Tables [0];  	ArrayList ls = new ArrayList ();  	foreach (DataRow dr in dt.Rows) {  		try {  			ls.Add (float.Parse (dr ["Meditation"].ToString ().Trim ()));  		}  		catch (Exception ex) {  			//Console.WriteLine(ex.Message);  		}  	}  	float[] rrArray = (float[])ls.ToArray (typeof(float));  	if (rrArray.Length > 4) {  		// rrArray = Interpolation.Interpolation4(rrArray' 4);  		//PhyFFT phyfft = new PhyFFT(rrArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  		//lbl_lf.Content = "LF : " + String.Format("{0:0.###}"' phyfft.getLF());  		//lbl_hf.Content = "HF : " + String.Format("{0:0.###}"' phyfft.getHF());  		//lbl_rmssd.Content = "RMSSD : " + String.Format("{0:0.###}"' FastStdStats.calculeRMSSD(ls));  		//lbl_sd1.Content = "SD1 : " + String.Format("{0:0.###}"' FastStdStats.calculeSD1(ls));  		//lbl_sd2.Content = "SD2 : " + String.Format("{0:0.###}"' FastStdStats.calculeSD2(ls));  		//lbl_d2.Content = "D2 : " + String.Format("{0:0.###}"' FastStdStats.calculeD2(10' 100' rrArray));  	}  }  catch (Exception ex) {  	//Console.WriteLine(ex.Message);  }  
Magic Number,BioSCADA,ReportPanel,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\ReportPanel.xaml.cs,GetStats,The following statement contains a magic number: if (rrArray.Length > 4) {  	// rrArray = Interpolation.Interpolation4(rrArray' 4);  	//PhyFFT phyfft = new PhyFFT(rrArray' 4f/*freq*/' 128/*samples*/' 0/*K*/' 128 / 2/*L*/' 64 / 2/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  	//lbl_lf.Content = "LF : " + String.Format("{0:0.###}"' phyfft.getLF());  	//lbl_hf.Content = "HF : " + String.Format("{0:0.###}"' phyfft.getHF());  	//lbl_rmssd.Content = "RMSSD : " + String.Format("{0:0.###}"' FastStdStats.calculeRMSSD(ls));  	//lbl_sd1.Content = "SD1 : " + String.Format("{0:0.###}"' FastStdStats.calculeSD1(ls));  	//lbl_sd2.Content = "SD2 : " + String.Format("{0:0.###}"' FastStdStats.calculeSD2(ls));  	//lbl_d2.Content = "D2 : " + String.Format("{0:0.###}"' FastStdStats.calculeD2(10' 100' rrArray));  }  
Magic Number,BioSCADA,MainWindow,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\MainWindow.xaml.cs,autoConnectTCP,The following statement contains a magic number: if (tcpDriver.startListening (9999)) {  	AlarmMessageBus.log ((Brush)this.TryFindResource ("GreenColor")' "você está online!");  }  else {  	AlarmMessageBus.log ((Brush)this.TryFindResource ("GreenColor")' "não foi possível estabelecer conexão!");  }  
Magic Number,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,_thinkGearWrapper_ThinkGearChanged,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The following statement contains a magic number: try {  	if (_thinkGearWrapper == null) {  		Protocol.IsPlay = false;  		Protocol.IsConected = false;  		AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port);  	}  	else {  		_thinkGearWrapper.ThinkGearChanged += _thinkGearWrapper_ThinkGearChanged;  		if (!_thinkGearWrapper.Connect (port' 57600' true' false)) {  			Protocol.IsPlay = false;  			Protocol.IsConected = false;  			AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port);  		}  		else {  			AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#94bb65")' "NeuroSky conectado! Clique em Play para iniciar a sessão. ");  			_thinkGearWrapper.EnableBlinkDetection (true);  		}  	}  }  catch (Exception ex) {  	Protocol.IsPlay = false;  	Protocol.IsConected = false;  	AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port);  }  
Magic Number,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The following statement contains a magic number: if (_thinkGearWrapper == null) {  	Protocol.IsPlay = false;  	Protocol.IsConected = false;  	AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port);  }  else {  	_thinkGearWrapper.ThinkGearChanged += _thinkGearWrapper_ThinkGearChanged;  	if (!_thinkGearWrapper.Connect (port' 57600' true' false)) {  		Protocol.IsPlay = false;  		Protocol.IsConected = false;  		AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port);  	}  	else {  		AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#94bb65")' "NeuroSky conectado! Clique em Play para iniciar a sessão. ");  		_thinkGearWrapper.EnableBlinkDetection (true);  	}  }  
Magic Number,Neurolog.Blueteeth,NeuroskyDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Blueteeth\NeuroskyDriver.cs,Open,The following statement contains a magic number: if (!_thinkGearWrapper.Connect (port' 57600' true' false)) {  	Protocol.IsPlay = false;  	Protocol.IsConected = false;  	AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#7b0100")' "não foi possível conectar com o NeuroSky! " + port);  }  else {  	AlarmMessageBus.log ((Brush)new BrushConverter ().ConvertFrom ("#94bb65")' "NeuroSky conectado! Clique em Play para iniciar a sessão. ");  	_thinkGearWrapper.EnableBlinkDetection (true);  }  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeSD1,The following statement contains a magic number: return (float)(Math.Sqrt (0.5) * calculeSDSD (rr));  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeSD2,The following statement contains a magic number: return (float)Math.Sqrt (2 * Math.Pow (calculeSD (rr)' 2) - 0.5 * Math.Pow (calculeSDSD (rr)' 2));  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeSD2,The following statement contains a magic number: return (float)Math.Sqrt (2 * Math.Pow (calculeSD (rr)' 2) - 0.5 * Math.Pow (calculeSDSD (rr)' 2));  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeSD2,The following statement contains a magic number: return (float)Math.Sqrt (2 * Math.Pow (calculeSD (rr)' 2) - 0.5 * Math.Pow (calculeSDSD (rr)' 2));  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeSD2,The following statement contains a magic number: return (float)Math.Sqrt (2 * Math.Pow (calculeSD (rr)' 2) - 0.5 * Math.Pow (calculeSDSD (rr)' 2));  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeRMSSD,The following statement contains a magic number: for (int t = 0; t < rr.Count - 1; t++) {  	adjacent [t] = (float)rr [t] - (float)rr [t + 1];  	adjacentPow2 [t] = (float)Math.Pow (adjacent [t]' 2);  }  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeRMSSD,The following statement contains a magic number: adjacentPow2 [t] = (float)Math.Pow (adjacent [t]' 2);  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	sumXY += x [i] * y [i];  	sumX2 += (float)Math.Pow (x [i]' 2);  	sumY2 += (float)Math.Pow (y [i]' 2);  }  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	sumXY += x [i] * y [i];  	sumX2 += (float)Math.Pow (x [i]' 2);  	sumY2 += (float)Math.Pow (y [i]' 2);  }  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The following statement contains a magic number: sumX2 += (float)Math.Pow (x [i]' 2);  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The following statement contains a magic number: sumY2 += (float)Math.Pow (y [i]' 2);  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The following statement contains a magic number: try {  	result [0] = (n * sumXY - sumX * sumY) / (n * sumX2 - (float)Math.Pow (sumX' 2));  	//result[1] = (sumY-result[0]*sumX)/n;  	//result[2] = ( n*sumXY-sumX*sumY )/( (float)Math.sqrt( (n*sumX2-(float)Math.pow(sumX' 2))*(n*sumY2-Math.pow(sumY'2)) ) );  }  catch (Exception ex) {  	ex.ToString ();  	return new float[] {  		0f'  		0f'  		0f  	};  }  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,calculeLinearRegression,The following statement contains a magic number: result [0] = (n * sumXY - sumX * sumY) / (n * sumX2 - (float)Math.Pow (sumX' 2));  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,dCoUjUk,The following statement contains a magic number: foreach (float f in uj) {  	result += (float)Math.Pow (uk [i] - f' 2);  	i++;  }  
Magic Number,Neurolog,FastStdStats,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FastStdStats.cs,dCoUjUk,The following statement contains a magic number: result += (float)Math.Pow (uk [i] - f' 2);  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: wtemp = (float)Math.Sin (0.5 * theta);  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: n2p3 = 2 * n + 3;  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: n2p3 = 2 * n + 3;  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: for (i = 2; i <= n / 2; i++) {  	try {  		i4 = 1 + (i3 = n2p3 - (i2 = 1 + (i1 = i + i - 1)));  		h1r = c1 * (data [i1] + data [i3]);  		h1i = c1 * (data [i2] - data [i4]);  		h2r = -c2 * (data [i2] + data [i4]);  		h2i = c2 * (data [i1] - data [i3]);  		data [i1] = (h1r + wr * h2r - wi * h2i);  		data [i2] = (h1i + wr * h2i + wi * h2r);  		data [i3] = (h1r - wr * h2r + wi * h2i);  		data [i4] = (-h1i + wr * h2i + wi * h2r);  		wr = (wtemp = wr) * wpr - wi * wpi + wr;  		wi = wi * wpr + wtemp * wpi + wi;  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  	}  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: for (i = 2; i <= n / 2; i++) {  	try {  		i4 = 1 + (i3 = n2p3 - (i2 = 1 + (i1 = i + i - 1)));  		h1r = c1 * (data [i1] + data [i3]);  		h1i = c1 * (data [i2] - data [i4]);  		h2r = -c2 * (data [i2] + data [i4]);  		h2i = c2 * (data [i1] - data [i3]);  		data [i1] = (h1r + wr * h2r - wi * h2i);  		data [i2] = (h1i + wr * h2i + wi * h2r);  		data [i3] = (h1r - wr * h2r + wi * h2i);  		data [i4] = (-h1i + wr * h2i + wi * h2r);  		wr = (wtemp = wr) * wpr - wi * wpi + wr;  		wi = wi * wpr + wtemp * wpi + wi;  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  	}  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: i = 2
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: if (isign == 1) {  	data [1] = (h1r = data [1]) + data [2];  	data [2] = h1r - data [2];  }  else {  	data [1] = c1 * ((h1r = data [1]) + data [2]);  	data [2] = c1 * (h1r - data [2]);  	four1 (data' n' -1);  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: if (isign == 1) {  	data [1] = (h1r = data [1]) + data [2];  	data [2] = h1r - data [2];  }  else {  	data [1] = c1 * ((h1r = data [1]) + data [2]);  	data [2] = c1 * (h1r - data [2]);  	four1 (data' n' -1);  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: if (isign == 1) {  	data [1] = (h1r = data [1]) + data [2];  	data [2] = h1r - data [2];  }  else {  	data [1] = c1 * ((h1r = data [1]) + data [2]);  	data [2] = c1 * (h1r - data [2]);  	four1 (data' n' -1);  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: if (isign == 1) {  	data [1] = (h1r = data [1]) + data [2];  	data [2] = h1r - data [2];  }  else {  	data [1] = c1 * ((h1r = data [1]) + data [2]);  	data [2] = c1 * (h1r - data [2]);  	four1 (data' n' -1);  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: if (isign == 1) {  	data [1] = (h1r = data [1]) + data [2];  	data [2] = h1r - data [2];  }  else {  	data [1] = c1 * ((h1r = data [1]) + data [2]);  	data [2] = c1 * (h1r - data [2]);  	four1 (data' n' -1);  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: if (isign == 1) {  	data [1] = (h1r = data [1]) + data [2];  	data [2] = h1r - data [2];  }  else {  	data [1] = c1 * ((h1r = data [1]) + data [2]);  	data [2] = c1 * (h1r - data [2]);  	four1 (data' n' -1);  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: data [1] = (h1r = data [1]) + data [2];  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: data [2] = h1r - data [2];  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: data [2] = h1r - data [2];  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: data [1] = c1 * ((h1r = data [1]) + data [2]);  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: data [2] = c1 * (h1r - data [2]);  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,realft,The following statement contains a magic number: data [2] = c1 * (h1r - data [2]);  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: for (i = 1; i < nf; i += 2) {  	if (j > i) {  		tempr = data [j];  		data [j] = data [i];  		data [i] = tempr;  		tempr = data [j + 1];  		data [j + 1] = data [i + 1];  		data [i + 1] = tempr;  	}  	mf = nf >> 1;  	while (mf >= 2 && j > mf) {  		j -= mf;  		mf >>= 1;  	}  	j += mf;  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: for (i = 1; i < nf; i += 2) {  	if (j > i) {  		tempr = data [j];  		data [j] = data [i];  		data [i] = tempr;  		tempr = data [j + 1];  		data [j + 1] = data [i + 1];  		data [i + 1] = tempr;  	}  	mf = nf >> 1;  	while (mf >= 2 && j > mf) {  		j -= mf;  		mf >>= 1;  	}  	j += mf;  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: i += 2
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: while (mf >= 2 && j > mf) {  	j -= mf;  	mf >>= 1;  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: mmax = 2;  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: while (nf > mmax) {  	istep = 2 * mmax;  	theta = TWOPI / (isign * mmax);  	wtemp = (float)Math.Sin (0.5F * theta);  	wpr = (-2.0F * wtemp * wtemp);  	wpi = (float)Math.Sin (theta);  	wr = 1.0F;  	wi = 0.0F;  	for (mf = 1; mf < mmax; mf += 2) {  		for (i = mf; i <= nf; i += istep) {  			j = i + mmax;  			try {  				tempr = (wr * data [j] - wi * data [j + 1]);  				tempi = (wr * data [j + 1] + wi * data [j]);  				data [j] = data [i] - tempr;  				data [j + 1] = data [i + 1] - tempi;  				data [i] += tempr;  				data [i + 1] += tempi;  			}  			catch (Exception ex) {  				Console.WriteLine (ex.Message);  			}  		}  		wr = (wtemp = wr) * wpr - wi * wpi + wr;  		wi = wi * wpr + wtemp * wpi + wi;  	}  	mmax = istep;  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: while (nf > mmax) {  	istep = 2 * mmax;  	theta = TWOPI / (isign * mmax);  	wtemp = (float)Math.Sin (0.5F * theta);  	wpr = (-2.0F * wtemp * wtemp);  	wpi = (float)Math.Sin (theta);  	wr = 1.0F;  	wi = 0.0F;  	for (mf = 1; mf < mmax; mf += 2) {  		for (i = mf; i <= nf; i += istep) {  			j = i + mmax;  			try {  				tempr = (wr * data [j] - wi * data [j + 1]);  				tempi = (wr * data [j + 1] + wi * data [j]);  				data [j] = data [i] - tempr;  				data [j + 1] = data [i + 1] - tempi;  				data [i] += tempr;  				data [i + 1] += tempi;  			}  			catch (Exception ex) {  				Console.WriteLine (ex.Message);  			}  		}  		wr = (wtemp = wr) * wpr - wi * wpi + wr;  		wi = wi * wpr + wtemp * wpi + wi;  	}  	mmax = istep;  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: istep = 2 * mmax;  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: for (mf = 1; mf < mmax; mf += 2) {  	for (i = mf; i <= nf; i += istep) {  		j = i + mmax;  		try {  			tempr = (wr * data [j] - wi * data [j + 1]);  			tempi = (wr * data [j + 1] + wi * data [j]);  			data [j] = data [i] - tempr;  			data [j + 1] = data [i + 1] - tempi;  			data [i] += tempr;  			data [i + 1] += tempi;  		}  		catch (Exception ex) {  			Console.WriteLine (ex.Message);  		}  	}  	wr = (wtemp = wr) * wpr - wi * wpi + wr;  	wi = wi * wpr + wtemp * wpi + wi;  }  
Magic Number,Neurolog,FrequencyDomain,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\FrequencyDomain.cs,four1,The following statement contains a magic number: mf += 2
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,TestClass,The following statement contains a magic number: new PhyFFT (sintet' 1/*freq*/' 256/*samples*/' 0/*K*/' 256/*L*/' 128/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,TestClass,The following statement contains a magic number: new PhyFFT (sintet' 1/*freq*/' 256/*samples*/' 0/*K*/' 256/*L*/' 128/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,TestClass,The following statement contains a magic number: new PhyFFT (sintet' 1/*freq*/' 256/*samples*/' 0/*K*/' 256/*L*/' 128/*D*/' false' 1/*smooth*/' 1/*decimation*/' "Welch"' true' true);  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,TestClass,The following statement contains a magic number: Console.WriteLine ("total time: " + (DateTime.Now.Ticks - init_time) / 10000);  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,PhyFFT,The following statement contains a magic number: if (nflag == 0) {  	/* calculate and print inverse FFT */fft ();  	output ();  }  else {  	/* calculate and print forward FFT */float[] s = new float[c.Length];  	for (int k = 0; k < K; k++) {  		for (int z = 0; z < c.Length; z += 2) {  			c [z] = 0;  			//initialize c  			c [z + 1] = 0;  			//initialize c  		}  		//this.input = new float[input.length];  		// System.out.println(" u : " +  u);  		for (int j = 0; j < L; j++) {  			//2/*K*/' 256/*L*/' 128/*D*/  			if (k == 0) {  				c [j] = input [(j)];  				// System.out.println("j: " + j + "\t u: "+ c[j]);  			}  			else if (k == 1) {  				c [j] = input [(j + D)];  				// System.out.println("j: " + (j + (K-1)*D) + "\t u: "+ c[j]);  			}  			else {  				c [j] = input [(j + (K - 1) * D)];  				// System.out.println("j: " + (j + (K-1)*D) + "\t u: "+ c[j]);  			}  		}  		if (Nflag == 0) {  			fft ();  			output ();  		}  		if (plotPower) {  			for (int j = 0; j < L; j++) {  				s [j] += c [j] * c [j];  			}  		}  		else {  			for (int j = 0; j < L; j++) {  				s [j] += c [j];  			}  		}  		// System.out.println();  	}  	if (Nflag > 0) {  		for (int z = 0; z < c.Length; z++) {  			c [z] = 0;  			//initialize c  		}  		if (plotPower) {  			for (int j = 0; j < L; j++) {  				if (s [j] != 0) {  					c [j] = (float)Math.Sqrt (s [j]) / nflag;  				}  			}  		}  		else {  			for (int j = 0; j < L; j++) {  				if (s [j] != 0) {  					c [j] = s [j] / nflag;  				}  			}  		}  		fft ();  		output ();  	}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,PhyFFT,The following statement contains a magic number: for (int k = 0; k < K; k++) {  	for (int z = 0; z < c.Length; z += 2) {  		c [z] = 0;  		//initialize c  		c [z + 1] = 0;  		//initialize c  	}  	//this.input = new float[input.length];  	// System.out.println(" u : " +  u);  	for (int j = 0; j < L; j++) {  		//2/*K*/' 256/*L*/' 128/*D*/  		if (k == 0) {  			c [j] = input [(j)];  			// System.out.println("j: " + j + "\t u: "+ c[j]);  		}  		else if (k == 1) {  			c [j] = input [(j + D)];  			// System.out.println("j: " + (j + (K-1)*D) + "\t u: "+ c[j]);  		}  		else {  			c [j] = input [(j + (K - 1) * D)];  			// System.out.println("j: " + (j + (K-1)*D) + "\t u: "+ c[j]);  		}  	}  	if (Nflag == 0) {  		fft ();  		output ();  	}  	if (plotPower) {  		for (int j = 0; j < L; j++) {  			s [j] += c [j] * c [j];  		}  	}  	else {  		for (int j = 0; j < L; j++) {  			s [j] += c [j];  		}  	}  	// System.out.println();  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,PhyFFT,The following statement contains a magic number: for (int z = 0; z < c.Length; z += 2) {  	c [z] = 0;  	//initialize c  	c [z + 1] = 0;  	//initialize c  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,PhyFFT,The following statement contains a magic number: z += 2
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,Input,The following statement contains a magic number: c = new float[m + 2];  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,fft,The following statement contains a magic number: norm = (float)Math.Sqrt (2.0 / (wsum * n));  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,fft,The following statement contains a magic number: FrequencyDomain.realft (pack' m / 2' 1);  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: for (i = 0; i <= m; i += 2 * decimation) {  	int j;  	float pow;  	//if (fflag==1)  	///////////////////////////              /// Console.Write(i * fstep + "\t");  	frequency [i] = i * fstep;  	//	if (cflag==1){  	//            try{  	//                //System.out.println( c[i]+" \t"+c[i+1]);  	//            }catch(Exception ex){  	//                System.out.println(ex.getMessage());  	//            }  	//        }  	//	else {  	for (j = 0' pow = 0.0F; j < 2 * smooth; j += 2) {  		try {  			pow += (c [i + j] * c [i + j] + c [i + j + 1] * c [i + j + 1]) * norm * norm;  		}  		catch (Exception ex) {  			Console.WriteLine (ex.Message);  		}  	}  	pow /= smooth / decimation;  	if (plotPower) {  		///////////////////////                   Console.WriteLine(pow / (freq / 2));  		power [i] = pow / (freq / 2);  	}  	else {  		///////////////////////                      Console.WriteLine(Math.Sqrt(pow) / (freq / 2) + "\t");  		power [i] = (float)Math.Sqrt (pow) / (freq / 2F);  		Protocol.fftPowerPairList.Add (frequency [i]' power [i]);  	}  	//if (false){  	//      try{  	//          //System.out.print( Math.atan2(c[i+1]' c[i])+"\t");  	//          phase[i] = Math.Atan2(c[i+1]' c[i]);  	//      }catch(Exception ex){  	//          Console.WriteLine(ex.Message);  	//      }  	//  }  	//System.out.println();  	//}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: for (i = 0; i <= m; i += 2 * decimation) {  	int j;  	float pow;  	//if (fflag==1)  	///////////////////////////              /// Console.Write(i * fstep + "\t");  	frequency [i] = i * fstep;  	//	if (cflag==1){  	//            try{  	//                //System.out.println( c[i]+" \t"+c[i+1]);  	//            }catch(Exception ex){  	//                System.out.println(ex.getMessage());  	//            }  	//        }  	//	else {  	for (j = 0' pow = 0.0F; j < 2 * smooth; j += 2) {  		try {  			pow += (c [i + j] * c [i + j] + c [i + j + 1] * c [i + j + 1]) * norm * norm;  		}  		catch (Exception ex) {  			Console.WriteLine (ex.Message);  		}  	}  	pow /= smooth / decimation;  	if (plotPower) {  		///////////////////////                   Console.WriteLine(pow / (freq / 2));  		power [i] = pow / (freq / 2);  	}  	else {  		///////////////////////                      Console.WriteLine(Math.Sqrt(pow) / (freq / 2) + "\t");  		power [i] = (float)Math.Sqrt (pow) / (freq / 2F);  		Protocol.fftPowerPairList.Add (frequency [i]' power [i]);  	}  	//if (false){  	//      try{  	//          //System.out.print( Math.atan2(c[i+1]' c[i])+"\t");  	//          phase[i] = Math.Atan2(c[i+1]' c[i]);  	//      }catch(Exception ex){  	//          Console.WriteLine(ex.Message);  	//      }  	//  }  	//System.out.println();  	//}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: for (i = 0; i <= m; i += 2 * decimation) {  	int j;  	float pow;  	//if (fflag==1)  	///////////////////////////              /// Console.Write(i * fstep + "\t");  	frequency [i] = i * fstep;  	//	if (cflag==1){  	//            try{  	//                //System.out.println( c[i]+" \t"+c[i+1]);  	//            }catch(Exception ex){  	//                System.out.println(ex.getMessage());  	//            }  	//        }  	//	else {  	for (j = 0' pow = 0.0F; j < 2 * smooth; j += 2) {  		try {  			pow += (c [i + j] * c [i + j] + c [i + j + 1] * c [i + j + 1]) * norm * norm;  		}  		catch (Exception ex) {  			Console.WriteLine (ex.Message);  		}  	}  	pow /= smooth / decimation;  	if (plotPower) {  		///////////////////////                   Console.WriteLine(pow / (freq / 2));  		power [i] = pow / (freq / 2);  	}  	else {  		///////////////////////                      Console.WriteLine(Math.Sqrt(pow) / (freq / 2) + "\t");  		power [i] = (float)Math.Sqrt (pow) / (freq / 2F);  		Protocol.fftPowerPairList.Add (frequency [i]' power [i]);  	}  	//if (false){  	//      try{  	//          //System.out.print( Math.atan2(c[i+1]' c[i])+"\t");  	//          phase[i] = Math.Atan2(c[i+1]' c[i]);  	//      }catch(Exception ex){  	//          Console.WriteLine(ex.Message);  	//      }  	//  }  	//System.out.println();  	//}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: for (i = 0; i <= m; i += 2 * decimation) {  	int j;  	float pow;  	//if (fflag==1)  	///////////////////////////              /// Console.Write(i * fstep + "\t");  	frequency [i] = i * fstep;  	//	if (cflag==1){  	//            try{  	//                //System.out.println( c[i]+" \t"+c[i+1]);  	//            }catch(Exception ex){  	//                System.out.println(ex.getMessage());  	//            }  	//        }  	//	else {  	for (j = 0' pow = 0.0F; j < 2 * smooth; j += 2) {  		try {  			pow += (c [i + j] * c [i + j] + c [i + j + 1] * c [i + j + 1]) * norm * norm;  		}  		catch (Exception ex) {  			Console.WriteLine (ex.Message);  		}  	}  	pow /= smooth / decimation;  	if (plotPower) {  		///////////////////////                   Console.WriteLine(pow / (freq / 2));  		power [i] = pow / (freq / 2);  	}  	else {  		///////////////////////                      Console.WriteLine(Math.Sqrt(pow) / (freq / 2) + "\t");  		power [i] = (float)Math.Sqrt (pow) / (freq / 2F);  		Protocol.fftPowerPairList.Add (frequency [i]' power [i]);  	}  	//if (false){  	//      try{  	//          //System.out.print( Math.atan2(c[i+1]' c[i])+"\t");  	//          phase[i] = Math.Atan2(c[i+1]' c[i]);  	//      }catch(Exception ex){  	//          Console.WriteLine(ex.Message);  	//      }  	//  }  	//System.out.println();  	//}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: i += 2 * decimation
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: for (j = 0' pow = 0.0F; j < 2 * smooth; j += 2) {  	try {  		pow += (c [i + j] * c [i + j] + c [i + j + 1] * c [i + j + 1]) * norm * norm;  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  	}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: for (j = 0' pow = 0.0F; j < 2 * smooth; j += 2) {  	try {  		pow += (c [i + j] * c [i + j] + c [i + j + 1] * c [i + j + 1]) * norm * norm;  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  	}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: j += 2
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: if (plotPower) {  	///////////////////////                   Console.WriteLine(pow / (freq / 2));  	power [i] = pow / (freq / 2);  }  else {  	///////////////////////                      Console.WriteLine(Math.Sqrt(pow) / (freq / 2) + "\t");  	power [i] = (float)Math.Sqrt (pow) / (freq / 2F);  	Protocol.fftPowerPairList.Add (frequency [i]' power [i]);  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,output,The following statement contains a magic number: power [i] = pow / (freq / 2);  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,The following statement contains a magic number: for (int i = 0; i < xx.Length; i++) {  	if (xx [i] > (xx [indexXX] - integratedWindow / 2) && xx [i] < (xx [indexXX] + integratedWindow / 2)) {  		peakPower += yy [i];  	}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,The following statement contains a magic number: for (int i = 0; i < xx.Length; i++) {  	if (xx [i] > (xx [indexXX] - integratedWindow / 2) && xx [i] < (xx [indexXX] + integratedWindow / 2)) {  		peakPower += yy [i];  	}  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,The following statement contains a magic number: if (xx [i] > (xx [indexXX] - integratedWindow / 2) && xx [i] < (xx [indexXX] + integratedWindow / 2)) {  	peakPower += yy [i];  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,The following statement contains a magic number: if (xx [i] > (xx [indexXX] - integratedWindow / 2) && xx [i] < (xx [indexXX] + integratedWindow / 2)) {  	peakPower += yy [i];  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,The following statement contains a magic number: if ((totalPower - peakPower) != 0) {  	//  System.out.println("m = " + peakPower/(totalPower-peakPower));  	return (float)Math.Pow (peakPower / (totalPower - peakPower)' 2);  }  else {  	//System.out.println(0);  	return 0;  }  
Magic Number,Neurolog,PhyFFT,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\PhyFFT.cs,drawPowerCoerence,The following statement contains a magic number: return (float)Math.Pow (peakPower / (totalPower - peakPower)' 2);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,var,The following statement contains a magic number: foreach (float f in a) {  	sum += (float)Math.Pow ((double)(f - avg)' (double)2);  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,var,The following statement contains a magic number: sum += (float)Math.Pow ((double)(f - avg)' (double)2);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	sumXY += x [i] * y [i];  	sumX2 += (float)Math.Pow (x [i]' 2);  	sumY2 += (float)Math.Pow (y [i]' 2);  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	sumXY += x [i] * y [i];  	sumX2 += (float)Math.Pow (x [i]' 2);  	sumY2 += (float)Math.Pow (y [i]' 2);  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The following statement contains a magic number: sumX2 += (float)Math.Pow (x [i]' 2);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The following statement contains a magic number: sumY2 += (float)Math.Pow (y [i]' 2);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The following statement contains a magic number: try {  	result [0] = (n * sumXY - sumX * sumY) / (n * sumX2 - (float)Math.Pow (sumX' 2));  	//result[1] = (sumY-result[0]*sumX)/n;  	//result[2] = ( n*sumXY-sumX*sumY )/( (float)Math.sqrt( (n*sumX2-(float)Math.pow(sumX' 2))*(n*sumY2-Math.pow(sumY'2)) ) );  }  catch (Exception) {  	return new float[] {  		0f'  		0f'  		0f  	};  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleLinearRegression,The following statement contains a magic number: result [0] = (n * sumXY - sumX * sumY) / (n * sumX2 - (float)Math.Pow (sumX' 2));  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,solveTridiag,The following statement contains a magic number: for (i = 2; i <= n; i++) {  	sub [i] = sub [i] / diag [i - 1];  	diag [i] = diag [i] - sub [i] * sup [i - 1];  	b [i] = b [i] - sub [i] * b [i - 1];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,solveTridiag,The following statement contains a magic number: i = 2
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int i = 1; i <= np - 2; i++) {  	diag [i] = (h [i] + h [i + 1]) / 3;  	sup [i] = h [i + 1] / 6;  	sub [i] = h [i] / 6;  	a [i] = (d [i + 1] - d [i]) / h [i + 1] - (d [i] - d [i - 1]) / h [i];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int i = 1; i <= np - 2; i++) {  	diag [i] = (h [i] + h [i + 1]) / 3;  	sup [i] = h [i + 1] / 6;  	sub [i] = h [i] / 6;  	a [i] = (d [i + 1] - d [i]) / h [i + 1] - (d [i] - d [i - 1]) / h [i];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int i = 1; i <= np - 2; i++) {  	diag [i] = (h [i] + h [i + 1]) / 3;  	sup [i] = h [i + 1] / 6;  	sub [i] = h [i] / 6;  	a [i] = (d [i + 1] - d [i]) / h [i + 1] - (d [i] - d [i - 1]) / h [i];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int i = 1; i <= np - 2; i++) {  	diag [i] = (h [i] + h [i + 1]) / 3;  	sup [i] = h [i + 1] / 6;  	sub [i] = h [i] / 6;  	a [i] = (d [i + 1] - d [i]) / h [i + 1] - (d [i] - d [i - 1]) / h [i];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: diag [i] = (h [i] + h [i + 1]) / 3;  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: sup [i] = h [i + 1] / 6;  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: sub [i] = h [i] / 6;  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: solveTridiag (sub' diag' sup' a' np - 2);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int i = 1; i <= np - 1; i++) {  	// loop over intervals between nodes  	for (int j = 1; j <= precision; j++) {  		t1 = (h [i] * j) / precision;  		t2 = h [i] - t1;  		y = ((-a [i - 1] / 6 * (t2 + h [i]) * t1 + d [i - 1]) * t2 + (-a [i] / 6 * (t1 + h [i]) * t2 + d [i]) * t1) / h [i];  		t = x [i - 1] + t1;  		interpol [0' count] = t;  		interpol [1' count] = y;  		count++;  	}  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int i = 1; i <= np - 1; i++) {  	// loop over intervals between nodes  	for (int j = 1; j <= precision; j++) {  		t1 = (h [i] * j) / precision;  		t2 = h [i] - t1;  		y = ((-a [i - 1] / 6 * (t2 + h [i]) * t1 + d [i - 1]) * t2 + (-a [i] / 6 * (t1 + h [i]) * t2 + d [i]) * t1) / h [i];  		t = x [i - 1] + t1;  		interpol [0' count] = t;  		interpol [1' count] = y;  		count++;  	}  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int j = 1; j <= precision; j++) {  	t1 = (h [i] * j) / precision;  	t2 = h [i] - t1;  	y = ((-a [i - 1] / 6 * (t2 + h [i]) * t1 + d [i - 1]) * t2 + (-a [i] / 6 * (t1 + h [i]) * t2 + d [i]) * t1) / h [i];  	t = x [i - 1] + t1;  	interpol [0' count] = t;  	interpol [1' count] = y;  	count++;  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: for (int j = 1; j <= precision; j++) {  	t1 = (h [i] * j) / precision;  	t2 = h [i] - t1;  	y = ((-a [i - 1] / 6 * (t2 + h [i]) * t1 + d [i - 1]) * t2 + (-a [i] / 6 * (t1 + h [i]) * t2 + d [i]) * t1) / h [i];  	t = x [i - 1] + t1;  	interpol [0' count] = t;  	interpol [1' count] = y;  	count++;  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: y = ((-a [i - 1] / 6 * (t2 + h [i]) * t1 + d [i - 1]) * t2 + (-a [i] / 6 * (t1 + h [i]) * t2 + d [i]) * t1) / h [i];  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,resampleBicubic,The following statement contains a magic number: y = ((-a [i - 1] / 6 * (t2 + h [i]) * t1 + d [i - 1]) * t2 + (-a [i] / 6 * (t1 + h [i]) * t2 + d [i]) * t1) / h [i];  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: for (i = 0; i < n; i++) {  	t = (i - n / 2 + 0.5f);  	tsqsum += t * t;  	b += t * c [i];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: t = (i - n / 2 + 0.5f);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: if (b < -0.04 || b > 0.04) {  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: if (b < -0.04 || b > 0.04) {  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: for (i = 0; i < n; i++) {  	t = (i - n / 2 + 0.5d);  	tsqsum += t * t;  	b += t * c [i];  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: t = (i - n / 2 + 0.5d);  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: if (b < -0.04 || b > 0.04) {  }  
Magic Number,Neurolog,Statistics,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Statistics.cs,detrend,The following statement contains a magic number: if (b < -0.04 || b > 0.04) {  }  
Magic Number,Neurolog,Windows,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\Contas\Windows.cs,win_blackman_harris,The following statement contains a magic number: w = (0.35875F - 0.48829F * (float)Math.Cos (a * j) + 0.14128F * (float)Math.Cos (2 * a * j) - 0.01168F * (float)Math.Cos (3F * a * j));  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,startListening,The following statement contains a magic number: try {  	this.port = port;  	m_mainSocket = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp);  	IPEndPoint ipLocal = new IPEndPoint (IPAddress.Any' port);  	m_mainSocket.Bind (ipLocal);  	m_mainSocket.Listen (1000);  	m_mainSocket.BeginAccept (new AsyncCallback (OnClientConnect)' null);  	IsConnected = true;  	Console.WriteLine ("KoanGear is listening...");  }  catch (SocketException se) {  	IsConnected = false;  	Console.WriteLine (se.Message);  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,startListening,The following statement contains a magic number: m_mainSocket.Listen (1000);  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: try {  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There might be more data' so store the data received so far.  		state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  		content = state.sb.ToString ();  		if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  			String strh = String.Format ("Koan Client # {0} data: "' id);  			String strRR = content.Replace ("\n\0"' "");  			strh += content.Replace ("\n\0"' "");  			Console.WriteLine (strRR);  			if (strRR.StartsWith ("PROTOCOL")) {  				sendMessage ("RR|CO|RAN\n");  			}  			if (strRR.StartsWith ("RR")) {  				String rr = Protocol.Meditation.ToString ();  				sendMessage (rr + "\n");  			}  			if (strRR.StartsWith ("CO")) {  				String co = Protocol.Coherence.ToString ();  				sendMessage (co + "\n");  			}  			if (strRR.StartsWith ("RAN")) {  				float f = 50;  				float a = 200;  				double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  				sendMessage (Convert.ToInt32 (y) + "\n");  				Console.WriteLine (Convert.ToInt32 (y) + "\n");  			}  			Console.WriteLine (strh);  			state.sb.Length = 0;  			//Send the incoming string to all current connections (remove if you don't want);  			//////////////////////////////////////////////////////////////////////  			Object objData = content.Replace ("\0"' "");  			byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  			for (int i = 0; i < m_workerSocket.Count; i++) {  				if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  					m_workerSocket [i].socket.Send (byData);  				}  			}  			/////////////////////////////////////////////////////////////////  		}  		handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  	}  	else {  		closeSocket (state.id);  	}  }  catch (System.Net.Sockets.SocketException es) {  	closeSocket (state.id);  	if (es.ErrorCode != 64) {  		Console.WriteLine (string.Format ("Socket Exception: {0}' {1}."' es.ErrorCode' es.ToString ()));  	}  }  catch (Exception e) {  	closeSocket (state.id);  	if (e.GetType ().FullName != "System.ObjectDisposedException") {  		Console.WriteLine ("Exception: {0}."' e.ToString ());  	}  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: try {  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There might be more data' so store the data received so far.  		state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  		content = state.sb.ToString ();  		if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  			String strh = String.Format ("Koan Client # {0} data: "' id);  			String strRR = content.Replace ("\n\0"' "");  			strh += content.Replace ("\n\0"' "");  			Console.WriteLine (strRR);  			if (strRR.StartsWith ("PROTOCOL")) {  				sendMessage ("RR|CO|RAN\n");  			}  			if (strRR.StartsWith ("RR")) {  				String rr = Protocol.Meditation.ToString ();  				sendMessage (rr + "\n");  			}  			if (strRR.StartsWith ("CO")) {  				String co = Protocol.Coherence.ToString ();  				sendMessage (co + "\n");  			}  			if (strRR.StartsWith ("RAN")) {  				float f = 50;  				float a = 200;  				double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  				sendMessage (Convert.ToInt32 (y) + "\n");  				Console.WriteLine (Convert.ToInt32 (y) + "\n");  			}  			Console.WriteLine (strh);  			state.sb.Length = 0;  			//Send the incoming string to all current connections (remove if you don't want);  			//////////////////////////////////////////////////////////////////////  			Object objData = content.Replace ("\0"' "");  			byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  			for (int i = 0; i < m_workerSocket.Count; i++) {  				if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  					m_workerSocket [i].socket.Send (byData);  				}  			}  			/////////////////////////////////////////////////////////////////  		}  		handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  	}  	else {  		closeSocket (state.id);  	}  }  catch (System.Net.Sockets.SocketException es) {  	closeSocket (state.id);  	if (es.ErrorCode != 64) {  		Console.WriteLine (string.Format ("Socket Exception: {0}' {1}."' es.ErrorCode' es.ToString ()));  	}  }  catch (Exception e) {  	closeSocket (state.id);  	if (e.GetType ().FullName != "System.ObjectDisposedException") {  		Console.WriteLine ("Exception: {0}."' e.ToString ());  	}  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: try {  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There might be more data' so store the data received so far.  		state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  		content = state.sb.ToString ();  		if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  			String strh = String.Format ("Koan Client # {0} data: "' id);  			String strRR = content.Replace ("\n\0"' "");  			strh += content.Replace ("\n\0"' "");  			Console.WriteLine (strRR);  			if (strRR.StartsWith ("PROTOCOL")) {  				sendMessage ("RR|CO|RAN\n");  			}  			if (strRR.StartsWith ("RR")) {  				String rr = Protocol.Meditation.ToString ();  				sendMessage (rr + "\n");  			}  			if (strRR.StartsWith ("CO")) {  				String co = Protocol.Coherence.ToString ();  				sendMessage (co + "\n");  			}  			if (strRR.StartsWith ("RAN")) {  				float f = 50;  				float a = 200;  				double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  				sendMessage (Convert.ToInt32 (y) + "\n");  				Console.WriteLine (Convert.ToInt32 (y) + "\n");  			}  			Console.WriteLine (strh);  			state.sb.Length = 0;  			//Send the incoming string to all current connections (remove if you don't want);  			//////////////////////////////////////////////////////////////////////  			Object objData = content.Replace ("\0"' "");  			byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  			for (int i = 0; i < m_workerSocket.Count; i++) {  				if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  					m_workerSocket [i].socket.Send (byData);  				}  			}  			/////////////////////////////////////////////////////////////////  		}  		handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  	}  	else {  		closeSocket (state.id);  	}  }  catch (System.Net.Sockets.SocketException es) {  	closeSocket (state.id);  	if (es.ErrorCode != 64) {  		Console.WriteLine (string.Format ("Socket Exception: {0}' {1}."' es.ErrorCode' es.ToString ()));  	}  }  catch (Exception e) {  	closeSocket (state.id);  	if (e.GetType ().FullName != "System.ObjectDisposedException") {  		Console.WriteLine ("Exception: {0}."' e.ToString ());  	}  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: try {  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There might be more data' so store the data received so far.  		state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  		content = state.sb.ToString ();  		if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  			String strh = String.Format ("Koan Client # {0} data: "' id);  			String strRR = content.Replace ("\n\0"' "");  			strh += content.Replace ("\n\0"' "");  			Console.WriteLine (strRR);  			if (strRR.StartsWith ("PROTOCOL")) {  				sendMessage ("RR|CO|RAN\n");  			}  			if (strRR.StartsWith ("RR")) {  				String rr = Protocol.Meditation.ToString ();  				sendMessage (rr + "\n");  			}  			if (strRR.StartsWith ("CO")) {  				String co = Protocol.Coherence.ToString ();  				sendMessage (co + "\n");  			}  			if (strRR.StartsWith ("RAN")) {  				float f = 50;  				float a = 200;  				double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  				sendMessage (Convert.ToInt32 (y) + "\n");  				Console.WriteLine (Convert.ToInt32 (y) + "\n");  			}  			Console.WriteLine (strh);  			state.sb.Length = 0;  			//Send the incoming string to all current connections (remove if you don't want);  			//////////////////////////////////////////////////////////////////////  			Object objData = content.Replace ("\0"' "");  			byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  			for (int i = 0; i < m_workerSocket.Count; i++) {  				if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  					m_workerSocket [i].socket.Send (byData);  				}  			}  			/////////////////////////////////////////////////////////////////  		}  		handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  	}  	else {  		closeSocket (state.id);  	}  }  catch (System.Net.Sockets.SocketException es) {  	closeSocket (state.id);  	if (es.ErrorCode != 64) {  		Console.WriteLine (string.Format ("Socket Exception: {0}' {1}."' es.ErrorCode' es.ToString ()));  	}  }  catch (Exception e) {  	closeSocket (state.id);  	if (e.GetType ().FullName != "System.ObjectDisposedException") {  		Console.WriteLine ("Exception: {0}."' e.ToString ());  	}  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: try {  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There might be more data' so store the data received so far.  		state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  		content = state.sb.ToString ();  		if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  			String strh = String.Format ("Koan Client # {0} data: "' id);  			String strRR = content.Replace ("\n\0"' "");  			strh += content.Replace ("\n\0"' "");  			Console.WriteLine (strRR);  			if (strRR.StartsWith ("PROTOCOL")) {  				sendMessage ("RR|CO|RAN\n");  			}  			if (strRR.StartsWith ("RR")) {  				String rr = Protocol.Meditation.ToString ();  				sendMessage (rr + "\n");  			}  			if (strRR.StartsWith ("CO")) {  				String co = Protocol.Coherence.ToString ();  				sendMessage (co + "\n");  			}  			if (strRR.StartsWith ("RAN")) {  				float f = 50;  				float a = 200;  				double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  				sendMessage (Convert.ToInt32 (y) + "\n");  				Console.WriteLine (Convert.ToInt32 (y) + "\n");  			}  			Console.WriteLine (strh);  			state.sb.Length = 0;  			//Send the incoming string to all current connections (remove if you don't want);  			//////////////////////////////////////////////////////////////////////  			Object objData = content.Replace ("\0"' "");  			byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  			for (int i = 0; i < m_workerSocket.Count; i++) {  				if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  					m_workerSocket [i].socket.Send (byData);  				}  			}  			/////////////////////////////////////////////////////////////////  		}  		handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  	}  	else {  		closeSocket (state.id);  	}  }  catch (System.Net.Sockets.SocketException es) {  	closeSocket (state.id);  	if (es.ErrorCode != 64) {  		Console.WriteLine (string.Format ("Socket Exception: {0}' {1}."' es.ErrorCode' es.ToString ()));  	}  }  catch (Exception e) {  	closeSocket (state.id);  	if (e.GetType ().FullName != "System.ObjectDisposedException") {  		Console.WriteLine ("Exception: {0}."' e.ToString ());  	}  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There might be more data' so store the data received so far.  	state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  	content = state.sb.ToString ();  	if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  		String strh = String.Format ("Koan Client # {0} data: "' id);  		String strRR = content.Replace ("\n\0"' "");  		strh += content.Replace ("\n\0"' "");  		Console.WriteLine (strRR);  		if (strRR.StartsWith ("PROTOCOL")) {  			sendMessage ("RR|CO|RAN\n");  		}  		if (strRR.StartsWith ("RR")) {  			String rr = Protocol.Meditation.ToString ();  			sendMessage (rr + "\n");  		}  		if (strRR.StartsWith ("CO")) {  			String co = Protocol.Coherence.ToString ();  			sendMessage (co + "\n");  		}  		if (strRR.StartsWith ("RAN")) {  			float f = 50;  			float a = 200;  			double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  			sendMessage (Convert.ToInt32 (y) + "\n");  			Console.WriteLine (Convert.ToInt32 (y) + "\n");  		}  		Console.WriteLine (strh);  		state.sb.Length = 0;  		//Send the incoming string to all current connections (remove if you don't want);  		//////////////////////////////////////////////////////////////////////  		Object objData = content.Replace ("\0"' "");  		byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  		for (int i = 0; i < m_workerSocket.Count; i++) {  			if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  				m_workerSocket [i].socket.Send (byData);  			}  		}  		/////////////////////////////////////////////////////////////////  	}  	handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  }  else {  	closeSocket (state.id);  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There might be more data' so store the data received so far.  	state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  	content = state.sb.ToString ();  	if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  		String strh = String.Format ("Koan Client # {0} data: "' id);  		String strRR = content.Replace ("\n\0"' "");  		strh += content.Replace ("\n\0"' "");  		Console.WriteLine (strRR);  		if (strRR.StartsWith ("PROTOCOL")) {  			sendMessage ("RR|CO|RAN\n");  		}  		if (strRR.StartsWith ("RR")) {  			String rr = Protocol.Meditation.ToString ();  			sendMessage (rr + "\n");  		}  		if (strRR.StartsWith ("CO")) {  			String co = Protocol.Coherence.ToString ();  			sendMessage (co + "\n");  		}  		if (strRR.StartsWith ("RAN")) {  			float f = 50;  			float a = 200;  			double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  			sendMessage (Convert.ToInt32 (y) + "\n");  			Console.WriteLine (Convert.ToInt32 (y) + "\n");  		}  		Console.WriteLine (strh);  		state.sb.Length = 0;  		//Send the incoming string to all current connections (remove if you don't want);  		//////////////////////////////////////////////////////////////////////  		Object objData = content.Replace ("\0"' "");  		byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  		for (int i = 0; i < m_workerSocket.Count; i++) {  			if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  				m_workerSocket [i].socket.Send (byData);  			}  		}  		/////////////////////////////////////////////////////////////////  	}  	handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  }  else {  	closeSocket (state.id);  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There might be more data' so store the data received so far.  	state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  	content = state.sb.ToString ();  	if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  		String strh = String.Format ("Koan Client # {0} data: "' id);  		String strRR = content.Replace ("\n\0"' "");  		strh += content.Replace ("\n\0"' "");  		Console.WriteLine (strRR);  		if (strRR.StartsWith ("PROTOCOL")) {  			sendMessage ("RR|CO|RAN\n");  		}  		if (strRR.StartsWith ("RR")) {  			String rr = Protocol.Meditation.ToString ();  			sendMessage (rr + "\n");  		}  		if (strRR.StartsWith ("CO")) {  			String co = Protocol.Coherence.ToString ();  			sendMessage (co + "\n");  		}  		if (strRR.StartsWith ("RAN")) {  			float f = 50;  			float a = 200;  			double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  			sendMessage (Convert.ToInt32 (y) + "\n");  			Console.WriteLine (Convert.ToInt32 (y) + "\n");  		}  		Console.WriteLine (strh);  		state.sb.Length = 0;  		//Send the incoming string to all current connections (remove if you don't want);  		//////////////////////////////////////////////////////////////////////  		Object objData = content.Replace ("\0"' "");  		byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  		for (int i = 0; i < m_workerSocket.Count; i++) {  			if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  				m_workerSocket [i].socket.Send (byData);  			}  		}  		/////////////////////////////////////////////////////////////////  	}  	handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  }  else {  	closeSocket (state.id);  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There might be more data' so store the data received so far.  	state.sb.Append (Encoding.UTF8.GetString (state.buffer' 0' bytesRead));  	content = state.sb.ToString ();  	if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  		String strh = String.Format ("Koan Client # {0} data: "' id);  		String strRR = content.Replace ("\n\0"' "");  		strh += content.Replace ("\n\0"' "");  		Console.WriteLine (strRR);  		if (strRR.StartsWith ("PROTOCOL")) {  			sendMessage ("RR|CO|RAN\n");  		}  		if (strRR.StartsWith ("RR")) {  			String rr = Protocol.Meditation.ToString ();  			sendMessage (rr + "\n");  		}  		if (strRR.StartsWith ("CO")) {  			String co = Protocol.Coherence.ToString ();  			sendMessage (co + "\n");  		}  		if (strRR.StartsWith ("RAN")) {  			float f = 50;  			float a = 200;  			double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  			sendMessage (Convert.ToInt32 (y) + "\n");  			Console.WriteLine (Convert.ToInt32 (y) + "\n");  		}  		Console.WriteLine (strh);  		state.sb.Length = 0;  		//Send the incoming string to all current connections (remove if you don't want);  		//////////////////////////////////////////////////////////////////////  		Object objData = content.Replace ("\0"' "");  		byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  		for (int i = 0; i < m_workerSocket.Count; i++) {  			if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  				m_workerSocket [i].socket.Send (byData);  			}  		}  		/////////////////////////////////////////////////////////////////  	}  	handler.BeginReceive (state.buffer' 0' StateObject.BufferSize' 0' new AsyncCallback (this.ReadCallback)' state);  }  else {  	closeSocket (state.id);  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  	String strh = String.Format ("Koan Client # {0} data: "' id);  	String strRR = content.Replace ("\n\0"' "");  	strh += content.Replace ("\n\0"' "");  	Console.WriteLine (strRR);  	if (strRR.StartsWith ("PROTOCOL")) {  		sendMessage ("RR|CO|RAN\n");  	}  	if (strRR.StartsWith ("RR")) {  		String rr = Protocol.Meditation.ToString ();  		sendMessage (rr + "\n");  	}  	if (strRR.StartsWith ("CO")) {  		String co = Protocol.Coherence.ToString ();  		sendMessage (co + "\n");  	}  	if (strRR.StartsWith ("RAN")) {  		float f = 50;  		float a = 200;  		double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  		sendMessage (Convert.ToInt32 (y) + "\n");  		Console.WriteLine (Convert.ToInt32 (y) + "\n");  	}  	Console.WriteLine (strh);  	state.sb.Length = 0;  	//Send the incoming string to all current connections (remove if you don't want);  	//////////////////////////////////////////////////////////////////////  	Object objData = content.Replace ("\0"' "");  	byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  	for (int i = 0; i < m_workerSocket.Count; i++) {  		if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  			m_workerSocket [i].socket.Send (byData);  		}  	}  	/////////////////////////////////////////////////////////////////  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  	String strh = String.Format ("Koan Client # {0} data: "' id);  	String strRR = content.Replace ("\n\0"' "");  	strh += content.Replace ("\n\0"' "");  	Console.WriteLine (strRR);  	if (strRR.StartsWith ("PROTOCOL")) {  		sendMessage ("RR|CO|RAN\n");  	}  	if (strRR.StartsWith ("RR")) {  		String rr = Protocol.Meditation.ToString ();  		sendMessage (rr + "\n");  	}  	if (strRR.StartsWith ("CO")) {  		String co = Protocol.Coherence.ToString ();  		sendMessage (co + "\n");  	}  	if (strRR.StartsWith ("RAN")) {  		float f = 50;  		float a = 200;  		double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  		sendMessage (Convert.ToInt32 (y) + "\n");  		Console.WriteLine (Convert.ToInt32 (y) + "\n");  	}  	Console.WriteLine (strh);  	state.sb.Length = 0;  	//Send the incoming string to all current connections (remove if you don't want);  	//////////////////////////////////////////////////////////////////////  	Object objData = content.Replace ("\0"' "");  	byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  	for (int i = 0; i < m_workerSocket.Count; i++) {  		if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  			m_workerSocket [i].socket.Send (byData);  		}  	}  	/////////////////////////////////////////////////////////////////  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  	String strh = String.Format ("Koan Client # {0} data: "' id);  	String strRR = content.Replace ("\n\0"' "");  	strh += content.Replace ("\n\0"' "");  	Console.WriteLine (strRR);  	if (strRR.StartsWith ("PROTOCOL")) {  		sendMessage ("RR|CO|RAN\n");  	}  	if (strRR.StartsWith ("RR")) {  		String rr = Protocol.Meditation.ToString ();  		sendMessage (rr + "\n");  	}  	if (strRR.StartsWith ("CO")) {  		String co = Protocol.Coherence.ToString ();  		sendMessage (co + "\n");  	}  	if (strRR.StartsWith ("RAN")) {  		float f = 50;  		float a = 200;  		double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  		sendMessage (Convert.ToInt32 (y) + "\n");  		Console.WriteLine (Convert.ToInt32 (y) + "\n");  	}  	Console.WriteLine (strh);  	state.sb.Length = 0;  	//Send the incoming string to all current connections (remove if you don't want);  	//////////////////////////////////////////////////////////////////////  	Object objData = content.Replace ("\0"' "");  	byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  	for (int i = 0; i < m_workerSocket.Count; i++) {  		if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  			m_workerSocket [i].socket.Send (byData);  		}  	}  	/////////////////////////////////////////////////////////////////  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if ((content.Length > 0) || (content.IndexOf ("") > -1)) {  	String strh = String.Format ("Koan Client # {0} data: "' id);  	String strRR = content.Replace ("\n\0"' "");  	strh += content.Replace ("\n\0"' "");  	Console.WriteLine (strRR);  	if (strRR.StartsWith ("PROTOCOL")) {  		sendMessage ("RR|CO|RAN\n");  	}  	if (strRR.StartsWith ("RR")) {  		String rr = Protocol.Meditation.ToString ();  		sendMessage (rr + "\n");  	}  	if (strRR.StartsWith ("CO")) {  		String co = Protocol.Coherence.ToString ();  		sendMessage (co + "\n");  	}  	if (strRR.StartsWith ("RAN")) {  		float f = 50;  		float a = 200;  		double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  		sendMessage (Convert.ToInt32 (y) + "\n");  		Console.WriteLine (Convert.ToInt32 (y) + "\n");  	}  	Console.WriteLine (strh);  	state.sb.Length = 0;  	//Send the incoming string to all current connections (remove if you don't want);  	//////////////////////////////////////////////////////////////////////  	Object objData = content.Replace ("\0"' "");  	byte[] byData = System.Text.Encoding.UTF8.GetBytes (objData.ToString () + "\0");  	for (int i = 0; i < m_workerSocket.Count; i++) {  		if ((m_workerSocket [i] != null) && (m_workerSocket [i].socket.Connected) && (m_workerSocket [i].id != state.id)) {  			m_workerSocket [i].socket.Send (byData);  		}  	}  	/////////////////////////////////////////////////////////////////  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (strRR.StartsWith ("RAN")) {  	float f = 50;  	float a = 200;  	double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  	sendMessage (Convert.ToInt32 (y) + "\n");  	Console.WriteLine (Convert.ToInt32 (y) + "\n");  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (strRR.StartsWith ("RAN")) {  	float f = 50;  	float a = 200;  	double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  	sendMessage (Convert.ToInt32 (y) + "\n");  	Console.WriteLine (Convert.ToInt32 (y) + "\n");  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (strRR.StartsWith ("RAN")) {  	float f = 50;  	float a = 200;  	double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  	sendMessage (Convert.ToInt32 (y) + "\n");  	Console.WriteLine (Convert.ToInt32 (y) + "\n");  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (strRR.StartsWith ("RAN")) {  	float f = 50;  	float a = 200;  	double y = 900 + a * Math.Sin (Protocol.Meditationlist.Count * ((2 * Math.PI) / f));  	sendMessage (Convert.ToInt32 (y) + "\n");  	Console.WriteLine (Convert.ToInt32 (y) + "\n");  }  
Magic Number,Neurolog,TCPDriver,C:\repos\schmaedech_neurolog\VisualStudio\Neurolog\Neurolog\Neurosky\NetGear\TCPDriver.cs,ReadCallback,The following statement contains a magic number: if (es.ErrorCode != 64) {  	Console.WriteLine (string.Format ("Socket Exception: {0}' {1}."' es.ErrorCode' es.ToString ()));  }  
