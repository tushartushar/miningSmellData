Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_Managed,Cyclomatic complexity of the method is 14
Complex Method,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,Cyclomatic complexity of the method is 18
Complex Method,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ColorChannel_ComboBox_DrawItem,Cyclomatic complexity of the method is 11
Complex Method,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,UpdateSourceNumberGui,Cyclomatic complexity of the method is 14
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,SetupTranslations,The length of the statement  "		this.TargetImageFormat_ComboBox.Items.Add (Properties.Resources.ResourceManager.GetString ("TargetImageFormat_" + frm.Format.ToString ())); " is 139.
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,UpdateSourceNumberGui,The length of the statement  "		throw new NotImplementedException (string.Format ("Value '{0}' for SourceNumber not implemented."' this.SourceNumber_TrackBar.Value)); " is 134.
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,Process_Start,The length of the statement  "		MessageBox.Show (this' Properties.Resources.NoSourceFiles_Message' Properties.Resources.NoSourceFiles_Title' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 159.
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,Process_Worker_ProgressChanged,The length of the statement  "		MessageBox.Show (this' string.Format (Properties.Resources.InProcessError_Message' ex.Message)' Properties.Resources.Error_Title' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 174.
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,Process_Worker_RunWorkerCompleted,The length of the statement  "		MessageBox.Show (this' Properties.Resources.UserCanceled_Message' Properties.Resources.UserCanceled_Title' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 157.
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,Process_Worker_RunWorkerCompleted,The length of the statement  "		MessageBox.Show (this' string.Format (Properties.Resources.EndProcessError_Message' e.Error.Message)' Properties.Resources.Error_Title' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 180.
Long Statement,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,Process_Worker_RunWorkerCompleted,The length of the statement  "		MessageBox.Show (this' string.Format ("Elapsed time: {0:0}s"' (double)e.Result)' "Debug"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 140.
Long Statement,ColorChannelMixer,MatchingFileNames,C:\repos\mqrelly_ColorChannelMixer\source\MatchingFileNames.cs,Find,The length of the statement  "	var concrete_parts_regex = new Regex (patterns [0].Replace ("."' "\\.").Replace ('?'' '.').Replace ("*"' "(.*)")' RegexOptions.Compiled); " is 137.
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		double r = 0;  		double g = 0;  		double b = 0;  		for (int i = 0; i < sources.Length; ++i) {  			r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  			g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  			b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  		}  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  		Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  	}  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	double r = 0;  	double g = 0;  	double b = 0;  	for (int i = 0; i < sources.Length; ++i) {  		r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  		g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  		b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  	}  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  	Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int i = 0; i < sources.Length; ++i) {  	r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  	g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  	b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int i = 0; i < sources.Length; ++i) {  	r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  	g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  	b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int i = 0; i < sources.Length; ++i) {  	r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  	g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  	b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: for (int i = 0; i < sources.Length; ++i) {  	r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  	g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  	b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  }  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: r += filters [i].R * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 2) / 255d;  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: g += filters [i].G * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 1) / 255d;  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: b += filters [i].B * Marshal.ReadByte (sources_bits [i].Scan0' y * sources_bits [i].Stride + x * 3 + 0) / 255d;  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 2' (byte)Math.Round (r));  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 1' (byte)Math.Round (g));  
Magic Number,ColorChannelMixer,ColorChannelMixer,C:\repos\mqrelly_ColorChannelMixer\source\ColorChannelMixer.cs,ProcessImage_WithMarshal,The following statement contains a magic number: Marshal.WriteByte (result_bits.Scan0' result_bits.Stride * y + x * 3 + 0' (byte)Math.Round (b));  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,MainForm,The following statement contains a magic number: this.Source3_ColorChannel_ComboBox.SelectedIndex = 2;  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ColorChannel_ComboBox_DrawItem,The following statement contains a magic number: switch (e.Index) {  case 0:  	bg_brush = Brushes.Red;  	break;  case 1:  	bg_brush = Brushes.LightGreen;  	break;  case 2:  	bg_brush = Brushes.Blue;  	break;  default:  	return;  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ColorChannel_ComboBox_DrawItem,The following statement contains a magic number: e.Graphics.FillRectangle (bg_brush' e.Bounds.Left + 2' e.Bounds.Top + 2' e.Bounds.Width - 4' e.Bounds.Height - 4);  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ColorChannel_ComboBox_DrawItem,The following statement contains a magic number: e.Graphics.FillRectangle (bg_brush' e.Bounds.Left + 2' e.Bounds.Top + 2' e.Bounds.Width - 4' e.Bounds.Height - 4);  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ColorChannel_ComboBox_DrawItem,The following statement contains a magic number: e.Graphics.FillRectangle (bg_brush' e.Bounds.Left + 2' e.Bounds.Top + 2' e.Bounds.Width - 4' e.Bounds.Height - 4);  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ColorChannel_ComboBox_DrawItem,The following statement contains a magic number: e.Graphics.FillRectangle (bg_brush' e.Bounds.Left + 2' e.Bounds.Top + 2' e.Bounds.Width - 4' e.Bounds.Height - 4);  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,UpdateSourceNumberGui,The following statement contains a magic number: switch (this.SourceNumber_TrackBar.Value) {  case 1:  	this.Source2_Panel.Visible = false;  	this.Source3_Panel.Visible = false;  	break;  case 2:  	this.Source2_Panel.Visible = true;  	this.Source3_Panel.Visible = false;  	break;  case 3:  	this.Source2_Panel.Visible = true;  	this.Source3_Panel.Visible = true;  	break;  default:  	throw new NotImplementedException (string.Format ("Value '{0}' for SourceNumber not implemented."' this.SourceNumber_TrackBar.Value));  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,UpdateSourceNumberGui,The following statement contains a magic number: switch (this.SourceNumber_TrackBar.Value) {  case 1:  	this.Source2_Panel.Visible = false;  	this.Source3_Panel.Visible = false;  	break;  case 2:  	this.Source2_Panel.Visible = true;  	this.Source3_Panel.Visible = false;  	break;  case 3:  	this.Source2_Panel.Visible = true;  	this.Source3_Panel.Visible = true;  	break;  default:  	throw new NotImplementedException (string.Format ("Value '{0}' for SourceNumber not implemented."' this.SourceNumber_TrackBar.Value));  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,Process_Start,The following statement contains a magic number: if (this.SourceNumber_TrackBar.Value > 2) {  	patterns.Add (this.Source3_FileNamePattern_TextBox.Text);  	filters.Add (ComboBoxSelectionToFilter (this.Source3_ColorChannel_ComboBox.SelectedIndex));  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: switch (selected_index) {  case 0:  	return Color.FromArgb (255' 0' 0);  case 1:  	return Color.FromArgb (0' 255' 0);  case 2:  	return Color.FromArgb (0' 0' 255);  default:  	throw new NotImplementedException ("Don't know how to conver selection other then [0'1'2].");  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: switch (selected_index) {  case 0:  	return Color.FromArgb (255' 0' 0);  case 1:  	return Color.FromArgb (0' 255' 0);  case 2:  	return Color.FromArgb (0' 0' 255);  default:  	throw new NotImplementedException ("Don't know how to conver selection other then [0'1'2].");  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: switch (selected_index) {  case 0:  	return Color.FromArgb (255' 0' 0);  case 1:  	return Color.FromArgb (0' 255' 0);  case 2:  	return Color.FromArgb (0' 0' 255);  default:  	throw new NotImplementedException ("Don't know how to conver selection other then [0'1'2].");  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: switch (selected_index) {  case 0:  	return Color.FromArgb (255' 0' 0);  case 1:  	return Color.FromArgb (0' 255' 0);  case 2:  	return Color.FromArgb (0' 0' 255);  default:  	throw new NotImplementedException ("Don't know how to conver selection other then [0'1'2].");  }  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: return Color.FromArgb (255' 0' 0);  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: return Color.FromArgb (0' 255' 0);  
Magic Number,ColorChannelMixer,MainForm,C:\repos\mqrelly_ColorChannelMixer\source\MainForm.cs,ComboBoxSelectionToFilter,The following statement contains a magic number: return Color.FromArgb (0' 0' 255);  
