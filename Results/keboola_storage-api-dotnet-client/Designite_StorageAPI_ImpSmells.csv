Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,CreateTableFromCsvAsync,The method has 5 parameters.
Long Statement,Keboola.StorageAPI,HttpMultipartDataClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\HttpMultipartDataClient.cs,AddFileFormData,The length of the statement  "	//_formDataContent = new MultipartFormDataContent(); - the file is added after AddStringFormData is called where this formdata is inicialized " is 141.
Long Statement,Keboola.StorageAPI,HttpMultipartDataClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\HttpMultipartDataClient.cs,_HandleTask,The length of the statement  "		//string mymessage = "This mostly happens due to some error during export to SAPI. Quick fix: drop the appropiate table(if exists) that is being exported into out stage or check its events."; " is 191.
Long Statement,Keboola.StorageAPI,HttpMultipartDataClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\HttpMultipartDataClient.cs,_HandleTask,The length of the statement  "		// string mymessage = "This mostly happens due to some error during export to SAPI. Quick fix: drop the appropiate table(if exists) that is being exported into out stage or check its events."; " is 192.
Long Statement,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,ConvertAttributesToDict,The length of the statement  "	return attrs.GroupBy (a => a.Name' StringComparer.OrdinalIgnoreCase).ToDictionary (group => group.Key' group => group.First ().Value' StringComparer.Ordinal); " is 158.
Long Statement,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,UploadFile,The length of the statement  "	var s3Client = new HttpMultipartDataClient (uploadParams ["url"].ToObject<string> ()' new Dictionary<string' string> ()); " is 121.
Long Statement,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,WaitForTaskToFinish,The length of the statement  "		throw new Exception ("Error waiting for the job:" + jobdata ["error"] ["code"].ToObject<string> () + jobdata ["error"] ["message"].ToObject<string> ()); " is 152.
Long Statement,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,TablesInBucket,The length of the statement  "	if (buckets.Where (a => a.Id.Equals (bucketid' comparisonType: StringComparison.InvariantCultureIgnoreCase)).Count () < 1) " is 122.
Magic Number,Keboola.StorageAPI,HttpMultipartDataClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\HttpMultipartDataClient.cs,HttpMultipartDataClient,The following statement contains a magic number: _client.Timeout = TimeSpan.FromMinutes (30);  
Magic Number,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,WaitForTaskToFinish,The following statement contains a magic number: do {  	if (DateTime.Now >= maxEndTime) {  		throw new Exception ("Poll timeout after 40 minutes");  	}  	waitSeconds = Math.Min (System.Convert.ToInt32 (Math.Pow (2.0' System.Convert.ToDouble (retries)))' maxWaitPeriod);  	System.Threading.Thread.Sleep (waitSeconds * 1000);  	retries++;  	jobdata = StreamToJson (GetJob (jobid));  	jobstatus = jobdata ["status"].ToObject<string> ();  }  while (jobstatus != "success" && jobstatus != "error");  
Magic Number,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,WaitForTaskToFinish,The following statement contains a magic number: do {  	if (DateTime.Now >= maxEndTime) {  		throw new Exception ("Poll timeout after 40 minutes");  	}  	waitSeconds = Math.Min (System.Convert.ToInt32 (Math.Pow (2.0' System.Convert.ToDouble (retries)))' maxWaitPeriod);  	System.Threading.Thread.Sleep (waitSeconds * 1000);  	retries++;  	jobdata = StreamToJson (GetJob (jobid));  	jobstatus = jobdata ["status"].ToObject<string> ();  }  while (jobstatus != "success" && jobstatus != "error");  
Magic Number,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,WaitForTaskToFinish,The following statement contains a magic number: waitSeconds = Math.Min (System.Convert.ToInt32 (Math.Pow (2.0' System.Convert.ToDouble (retries)))' maxWaitPeriod);  
Magic Number,Keboola.StorageAPI,StorageApiClient,C:\repos\keboola_storage-api-dotnet-client\StorageAPI\StorageApiClient.cs,WaitForTaskToFinish,The following statement contains a magic number: System.Threading.Thread.Sleep (waitSeconds * 1000);  
