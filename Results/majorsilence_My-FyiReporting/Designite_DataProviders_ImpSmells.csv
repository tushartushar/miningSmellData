Implementation smell,Namespace,Class,File,Method,Description
Complex Method,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,TxtDataReader,Cyclomatic complexity of the method is 13
Complex Method,fyiReporting.Data,WebServiceDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\WebServiceDataReader.cs,GetDataProperties,Cyclomatic complexity of the method is 9
Long Parameter List,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,iTunesDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\iTunesDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,iTunesDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\iTunesDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,FileDirDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\FileDirDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,FileDirDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\FileDirDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,WebServiceDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\WebServiceDataReader.cs,GetDataProperties,The method has 5 parameters. Parameters: name' t' data' ci' row
Long Parameter List,fyiReporting.Data,WebServiceDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\WebServiceDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,WebServiceDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\WebServiceDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,XmlDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\XmlDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,fyiReporting.Data,XmlDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\XmlDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Complex Conditional,fyiReporting.Data,MultipleStreamReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\MultipleStreamReader.cs,GetFileList,The conditional expression  "(bQuote && c == '"') ||	// quoted file and on last quote  						 (!bQuote && c == ' ')"  is complex.
Empty Catch Block,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,Read,The method has an empty catch block.
Empty Catch Block,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,Read,The method has an empty catch block.
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,Read,The following statement contains a magic number: if (ll.Count > 11)  				ci = 0;
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,Read,The following statement contains a magic number: foreach (LexToken lt in ll)  			{  				if (ci >= _Data.Length || lt.Type == LexTokenTypes.EOF)  					break;  				  				if (ci == DATETIME_FIELD)  				{  					_Data[ci] =GetDateTime(lt.Value);  				}  				else if (ci == REQUEST_FIELD)  				{	// break the request into multiple fields; command' url' http type  					string[] reqs = lt.Value.Split(' ');    					string req_cmd=null;  					string req_url=null;  					string req_type=null;  					string req_parameters=null;    					if (reqs == null)  					{}  					else if (reqs.Length >= 3)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  						req_type = reqs[2];  					}  					else if (reqs.Length == 2)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  					}  					else if (reqs.Length == 1)  						req_url = reqs[0];    					if (req_url != null)  					{  						string [] up = req_url.Split('?');  						if (up.Length > 1)  						{  							req_url = up[0];  							req_parameters = up[1];  						}  					}  					_Data[ci++] = req_type;  					_Data[ci++] = req_url;  					_Data[ci++] = req_type == "HTTP/1.1"? "HTTP/1.1": req_type;  					_Data[ci++] = req_parameters;    					continue;  				}  				else if (ci == BYTES_FIELD)  				{  					double v=0;  					if (lt.Value.Length == 0 || lt.Value == "-")  					{}  					else  					{  						try  						{  							v = Convert.ToDouble(lt.Value);  						}  						catch  						{  						}  					}  					_Data[ci] = v;  				}  				else  					_Data[ci] = lt.Value;  				ci++;					// go to next column  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,Read,The following statement contains a magic number: foreach (LexToken lt in ll)  			{  				if (ci >= _Data.Length || lt.Type == LexTokenTypes.EOF)  					break;  				  				if (ci == DATETIME_FIELD)  				{  					_Data[ci] =GetDateTime(lt.Value);  				}  				else if (ci == REQUEST_FIELD)  				{	// break the request into multiple fields; command' url' http type  					string[] reqs = lt.Value.Split(' ');    					string req_cmd=null;  					string req_url=null;  					string req_type=null;  					string req_parameters=null;    					if (reqs == null)  					{}  					else if (reqs.Length >= 3)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  						req_type = reqs[2];  					}  					else if (reqs.Length == 2)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  					}  					else if (reqs.Length == 1)  						req_url = reqs[0];    					if (req_url != null)  					{  						string [] up = req_url.Split('?');  						if (up.Length > 1)  						{  							req_url = up[0];  							req_parameters = up[1];  						}  					}  					_Data[ci++] = req_type;  					_Data[ci++] = req_url;  					_Data[ci++] = req_type == "HTTP/1.1"? "HTTP/1.1": req_type;  					_Data[ci++] = req_parameters;    					continue;  				}  				else if (ci == BYTES_FIELD)  				{  					double v=0;  					if (lt.Value.Length == 0 || lt.Value == "-")  					{}  					else  					{  						try  						{  							v = Convert.ToDouble(lt.Value);  						}  						catch  						{  						}  					}  					_Data[ci] = v;  				}  				else  					_Data[ci] = lt.Value;  				ci++;					// go to next column  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,Read,The following statement contains a magic number: foreach (LexToken lt in ll)  			{  				if (ci >= _Data.Length || lt.Type == LexTokenTypes.EOF)  					break;  				  				if (ci == DATETIME_FIELD)  				{  					_Data[ci] =GetDateTime(lt.Value);  				}  				else if (ci == REQUEST_FIELD)  				{	// break the request into multiple fields; command' url' http type  					string[] reqs = lt.Value.Split(' ');    					string req_cmd=null;  					string req_url=null;  					string req_type=null;  					string req_parameters=null;    					if (reqs == null)  					{}  					else if (reqs.Length >= 3)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  						req_type = reqs[2];  					}  					else if (reqs.Length == 2)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  					}  					else if (reqs.Length == 1)  						req_url = reqs[0];    					if (req_url != null)  					{  						string [] up = req_url.Split('?');  						if (up.Length > 1)  						{  							req_url = up[0];  							req_parameters = up[1];  						}  					}  					_Data[ci++] = req_type;  					_Data[ci++] = req_url;  					_Data[ci++] = req_type == "HTTP/1.1"? "HTTP/1.1": req_type;  					_Data[ci++] = req_parameters;    					continue;  				}  				else if (ci == BYTES_FIELD)  				{  					double v=0;  					if (lt.Value.Length == 0 || lt.Value == "-")  					{}  					else  					{  						try  						{  							v = Convert.ToDouble(lt.Value);  						}  						catch  						{  						}  					}  					_Data[ci] = v;  				}  				else  					_Data[ci] = lt.Value;  				ci++;					// go to next column  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: if (v.Length != 26)  				return null;
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,GedcomDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\GedcomDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,LogDataReader,The following statement contains a magic number: _CompressStrings = new Hashtable(10000);
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,Read,The following statement contains a magic number: if (ll.Count > 11)  				ci = 0;
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,Read,The following statement contains a magic number: foreach (LexToken lt in ll)  			{  				if (ci >= _Data.Length || lt.Type == LexTokenTypes.EOF)  					break;  				  				if (ci == DATETIME_FIELD)  				{  					_Data[ci] =GetDateTime(lt.Value);  				}  				else if (ci == REQUEST_FIELD)  				{	// break the request into multiple fields; command' url' http type  					string[] reqs = lt.Value.Split(' ');    					string req_cmd=null;  					string req_url=null;  					string req_type=null;  					string req_parameters=null;    					if (reqs == null)  					{}  					else if (reqs.Length >= 3)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  						req_type = reqs[2];  					}  					else if (reqs.Length == 2)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  					}  					else if (reqs.Length == 1)  						req_url = reqs[0];    					if (req_url != null)  					{  						string [] up = req_url.Split('?');  						if (up.Length > 1)  						{  							req_url = up[0];  							req_parameters = up[1];  						}  					}  					_Data[ci++] = req_type;  					if (req_url != null && req_url.Length > 0)  					{  						if (req_url[0] == '/')  							req_url = _Domain + req_url;  						if (req_url[req_url.Length-1] == '/')  							req_url += _IndexFile;  					}  					_Data[ci++] = CompressString(req_url);  					_Data[ci++] = req_type == "HTTP/1.1"? "HTTP/1.1": CompressString(req_type);  					_Data[ci++] = req_parameters;    					continue;  				}  				else if (ci == BYTES_FIELD)  				{  					double v=0;  					if (lt.Value.Length == 0 || lt.Value == "-")  					{}  					else  					{  						try  						{  							v = Convert.ToDouble(lt.Value);  						}  						catch  						{  						}  					}  					_Data[ci] = v;  				}  				else  					_Data[ci] = CompressString(lt.Value);  				ci++;					// go to next column  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,Read,The following statement contains a magic number: foreach (LexToken lt in ll)  			{  				if (ci >= _Data.Length || lt.Type == LexTokenTypes.EOF)  					break;  				  				if (ci == DATETIME_FIELD)  				{  					_Data[ci] =GetDateTime(lt.Value);  				}  				else if (ci == REQUEST_FIELD)  				{	// break the request into multiple fields; command' url' http type  					string[] reqs = lt.Value.Split(' ');    					string req_cmd=null;  					string req_url=null;  					string req_type=null;  					string req_parameters=null;    					if (reqs == null)  					{}  					else if (reqs.Length >= 3)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  						req_type = reqs[2];  					}  					else if (reqs.Length == 2)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  					}  					else if (reqs.Length == 1)  						req_url = reqs[0];    					if (req_url != null)  					{  						string [] up = req_url.Split('?');  						if (up.Length > 1)  						{  							req_url = up[0];  							req_parameters = up[1];  						}  					}  					_Data[ci++] = req_type;  					if (req_url != null && req_url.Length > 0)  					{  						if (req_url[0] == '/')  							req_url = _Domain + req_url;  						if (req_url[req_url.Length-1] == '/')  							req_url += _IndexFile;  					}  					_Data[ci++] = CompressString(req_url);  					_Data[ci++] = req_type == "HTTP/1.1"? "HTTP/1.1": CompressString(req_type);  					_Data[ci++] = req_parameters;    					continue;  				}  				else if (ci == BYTES_FIELD)  				{  					double v=0;  					if (lt.Value.Length == 0 || lt.Value == "-")  					{}  					else  					{  						try  						{  							v = Convert.ToDouble(lt.Value);  						}  						catch  						{  						}  					}  					_Data[ci] = v;  				}  				else  					_Data[ci] = CompressString(lt.Value);  				ci++;					// go to next column  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,Read,The following statement contains a magic number: foreach (LexToken lt in ll)  			{  				if (ci >= _Data.Length || lt.Type == LexTokenTypes.EOF)  					break;  				  				if (ci == DATETIME_FIELD)  				{  					_Data[ci] =GetDateTime(lt.Value);  				}  				else if (ci == REQUEST_FIELD)  				{	// break the request into multiple fields; command' url' http type  					string[] reqs = lt.Value.Split(' ');    					string req_cmd=null;  					string req_url=null;  					string req_type=null;  					string req_parameters=null;    					if (reqs == null)  					{}  					else if (reqs.Length >= 3)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  						req_type = reqs[2];  					}  					else if (reqs.Length == 2)  					{  						req_cmd = reqs[0];  						req_url = reqs[1];  					}  					else if (reqs.Length == 1)  						req_url = reqs[0];    					if (req_url != null)  					{  						string [] up = req_url.Split('?');  						if (up.Length > 1)  						{  							req_url = up[0];  							req_parameters = up[1];  						}  					}  					_Data[ci++] = req_type;  					if (req_url != null && req_url.Length > 0)  					{  						if (req_url[0] == '/')  							req_url = _Domain + req_url;  						if (req_url[req_url.Length-1] == '/')  							req_url += _IndexFile;  					}  					_Data[ci++] = CompressString(req_url);  					_Data[ci++] = req_type == "HTTP/1.1"? "HTTP/1.1": CompressString(req_type);  					_Data[ci++] = req_parameters;    					continue;  				}  				else if (ci == BYTES_FIELD)  				{  					double v=0;  					if (lt.Value.Length == 0 || lt.Value == "-")  					{}  					else  					{  						try  						{  							v = Convert.ToDouble(lt.Value);  						}  						catch  						{  						}  					}  					_Data[ci] = v;  				}  				else  					_Data[ci] = CompressString(lt.Value);  				ci++;					// go to next column  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: if (v.Length != 26)  				return null;
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,LogDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\LogDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan": month=1; break;  					case "feb": month=2; break;  					case "mar": month=3; break;  					case "apr": month=4; break;  					case "may": month=5; break;  					case "jun": month=6; break;  					case "jul": month=7; break;  					case "aug": month=8; break;  					case "sep": month=9; break;  					case "oct": month=10; break;  					case "nov": month=11; break;  					case "dec": month=12; break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int thh = Convert.ToInt32(v.Substring(22'2));	// the time zone (hh)  				int tmm = Convert.ToInt32(v.Substring(24'2));	// the time zone (mm)  				int tzdiff = thh * 60 + tmm;	// time zone difference in minutes  				if (!bPlus)  					tzdiff = - tzdiff;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddMinutes(tzdiff);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: if (v.Length != 26)  				return null;
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Magic Number,fyiReporting.Data,TxtDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\TxtDataReader.cs,GetDateTime,The following statement contains a magic number: try   			{  				string dd = v.Substring(0'2);	// the day of the month  				string MMM = v.Substring(3'3);	// the month  				int month=1;  				switch (MMM.ToLower())  				{  					case "jan":  						month=1;  						break;  					case "feb":  						month=2;  						break;  					case "mar":  						month=3;  						break;  					case "apr":  						month=4;  						break;  					case "may":  						month=5;  						break;  					case "jun":  						month=6;  						break;  					case "jul":  						month=7;  						break;  					case "aug":  						month=8;  						break;  					case "sep":  						month=9;  						break;  					case "oct":  						month=10;  						break;  					case "nov":  						month=11;  						break;  					case "dec":  						month=12;  						break;  					default:  						break;  				}  				string yyyy = v.Substring(7'4);	// the year  				string hh = v.Substring(12'2);	// the hour  				string mm = v.Substring(15'2);	// the minute  				string ss = v.Substring(18'2);	// the seconds  				bool bPlus = v[21] == '+';  				int hhmm = Convert.ToInt32(v.Substring(22'4));	// the time zone  				if (!bPlus)  					hhmm = - hhmm;  				DateTime dt =   					new DateTime(Convert.ToInt32(yyyy)'  					month'  					Convert.ToInt32(dd)'  					Convert.ToInt32(hh)'  					Convert.ToInt32(mm)'  					Convert.ToInt32(ss)' 0);  				result = dt.AddHours(hhmm/100.0);	  			}  			catch  			{   				result = null;  			}
Missing Default,fyiReporting.Data,XmlDataReader,C:\repos\majorsilence_My-FyiReporting\DataProviders\XmlDataReader.cs,XmlDataReader,The following switch statement is missing a default case: switch (_xcmd.Type)  				{  					case "both":  						ColumnsAttributes();  						ColumnsElements();  						break;  					case "attributes":  						ColumnsAttributes();  						break;  					case "elements":  						ColumnsElements();  						break;  				}
