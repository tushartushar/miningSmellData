Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pretzel.Logic.Import,HtmlToMarkdownConverter,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\HtmlToMarkdownConverter.cs,ProcessNodes,The method has 103 lines of code.
Long Method,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,ProcessFile,The method has 108 lines of code.
Complex Method,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,Cyclomatic complexity of the method is 10
Complex Method,Pretzel.Logic.Extensions,YamlExtensions,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensions\YamlExtensions.cs,GetValue,Cyclomatic complexity of the method is 10
Complex Method,Pretzel.Logic.Import,HtmlToMarkdownConverter,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\HtmlToMarkdownConverter.cs,ProcessNodes,Cyclomatic complexity of the method is 18
Complex Method,Pretzel.Logic.Minification,LessTransform,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Minification\LessTransform.cs,Transform,Cyclomatic complexity of the method is 10
Complex Method,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Pretzel.Logic.Templating.Context,LinkHelper,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\Context\LinkHelper.cs,EvaluatePermalink,Cyclomatic complexity of the method is 9
Complex Method,Pretzel.Logic.Templating.Context.DataParsing,CsvTsvDataParser,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\Context\DataParsing\CsvTsvDataParser.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,ProcessFile,Cyclomatic complexity of the method is 14
Long Parameter List,Pretzel.Logic,Win32API,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,NtQueryObject,The method has 5 parameters. Parameters: ObjectHandle' ObjectInformationClass' ObjectInformation' ObjectInformationLength' returnLength
Long Parameter List,Pretzel.Logic,Win32API,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,DuplicateHandle,The method has 7 parameters. Parameters: hSourceProcessHandle' hSourceHandle' hTargetProcessHandle' lpTargetHandle' dwDesiredAccess' bInheritHandle' dwOptions
Long Parameter List,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,Recipe,The method has 7 parameters. Parameters: fileSystem' engine' directory' additionalIngredients' withProject' wiki' withDrafts
Long Parameter List,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,ProcessFile,The method has 6 parameters. Parameters: outputDirectory' page' previous' next' skipFileOnError' relativePath
Long Identifier,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,,The length of the parameter CNST_SYSTEM_HANDLE_INFORMATION is 30.
Long Identifier,Pretzel.Logic.Extensibility.Extensions,WebSequenceDiagrams,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensibility\Extensions\WebSequenceDiagrams.cs,Transform,The length of the parameter contentIncludesASequenceDiagram is 31.
Long Identifier,Pretzel.Logic.Templating.Context,LinkHelper,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\Context\LinkHelper.cs,,The length of the parameter TimestampAndTitleFromPathRegex is 30.
Long Statement,Pretzel.Logic.Commands,RecipeCommand,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Commands\RecipeCommand.cs,Execute,The length of the statement  "            var recipe = new Recipe(FileSystem' engine' arguments.Source' AdditionalIngredients' arguments.WithProject' arguments.Wiki' arguments.Drafts); " is 142.
Long Statement,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The length of the statement  "            if (!Win32API.DuplicateHandle(ipProcessHwnd' systemHandleInformation.Handle' Win32API.GetCurrentProcess()' out ipHandle' 0' false' Win32API.DUPLICATE_SAME_ACCESS)) " is 163.
Long Statement,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The length of the statement  "            Win32API.NtQueryObject(ipHandle' (int)Win32API.ObjectInformationClass.ObjectBasicInformation' ipBasic' Marshal.SizeOf(objBasic)' ref nLength); " is 142.
Long Statement,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The length of the statement  "            while ((uint)(Win32API.NtQueryObject(ipHandle' (int)Win32API.ObjectInformationClass.ObjectTypeInformation' ipObjectType' nLength' ref nLength)) == Win32API.STATUS_INFO_LENGTH_MISMATCH) " is 184.
Long Statement,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The length of the statement  "            while ((uint)(Win32API.NtQueryObject(ipHandle' (int)Win32API.ObjectInformationClass.ObjectNameInformation' ipObjectName' nLength' ref nLength)) == Win32API.STATUS_INFO_LENGTH_MISMATCH) " is 184.
Long Statement,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetHandles,The length of the statement  "            while (Win32API.NtQuerySystemInformation(CNST_SYSTEM_HANDLE_INFORMATION' ipHandlePointer' nHandleInfoSize' ref nLength) == Win32API.STATUS_INFO_LENGTH_MISMATCH) " is 160.
Long Statement,Pretzel.Logic.Extensibility.Extensions,AzureHostSupport,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensibility\Extensions\AzureHostSupport.cs,MixIn,The length of the statement  "            foreach (var directoryToMove in fileSystem.Directory.GetDirectories(directory).Where(n => new DirectoryInfo(n).Name != "_source")) " is 130.
Long Statement,Pretzel.Logic.Extensibility.Extensions,VirtualDirectorySupport,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensibility\Extensions\VirtualDirectorySupport.cs,Transform,The length of the statement  "            foreach (var page in siteContext.Pages.Where(p => p.OutputFile.EndsWith(".html") || p.OutputFile.EndsWith(".htm") || p.OutputFile.EndsWith(".css"))) " is 148.
Long Statement,Pretzel.Logic.Extensions,StringExtensions,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensions\StringExtensions.cs,ToUnderscoreCase,The length of the statement  "            return string.Concat(str.Select((x' i) => i > 0 && char.IsUpper(x) ? "_" + x.ToString() : x.ToString())).ToLowerInvariant(); " is 124.
Long Statement,Pretzel.Logic.Import,BloggerImport,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\BloggerImport.cs,Import,The length of the statement  "            //       <category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/> " is 123.
Long Statement,Pretzel.Logic.Import,BloggerImport,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\BloggerImport.cs,Import,The length of the statement  "                        where e.Elements(atom + "category").Any(x => x.Attribute("term").Value == "http://schemas.google.com/blogger/2008/kind#post") " is 125.
Long Statement,Pretzel.Logic.Import,BloggerImport,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\BloggerImport.cs,ImportPost,The length of the statement  "            string fileName = string.Format(@"{0}-{1}.md"' post.Published.ToString("yyyy-MM-dd")' post.Title); //not sure about post name " is 125.
Long Statement,Pretzel.Logic.Import,WordpressImport,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\WordpressImport.cs,ImportPost,The length of the statement  "            var fileName = string.Format("{0}-{1}.md"' p.Published.ToString("yyyy-MM-dd")' p.PostName.Replace(' '' '-')); //not sure about post name " is 136.
Long Statement,Pretzel.Logic.Minification,LessTransform,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Minification\LessTransform.cs,Transform,The length of the statement  "            foreach (var file in siteContext.Pages.Where(p => p.OutputFile.EndsWith(".html") && fileSystem.File.Exists(p.OutputFile))) " is 122.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,Create,The length of the statement  "                        fileSystem.File.WriteAllText(Path.Combine(directory' @"_posts"' string.Format("{0}-myfirstpost.md"' DateTime.Today.ToString("yyyy-MM-dd")))' Properties.Razor.FirstPost); " is 169.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,Create,The length of the statement  "                    fileSystem.File.WriteAllText(Path.Combine(directory' @"_posts"' string.Format("{0}-myfirstpost.md"' DateTime.Today.ToString("yyyy-MM-dd")))' Properties.Liquid.FirstPost); " is 170.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"Properties"' "AssemblyInfo.cs")' Properties.RazorCsProject.AssemblyInfo_cs); " is 138.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "Category.cs")' Properties.RazorCsProject.Category_cs); " is 134.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"LayoutProject.csproj")' Properties.RazorCsProject.LayoutProject_csproj); " is 134.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"layoutSolution.sln")' Properties.RazorCsProject.LayoutSolution_sln); " is 130.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "NonProcessedPage.cs")' Properties.RazorCsProject.NonProcessedPage_cs); " is 150.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @".nuget"' "NuGet.config")' Properties.RazorCsProject.NuGet_Config); " is 128.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @".nuget"' "NuGet.exe")' Properties.RazorCsProject.NuGet_exe); " is 122.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @".nuget"' "NuGet.targets")' Properties.RazorCsProject.NuGet_targets); " is 130.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "PageContext.cs")' Properties.RazorCsProject.PageContext_cs); " is 140.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "Page.cs")' Properties.RazorCsProject.Page_cs); " is 126.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "Paginator.cs")' Properties.RazorCsProject.Paginator_cs); " is 136.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "SiteContext.cs")' Properties.RazorCsProject.SiteContext_cs); " is 140.
Long Statement,Pretzel.Logic.Recipes,Recipe,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Recipes\Recipe.cs,CreateProject,The length of the statement  "            fileSystem.File.WriteAllBytes(Path.Combine(layoutDirectory' @"PretzelClasses"' "Tag.cs")' Properties.RazorCsProject.Tag_cs); " is 124.
Long Statement,Pretzel.Logic.Templating.Context,SiteContextGenerator,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\Context\SiteContextGenerator.cs,BuildTagsAndCategories,The length of the statement  "            context.Categories = categories.Select(x => new Category { Name = x.Key' Posts = x.Value }).OrderBy(x => x.Name).ToList(); " is 122.
Long Statement,Pretzel.Logic.Templating.Context,SiteContextGenerator,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\Context\SiteContextGenerator.cs,ResolveCategories,The length of the statement  "                string rawCategories = postPath.Replace(fileSystem.Path.GetFileName(page.File)' string.Empty).Replace("_posts"' string.Empty); " is 126.
Long Statement,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,ProcessFile,The length of the statement  "                            var message = string.Format("Failed to process layout {0} for {1}' see inner exception for more details"' layout' context.OutputPath); " is 134.
Long Statement,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,ProcessFile,The length of the statement  "                        Console.WriteLine(@"Failed to process layout {0} for {1} because '{2}'. Skipping file"' layout' context.OutputPath' ex.Message); " is 128.
Long Statement,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,RenderContent,The length of the statement  "                html = String.Format("<p><b>Error converting markdown:</b><br />{0}</p><p>Original content:<br /><pre>{1}</pre></p>"' e.Message' contents); " is 139.
Long Statement,Pretzel.Logic.Templating,JekyllEngineBase,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\JekyllEngineBase.cs,CanProcess,The length of the statement  "            var engineInfo = GetType().GetCustomAttributes(typeof(SiteEngineInfoAttribute)' true).SingleOrDefault() as SiteEngineInfoAttribute; " is 131.
Long Statement,Pretzel.Logic.Templating.Jekyll,LiquidEngine,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Templating\Jekyll\LiquidEngine.cs,PreProcess,The length of the statement  "                var registerTagMethod = typeof(Template).GetMethod("RegisterTag"' System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Static); " is 145.
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetProcessesLockingFile,The following statement contains a magic number: process.Id <= 4
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilesLockedBy,The following statement contains a magic number: !t.Join(250)
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The following statement contains a magic number: ipTemp = new IntPtr(Convert.ToInt64(objObjectType.Name.Buffer.ToString()' 10) >> 32);
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The following statement contains a magic number: ipTemp = new IntPtr(Convert.ToInt64(objObjectType.Name.Buffer.ToString()' 10) >> 32);
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The following statement contains a magic number: ipTemp = new IntPtr(Convert.ToInt64(objObjectName.Name.Buffer.ToString()' 10) >> 32);
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetFilePath,The following statement contains a magic number: ipTemp = new IntPtr(Convert.ToInt64(objObjectName.Name.Buffer.ToString()' 10) >> 32);
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetRegularFileNameFromDevice,The following statement contains a magic number: Win32API.QueryDosDevice(strDrivePath.Substring(0' 2)' sbTargetPath' Win32API.MAX_PATH) == 0
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetRegularFileNameFromDevice,The following statement contains a magic number: strFileName = strFileName.Replace(strTargetPath' strDrivePath.Substring(0' 2));
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetHandles,The following statement contains a magic number: ipHandle = new IntPtr(ipHandlePointer.ToInt64() + 8);
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,GetHandles,The following statement contains a magic number: ipHandle = new IntPtr(ipHandle.ToInt64() + Marshal.SizeOf(shHandle) + 8);
Magic Number,Pretzel.Logic,Win32Processes,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\SanityCheck.cs,Is64Bits,The following statement contains a magic number: return Marshal.SizeOf(typeof(IntPtr)) == 8;
Magic Number,Pretzel.Logic.Extensions,StringExtensions,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensions\StringExtensions.cs,Datestamp,The following statement contains a magic number: tokens.Length < 3
Magic Number,Pretzel.Logic.Extensions,StringExtensions,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Extensions\StringExtensions.cs,Datestamp,The following statement contains a magic number: var timestampText = string.Join("-"' tokens.Take(3)).Trim(fs.Path.DirectorySeparatorChar);
Magic Number,Pretzel.Logic.Import,HtmlToMarkdownConverter,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Import\HtmlToMarkdownConverter.cs,ProcessNodes,The following statement contains a magic number: switch (htmlNode.Name)                  {                      case "#comment":                          break;                      case "#text":                          markdown.Append(htmlNode.InnerText);                          break;                      case "h1":                      case "h2":                      case "h3":                      case "h4":                      case "h5":                      case "h6":                          var hashes = new string('#'' htmlNode.Name[1] - '0');                          markdown.AppendLine();                          markdown.AppendFormat("{0} {1}"' hashes' htmlNode.InnerText);                          markdown.AppendLine();                          break;                      case "ul":                      case "ol":                          markdown.AppendLine();                          listNesting.Push(htmlNode.Name);                          ProcessNodes(markdown' htmlNode.ChildNodes);                          listNesting.Pop();                          markdown.AppendLine();                          break;                      case "li":                          markdown.AppendLine();                          if (listNesting.Count == 0) // missing ul                              listNesting.Push("ul");                          var itemMarker = "*";                          if (listNesting.Peek() == "ol")                              itemMarker = "1.";                          markdown.AppendFormat("{0}{1} "' new string(' '' 4 * (listNesting.Count - 1))' itemMarker);                          ProcessNodes(markdown' htmlNode.ChildNodes);                          break;                      case "p":                          markdown.AppendLine();                          ProcessNodes(markdown' htmlNode.ChildNodes);                          markdown.AppendLine();                          break;                      case "b":                      case "strong":                          var boldText = htmlNode.InnerText;                          bool addSpace = false;                          if (boldText.EndsWith(" "))                          {                              boldText = boldText.Substring(0' boldText.Length - 1);                              addSpace = true;                          }                          markdown.AppendFormat("**{0}**{1}"' boldText' addSpace ? " " : "");                          break;                      case "i":                      case "em":                          markdown.AppendFormat("*{0}*"' htmlNode.InnerText);                          break;                      case "br":                          markdown.AppendLine();                          break;                      case "a":                          var href = htmlNode.Attributes["href"];                          if (href != null)                          {                              markdown.AppendFormat("[{0}]({1})"' htmlNode.InnerText' htmlNode.Attributes["href"].Value);                          }                          else                          {                              // anchor missing href' just pass it straight through                              markdown.Append(htmlNode.OuterHtml);                          }                          break;                      case "img":                      case "blockquote":                      case "object":                      case "table":                      case "div":                      case "span":                      case "iframe":                      case "embed":                          // leave html unchanged                          markdown.Append(htmlNode.OuterHtml);                          break;                      case "pre":                      case "code":                          var code = htmlNode.InnerText;                          // a bit hacky' but we need to sort out where lines of code end                          code = code.Replace("\r\n"' "\n");                          code = code.Replace("\r"' "\n");                          code = regexBr.Replace(code' "\n");                          var lines = code.Split('\n');                          markdown.Append(Environment.NewLine + "    ");                          markdown.Append(string.Join(Environment.NewLine + "    "' lines));                          break;                      default:                          ProcessNodes(markdown' htmlNode.ChildNodes);                          Tracing.Info("{0}"' htmlNode.OuterHtml);                          break;                  }
Magic Number,Pretzel.Logic.Liquid,DateToRfc822FormatFilter,D:\research\architectureSmells\repos\Code52_pretzel\src\Pretzel.Logic\Liquid\DateToRfc822FormatFilter.cs,date_to_rfc822,The following statement contains a magic number: offset = offset.Substring(0' 6);
