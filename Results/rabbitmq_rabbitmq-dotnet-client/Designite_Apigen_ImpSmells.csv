Implementation smell,Namespace,Class,File,Method,Description
Long Method,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassProperties,The method has 143 lines of code.
Long Method,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitModelMethod,The method has 165 lines of code.
Complex Method,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassProperties,Cyclomatic complexity of the method is 21
Complex Method,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassMethodImplementations,Cyclomatic complexity of the method is 12
Complex Method,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitModelMethod,Cyclomatic complexity of the method is 14
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassProperties,The length of the statement  "                    EmitLine("    public " + maybeOverride + "void Clear" + MangleClass(f.Name) + "() { m_" + MangleMethod(f.Name) + "_present = false; }"); " is 136.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassProperties,The length of the statement  "                    EmitLine("    public " + maybeOverride + "bool Is" + MangleClass(f.Name) + "Present() { return m_" + MangleMethod(f.Name) + "_present; }"); " is 139.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassProperties,The length of the statement  "                    EmitLine("      if (m_" + MangleMethod(f.Name) + "_present) { m_" + MangleMethod(f.Name) + " = reader.Read" + MangleClass(ResolveDomain(f.Domain)) + "(); }"); " is 158.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitClassProperties,The length of the statement  "                    EmitLine("      if (m_" + MangleMethod(f.Name) + "_present) { writer.Write" + MangleClass(ResolveDomain(f.Domain)) + "(m_" + MangleMethod(f.Name) + "); }"); " is 156.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitMethodArgumentReader,The length of the statement  "            EmitLine("    public override RabbitMQ.Client.Impl.MethodBase DecodeMethodFrom(RabbitMQ.Util.NetworkBinaryReader reader) {"); " is 125.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitMethodArgumentReader,The length of the statement  "                    EmitLine("              " + ImplNamespaceBase + "." + MangleMethodClass(c' m) + " result = new " + ImplNamespaceBase + "." + MangleMethodClass(c' m) + "();"); " is 158.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitContentHeaderReader,The length of the statement  "            EmitLine("    public override RabbitMQ.Client.Impl.ContentHeaderBase DecodeContentHeaderFrom(RabbitMQ.Util.NetworkBinaryReader reader) {"); " is 139.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitModelImplementation,The length of the statement  "            EmitLine("    public Model(RabbitMQ.Client.Impl.ISession session' RabbitMQ.Client.ConsumerWorkService workService): base(session' workService) {}"); " is 148.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitModelImplementation,The length of the statement  "                            if ((Attribute(method' typeof(AmqpMethodDoNotImplementAttribute)) == null) && Attribute(method' typeof(AmqpUnsupportedAttribute)) == null) " is 138.
Long Statement,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitModelMethod,The length of the statement  "                EmitLine("      RabbitMQ.Client.Impl.MethodBase __repBase = ModelRpc(__req'" + contentHeaderExpr + "'" + contentBodyExpr + ");"); " is 129.
Magic Number,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,HandleOption,The following statement contains a magic number: if (opt.StartsWith("--apiName:"))              {                  m_apiName = opt.Substring(9);              }              else if (opt == "-c")              {                  m_emitComments = true;              }              else              {                  Console.Error.WriteLine("Unsupported command-line option: " + opt);                  Usage();              }
Magic Number,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,Apigen,The following statement contains a magic number: if ((args.Count < 2)                  || (m_apiName == null))              {                  Usage();              }
Magic Number,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitAsynchronousHandlers,The following statement contains a magic number: foreach (MethodInfo method in asynchronousHandlers)              {                  string methodName = method.Name;                  if (methodName.StartsWith("Handle"))                  {                      methodName = methodName.Substring(6);                  }                    AmqpClass amqpClass = null;                  AmqpMethod amqpMethod = null;                  LookupAmqpMethod(method' methodName' out amqpClass' out amqpMethod);                    string implClass = MangleMethodClass(amqpClass' amqpMethod);                    EmitLine("        case " + ((amqpClass.Index << 16) | amqpMethod.Index) + ": {");                  ParameterInfo[] parameters = method.GetParameters();                  if (parameters.Length > 0)                  {                      EmitLine("          " + implClass + " __impl = (" + implClass + ") __method;");                      EmitLine("          " + method.Name + "(");                      int remaining = parameters.Length;                      foreach (ParameterInfo pi in parameters)                      {                          if (Attribute(pi' typeof(AmqpContentHeaderMappingAttribute)) != null)                          {                              Emit("            (" + pi.ParameterType + ") cmd.Header");                          }                          else if (Attribute(pi' typeof(AmqpContentBodyMappingAttribute)) != null)                          {                              Emit("            cmd.Body");                          }                          else                          {                              AmqpFieldMappingAttribute fieldMapping =                                  Attribute(pi' typeof(AmqpFieldMappingAttribute)) as AmqpFieldMappingAttribute;                              Emit("            __impl.m_" + (fieldMapping == null                                                            ? pi.Name                                                            : fieldMapping.m_fieldName));                          }                          remaining--;                          if (remaining > 0)                          {                              EmitLine("'");                          }                      }                      EmitLine(");");                  }                  else                  {                      EmitLine("          " + method.Name + "();");                  }                  EmitLine("          return true;");                  EmitLine("        }");              }
Magic Number,RabbitMQ.Client.Apigen,Apigen,C:\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Apigen\src\apigen\Apigen.cs,EmitAsynchronousHandlers,The following statement contains a magic number: foreach (MethodInfo method in asynchronousHandlers)              {                  string methodName = method.Name;                  if (methodName.StartsWith("Handle"))                  {                      methodName = methodName.Substring(6);                  }                    AmqpClass amqpClass = null;                  AmqpMethod amqpMethod = null;                  LookupAmqpMethod(method' methodName' out amqpClass' out amqpMethod);                    string implClass = MangleMethodClass(amqpClass' amqpMethod);                    EmitLine("        case " + ((amqpClass.Index << 16) | amqpMethod.Index) + ": {");                  ParameterInfo[] parameters = method.GetParameters();                  if (parameters.Length > 0)                  {                      EmitLine("          " + implClass + " __impl = (" + implClass + ") __method;");                      EmitLine("          " + method.Name + "(");                      int remaining = parameters.Length;                      foreach (ParameterInfo pi in parameters)                      {                          if (Attribute(pi' typeof(AmqpContentHeaderMappingAttribute)) != null)                          {                              Emit("            (" + pi.ParameterType + ") cmd.Header");                          }                          else if (Attribute(pi' typeof(AmqpContentBodyMappingAttribute)) != null)                          {                              Emit("            cmd.Body");                          }                          else                          {                              AmqpFieldMappingAttribute fieldMapping =                                  Attribute(pi' typeof(AmqpFieldMappingAttribute)) as AmqpFieldMappingAttribute;                              Emit("            __impl.m_" + (fieldMapping == null                                                            ? pi.Name                                                            : fieldMapping.m_fieldName));                          }                          remaining--;                          if (remaining > 0)                          {                              EmitLine("'");                          }                      }                      EmitLine(");");                  }                  else                  {                      EmitLine("          " + method.Name + "();");                  }                  EmitLine("          return true;");                  EmitLine("        }");              }
