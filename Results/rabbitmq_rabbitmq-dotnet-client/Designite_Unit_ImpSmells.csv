Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreateTypeDeclaration,Cyclomatic complexity of the method is 16
Complex Method,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,PopulateGenericParameters,Cyclomatic complexity of the method is 8
Complex Method,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,GetMethodAttributes,Cyclomatic complexity of the method is 11
Complex Method,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,AddFieldToTypeDeclaration,Cyclomatic complexity of the method is 8
Long Parameter List,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,GeneratePublicApi,The method has 5 parameters. Parameters: assembly' includeTypes' shouldIncludeAssemblyAttributes' whitelistedNamespacePrefixes' excludeAttributes
Long Parameter List,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreatePublicApiForAssembly,The method has 5 parameters. Parameters: assembly' shouldIncludeType' shouldIncludeAssemblyAttributes' whitelistedNamespacePrefixes' excludeAttributes
Long Parameter List,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,AssertUriPartEquivalence,The method has 5 parameters. Parameters: user' password' port' vhost' cf
Long Parameter List,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,ParseSuccess,The method has 6 parameters. Parameters: uri' user' password' host' port' vhost
Long Parameter List,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,ParseSuccess,The method has 6 parameters. Parameters: uri' user' password' hosts' port' vhost
Long Parameter List,RabbitMQ.Client.Unit,TestBasicConsumer1,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,HandleBasicDeliver,The method has 7 parameters. Parameters: consumerTag' deliveryTag' redelivered' exchange' routingKey' properties' body
Long Parameter List,RabbitMQ.Client.Unit,ConsumerFailingOnDelivery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConsumerExceptions.cs,HandleBasicDeliver,The method has 7 parameters. Parameters: consumerTag' deliveryTag' redelivered' exchange' routingKey' properties' body
Long Parameter List,RabbitMQ.Client.Unit,CollectingConsumer,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConsumerOperationDispatch.cs,HandleBasicDeliver,The method has 7 parameters. Parameters: consumerTag' deliveryTag' redelivered' exchange' routingKey' properties' body
Long Parameter List,RabbitMQ.Client.Unit,FaultyConsumer,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMainLoop.cs,HandleBasicDeliver,The method has 7 parameters. Parameters: consumerTag' deliveryTag' redelivered' exchange' routingKey' properties' body
Long Identifier,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,GeneratePublicApi,The length of the parameter shouldIncludeAssemblyAttributes is 31.
Long Identifier,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreatePublicApiForAssembly,The length of the parameter shouldIncludeAssemblyAttributes is 31.
Long Identifier,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,,The length of the parameter defaultWhitelistedNamespacePrefixes is 35.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,GeneratePublicApi,The length of the statement  "                    var publicApiForAssembly = CreatePublicApiForAssembly(asm' tr => includeTypes == null || includeTypes.Any(t => t.FullName == tr.FullName && t.Assembly.FullName == tr.Module.Assembly.FullName)' " is 192.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,GeneratePublicApi,The length of the statement  "                        shouldIncludeAssemblyAttributes' whitelistedNamespacePrefixes ?? defaultWhitelistedNamespacePrefixes' attributesToExclude); " is 123.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,IsCompilerGenerated,The length of the statement  "            return m.CustomAttributes.Any(a => a.AttributeType.FullName == "System.Runtime.CompilerServices.CompilerGeneratedAttribute"); " is 125.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreateTypeDeclaration,The length of the statement  "            foreach (var memberInfo in publicType.GetMembers().Where(memberDefinition => ShouldIncludeMember(memberDefinition' whitelistedNamespacePrefixes)).OrderBy(m => m.Name' StringComparer.Ordinal)) " is 191.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreateTypeDeclaration,The length of the statement  "            foreach (var nestedType in publicType.NestedTypes.Where(ShouldIncludeType).OrderBy(t => t.FullName' StringComparer.Ordinal)) " is 124.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreateDelegateDeclaration,The length of the statement  "            PopulateCustomAttributes(invokeMethod.MethodReturnType' declaration.CustomAttributes' type => ModifyCodeTypeReference(type' "return:")' excludeAttributes); " is 155.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreateDelegateDeclaration,The length of the statement  "                declaration.Name = string.Format(CultureInfo.InvariantCulture' "{0}<{1}>"' declaration.Name' string.Join("' "' parameterNames)); " is 128.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,PopulateCustomAttributes,The length of the statement  "            foreach (var customAttribute in type.CustomAttributes.Where(t => ShouldIncludeAttribute(t' excludeAttributes)).OrderBy(a => a.AttributeType.FullName' StringComparer.Ordinal).ThenBy(a => ConvertAttributeToCode(codeTypeModifier' a)' StringComparer.Ordinal)) " is 255.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,ShouldIncludeAttribute,The length of the statement  "            return attributeTypeDefinition != null && !excludeAttributes.Contains(attribute.AttributeType.FullName) && attributeTypeDefinition.IsPublic; " is 140.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,CreateInitialiserExpression,The length of the statement  "                    //return allFlags.Aggregate((current' next) => new CodeBinaryOperatorExpression(current' CodeBinaryOperatorType.BitwiseOr' next)); " is 130.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,IsExtensionMethod,The length of the statement  "            return method.CustomAttributes.Any(a => a.AttributeType.FullName == "System.Runtime.CompilerServices.ExtensionAttribute"); " is 122.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,FormatParameterConstant,The length of the statement  "            return parameter.Constant is string ? string.Format(CultureInfo.InvariantCulture' "\"{0}\""' parameter.Constant) : (parameter.Constant ?? "null"); " is 146.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,IsHidingMethod,The length of the statement  "            return !method.IsVirtual && GetBaseTypes(typeDefinition).Any(d => MetadataResolver.GetMethod(d.Methods' method) != null); " is 121.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,AddPropertyToTypeDeclaration,The length of the statement  "                PopulateCustomAttributes(member.GetMethod' property.CustomAttributes' type => ModifyCodeTypeReference(type' "get:")' excludeAttributes); " is 136.
Long Statement,PublicApiGenerator,ApiGenerator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\ApiGenerator.cs,AddPropertyToTypeDeclaration,The length of the statement  "                PopulateCustomAttributes(member.SetMethod' property.CustomAttributes' type => ModifyCodeTypeReference(type' "set:")' excludeAttributes); " is 136.
Long Statement,RabbitMQ.Client.Unit,APIApproval,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\APIApproval.cs,Approve,The length of the statement  "            var publicApi = ApiGenerator.GeneratePublicApi(typeof(ConnectionFactory).Assembly' excludeAttributes: new[] { "System.Runtime.Versioning.TargetFrameworkAttribute" }); " is 166.
Long Statement,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,ListConnections,The length of the statement  "                Console.WriteLine("Bad response from rabbitmqctl list_connections --silent pid client_properties" + Environment.NewLine + stdout); " is 130.
Long Statement,RabbitMQ.Client.Unit,TestIEndpointResolverExtensions,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestIEndpointResolverExtensions.cs,SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints,The length of the statement  "            var thrown = Assert.Throws<AggregateException>(() => ep.SelectOne<AmqpTcpEndpoint>((x) => { throw new TestEndpointException("bananas"); })); " is 140.
Empty Catch Block,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestInvalidPort,The method has an empty catch block.
Empty Catch Block,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang,The method has an empty catch block.
Empty Catch Block,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestRecoveryWithTopologyDisabled,The method has an empty catch block.
Empty Catch Block,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,ExpectEof,The method has an empty catch block.
Magic Number,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,CreateAutorecoveringConnection,The following statement contains a magic number: cf.RequestedConnectionTimeout = 1000;
Magic Number,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,CreateAutorecoveringConnection,The following statement contains a magic number: cf.RequestedConnectionTimeout = 1000;
Magic Number,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,WaitForConfirms,The following statement contains a magic number: return m.WaitForConfirms(TimeSpan.FromSeconds(4));
Magic Number,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,Block,The following statement contains a magic number: Thread.Sleep(1200);
Magic Number,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,RestartRabbitMQ,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,RabbitMQ.Client.Unit,IntegrationFixture,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\Fixtures.cs,Wait,The following statement contains a magic number: Assert.IsTrue(latch.WaitOne(TimeSpan.FromSeconds(10))' "waiting on a latch timed out");
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestHostWithPort,The following statement contains a magic number: Assert.AreEqual(1234' e.Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestEmptyHostWithPort,The following statement contains a magic number: Assert.AreEqual(1234' e.Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleOne,The following statement contains a magic number: Assert.AreEqual(1234' es[0].Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleTwo,The following statement contains a magic number: Assert.AreEqual(2' es.Length);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleTwo,The following statement contains a magic number: Assert.AreEqual(1234' es[0].Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleTwo,The following statement contains a magic number: Assert.AreEqual(2345' es[1].Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleTwoMultipleCommas,The following statement contains a magic number: Assert.AreEqual(2' es.Length);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleTwoMultipleCommas,The following statement contains a magic number: Assert.AreEqual(1234' es[0].Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestMultipleTwoMultipleCommas,The following statement contains a magic number: Assert.AreEqual(2345' es[1].Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpTcpEndpointParsing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpTcpEndpointParsing.cs,TestIpv6WithPort,The following statement contains a magic number: Assert.AreEqual(1234' e.Port);
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@host:10000/vhost"'                      "user"' "pass"' "host"' 10000' "vhost");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("aMQps://user%61:%61pass@host:10000/v%2fhost"'                      "usera"' "apass"' "host"' 10000' "v/host");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://localhost"' "guest"' "guest"' "localhost"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://:@localhost/"' ""' ""' "localhost"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user@localhost"'                      "user"' "guest"' "localhost"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@localhost"'                      "user"' "pass"' "localhost"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://host"' "guest"' "guest"' "host"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://localhost:10000"'                      "guest"' "guest"' "localhost"' 10000' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://localhost/vhost"'                      "guest"' "guest"' "localhost"' 5672' "vhost");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://host/"' "guest"' "guest"' "host"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://host/%2f"'                      "guest"' "guest"' "host"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://[::1]"' "guest"' "guest"'                      IPv6Loopbacks'                      5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://host:100"'                      "guest"' "guest"' "host"' 100' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://[::1]:100"'                      "guest"' "guest"'                      IPv6Loopbacks'                      100' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://host/blah"'                      "guest"' "guest"' "host"' 5672' "blah");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://host:100/blah"'                      "guest"' "guest"' "host"' 100' "blah");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://localhost:100/blah"'                      "guest"' "guest"' "localhost"' 100' "blah");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://[::1]/blah"'                      "guest"' "guest"'                      IPv6Loopbacks'                      5672' "blah");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://[::1]:100/blah"'                      "guest"' "guest"'                      IPv6Loopbacks'                      100' "blah");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@host"'                      "user"' "pass"' "host"' 5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@host:100"'                      "user"' "pass"' "host"' 100' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@localhost:100"'                      "user"' "pass"' "localhost"' 100' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@[::1]"'                      "user"' "pass"'                      IPv6Loopbacks'                      5672' "/");
Magic Number,RabbitMQ.Client.Unit,TestAmqpUri,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAmqpUri.cs,TestAmqpUriParseSucceed,The following statement contains a magic number: ParseSuccess("amqp://user:pass@[::1]:100"'                      "user"' "pass"'                      IPv6Loopbacks'                      100' "/");
Magic Number,RabbitMQ.Client.Unit,TestAsyncConsumer,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAsyncConsumer.cs,TestBasicRoundtrip,The following statement contains a magic number: var waitRes = are.WaitOne(2000);
Magic Number,RabbitMQ.Client.Unit,TestAsyncConsumer,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestAsyncConsumer.cs,TestBasicRoundtrip,The following statement contains a magic number: var waitResFalse = are.WaitOne(2000);
Magic Number,RabbitMQ.Client.Unit,TestBasicProperties,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBasicProperties.cs,TestPersistentPropertyChangesDeliveryMode_PersistentTrueDelivery2,The following statement contains a magic number: Assert.AreEqual(2' subject.DeliveryMode);
Magic Number,RabbitMQ.Client.Unit,TestBasicPublishBatch,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBasicPublishBatch.cs,TestBasicPublishBatchSend,The following statement contains a magic number: Model.WaitForConfirmsOrDie(TimeSpan.FromSeconds(15));
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestSetBeforeGet,The following statement contains a magic number: k.ContinueWithValue(123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestSetBeforeGet,The following statement contains a magic number: Assert.AreEqual(123' k.WaitForValue());
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestGetValueWhichDoesNotTimeOut,The following statement contains a magic number: k.ContinueWithValue(123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestGetValueWhichDoesNotTimeOut,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestGetValueWithTimeoutInfinite,The following statement contains a magic number: SetAfter(TimingInterval' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestGetValueWithTimeoutInfinite,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceeds,The following statement contains a magic number: SetAfter(TimingInterval' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceeds,The following statement contains a magic number: var v = k.WaitForValue(TimingInterval * 2);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceeds,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithTimeSpan,The following statement contains a magic number: SetAfter(TimingInterval' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithTimeSpan,The following statement contains a magic number: var v = k.WaitForValue(TimeSpan.FromMilliseconds(TimingInterval * 2));
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithTimeSpan,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithInfiniteTimeout,The following statement contains a magic number: SetAfter(TimingInterval' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithInfiniteTimeout,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithInfiniteTimeoutTimeSpan,The following statement contains a magic number: SetAfter(TimingInterval' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateSucceedsWithInfiniteTimeoutTimeSpan,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateFails,The following statement contains a magic number: SetAfter(TimingInterval * 2' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBlockingCell,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBlockingCell.cs,TestBackgroundUpdateFails,The following statement contains a magic number: SetAfter(TimingInterval * 2' k' 123);
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234f'                              BytesWireFormatting.ReadSingle(Reader                                                             (new byte[] { 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234f'                              BytesWireFormatting.ReadSingle(Reader                                                             (new byte[] { 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234f'                              BytesWireFormatting.ReadSingle(Reader                                                             (new byte[] { 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234f'                              BytesWireFormatting.ReadSingle(Reader                                                             (new byte[] { 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234f'                              BytesWireFormatting.ReadSingle(Reader                                                             (new byte[] { 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleEncoding,The following statement contains a magic number: BytesWireFormatting.WriteSingle(w' 1.234f);
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 157' 243' 182 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 157' 243' 182 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 157' 243' 182 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestSingleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 157' 243' 182 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleDecoding,The following statement contains a magic number: Assert.AreEqual(1.234'                              BytesWireFormatting.ReadDouble(Reader                                                             (new byte[] { 63' 243' 190' 118'                                                                           200' 180' 57' 88 })));
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: BytesWireFormatting.WriteDouble(w' 1.234);
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestBytesWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestBytesWireFormatting.cs,TestDoubleEncoding,The following statement contains a magic number: Check(w' new byte[] { 63' 243' 190' 118' 200' 180' 57' 88 });
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingWithBlankMessages,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBody(Encoding.ASCII.GetBytes(string.Empty)' 30);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase1,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(64);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase2,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(256);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase3,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(1024);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase4,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(8192);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase5,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(32768' 20);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase5,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(32768' 20);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase6,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(100000' 15);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase6,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(100000' 15);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase7,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(131072' 12);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase7,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(131072' 12);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase8,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(270000' 10);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase8,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(270000' 10);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase9,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(540000' 6);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase9,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(540000' 6);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase10,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(1000000' 2);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase10,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(1000000' 2);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase11,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(1500000' 1);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingCase12,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(128000000' 1);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenCloseLoop,The following statement contains a magic number: TestConcurrentChannelOperations((conn) => {                  var ch = conn.CreateModel();                  ch.Close();              }' 50);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingWithBodyOfSize,The following statement contains a magic number: TestConcurrentChannelOpenAndPublishingWithBodyOfSize(length' 30);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingWithBody,The following statement contains a magic number: TestConcurrentChannelOperations((conn) => {                  // publishing on a shared channel is not supported                  // and would missing the point of this test anyway                  var ch = Conn.CreateModel();                  ch.ConfirmSelect();                  foreach (var j in Enumerable.Range(0' 200))                  {                      ch.BasicPublish(exchange: ""' routingKey: "_______"' basicProperties: ch.CreateBasicProperties()' body: body);                  }                  ch.WaitForConfirms(TimeSpan.FromSeconds(40));              }' iterations);
Magic Number,RabbitMQ.Client.Unit,TestConcurrentAccessWithSharedConnection,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConcurrentAccessWithSharedConnection.cs,TestConcurrentChannelOpenAndPublishingWithBody,The following statement contains a magic number: TestConcurrentChannelOperations((conn) => {                  // publishing on a shared channel is not supported                  // and would missing the point of this test anyway                  var ch = Conn.CreateModel();                  ch.ConfirmSelect();                  foreach (var j in Enumerable.Range(0' 200))                  {                      ch.BasicPublish(exchange: ""' routingKey: "_______"' basicProperties: ch.CreateBasicProperties()' body: body);                  }                  ch.WaitForConfirms(TimeSpan.FromSeconds(40));              }' iterations);
Magic Number,RabbitMQ.Client.Unit,TestConfirmSelect,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConfirmSelect.cs,TestConfirmSelectIdempotency,The following statement contains a magic number: Assert.AreEqual(2' Model.NextPublishSeqNo);
Magic Number,RabbitMQ.Client.Unit,TestConfirmSelect,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConfirmSelect.cs,TestConfirmSelectIdempotency,The following statement contains a magic number: Assert.AreEqual(3' Model.NextPublishSeqNo);
Magic Number,RabbitMQ.Client.Unit,TestConfirmSelect,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConfirmSelect.cs,TestConfirmSelectIdempotency,The following statement contains a magic number: Assert.AreEqual(4' Model.NextPublishSeqNo);
Magic Number,RabbitMQ.Client.Unit,TestConfirmSelect,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConfirmSelect.cs,TestConfirmSelectIdempotency,The following statement contains a magic number: Assert.AreEqual(5' Model.NextPublishSeqNo);
Magic Number,RabbitMQ.Client.Unit,TestConfirmSelect,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConfirmSelect.cs,TestConfirmSelectIdempotency,The following statement contains a magic number: Assert.AreEqual(6' Model.NextPublishSeqNo);
Magic Number,RabbitMQ.Client.Unit,TestConnectionBlocked,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionBlocked.cs,TestConnectionBlockedNotification,The following statement contains a magic number: Monitor.Wait(_lockObject' TimeSpan.FromSeconds(15));
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestProperties,The following statement contains a magic number: var p  = 5674;
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionUsesSpecifiedPort,The following statement contains a magic number: cf.Port = 1234;
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionWithClientProvidedNameUsesSpecifiedPort,The following statement contains a magic number: cf.Port = 1234;
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionUsesDefaultPort,The following statement contains a magic number: Assert.AreEqual(5672' conn.Endpoint.Port);
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionWithAutoRecoveryUsesAmqpTcpEndpoint,The following statement contains a magic number: cf.Port = 1234 ;
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionWithAutoRecoveryUsesInvalidAmqpTcpEndpoint,The following statement contains a magic number: var ep = new AmqpTcpEndpoint("localhost"' 1234);
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionUsesAmqpTcpEndpoint,The following statement contains a magic number: cf.Port = 1234 ;
Magic Number,RabbitMQ.Client.Unit,TestConnectionFactory,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionFactory.cs,TestCreateConnectionUsesInvalidAmqpTcpEndpoint,The following statement contains a magic number: var ep = new AmqpTcpEndpoint("localhost"' 1234);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestBasicAckAfterBasicGetAndChannelRecovery,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestBasicConnectionRecoveryStopsAfterManualClose,The following statement contains a magic number: latch.WaitOne(30000);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestBasicConnectionRecoveryStopsAfterManualClose,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestBasicConnectionRecoveryStopsAfterManualClose,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestConsumerRecoveryWithManyConsumers,The following statement contains a magic number: int n = 1024;
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang,The following statement contains a magic number: AutorecoveringConnection c = CreateAutorecoveringConnection(TimeSpan.FromSeconds(20));
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted,The following statement contains a magic number: i < 3
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound,The following statement contains a magic number: i < 1000
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted,The following statement contains a magic number: i < 1000
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound,The following statement contains a magic number: i < 1000
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer,The following statement contains a magic number: i < 1000
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestQueueRecoveryWithManyQueues,The following statement contains a magic number: int n = 1024;
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestRecoveryEventHandlersOnConnection,The following statement contains a magic number: Assert.IsTrue(counter >= 3);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestRecoveryEventHandlersOnModel,The following statement contains a magic number: Assert.IsTrue(counter >= 3);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestShutdownEventHandlersRecoveryOnConnection,The following statement contains a magic number: Assert.IsTrue(counter >= 3);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart,The following statement contains a magic number: Thread.Sleep(7000);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart,The following statement contains a magic number: Wait(shutdownLatch' TimeSpan.FromSeconds(30));
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart,The following statement contains a magic number: Wait(recoveryLatch' TimeSpan.FromSeconds(30));
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestShutdownEventHandlersRecoveryOnModel,The following statement contains a magic number: Assert.IsTrue(counter >= 3);
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestThatCancelledConsumerDoesNotReappearOnRecovery,The following statement contains a magic number: int n = 1024;
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDelayedBasicAckNackAfterChannelRecovery,The following statement contains a magic number: int n = 30;
Magic Number,RabbitMQ.Client.Unit,TestConnectionRecovery,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,TestDelayedBasicAckNackAfterChannelRecovery,The following statement contains a magic number: Wait(latch' TimeSpan.FromSeconds(20));
Magic Number,RabbitMQ.Client.Unit,TestBasicConsumer1,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,HandleBasicDeliver,The following statement contains a magic number: deliveryTag == 7 && counter < 10
Magic Number,RabbitMQ.Client.Unit,TestBasicConsumer1,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,HandleBasicDeliver,The following statement contains a magic number: deliveryTag == 7 && counter < 10
Magic Number,RabbitMQ.Client.Unit,TestBasicConsumer1,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionRecovery.cs,HandleBasicDeliver,The following statement contains a magic number: counter == 9
Magic Number,RabbitMQ.Client.Unit,TestConnectionShutdown,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionShutdown.cs,TestShutdownSignalPropagationToChannels,The following statement contains a magic number: Wait(latch' TimeSpan.FromSeconds(3));
Magic Number,RabbitMQ.Client.Unit,TestConnectionShutdown,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConnectionShutdown.cs,TestConsumerDispatcherShutdown,The following statement contains a magic number: Wait(latch' TimeSpan.FromSeconds(3));
Magic Number,RabbitMQ.Client.Unit,TestConsumerOperationDispatch,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConsumerOperationDispatch.cs,TestDeliveryOrderingWithSingleChannel,The following statement contains a magic number: counter.Wait(TimeSpan.FromSeconds(120));
Magic Number,RabbitMQ.Client.Unit,TestConsumerOperationDispatch,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConsumerOperationDispatch.cs,TestModelShutdownHandler,The following statement contains a magic number: Wait(latch' TimeSpan.FromSeconds(5));
Magic Number,RabbitMQ.Client.Unit,TestConsumerOperationDispatch,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestConsumerOperationDispatch.cs,TestModelShutdownHandler,The following statement contains a magic number: Assert.IsFalse(duplicateLatch.WaitOne(TimeSpan.FromSeconds(5))'                             "event handler fired more than once");
Magic Number,RabbitMQ.Client.Unit,TestContentHeaderCodec,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestContentHeaderCodec.cs,TestLongPresence,The following statement contains a magic number: i < 20
Magic Number,RabbitMQ.Client.Unit,TestExchangeDeclare,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestExchangeDeclare.cs,TestConcurrentExchangeDeclare,The following statement contains a magic number: Thread t = new Thread(() =>                          {                              try                              {                                  // sleep for a random amount of time to increase the chances                                  // of thread interleaving. MK.                                  Thread.Sleep(rnd.Next(5' 500));                                  Model.ExchangeDeclare(x' "fanout"' false' false' null);                              } catch (System.NotSupportedException e)                              {                                  nse = e;                              }                          });
Magic Number,RabbitMQ.Client.Unit,TestExchangeDeclare,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestExchangeDeclare.cs,TestConcurrentExchangeDeclare,The following statement contains a magic number: Thread t = new Thread(() =>                          {                              try                              {                                  // sleep for a random amount of time to increase the chances                                  // of thread interleaving. MK.                                  Thread.Sleep(rnd.Next(5' 500));                                  Model.ExchangeDeclare(x' "fanout"' false' false' null);                              } catch (System.NotSupportedException e)                              {                                  nse = e;                              }                          });
Magic Number,RabbitMQ.Client.Unit,TestExchangeDeclare,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestExchangeDeclare.cs,TestConcurrentExchangeDeclare,The following statement contains a magic number: i < 256
Magic Number,RabbitMQ.Client.Unit,TestExtensions,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestExtensions.cs,TestConfirmBarrier,The following statement contains a magic number: i < 10
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: t["int"] = 1234;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: t["uint"] = 1234u;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: t["decimal"] = 12.34m;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: array.Add(1234);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(1234' nt["int"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(1234u' nt["uint"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(12.34m' nt["decimal"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(1234' narray[1]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestTableEncoding_S,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'S'' // type                      0'0'0'2'(byte)'b''(byte)'c' // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestTableEncoding_S,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'S'' // type                      0'0'0'2'(byte)'b''(byte)'c' // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestTableEncoding_x,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'x'' // type                      0'0'0'2'0xaa'0x55 // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestTableEncoding_x,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'x'' // type                      0'0'0'2'0xaa'0x55 // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: t["B"] = (byte)255;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: t["b"] = (sbyte)-128;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: t["d"] = (double)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: t["f"] = (float)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: t["l"] = (long)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: t["s"] = (short)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((byte)255' nt["B"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((sbyte)-128' nt["b"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((double)123' nt["d"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((float)123' nt["f"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((long)123' nt["l"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormatting.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((short)123' nt["s"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: t["int"] = 1234;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: t["uint"] = 1234u;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: t["decimal"] = 12.34m;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: array.Add(1234);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(1234' nt["int"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(1234u' nt["uint"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(12.34m' nt["decimal"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestStandardTypes,The following statement contains a magic number: Assert.AreEqual(1234' narray[1]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestTableEncoding_S,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'S'' // type                      0'0'0'2'(byte)'b''(byte)'c' // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestTableEncoding_S,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'S'' // type                      0'0'0'2'(byte)'b''(byte)'c' // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestTableEncoding_x,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'x'' // type                      0'0'0'2'0xaa'0x55 // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestTableEncoding_x,The following statement contains a magic number: Check(w' new byte[] {                      0'0'0'9' // table length                      1'(byte)'a'' // key                      (byte)'x'' // type                      0'0'0'2'0xaa'0x55 // value                  });
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: t["B"] = (byte)255;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: t["b"] = (sbyte)-128;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: t["d"] = (double)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: t["f"] = (float)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: t["l"] = (long)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: t["s"] = (short)123;
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((byte)255' nt["B"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((sbyte)-128' nt["b"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((double)123' nt["d"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((float)123' nt["f"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((long)123' nt["l"]);
Magic Number,RabbitMQ.Client.Unit,TestFieldTableFormattingGeneric,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFieldTableFormattingGeneric.cs,TestQpidJmsTypes,The following statement contains a magic number: Assert.AreEqual((short)123' nt["s"]);
Magic Number,RabbitMQ.Client.Unit,TestFloodPublishing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFloodPublishing.cs,Init,The following statement contains a magic number: var connFactory = new ConnectionFactory()              {                  RequestedHeartbeat = 60'                  AutomaticRecoveryEnabled = false              };
Magic Number,RabbitMQ.Client.Unit,TestFloodPublishing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFloodPublishing.cs,TestUnthrottledFloodPublishing,The following statement contains a magic number: var t = new System.Threading.Timer((_obj) => { elapsed = true; }' null' 1000 * 185' -1);
Magic Number,RabbitMQ.Client.Unit,TestFloodPublishing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFloodPublishing.cs,TestUnthrottledFloodPublishing,The following statement contains a magic number: var t = new System.Threading.Timer((_obj) => { elapsed = true; }' null' 1000 * 185' -1);
Magic Number,RabbitMQ.Client.Unit,TestFloodPublishing,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestFloodPublishing.cs,TestUnthrottledFloodPublishing,The following statement contains a magic number: Model.BasicPublish(""' ""' null' new byte[2048]);
Magic Number,RabbitMQ.Client.Unit,TestHeartbeats,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestHeartbeats.cs,TestHundredsOfConnectionsWithRandomHeartbeatInterval,The following statement contains a magic number: var n = Convert.ToUInt16(rnd.Next(2' 6));
Magic Number,RabbitMQ.Client.Unit,TestHeartbeats,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestHeartbeats.cs,TestHundredsOfConnectionsWithRandomHeartbeatInterval,The following statement contains a magic number: var n = Convert.ToUInt16(rnd.Next(2' 6));
Magic Number,RabbitMQ.Client.Unit,TestHeartbeats,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestHeartbeats.cs,TestHundredsOfConnectionsWithRandomHeartbeatInterval,The following statement contains a magic number: i < 200
Magic Number,RabbitMQ.Client.Unit,TestHeartbeats,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestHeartbeats.cs,TestHundredsOfConnectionsWithRandomHeartbeatInterval,The following statement contains a magic number: SleepFor(60);
Magic Number,RabbitMQ.Client.Unit,TestHeartbeats,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestHeartbeats.cs,RunSingleConnectionTest,The following statement contains a magic number: SleepFor(30);
Magic Number,RabbitMQ.Client.Unit,TestHeartbeats,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestHeartbeats.cs,SleepFor,The following statement contains a magic number: Thread.Sleep(t * 1000);
Magic Number,RabbitMQ.Client.Unit,TestIntAllocator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestIntAllocator.cs,TestRandomAllocation,The following statement contains a magic number: int repeatCount = 10000;
Magic Number,RabbitMQ.Client.Unit,TestIntAllocator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestIntAllocator.cs,TestRandomAllocation,The following statement contains a magic number: int range = 100;
Magic Number,RabbitMQ.Client.Unit,TestIntAllocator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestIntAllocator.cs,TestRandomAllocation,The following statement contains a magic number: rand.Next(2) == 0
Magic Number,RabbitMQ.Client.Unit,TestIntAllocator,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestIntAllocator.cs,TestAllocateAll,The following statement contains a magic number: int range = 100;
Magic Number,RabbitMQ.Client.Unit,TestInvalidAck,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestInvalidAck.cs,TestAckWithUnknownConsumerTagAndMultipleFalse,The following statement contains a magic number: Model.BasicAck(123456' false);
Magic Number,RabbitMQ.Client.Unit,TestMainLoop,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMainLoop.cs,TestCloseWithFaultyConsumer,The following statement contains a magic number: Assert.AreEqual(c.CloseReason.ReplyCode' 200);
Magic Number,RabbitMQ.Client.Unit,TestMapMessage,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMapMessage.cs,TestRoundTrip,The following statement contains a magic number: t["double"] = 1.234;
Magic Number,RabbitMQ.Client.Unit,TestMapMessage,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMapMessage.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(2' t2.Count);
Magic Number,RabbitMQ.Client.Unit,TestMapMessage,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMapMessage.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(1.234' t2["double"]);
Magic Number,RabbitMQ.Client.Unit,TestMapMessage,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMapMessage.cs,TestEncoding,The following statement contains a magic number: t["double"] = 1.234;
Magic Number,RabbitMQ.Client.Unit,TestMessageCount,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestMessageCount.cs,TestMessageCountMethod,The following statement contains a magic number: Model.WaitForConfirms(TimeSpan.FromSeconds(2));
Magic Number,RabbitMQ.Client.Unit,TestModelShutdown,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestModelShutdown.cs,TestConsumerDispatcherShutdown,The following statement contains a magic number: Wait(latch' TimeSpan.FromSeconds(3));
Magic Number,RabbitMQ.Client.Unit,TestPublisherConfirms,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestPublisherConfirms.cs,TestWaitForConfirmsWithoutTimeout,The following statement contains a magic number: TestWaitForConfirms(200' (ch) =>              {                  Assert.IsTrue(ch.WaitForConfirms());              });
Magic Number,RabbitMQ.Client.Unit,TestPublisherConfirms,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestPublisherConfirms.cs,TestWaitForConfirmsWithTimeout,The following statement contains a magic number: TestWaitForConfirms(200' (ch) =>              {                  Assert.IsTrue(ch.WaitForConfirms(TimeSpan.FromSeconds(4)));              });
Magic Number,RabbitMQ.Client.Unit,TestPublisherConfirms,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestPublisherConfirms.cs,TestWaitForConfirmsWithTimeout,The following statement contains a magic number: TestWaitForConfirms(200' (ch) =>              {                  Assert.IsTrue(ch.WaitForConfirms(TimeSpan.FromSeconds(4)));              });
Magic Number,RabbitMQ.Client.Unit,TestPublisherConfirms,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestPublisherConfirms.cs,TestWaitForConfirmsWithEvents,The following statement contains a magic number: var n = 200;
Magic Number,RabbitMQ.Client.Unit,TestPublisherConfirms,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestPublisherConfirms.cs,TestWaitForConfirmsWithEvents,The following statement contains a magic number: ch.WaitForConfirms(TimeSpan.FromSeconds(5));
Magic Number,RabbitMQ.Client.Unit,TestPublisherConfirms,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestPublisherConfirms.cs,TestWaitForConfirmsWithEvents,The following statement contains a magic number: Assert.IsTrue(c > 20);
Magic Number,RabbitMQ.Client.Unit,TestQueueDeclare,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestQueueDeclare.cs,TestConcurrentQueueDeclare,The following statement contains a magic number: Thread t = new Thread(() =>                          {                              try                              {                                  // sleep for a random amount of time to increase the chances                                  // of thread interleaving. MK.                                  Thread.Sleep(rnd.Next(5' 500));                                  Model.QueueDeclare(q' false' false' false' null);                              } catch (System.NotSupportedException e)                              {                                  nse = e;                              }                          });
Magic Number,RabbitMQ.Client.Unit,TestQueueDeclare,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestQueueDeclare.cs,TestConcurrentQueueDeclare,The following statement contains a magic number: Thread t = new Thread(() =>                          {                              try                              {                                  // sleep for a random amount of time to increase the chances                                  // of thread interleaving. MK.                                  Thread.Sleep(rnd.Next(5' 500));                                  Model.QueueDeclare(q' false' false' false' null);                              } catch (System.NotSupportedException e)                              {                                  nse = e;                              }                          });
Magic Number,RabbitMQ.Client.Unit,TestQueueDeclare,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestQueueDeclare.cs,TestConcurrentQueueDeclare,The following statement contains a magic number: i < 256
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestBgLong,The following statement contains a magic number: EnqueueAfter(TimingInterval*2' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestBgLong,The following statement contains a magic number: EnqueueAfter(TimingInterval*2' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestBgShort,The following statement contains a magic number: EnqueueAfter(TimingInterval' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestBgShort,The following statement contains a magic number: bool r = q.Dequeue(TimingInterval*2' out v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestBgShort,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestCloseWhenFull,The following statement contains a magic number: q.Enqueue(2);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestCloseWhenFull,The following statement contains a magic number: q.Enqueue(3);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestCloseWhenFull,The following statement contains a magic number: var de = new DelayedEnqueuer(q' 0' 4);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestCloseWhenFull,The following statement contains a magic number: Assert.AreEqual(2' q.DequeueNoWait(0));
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestCloseWhenFull,The following statement contains a magic number: Assert.AreEqual(3' v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: EnqueueAfter(TimingInterval' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: EnqueueAfter(TimingInterval*2' q' 234);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: EnqueueAfter(TimingInterval*2' q' 234);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: r = q.Dequeue(TimingInterval*2' out v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: r = q.Dequeue(TimingInterval*2' out v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: Assert.Less(TimingInterval*2 - SafetyMargin' ElapsedMs());
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: Assert.Greater(TimingInterval*2 + SafetyMargin' ElapsedMs());
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoubleBg,The following statement contains a magic number: Assert.AreEqual(234' v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoublePoll,The following statement contains a magic number: EnqueueAfter(TimingInterval*2' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoublePoll,The following statement contains a magic number: EnqueueAfter(TimingInterval*2' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoublePoll,The following statement contains a magic number: r = q.Dequeue(TimingInterval*2' out v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoublePoll,The following statement contains a magic number: Assert.Less(TimingInterval*2 - SafetyMargin' ElapsedMs());
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoublePoll,The following statement contains a magic number: Assert.Greater(TimingInterval*2 + SafetyMargin' ElapsedMs());
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestDoublePoll,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestEnumerator,The following statement contains a magic number: queue.Enqueue(2);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestEnumerator,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestEnumerator,The following statement contains a magic number: Assert.AreEqual(6' c1.v + c2.v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestTimeoutInfinite,The following statement contains a magic number: EnqueueAfter(TimingInterval' q' 123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestTimeoutInfinite,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestTimeoutNegative,The following statement contains a magic number: bool r = q.Dequeue(-10000' out v);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestTimeoutShort,The following statement contains a magic number: q.Enqueue(123);
Magic Number,RabbitMQ.Client.Unit,TestSharedQueue,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestSharedQueue.cs,TestTimeoutShort,The following statement contains a magic number: Assert.AreEqual(123' v);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding1,The following statement contains a magic number: Assert.AreEqual(1.234f'                              StreamWireFormatting.ReadSingle(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding1,The following statement contains a magic number: Assert.AreEqual(1.234f'                              StreamWireFormatting.ReadSingle(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding1,The following statement contains a magic number: Assert.AreEqual(1.234f'                              StreamWireFormatting.ReadSingle(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding1,The following statement contains a magic number: Assert.AreEqual(1.234f'                              StreamWireFormatting.ReadSingle(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding1,The following statement contains a magic number: Assert.AreEqual(1.234f'                              StreamWireFormatting.ReadSingle(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding1,The following statement contains a magic number: Assert.AreEqual(1.234f'                              StreamWireFormatting.ReadSingle(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding2,The following statement contains a magic number: Assert.AreEqual(1.234f.ToString()'                              StreamWireFormatting.ReadString(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding2,The following statement contains a magic number: Assert.AreEqual(1.234f.ToString()'                              StreamWireFormatting.ReadString(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding2,The following statement contains a magic number: Assert.AreEqual(1.234f.ToString()'                              StreamWireFormatting.ReadString(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding2,The following statement contains a magic number: Assert.AreEqual(1.234f.ToString()'                              StreamWireFormatting.ReadString(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding2,The following statement contains a magic number: Assert.AreEqual(1.234f.ToString()'                              StreamWireFormatting.ReadString(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestSingleDecoding2,The following statement contains a magic number: Assert.AreEqual(1.234f.ToString()'                              StreamWireFormatting.ReadString(Reader                                                              (new byte[] { 8' 63' 157' 243' 182 })));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteInt32(w' 1234);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteInt16(w' 1234);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteByte(w' 123);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteInt64(w' 1234);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteSingle(w' 1.234f);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteDouble(w' 1.234);
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteBytes(w' new byte[] { 1' 2' 3' 4 });
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteBytes(w' new byte[] { 1' 2' 3' 4 });
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: StreamWireFormatting.WriteBytes(w' new byte[] { 1' 2' 3' 4 });
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(1234' StreamWireFormatting.ReadInt32(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(1234' StreamWireFormatting.ReadInt16(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(123' StreamWireFormatting.ReadByte(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(1234' StreamWireFormatting.ReadInt64(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(1.234f' StreamWireFormatting.ReadSingle(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(1.234' StreamWireFormatting.ReadDouble(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(new byte[] { 1' 2' 3' 4 }' StreamWireFormatting.ReadBytes(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(new byte[] { 1' 2' 3' 4 }' StreamWireFormatting.ReadBytes(r));
Magic Number,RabbitMQ.Client.Unit,TestStreamWireFormatting,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestStreamWireFormatting.cs,TestRoundTrip,The following statement contains a magic number: Assert.AreEqual(new byte[] { 1' 2' 3' 4 }' StreamWireFormatting.ReadBytes(r));
Magic Number,RabbitMQ.Client.Unit,TestUpdateSecret,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestUpdateSecret.cs,RabbitMQ380OrHigher,The following statement contains a magic number: return version >= new Version(3' 8);
Magic Number,RabbitMQ.Client.Unit,TestUpdateSecret,C:\research\architectureSmells\repos\rabbitmq_rabbitmq-dotnet-client\projects\client\Unit\src\unit\TestUpdateSecret.cs,RabbitMQ380OrHigher,The following statement contains a magic number: return version >= new Version(3' 8);
