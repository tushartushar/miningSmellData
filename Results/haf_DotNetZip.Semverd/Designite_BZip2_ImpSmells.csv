Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,Cyclomatic complexity of the method is 19
Long Statement,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Usage,The length of the statement  "	string UsageMessage = "BZip2.exe:  compress a file using BZip2' or decompress a BZip2-compressed file. \n" + "            The original file is deleted after processing.\n" + "            This tool depends on Ionic's DotNetZip library. This is version {0} \n" + "            of the utility. See http://dotnetzip.codeplex.com for info.\n" + "  usage:\n   BZip2.exe <FileToProcess> [arguments]\n" + "\n  arguments: \n" + "    -v         - verbose output.\n" + "    -f         - force overwrite of any existing files.\n" + "    -keep      - don't delete the original file after compressing or \n" + "                 decompressing it.\n"; " is 634.
Long Statement,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Compress,The length of the statement  "	using (Stream fs = File.OpenRead (fname)' output = File.Create (outFname)' compressor = new Ionic.BZip2.ParallelBZip2OutputStream (output)) " is 139.
Long Statement,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Decompress,The length of the statement  "	using (Stream fs = File.OpenRead (fname)' output = File.Create (outFname)' decompressor = new Ionic.BZip2.BZip2InputStream (fs)) " is 128.
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: try {  	for (int i = 1; i < args.Length; i++) {  		switch (args [i]) {  		case "-keep":  			keepOriginal = true;  			break;  		case "-f":  			force = true;  			break;  		case "-v":  			verbose = true;  			break;  		default:  			throw new ArgumentException (args [i]);  		}  	}  	string fname = args [0];  	bool decompress = (fname.ToLower ().EndsWith (".bz") || fname.ToLower ().EndsWith (".bz2"));  	string result = decompress ? Decompress (fname' force) : Compress (fname' force);  	if (result == null) {  		Console.WriteLine ("No action taken. The file already exists.");  	} else {  		if (verbose) {  			var fi1 = new FileInfo (fname);  			var fi2 = new FileInfo (result);  			if (decompress) {  				Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  			} else {  				Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  			}  		}  		if (!keepOriginal) {  			File.Delete (fname);  		}  	}  } catch (System.Exception ex1) {  	System.Console.WriteLine ("Exception: " + ex1);  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: try {  	for (int i = 1; i < args.Length; i++) {  		switch (args [i]) {  		case "-keep":  			keepOriginal = true;  			break;  		case "-f":  			force = true;  			break;  		case "-v":  			verbose = true;  			break;  		default:  			throw new ArgumentException (args [i]);  		}  	}  	string fname = args [0];  	bool decompress = (fname.ToLower ().EndsWith (".bz") || fname.ToLower ().EndsWith (".bz2"));  	string result = decompress ? Decompress (fname' force) : Compress (fname' force);  	if (result == null) {  		Console.WriteLine ("No action taken. The file already exists.");  	} else {  		if (verbose) {  			var fi1 = new FileInfo (fname);  			var fi2 = new FileInfo (result);  			if (decompress) {  				Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  			} else {  				Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  			}  		}  		if (!keepOriginal) {  			File.Delete (fname);  		}  	}  } catch (System.Exception ex1) {  	System.Console.WriteLine ("Exception: " + ex1);  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: try {  	for (int i = 1; i < args.Length; i++) {  		switch (args [i]) {  		case "-keep":  			keepOriginal = true;  			break;  		case "-f":  			force = true;  			break;  		case "-v":  			verbose = true;  			break;  		default:  			throw new ArgumentException (args [i]);  		}  	}  	string fname = args [0];  	bool decompress = (fname.ToLower ().EndsWith (".bz") || fname.ToLower ().EndsWith (".bz2"));  	string result = decompress ? Decompress (fname' force) : Compress (fname' force);  	if (result == null) {  		Console.WriteLine ("No action taken. The file already exists.");  	} else {  		if (verbose) {  			var fi1 = new FileInfo (fname);  			var fi2 = new FileInfo (result);  			if (decompress) {  				Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  			} else {  				Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  			}  		}  		if (!keepOriginal) {  			File.Delete (fname);  		}  	}  } catch (System.Exception ex1) {  	System.Console.WriteLine ("Exception: " + ex1);  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: try {  	for (int i = 1; i < args.Length; i++) {  		switch (args [i]) {  		case "-keep":  			keepOriginal = true;  			break;  		case "-f":  			force = true;  			break;  		case "-v":  			verbose = true;  			break;  		default:  			throw new ArgumentException (args [i]);  		}  	}  	string fname = args [0];  	bool decompress = (fname.ToLower ().EndsWith (".bz") || fname.ToLower ().EndsWith (".bz2"));  	string result = decompress ? Decompress (fname' force) : Compress (fname' force);  	if (result == null) {  		Console.WriteLine ("No action taken. The file already exists.");  	} else {  		if (verbose) {  			var fi1 = new FileInfo (fname);  			var fi2 = new FileInfo (result);  			if (decompress) {  				Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  			} else {  				Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  				Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  				Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  			}  		}  		if (!keepOriginal) {  			File.Delete (fname);  		}  	}  } catch (System.Exception ex1) {  	System.Console.WriteLine ("Exception: " + ex1);  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (result == null) {  	Console.WriteLine ("No action taken. The file already exists.");  } else {  	if (verbose) {  		var fi1 = new FileInfo (fname);  		var fi2 = new FileInfo (result);  		if (decompress) {  			Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  		} else {  			Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  		}  	}  	if (!keepOriginal) {  		File.Delete (fname);  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (result == null) {  	Console.WriteLine ("No action taken. The file already exists.");  } else {  	if (verbose) {  		var fi1 = new FileInfo (fname);  		var fi2 = new FileInfo (result);  		if (decompress) {  			Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  		} else {  			Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  		}  	}  	if (!keepOriginal) {  		File.Delete (fname);  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (result == null) {  	Console.WriteLine ("No action taken. The file already exists.");  } else {  	if (verbose) {  		var fi1 = new FileInfo (fname);  		var fi2 = new FileInfo (result);  		if (decompress) {  			Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  		} else {  			Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  		}  	}  	if (!keepOriginal) {  		File.Delete (fname);  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (result == null) {  	Console.WriteLine ("No action taken. The file already exists.");  } else {  	if (verbose) {  		var fi1 = new FileInfo (fname);  		var fi2 = new FileInfo (result);  		if (decompress) {  			Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  		} else {  			Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  			Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  			Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  		}  	}  	if (!keepOriginal) {  		File.Delete (fname);  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (verbose) {  	var fi1 = new FileInfo (fname);  	var fi2 = new FileInfo (result);  	if (decompress) {  		Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  	} else {  		Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (verbose) {  	var fi1 = new FileInfo (fname);  	var fi2 = new FileInfo (result);  	if (decompress) {  		Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  	} else {  		Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (verbose) {  	var fi1 = new FileInfo (fname);  	var fi2 = new FileInfo (result);  	if (decompress) {  		Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  	} else {  		Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (verbose) {  	var fi1 = new FileInfo (fname);  	var fi2 = new FileInfo (result);  	if (decompress) {  		Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  	} else {  		Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  		Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  		Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  	}  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (decompress) {  	Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  } else {  	Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (decompress) {  	Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  } else {  	Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (decompress) {  	Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  } else {  	Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: if (decompress) {  	Console.WriteLine ("  Original    : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Decompressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  } else {  	Console.WriteLine ("  Original  : {0} bytes"' fi1.Length);  	Console.WriteLine ("  Compressed: {0} bytes"' fi2.Length);  	Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  }  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: Console.WriteLine ("  Comp Ratio  : {0:N1}%"' 100.0 - (fi1.Length / (0.01 * fi2.Length)));  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  
Magic Number,Ionic.Zip.Examples,BZip2,F:\newReposMay17\haf_DotNetZip.Semverd\src\Tools\BZip2\BZip2.cs,Main,The following statement contains a magic number: Console.WriteLine ("  Comp Ratio: {0:N1}%"' 100.0 - (fi2.Length / (0.01 * fi1.Length)));  
