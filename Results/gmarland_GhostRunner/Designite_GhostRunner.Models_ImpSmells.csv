Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GhostRunner.Models,CommandLineScript,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\CommandLineScript.cs,GetHTMLFormattedContent,The length of the statement  "		return content.Replace (Environment.NewLine' "<br/>").Replace ("\t"' "&nbsp;&nbsp;&nbsp;&nbsp;").Replace (" "' "&nbsp;"); " is 121.
Long Statement,GhostRunner.Models,GruntScript,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\GruntScript.cs,GetHTMLFormattedContent,The length of the statement  "		return content.Replace (Environment.NewLine' "<br/>").Replace ("\t"' "&nbsp;&nbsp;&nbsp;&nbsp;").Replace (" "' "&nbsp;"); " is 121.
Long Statement,GhostRunner.Models,NodeScript,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\NodeScript.cs,GetHTMLFormattedContent,The length of the statement  "		return content.Replace (Environment.NewLine' "<br/>").Replace ("\t"' "&nbsp;&nbsp;&nbsp;&nbsp;").Replace (" "' "&nbsp;"); " is 121.
Long Statement,GhostRunner.Models,PhantomJSScript,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\PhantomJSScript.cs,GetHTMLFormattedContent,The length of the statement  "		return content.Replace (Environment.NewLine' "<br/>").Replace ("\t"' "&nbsp;&nbsp;&nbsp;&nbsp;").Replace (" "' "&nbsp;"); " is 121.
Long Statement,GhostRunner.Models,TaskScript,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\TaskScript.cs,GetHTMLFormattedContent,The length of the statement  "		return Content.Replace (Environment.NewLine' "<br/>").Replace ("\t"' "&nbsp;&nbsp;&nbsp;&nbsp;").Replace (" "' "&nbsp;"); " is 121.
Long Statement,GhostRunner.Models.Migrations,Migration_0010100,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010100.cs,CreatePackageCacheTable,The length of the statement  "	command.CommandText = "CREATE TABLE PackageCache (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "Name TEXT NOT NULL' " + "Version TEXT NOT NULL' " + "Store INTEGER NOT NULL' " + "Project_ID INTEGER NULL' " + "FOREIGN KEY(Project_ID) REFERENCES Project(ID)" + ")"; " is 281.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateUserTable,The length of the statement  "	command.CommandText = "CREATE TABLE User (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "SessionId TEXT NULL' " + "Name TEXT NOT NULL' " + "Email TEXT NOT NULL' " + "Password TEXT NOT NULL' " + "Created TEXT NOT NULL" + ")"; " is 242.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateProjectTable,The length of the statement  "	command.CommandText = "CREATE TABLE Project (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "Name TEXT NOT NULL' " + "Created TEXT NOT NULL' " + "User_ID INTEGER NULL' " + "FOREIGN KEY(User_ID) REFERENCES User(ID)" + ")"; " is 238.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateScriptTable,The length of the statement  "	command.CommandText = "CREATE TABLE Script (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "Name TEXT NOT NULL' " + "Description TEXT NULL' " + "Content TEXT NULL' " + "Type INTEGER NOT NULL' " + "Project_ID INTEGER NULL' " + "FOREIGN KEY(Project_ID) REFERENCES Project(ID)" + ")"; " is 298.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateSequenceTable,The length of the statement  "	command.CommandText = "CREATE TABLE Sequence (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "Name TEXT NOT NULL' " + "Description TEXT NULL' " + "Project_ID INTEGER NULL' " + "FOREIGN KEY(Project_ID) REFERENCES Project(ID)" + ")"; " is 248.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateSequenceScriptTable,The length of the statement  "	command.CommandText = "CREATE TABLE SequenceScript (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "Name TEXT NOT NULL' " + "Content TEXT NOT NULL' " + "Type INTEGER NOT NULL' " + "Position INTEGER NOT NULL' " + "Sequence_ID INTEGER NULL' " + "FOREIGN KEY(Sequence_ID) REFERENCES Sequence(ID)" + ")"; " is 317.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateScheduleTable,The length of the statement  "	command.CommandText = "CREATE TABLE Schedule (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "ScheduleType INTEGER NOT NULL' " + "ScheduleItemId INTEGER NOT NULL' " + "ScheduleItemType INTEGER NOT NULL' " + "LastScheduled TEXT NULL' " + "Project_ID INTEGER NULL' " + "FOREIGN KEY(Project_ID) REFERENCES Project(ID)" + ")"; " is 339.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateScheduleDetailTable,The length of the statement  "	command.CommandText = "CREATE TABLE ScheduleDetail (" + "ID INTEGER PRIMARY KEY' " + "Name TEXT NOT NULL' " + "Value TEXT NULL' " + "Schedule_ID INTEGER NULL' " + "FOREIGN KEY(Schedule_ID) REFERENCES Schedule(ID)" + ")"; " is 220.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateScheduleParameterTable,The length of the statement  "	command.CommandText = "CREATE TABLE ScheduleParameter (" + "ID INTEGER PRIMARY KEY' " + "Name TEXT NOT NULL' " + "Value TEXT NULL' " + "Schedule_ID INTEGER NULL' " + "FOREIGN KEY(Schedule_ID) REFERENCES Schedule(ID)" + ")"; " is 223.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateTaskTable,The length of the statement  "	command.CommandText = "CREATE TABLE Task (" + "ID INTEGER PRIMARY KEY' " + "ExternalId TEXT NOT NULL' " + "Name TEXT NOT NULL' " + "Status INTEGER NOT NULL' " + "ParentId INTEGER NOT NULL' " + "ParentType INTEGER NOT NULL' " + "Created TEXT NOT NULL' " + "Started TEXT NULL' " + "Completed TEXT NULL' " + "Project_ID INTEGER NULL' " + "User_ID INTEGER NULL' " + "Script_ID INTEGER NULL' " + "FOREIGN KEY(Project_ID) REFERENCES Project(ID)' " + "FOREIGN KEY(User_ID) REFERENCES User(ID)' " + "FOREIGN KEY(Script_ID) REFERENCES Script(ID)" + ")"; " is 544.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateTaskScriptTable,The length of the statement  "	command.CommandText = "CREATE TABLE TaskScript (" + "ID INTEGER PRIMARY KEY' " + "Content TEXT NULL' " + "Type INTEGER NOT NULL' " + "Log TEXT NULL' " + "Position INTEGER NOT NULL' " + "Task_ID INTEGER NULL' " + "FOREIGN KEY(Task_ID) REFERENCES Task(ID)" + ")"; " is 261.
Long Statement,GhostRunner.Models.Migrations,Migration_0010000,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\Migrations\Migration_0010000.cs,CreateTaskScriptParameterTable,The length of the statement  "	command.CommandText = "CREATE TABLE TaskScriptParameter (" + "ID INTEGER PRIMARY KEY' " + "Name TEXT NOT NULL' " + "Value TEXT NULL' " + "TaskScript_ID INTEGER NULL' " + "FOREIGN KEY(TaskScript_ID) REFERENCES TaskScript(ID)" + ")"; " is 231.
Magic Number,GhostRunner.Models,GhostRunnerContext,F:\newReposMay17\gmarland_GhostRunner\GhostRunner.Models\GhostRunnerContext.cs,Initialize,The following statement contains a magic number: if (datasourceParts.Length == 2) {  	List<String> versions = new List<String> ();  	if (!File.Exists (datasourceParts [1]))  		SQLiteConnection.CreateFile (datasourceParts [1]);  	SQLiteConnection connection = new SQLiteConnection (connectionString);  	connection.Open ();  	SQLiteCommand schemaCommand = new SQLiteCommand (connection);  	schemaCommand.CommandText = "SELECT version FROM _Schema ORDER BY version";  	try {  		SQLiteDataReader schemaReader = schemaCommand.ExecuteReader ();  		DataTable dataTable = new DataTable ();  		dataTable.Load (schemaReader);  		foreach (DataRow row in dataTable.Rows) {  			versions.Add ((String)row ["version"]);  		}  	} catch (Exception) {  		SQLiteCommand writeSchemaCommand = new SQLiteCommand (connection);  		writeSchemaCommand.CommandText = "CREATE TABLE _Schema (version NVARCHAR(250) NOT NULL)";  		writeSchemaCommand.ExecuteNonQuery ();  	}  	String lastMigration = String.Empty;  	if (versions.Count > 0)  		lastMigration = versions.Last ();  	MigrationManager.AddMigrations (connection' lastMigration);  }  
