Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GhostRunner.Utils,EncryptionHelper,D:\research\architectureSmells\repos\gmarland_GhostRunner\GhostRunner.Utils\EncryptionHelper.cs,Hash,The length of the statement  "            System.Security.Cryptography.MD5CryptoServiceProvider cryptographer = new System.Security.Cryptography.MD5CryptoServiceProvider(); " is 130.
Missing Default,GhostRunner.Utils,ScriptHelper,D:\research\architectureSmells\repos\gmarland_GhostRunner\GhostRunner.Utils\ScriptHelper.cs,GetGhostRunnerScript,The following switch statement is missing a default case: switch (script.Type)              {                  case ScriptType.Git: return new GitScript(script);                  case ScriptType.CommandLine: return new CommandLineScript(script);                  case ScriptType.Node: return new NodeScript(script);                  case ScriptType.Grunt: return new GruntScript(script);                  case ScriptType.PhantomJS: return new PhantomJSScript(script);              }
Missing Default,GhostRunner.Utils,ScriptHelper,D:\research\architectureSmells\repos\gmarland_GhostRunner\GhostRunner.Utils\ScriptHelper.cs,GetGhostRunnerScript,The following switch statement is missing a default case: switch (sequenceScript.Type)              {                  case ScriptType.Git: return new GitScript(sequenceScript);                  case ScriptType.CommandLine: return new CommandLineScript(sequenceScript);                  case ScriptType.Node: return new NodeScript(sequenceScript);                  case ScriptType.Grunt: return new GruntScript(sequenceScript);                  case ScriptType.PhantomJS: return new PhantomJSScript(sequenceScript);              }
Missing Default,GhostRunner.Utils,ScriptHelper,D:\research\architectureSmells\repos\gmarland_GhostRunner\GhostRunner.Utils\ScriptHelper.cs,GetScriptType,The following switch statement is missing a default case: switch (scriptType.Trim().ToLower())              {                  case "git": return ScriptType.Git;                  case "commandline": return ScriptType.CommandLine;                  case "node": return ScriptType.Node;                  case "grunt": return ScriptType.Grunt;                  case "phantomjs": return ScriptType.PhantomJS;              }
Missing Default,GhostRunner.Utils,ScriptHelper,D:\research\architectureSmells\repos\gmarland_GhostRunner\GhostRunner.Utils\ScriptHelper.cs,GetNewScriptObject,The following switch statement is missing a default case: switch (scriptType.Trim().ToLower())              {                  case "git": return new GitScript();                  case "commandline": return new CommandLineScript();                  case "node": return new NodeScript();                  case "grunt": return new GruntScript();                  case "phantomjs": return new PhantomJSScript();              }
Missing Default,GhostRunner.Utils,ScriptHelper,D:\research\architectureSmells\repos\gmarland_GhostRunner\GhostRunner.Utils\ScriptHelper.cs,GetReadableScriptType,The following switch statement is missing a default case: switch (scriptType.Trim().ToLower())              {                  case "git": return "Git";                  case "commandline": return "Command Line";                  case "node": return "Node";                  case "grunt": return "Grunt";                  case "phantomjs": return "PhantomJS";              }
