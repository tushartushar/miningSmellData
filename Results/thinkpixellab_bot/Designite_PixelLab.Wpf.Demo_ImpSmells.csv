Implementation smell,Namespace,Class,File,Method,Description
Long Method,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The method has 120 lines of code.
Complex Method,PixelLab.Wpf.Demo,DemoCollection<T>,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\DemoCollection.cs,Reset,Cyclomatic complexity of the method is 8
Complex Method,PixelLab.Wpf.Demo,TreeViewHelperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewHelperClasses\TreeViewHelperPage.xaml.cs,click,Cyclomatic complexity of the method is 8
Complex Method,PixelLab.Wpf.Demo,VSCopyToHtmlPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VSCopyToHtmlPage.xaml.cs,getHtml,Cyclomatic complexity of the method is 8
Complex Method,PixelLab.Wpf.Demo.Hex,HexBoard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexStuff.cs,checkFirstRow,Cyclomatic complexity of the method is 10
Complex Method,PixelLab.Wpf.Demo.Hex,HexBoard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexStuff.cs,checkPiece,Cyclomatic complexity of the method is 15
Complex Method,PixelLab.Wpf.Demo.MineSweeper,MineField,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeper.cs,internalClearSquare,Cyclomatic complexity of the method is 9
Complex Method,PixelLab.Wpf.Demo.MineSweeper,MineField,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeper.cs,intervalRevealSquare,Cyclomatic complexity of the method is 9
Complex Method,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,Cyclomatic complexity of the method is 10
Complex Method,PixelLab.Wpf.Demo.Set,SetGame,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,GetSetsOnBoard,Cyclomatic complexity of the method is 8
Complex Method,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,Cyclomatic complexity of the method is 14
Long Parameter List,PixelLab.Wpf.Demo,DemoCollection<T>,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\DemoCollection.cs,DemoCollection,The method has 5 parameters. Parameters: sourceItems' activeItems' minCount' maxCount' initialCount
Long Parameter List,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The method has 5 parameters. Parameters: frontMaterial' size' center' backMaterial' backTextureCoordinates
Long Parameter List,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,CreateTile,The method has 5 parameters. Parameters: frontMaterial' backMaterial' sideMaterial' size' backMaterialCoordiantes
Long Parameter List,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,GetQuad,The method has 5 parameters. Parameters: bottomLeft' bottomRight' topRight' topLeft' material
Long Parameter List,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,GetQuad,The method has 6 parameters. Parameters: bottomLeft' bottomRight' topRight' topLeft' material' textureCoordinates
Long Parameter List,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,GetQuad,The method has 7 parameters. Parameters: bottomLeft' bottomRight' topRight' topLeft' material' backMaterial' textureCoordinates
Long Identifier,PixelLab.Wpf.Demo.FolderPicker,SelectableDirectory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FolderPicker\SelectableDirectory.cs,,The length of the parameter c_selectedDirectoriesPropertyName is 33.
Long Identifier,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,,The length of the parameter s_squigglePathFigureCollection is 30.
Long Statement,PixelLab.Wpf.Demo,TreeViewDoubleClickPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewDoubleClickPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PixelLab.Wpf.Demo;component/treeviewdoubleclickpage.xaml"' System.UriKind.Relative); " is 130.
Long Statement,PixelLab.Wpf.Demo,VisualTreeViewerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VisualTreeViewer\VisualTreeViewerPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PixelLab.Wpf.Demo;component/visualtreeviewer/visualtreeviewerpage.xaml"' System.UriKind.Relative); " is 144.
Long Statement,PixelLab.Wpf.Demo,TreeViewHelperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewHelperClasses\TreeViewHelperPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PixelLab.Wpf.Demo;component/treeviewhelperclasses/treeviewhelperpage.xaml"' System.UriKind.Relative); " is 147.
Long Statement,PixelLab.Wpf.Demo,VSCopyToHtmlPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VSCopyToHtmlPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PixelLab.Wpf.Demo;component/vscopytohtmlpage.xaml"' System.UriKind.Relative); " is 123.
Long Statement,PixelLab.Wpf.Demo.Core,XamlComponent,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Core\XamlComponent.cs,GetDemos,The length of the statement  "                            let demoDescription = domObject.GetAttatchedPropertyValueOrDefault<string>(DemoMetadataProperties.DemoDescriptionProperty) " is 122.
Long Statement,PixelLab.Wpf.Demo.MineSweeper,MineSweeperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeperPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PixelLab.Wpf.Demo;component/minesweeper/minesweeperpage.xaml"' System.UriKind.Relative); " is 134.
Long Statement,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,GetSamplePictures,The length of the statement  "                return (new Brush[] { Brushes.LightBlue' Brushes.Pink' Brushes.LightGray' Brushes.Yellow' Brushes.Orange' Brushes.LightGreen }) " is 127.
Long Statement,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The length of the statement  "            if (AnyDiff(m_scaleTransform.ScaleX' m_scaleCurrent' c_diff) || AnyDiff(m_scaleTransform.ScaleY' m_scaleCurrent' c_diff)) " is 121.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\_build\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Virtual Method Call from Constructor,PixelLab.Wpf.Demo.FolderPicker,LocalDrives,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FolderPicker\LocalDrives.cs,LocalDrives,The constructor "LocalDrives" calls a virtual method "OnPropertyChanged".
Virtual Method Call from Constructor,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The constructor "SetBoardElement" calls a virtual method "OnCardClick".
Empty Catch Block,PixelLab.Wpf.Demo.Core,SampleImageHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Core\SampleImageHelper.cs,GetPicturePaths,The method has an empty catch block.
Empty Catch Block,PixelLab.Wpf.Demo.Core,SampleImageHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Core\SampleImageHelper.cs,GetPicturePaths,The method has an empty catch block.
Empty Catch Block,PixelLab.Wpf.Demo.Core,SampleImageHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Core\SampleImageHelper.cs,GetPicturePaths,The method has an empty catch block.
Empty Catch Block,PixelLab.Wpf.Demo.Core,SampleImageHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Core\SampleImageHelper.cs,GetPicturePaths,The method has an empty catch block.
Empty Catch Block,PixelLab.Wpf.Demo.Core,SampleImageHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Core\SampleImageHelper.cs,GetPicturePaths,The method has an empty catch block.
Empty Catch Block,PixelLab.Wpf.Demo.FolderPicker,LocalDrives,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FolderPicker\LocalDrives.cs,LocalDrives,The method has an empty catch block.
Magic Number,PixelLab.Wpf.Demo,MainPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MainPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.m_sampleList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.m_contentFrame = ((System.Windows.Controls.Frame)(target));              return;              }
Magic Number,PixelLab.Wpf.Demo,TreeMapPanelPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeMapPanelPage.xaml.cs,TreeMapPanelPage,The following statement contains a magic number: m_colors                .Select(b => new Rectangle() { Fill = b' Margin = new Thickness(2) })                .ForEach(r =>                {                    TreeMapPanel.SetArea(r' Util.Rnd.NextDouble());                    m_treeMap.Children.Add(r);                });
Magic Number,PixelLab.Wpf.Demo,TreeViewDoubleClickPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewDoubleClickPage.xaml.cs,treeView_MouseLeftButtonDown,The following statement contains a magic number: e.ClickCount == 2
Magic Number,PixelLab.Wpf.Demo,TreeViewDoubleClickPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewDoubleClickPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((System.Windows.Controls.TreeView)(target));              return;              case 2:              this.textBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,PixelLab.Wpf.Demo,VisualTreeViewerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VisualTreeViewer\VisualTreeViewerPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\..\..\VisualTreeViewer\VisualTreeViewerPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.load_click);                            #line default              #line hidden              return;              case 2:              this.listBox = ((System.Windows.Controls.ListBox)(target));              return;              case 3:              this.treeView = ((System.Windows.Controls.TreeView)(target));              return;              }
Magic Number,PixelLab.Wpf.Demo,VisualTreeViewerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VisualTreeViewer\VisualTreeViewerPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\..\..\VisualTreeViewer\VisualTreeViewerPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.load_click);                            #line default              #line hidden              return;              case 2:              this.listBox = ((System.Windows.Controls.ListBox)(target));              return;              case 3:              this.treeView = ((System.Windows.Controls.TreeView)(target));              return;              }
Magic Number,PixelLab.Wpf.Demo,ColorGradientConverter,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ColorPicker\Code.cs,Convert,The following statement contains a magic number: switch (param)                  {                      case "Red":                          return new LinearGradientBrush(Color.FromRgb(0' color.G' color.B)' Color.FromRgb(255' color.G' color.B)' 0);                      case "Green":                          return new LinearGradientBrush(Color.FromRgb(color.R' 0' color.B)' Color.FromRgb(color.R' 255' color.B)' 0);                      case "Blue":                          return new LinearGradientBrush(Color.FromRgb(color.R' color.G' 0)' Color.FromRgb(color.R' color.G' 255)' 0);                      default:                          throw new ArgumentException("not valid value"' "parameter");                  }
Magic Number,PixelLab.Wpf.Demo,ColorGradientConverter,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ColorPicker\Code.cs,Convert,The following statement contains a magic number: switch (param)                  {                      case "Red":                          return new LinearGradientBrush(Color.FromRgb(0' color.G' color.B)' Color.FromRgb(255' color.G' color.B)' 0);                      case "Green":                          return new LinearGradientBrush(Color.FromRgb(color.R' 0' color.B)' Color.FromRgb(color.R' 255' color.B)' 0);                      case "Blue":                          return new LinearGradientBrush(Color.FromRgb(color.R' color.G' 0)' Color.FromRgb(color.R' color.G' 255)' 0);                      default:                          throw new ArgumentException("not valid value"' "parameter");                  }
Magic Number,PixelLab.Wpf.Demo,ColorGradientConverter,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ColorPicker\Code.cs,Convert,The following statement contains a magic number: switch (param)                  {                      case "Red":                          return new LinearGradientBrush(Color.FromRgb(0' color.G' color.B)' Color.FromRgb(255' color.G' color.B)' 0);                      case "Green":                          return new LinearGradientBrush(Color.FromRgb(color.R' 0' color.B)' Color.FromRgb(color.R' 255' color.B)' 0);                      case "Blue":                          return new LinearGradientBrush(Color.FromRgb(color.R' color.G' 0)' Color.FromRgb(color.R' color.G' 255)' 0);                      default:                          throw new ArgumentException("not valid value"' "parameter");                  }
Magic Number,PixelLab.Wpf.Demo,TreeViewHelperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewHelperClasses\TreeViewHelperPage.xaml.cs,resetData,The following statement contains a magic number: _theThing = new TreeViewDataItem(DataTree.GetRandomDataTree(5' 5)' "Children");
Magic Number,PixelLab.Wpf.Demo,TreeViewHelperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewHelperClasses\TreeViewHelperPage.xaml.cs,resetData,The following statement contains a magic number: _theThing = new TreeViewDataItem(DataTree.GetRandomDataTree(5' 5)' "Children");
Magic Number,PixelLab.Wpf.Demo,GraphPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Graph\GraphPage.xaml.cs,GraphPage,The following statement contains a magic number: m_dispatchTimer.Interval = TimeSpan.FromSeconds(.1);
Magic Number,PixelLab.Wpf.Demo,GraphPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Graph\GraphPage.xaml.cs,churn,The following statement contains a magic number: Util.Rnd.Next(20) == 0
Magic Number,PixelLab.Wpf.Demo,NodeCollection<T>,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Graph\NodeClasses.cs,Churn,The following statement contains a magic number: m_nodeConnections.Count < 3
Magic Number,PixelLab.Wpf.Demo,ListPagerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ListPagerPage.xaml.cs,ListPagerPage,The following statement contains a magic number: setItems(100);
Magic Number,PixelLab.Wpf.Demo,ListPagerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ListPagerPage.xaml.cs,setItems,The following statement contains a magic number: setItems(Util.Rnd.Next(5' 15) * 3);
Magic Number,PixelLab.Wpf.Demo,ListPagerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ListPagerPage.xaml.cs,setItems,The following statement contains a magic number: setItems(Util.Rnd.Next(5' 15) * 3);
Magic Number,PixelLab.Wpf.Demo,ListPagerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ListPagerPage.xaml.cs,setItems,The following statement contains a magic number: setItems(Util.Rnd.Next(5' 15) * 3);
Magic Number,PixelLab.Wpf.Demo,Interactive3DPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Interactive3DPage.xaml.cs,Interactive3DPage,The following statement contains a magic number: m_treeMap3DUserControl.ItemsSource = Agent.GetRandomList(10);
Magic Number,PixelLab.Wpf.Demo,Agent,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Interactive3DPage.xaml.cs,GetRandom,The following statement contains a magic number: return new Agent(GetRandomString(1' 5)' GetRandomString(1' 6)' GetRandomString(5' 0));
Magic Number,PixelLab.Wpf.Demo,Agent,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Interactive3DPage.xaml.cs,GetRandom,The following statement contains a magic number: return new Agent(GetRandomString(1' 5)' GetRandomString(1' 6)' GetRandomString(5' 0));
Magic Number,PixelLab.Wpf.Demo,Agent,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Interactive3DPage.xaml.cs,GetRandom,The following statement contains a magic number: return new Agent(GetRandomString(1' 5)' GetRandomString(1' 6)' GetRandomString(5' 0));
Magic Number,PixelLab.Wpf.Demo,Agent,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Interactive3DPage.xaml.cs,GetRandomChar,The following statement contains a magic number: return GetChar(Util.Rnd.Next(26)' isUpper);
Magic Number,PixelLab.Wpf.Demo,NotifyWorkerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\NotifyWorkerPage.xaml.cs,work,The following statement contains a magic number: (Util.Rnd.Next(10) % 9) == 0
Magic Number,PixelLab.Wpf.Demo,NotifyWorkerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\NotifyWorkerPage.xaml.cs,work,The following statement contains a magic number: (Util.Rnd.Next(10) % 9) == 0
Magic Number,PixelLab.Wpf.Demo,NotifyWorkerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\NotifyWorkerPage.xaml.cs,SlowSum,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,PixelLab.Wpf.Demo,ShowElementPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ShowElementPage.xaml.cs,ShowElementPage,The following statement contains a magic number: IList<BitmapImage> images = SampleImageHelper.GetBitmapImages(10).ToArray();
Magic Number,PixelLab.Wpf.Demo,ShowElementPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\ShowElementPage.xaml.cs,ShowElementPage,The following statement contains a magic number: DispatcherTimer timer = new DispatcherTimer() { Interval = TimeSpan.FromSeconds(4) };
Magic Number,PixelLab.Wpf.Demo,TransitionPresenterPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TransitionPresenter\TransitionPresenterPage.xaml.cs,OnLoaded,The following statement contains a magic number: List<object> data = new List<object>(17);
Magic Number,PixelLab.Wpf.Demo,TransitionPresenterPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TransitionPresenter\TransitionPresenterPage.xaml.cs,OnLoaded,The following statement contains a magic number: SampleImageHelper.GetPicturePaths().Take(8).ForEach(path => data.Add(new Picture(path)));
Magic Number,PixelLab.Wpf.Demo,TransitionPresenterPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TransitionPresenter\TransitionPresenterPage.xaml.cs,OnLoaded,The following statement contains a magic number: i < Math.Min(props.Length' 8)
Magic Number,PixelLab.Wpf.Demo,VSCopyToHtmlPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VSCopyToHtmlPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.m_richTextBox = ((System.Windows.Controls.RichTextBox)(target));                            #line 20 "..\..\..\VSCopyToHtmlPage.xaml"              this.m_richTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.m_richTextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.m_textBoxHtml = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,PixelLab.Wpf.Demo.Hex,Hexagon,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\Hexagon.cs,getGeometry,The following statement contains a magic number: double radiansPerPoint = Math.PI * 2 / PointCount;
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,HexBoardElement,The following statement contains a magic number: _decorations = new ContentControl[(_hexBoard.Size - 1) * 4];
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getBoardSize,The following statement contains a magic number: return new Size(s_defaultItemSize.Width * (3 * _hexBoard.Size / 2d - .5d)' _hexBoard.Size * s_defaultItemSize.Height);
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getBoardSize,The following statement contains a magic number: return new Size(s_defaultItemSize.Width * (3 * _hexBoard.Size / 2d - .5d)' _hexBoard.Size * s_defaultItemSize.Height);
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getBoardSize,The following statement contains a magic number: return new Size(s_defaultItemSize.Width * (3 * _hexBoard.Size / 2d - .5d)' _hexBoard.Size * s_defaultItemSize.Height);
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,setDecorations,The following statement contains a magic number: bool isWhite = (i / ((_hexBoard.Size - 1) * 2)) == 0;
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,setDecorations,The following statement contains a magic number: contentControl.Opacity = .3;
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getDecoratorPnt,The following statement contains a magic number: switch (section)              {                  case 0:                      return new PointInt(i + 1' -1);                  case 1:                      return new PointInt((i - _hexBoard.Size) + 1' _hexBoard.Size);                  case 2:                      return new PointInt(-1' 1 + i - ((_hexBoard.Size - 1) * 2));                  case 3:                      return new PointInt(_hexBoard.Size' i - ((_hexBoard.Size - 1) * 3));                  default:                      throw new ArgumentException("shouldn't get here"' "i");              }
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getDecoratorPnt,The following statement contains a magic number: switch (section)              {                  case 0:                      return new PointInt(i + 1' -1);                  case 1:                      return new PointInt((i - _hexBoard.Size) + 1' _hexBoard.Size);                  case 2:                      return new PointInt(-1' 1 + i - ((_hexBoard.Size - 1) * 2));                  case 3:                      return new PointInt(_hexBoard.Size' i - ((_hexBoard.Size - 1) * 3));                  default:                      throw new ArgumentException("shouldn't get here"' "i");              }
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getDecoratorPnt,The following statement contains a magic number: switch (section)              {                  case 0:                      return new PointInt(i + 1' -1);                  case 1:                      return new PointInt((i - _hexBoard.Size) + 1' _hexBoard.Size);                  case 2:                      return new PointInt(-1' 1 + i - ((_hexBoard.Size - 1) * 2));                  case 3:                      return new PointInt(_hexBoard.Size' i - ((_hexBoard.Size - 1) * 3));                  default:                      throw new ArgumentException("shouldn't get here"' "i");              }
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexBoardElement.cs,getDecoratorPnt,The following statement contains a magic number: switch (section)              {                  case 0:                      return new PointInt(i + 1' -1);                  case 1:                      return new PointInt((i - _hexBoard.Size) + 1' _hexBoard.Size);                  case 2:                      return new PointInt(-1' 1 + i - ((_hexBoard.Size - 1) * 2));                  case 3:                      return new PointInt(_hexBoard.Size' i - ((_hexBoard.Size - 1) * 3));                  default:                      throw new ArgumentException("shouldn't get here"' "i");              }
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: Point point = new Point(0' itemHeight * .5 * (count - 1));
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: point.X += (itemWidth * 3 / 4) * location.Row;
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: point.X += (itemWidth * 3 / 4) * location.Row;
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: point.Y += (itemHeight / 2) * location.Row;
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: point.X += (itemWidth * 3 / 4) * location.Column;
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: point.X += (itemWidth * 3 / 4) * location.Column;
Magic Number,PixelLab.Wpf.Demo.Hex,HexHelper,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexHelper.cs,GetTopLeft,The following statement contains a magic number: point.Y -= (itemHeight / 2) * location.Column;
Magic Number,PixelLab.Wpf.Demo.Hex,HexBoard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Hex\HexStuff.cs,HexBoard,The following statement contains a magic number: Contract.Requires<ArgumentOutOfRangeException>(size >= 2);
Magic Number,PixelLab.Wpf.Demo.MineSweeper,MineField,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeper.cs,GetAdjacentSquares,The following statement contains a magic number: return from y in Enumerable.Range(row - 1' 3)                     from x in Enumerable.Range(col - 1' 3)                     where !(x == col && y == row)                     where x >= 0 && x < _columns                     where y >= 0 && y < _rows                     select GetSquare(x' y);
Magic Number,PixelLab.Wpf.Demo.MineSweeper,MineField,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeper.cs,GetAdjacentSquares,The following statement contains a magic number: return from y in Enumerable.Range(row - 1' 3)                     from x in Enumerable.Range(col - 1' 3)                     where !(x == col && y == row)                     where x >= 0 && x < _columns                     where y >= 0 && y < _rows                     select GetSquare(x' y);
Magic Number,PixelLab.Wpf.Demo.MineSweeper,GameStateBrushConverter,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeperPage.xaml.cs,makeBrush,The following statement contains a magic number: return new LinearGradientBrush(new GradientStopCollection()              {                  new GradientStop(Colors.White'0)'                  new GradientStop(color' 1)              }' 45);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: PerspectiveCamera camera = new PerspectiveCamera(                  new Point3D(0' 0' 3.73)' //position                  new Vector3D(0' 0' -1)' //lookDirection                  new Vector3D(0' 1' 0)' //upDirection                  30 //FOV                  );
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: PerspectiveCamera camera = new PerspectiveCamera(                  new Point3D(0' 0' 3.73)' //position                  new Vector3D(0' 0' -1)' //lookDirection                  new Vector3D(0' 1' 0)' //upDirection                  30 //FOV                  );
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: double tileSizeX = 2.0 / c_xCount;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: double startX = -((double)c_xCount) / 2 * tileSizeX + tileSizeX / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: double startX = -((double)c_xCount) / 2 * tileSizeX + tileSizeX / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: double startY = -((double)c_yCount) / 2 * tileSizeX + tileSizeX / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,setup3D,The following statement contains a magic number: double startY = -((double)c_yCount) / 2 * tileSizeX + tileSizeX / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,GetSamplePictures,The following statement contains a magic number: return files                    .Select(file =>                    {                        BitmapImage bitmapImage = new BitmapImage();                        bitmapImage.BeginInit();                        bitmapImage.UriSource = new Uri(file);                        bitmapImage.DecodePixelWidth = 320;                        bitmapImage.DecodePixelHeight = 240;                        bitmapImage.EndInit();                        bitmapImage.Freeze();                          ImageBrush imageBrush = new ImageBrush(bitmapImage);                        imageBrush.Stretch = Stretch.UniformToFill;                        imageBrush.ViewportUnits = BrushMappingMode.Absolute;                        imageBrush.Freeze();                          return new DiffuseMaterial(imageBrush);                    })                    .ToReadOnlyCollection();
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,GetSamplePictures,The following statement contains a magic number: return files                    .Select(file =>                    {                        BitmapImage bitmapImage = new BitmapImage();                        bitmapImage.BeginInit();                        bitmapImage.UriSource = new Uri(file);                        bitmapImage.DecodePixelWidth = 320;                        bitmapImage.DecodePixelHeight = 240;                        bitmapImage.EndInit();                        bitmapImage.Freeze();                          ImageBrush imageBrush = new ImageBrush(bitmapImage);                        imageBrush.Stretch = Stretch.UniformToFill;                        imageBrush.ViewportUnits = BrushMappingMode.Absolute;                        imageBrush.Freeze();                          return new DiffuseMaterial(imageBrush);                    })                    .ToReadOnlyCollection();
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,fixMouse,The following statement contains a magic number: double scale = Math.Max(size.Width' size.Height) / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,fixMouse,The following statement contains a magic number: mouse.Y -= size.Height / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile3D.cs,fixMouse,The following statement contains a magic number: mouse.X -= size.Width / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: m_locationCurrent = new Point3D(0' 0' Util.Rnd.NextDouble() * 10 - 20);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: m_locationCurrent = new Point3D(0' 0' Util.Rnd.NextDouble() * 10 - 20);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D topLeft = new Point3D(-size.Width / 2' size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D topLeft = new Point3D(-size.Width / 2' size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D topRight = new Point3D(size.Width / 2' size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D topRight = new Point3D(size.Width / 2' size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D bottomLeft = new Point3D(-size.Width / 2' -size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D bottomLeft = new Point3D(-size.Width / 2' -size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D bottomRight = new Point3D(size.Width / 2' -size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: Point3D bottomRight = new Point3D(size.Width / 2' -size.Height / 2' 0);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,FlipTile,The following statement contains a magic number: quad.Children.Add(                  CreateTile(                      frontMaterial'                      backMaterial'                      m_borderMaterial'                      new Size3D(size.Width' size.Height' .01)'                      backTextureCoordinates));
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_rotationVelocity *= new Quaternion(rotationForce.Axis' rotationForce.Angle * .2);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_rotationVelocity = new Quaternion(m_rotationVelocity.Axis' m_rotationVelocity.Angle * (m_weird - .3));
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: double verticalFlipTarget = isFlipped ? 180 : 0;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_flipVerticalVelocity += .3 * verticalFlipForce;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_flipVerticalVelocity *= (m_weird - .3);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_flipVerticalVelocity = limitDouble(m_flipVerticalVelocity' 10);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: this.m_scaleDesired = 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: this.m_scaleVelocity += .1 * scaleForce;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: this.m_scaleVelocity *= .8;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: this.m_scaleVelocity = limitDouble(this.m_scaleVelocity' .05);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_locationDesired.Z = .1;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: locationForce += .025 * invertVector(this.CurrentLocationVector - new Vector3D(lastMouse.X' lastMouse.Y' 0));
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_locationVelocity += .1 * locationForce;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_locationVelocity *= (m_weird - .3);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,TickData,The following statement contains a magic number: m_locationVelocity = limitVector3D(m_locationVelocity' .3);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,CreateTile,The following statement contains a magic number: double w = size.X / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,CreateTile,The following statement contains a magic number: double h = size.Y / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,CreateTile,The following statement contains a magic number: double d = size.Z / 2;
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,CreateTile,The following statement contains a magic number: RotateTransform3D backRotate =                  new RotateTransform3D(new AxisAngleRotation3D(new Vector3D(0' 1' 0)' 180)' new Point3D());
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,CreateTile,The following statement contains a magic number: RotateTransform3D backFlip =                  new RotateTransform3D(new AxisAngleRotation3D(new Vector3D(0' 0' 1)' 180)' new Point3D());
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,GetQuad,The following statement contains a magic number: mesh.TriangleIndices.Add(2);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,GetQuad,The following statement contains a magic number: mesh.TriangleIndices.Add(2);
Magic Number,PixelLab.Wpf.Demo.FlipTile3D,FlipTile,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\FlipTile3D\FlipTile.cs,GetQuad,The following statement contains a magic number: mesh.TriangleIndices.Add(3);
Magic Number,PixelLab.Wpf.Demo.Set,SetGame,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,IsSet,The following statement contains a magic number: i < 4
Magic Number,PixelLab.Wpf.Demo.Set,SetGame,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,Test,The following statement contains a magic number: TryPlay(                      item[0]'                      item[1]'                      item[2]);
Magic Number,PixelLab.Wpf.Demo.Set,SetGame,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetBoardCard,The following statement contains a magic number: Contract.Requires<ArgumentOutOfRangeException>(deckIndex >= 0 && deckIndex < 81);
Magic Number,PixelLab.Wpf.Demo.Set,Set,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,Set,The following statement contains a magic number: Contract.Requires(cards.Length == 3);
Magic Number,PixelLab.Wpf.Demo.Set,Set,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,Set,The following statement contains a magic number: Contract.Requires(SetGame.IsSet(cards[0]' cards[1]' cards[2]));
Magic Number,PixelLab.Wpf.Demo.Set,Set,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,ToString,The following statement contains a magic number: return string.Format("Set: {0}' {1}' {2}"'                  this[0]' this[1]' this[2]);
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: Contract.Requires<ArgumentOutOfRangeException>(deckIndex >= 0 && deckIndex < 81' "deckIndex");
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: int[] profile = new int[] { deckIndex / 27' (deckIndex / 9) % 3' (deckIndex / 3) % 3' deckIndex % 3 };
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: int[] profile = new int[] { deckIndex / 27' (deckIndex / 9) % 3' (deckIndex / 3) % 3' deckIndex % 3 };
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: int[] profile = new int[] { deckIndex / 27' (deckIndex / 9) % 3' (deckIndex / 3) % 3' deckIndex % 3 };
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: int[] profile = new int[] { deckIndex / 27' (deckIndex / 9) % 3' (deckIndex / 3) % 3' deckIndex % 3 };
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: int[] profile = new int[] { deckIndex / 27' (deckIndex / 9) % 3' (deckIndex / 3) % 3' deckIndex % 3 };
Magic Number,PixelLab.Wpf.Demo.Set,SetCard,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\Set.cs,SetCard,The following statement contains a magic number: int[] profile = new int[] { deckIndex / 27' (deckIndex / 9) % 3' (deckIndex / 3) % 3' deckIndex % 3 };
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: Vector3D offset = new Vector3D(                  -s_setCard3DSize.Width * 1.5 - 1.5 * c_setCardMargin'                  s_setCard3DSize.Height + c_setCardMargin'                  0);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: Vector3D offset = new Vector3D(                  -s_setCard3DSize.Width * 1.5 - 1.5 * c_setCardMargin'                  s_setCard3DSize.Height + c_setCardMargin'                  0);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: row = i / 4;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: column = i % 4;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: camera.Position = new Point3D(0' 0' 500);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight1.Content = new PointLight(Color.FromRgb(255' 255' 255)' new Point3D(-100' 200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight1.Content = new PointLight(Color.FromRgb(255' 255' 255)' new Point3D(-100' 200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight1.Content = new PointLight(Color.FromRgb(255' 255' 255)' new Point3D(-100' 200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight1.Content = new PointLight(Color.FromRgb(255' 255' 255)' new Point3D(-100' 200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight1.Content = new PointLight(Color.FromRgb(255' 255' 255)' new Point3D(-100' 200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight1.Content = new PointLight(Color.FromRgb(255' 255' 255)' new Point3D(-100' 200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight2.Content = new PointLight(Color.FromRgb(45' 45' 50)' new Point3D(100' -200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight2.Content = new PointLight(Color.FromRgb(45' 45' 50)' new Point3D(100' -200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight2.Content = new PointLight(Color.FromRgb(45' 45' 50)' new Point3D(100' -200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight2.Content = new PointLight(Color.FromRgb(45' 45' 50)' new Point3D(100' -200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight2.Content = new PointLight(Color.FromRgb(45' 45' 50)' new Point3D(100' -200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetBoardElement,The following statement contains a magic number: modelView3DPointLight2.Content = new PointLight(Color.FromRgb(45' 45' 50)' new Point3D(100' -200' 500));
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,ResetCards,The following statement contains a magic number: m_cards.ForEach(card => card.CurrentZVelocity = -50);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,OnCardClick,The following statement contains a magic number: card.CurrentZVelocity = -10;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,OnCardClick,The following statement contains a magic number: Debug.Assert(m_checkedCards.Count <= 3);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,OnCardClick,The following statement contains a magic number: int index2 = m_cards.IndexOf(m_checkedCards[2]);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,OnCardClick,The following statement contains a magic number: double velocity = goodPlay ? -50 : -20;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,OnCardClick,The following statement contains a magic number: double velocity = goodPlay ? -50 : -20;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,OnCardClick,The following statement contains a magic number: m_checkedCards.Count == 3
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: double zTranslateTarget = (card.IsChecked) ? 50 : 0;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: zTranslateTarget += (card.IsMouseOver) ? -10 : 0;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: double attractionFactor = .05;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: attractionFactor *= 1 + (card.Variation - .5);
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: stillAnimating = GeoHelper.Animate(card.TranslateTransform3D.OffsetZ' card.CurrentZVelocity' zTranslateTarget'                      attractionFactor' .3' 1000' .00001' .00001'                      out newTranslate' out newVelocity) || stillAnimating;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: stillAnimating = GeoHelper.Animate(card.TranslateTransform3D.OffsetZ' card.CurrentZVelocity' zTranslateTarget'                      attractionFactor' .3' 1000' .00001' .00001'                      out newTranslate' out newVelocity) || stillAnimating;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: stillAnimating = GeoHelper.Animate(card.TranslateTransform3D.OffsetZ' card.CurrentZVelocity' zTranslateTarget'                      attractionFactor' .3' 1000' .00001' .00001'                      out newTranslate' out newVelocity) || stillAnimating;
Magic Number,PixelLab.Wpf.Demo.Set,SetBoardElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,m_listener_Rendering,The following statement contains a magic number: stillAnimating = GeoHelper.Animate(card.TranslateTransform3D.OffsetZ' card.CurrentZVelocity' zTranslateTarget'                      attractionFactor' .3' 1000' .00001' .00001'                      out newTranslate' out newVelocity) || stillAnimating;
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,SetCard3D,The following statement contains a magic number: this.Visual3DModel = m_geometry = GetQuad(                      new Point3D(-50' -70' 0)' new Point3D(50' -70' 0)' new Point3D(50' 70' 0)' new Point3D(-50' 70' 0)'                      material' material' new Rect(0' 0' 1' 1));
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,GetQuad,The following statement contains a magic number: mesh.TriangleIndices.Add(2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,GetQuad,The following statement contains a magic number: mesh.TriangleIndices.Add(2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCard3D,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetBoardElement.cs,GetQuad,The following statement contains a magic number: mesh.TriangleIndices.Add(3);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: s_greenPen = new Pen(Brushes.Green' 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: s_redPen = new Pen(Brushes.Red' 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: s_purplePen = new Pen(Brushes.Purple' 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: RectangleGeometry geometry = new RectangleGeometry(new Rect(0' 0' 100' 140)' 10' 10);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: RectangleGeometry geometry = new RectangleGeometry(new Rect(0' 0' 100' 140)' 10' 10);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: RectangleGeometry geometry = new RectangleGeometry(new Rect(0' 0' 100' 140)' 10' 10);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,SetCardDrawingFactory,The following statement contains a magic number: RectangleGeometry geometry = new RectangleGeometry(new Rect(0' 0' 100' 140)' 10' 10);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following statement contains a magic number: Point startCenter = new Point(s_cardSize.Width / 2' s_cardSize.Height / 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following statement contains a magic number: Point startCenter = new Point(s_cardSize.Width / 2' s_cardSize.Height / 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following statement contains a magic number: startCenter.Y -= c_centerOffset / 2;
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following statement contains a magic number: setCard.Count == 2
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following statement contains a magic number: switch (setCard.Shape)                  {                      case SetShape.Diamond:                            itemGeometry = GetDiamondGeometry();                          break;                        case SetShape.Oval:                            itemGeometry = new RectangleGeometry(                              new Rect(s_itemSize)'                              s_itemSize.Height / 2'                              s_itemSize.Height / 2);                          break;                        case SetShape.Squiggle:                            itemGeometry = new PathGeometry(s_squigglePathFigureCollection);                          break;                  }
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following statement contains a magic number: switch (setCard.Shape)                  {                      case SetShape.Diamond:                            itemGeometry = GetDiamondGeometry();                          break;                        case SetShape.Oval:                            itemGeometry = new RectangleGeometry(                              new Rect(s_itemSize)'                              s_itemSize.Height / 2'                              s_itemSize.Height / 2);                          break;                        case SetShape.Squiggle:                            itemGeometry = new PathGeometry(s_squigglePathFigureCollection);                          break;                  }
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCenterTransform,The following statement contains a magic number: Vector centerAtOrigin = (Vector)center + ((Vector)bounds.TopLeft - (Vector)bounds.BottomRight) / 2;
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetDiamondGeometry,The following statement contains a magic number: Point[] points = new Point[]{                  new Point(0' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' s_itemSize.Height)'                  new Point(s_itemSize.Width' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' 0)};
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetDiamondGeometry,The following statement contains a magic number: Point[] points = new Point[]{                  new Point(0' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' s_itemSize.Height)'                  new Point(s_itemSize.Width' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' 0)};
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetDiamondGeometry,The following statement contains a magic number: Point[] points = new Point[]{                  new Point(0' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' s_itemSize.Height)'                  new Point(s_itemSize.Width' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' 0)};
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetDiamondGeometry,The following statement contains a magic number: Point[] points = new Point[]{                  new Point(0' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' s_itemSize.Height)'                  new Point(s_itemSize.Width' s_itemSize.Height / 2)'                  new Point(s_itemSize.Width / 2' 0)};
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: Geometry solidGeometry = new RectangleGeometry(new Rect(0' 0' 5' 5));
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: Geometry solidGeometry = new RectangleGeometry(new Rect(0' 0' 5' 5));
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: Geometry blankGeometry = new RectangleGeometry(new Rect(5' 0' 5' 5));
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: Geometry blankGeometry = new RectangleGeometry(new Rect(5' 0' 5' 5));
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: Geometry blankGeometry = new RectangleGeometry(new Rect(5' 0' 5' 5));
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: drawingBrush.Viewport = new Rect(0' 0' 4' 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetStripeBrush,The following statement contains a magic number: drawingBrush.Viewport = new Rect(0' 0' 4' 2);
Magic Number,PixelLab.Wpf.Demo.Set,SetPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetPage.xaml.cs,SetPage,The following statement contains a magic number: testButton.Padding = new Thickness(5);
Magic Number,PixelLab.Wpf.Demo.Set,SetPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetPage.xaml.cs,SetPage,The following statement contains a magic number: testButton.Margin = new Thickness(10' 0' 0' 0);
Missing Default,PixelLab.Wpf.Demo,MainPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MainPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.m_sampleList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.m_contentFrame = ((System.Windows.Controls.Frame)(target));              return;              }
Missing Default,PixelLab.Wpf.Demo,TreeViewDoubleClickPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewDoubleClickPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.treeView = ((System.Windows.Controls.TreeView)(target));              return;              case 2:              this.textBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,PixelLab.Wpf.Demo,VisualTreeViewerPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VisualTreeViewer\VisualTreeViewerPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 17 "..\..\..\..\VisualTreeViewer\VisualTreeViewerPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.load_click);                            #line default              #line hidden              return;              case 2:              this.listBox = ((System.Windows.Controls.ListBox)(target));              return;              case 3:              this.treeView = ((System.Windows.Controls.TreeView)(target));              return;              }
Missing Default,PixelLab.Wpf.Demo,TreeViewHelperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\TreeViewHelperClasses\TreeViewHelperPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.treeView = ((System.Windows.Controls.TreeView)(target));              return;              }
Missing Default,PixelLab.Wpf.Demo,VSCopyToHtmlPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\VSCopyToHtmlPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.m_richTextBox = ((System.Windows.Controls.RichTextBox)(target));                            #line 20 "..\..\..\VSCopyToHtmlPage.xaml"              this.m_richTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.m_richTextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.m_textBoxHtml = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,PixelLab.Wpf.Demo.MineSweeper,MineFieldElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineFieldElement.cs,cc_MouseDown,The following switch statement is missing a default case: switch (e.ChangedButton)              {                  case MouseButton.Middle:                      _middleDownControl = cc;                      break;                  case MouseButton.Left:                      _leftDownControl = cc;                      _clickCount = e.ClickCount;                      break;                  case MouseButton.Right:                      var square = (Square)cc.Content;                        checkTimer();                      MineField.ToggleSquare(square.Column' square.Row);                      break;              }
Missing Default,PixelLab.Wpf.Demo.MineSweeper,MineFieldElement,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineFieldElement.cs,cc_MouseUp,The following switch statement is missing a default case: switch (e.ChangedButton)                  {                      case MouseButton.Middle:                            if (cc == _middleDownControl)                          {                              checkTimer();                              MineField.ClearSquare(square.Column' square.Row);                          }                          _middleDownControl = null;                          break;                      case MouseButton.Left:                            if (cc == _leftDownControl)                          {                              checkTimer();                              MineField.RevealSquare(square.Column' square.Row' _clickCount > 1);                          }                          _leftDownControl = null;                          break;                  }
Missing Default,PixelLab.Wpf.Demo.MineSweeper,MineField,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeper.cs,ToggleSquare,The following switch statement is missing a default case: switch (s.State)                      {                          case SquareState.Unknown:                              s.State = SquareState.Flagged;                              break;                          case SquareState.Flagged:                              s.State = SquareState.Question;                              break;                          case SquareState.Question:                              s.State = SquareState.Unknown;                              break;                      }
Missing Default,PixelLab.Wpf.Demo.MineSweeper,MineSweeperPage,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\MineSweeper\MineSweeperPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.m_mineField = ((PixelLab.Wpf.Demo.MineSweeper.MineFieldElement)(target));              return;              }
Missing Default,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following switch statement is missing a default case: switch (setCard.Fill)              {                  case SetFill.Solid:                      switch (setCard.Color)                      {                          case SetColor.Green:                              itemBrush = Brushes.Green;                              break;                          case SetColor.Purple:                              itemBrush = Brushes.Purple;                              break;                          case SetColor.Red:                              itemBrush = Brushes.Red;                              break;                      }                      break;                    case SetFill.Stripe:                      switch (setCard.Color)                      {                          case SetColor.Green:                              itemBrush = s_stripedGreenBrush;                              break;                          case SetColor.Purple:                              itemBrush = s_stripedPurpleBrush;                              break;                          case SetColor.Red:                              itemBrush = s_stripedRedBrush;                              break;                      }                      break;                    case SetFill.Empty:                      itemBrush = Brushes.Transparent;                      break;              }
Missing Default,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following switch statement is missing a default case: switch (setCard.Color)                      {                          case SetColor.Green:                              itemBrush = Brushes.Green;                              break;                          case SetColor.Purple:                              itemBrush = Brushes.Purple;                              break;                          case SetColor.Red:                              itemBrush = Brushes.Red;                              break;                      }
Missing Default,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following switch statement is missing a default case: switch (setCard.Color)                      {                          case SetColor.Green:                              itemBrush = s_stripedGreenBrush;                              break;                          case SetColor.Purple:                              itemBrush = s_stripedPurpleBrush;                              break;                          case SetColor.Red:                              itemBrush = s_stripedRedBrush;                              break;                      }
Missing Default,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following switch statement is missing a default case: switch (setCard.Color)              {                  case SetColor.Green:                      itemPen = s_greenPen;                      break;                  case SetColor.Purple:                      itemPen = s_purplePen;                      break;                  case SetColor.Red:                      itemPen = s_redPen;                      break;              }
Missing Default,PixelLab.Wpf.Demo.Set,SetCardDrawingFactory,D:\research\architectureSmells\repos1\thinkpixellab_bot\net40-client\Bot.Demo\Set\SetCardDrawingFactory.cs,GetCardDesignDrawing,The following switch statement is missing a default case: switch (setCard.Shape)                  {                      case SetShape.Diamond:                            itemGeometry = GetDiamondGeometry();                          break;                        case SetShape.Oval:                            itemGeometry = new RectangleGeometry(                              new Rect(s_itemSize)'                              s_itemSize.Height / 2'                              s_itemSize.Height / 2);                          break;                        case SetShape.Squiggle:                            itemGeometry = new PathGeometry(s_squigglePathFigureCollection);                          break;                  }
