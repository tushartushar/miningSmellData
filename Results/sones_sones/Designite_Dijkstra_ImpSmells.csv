Implementation smell,Namespace,Class,File,Method,Description
Long Method,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The method has 293 lines of code.
Long Method,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,FindShortPathToAll,The method has 123 lines of code.
Complex Method,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,Cyclomatic complexity of the method is 31
Complex Method,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,FindShortPathToAll,Cyclomatic complexity of the method is 12
Long Parameter List,sones.Plugins.SonesGQL.Functions.Dijkstra,DataDijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\DataDijkstra.cs,Add,The method has 6 parameters. Parameters: current_node' current_distance' current_depth' current_edge' edgeType' father
Long Parameter List,sones.Plugins.SonesGQL.Functions.Dijkstra,DataDijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\DataDijkstra.cs,Set,The method has 6 parameters. Parameters: value' current_distance' current_depth' current_edge' edgeType' father
Long Parameter List,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The method has 7 parameters. Parameters: myAttributeDefinition' myCallingObject' myStartVertex' myGraphDB' mySecurityToken' myTransactionToken' myParams
Long Parameter List,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,FindShortPathToAll,The method has 7 parameters. Parameters: myAttributeDefinition' myCallingObject' myStartVertex' myGraphDB' maxDepth' mySecurityToken' myTransactionToken
Long Parameter List,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,CreateVertexView,The method has 5 parameters. Parameters: myPropertyID' current_vertices' current_distance' edge' current_depth
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,DataDijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\DataDijkstra.cs,Add,The length of the statement  "            _list.Add(id' Tuple.Create(current_node' current_distance' current_depth' Tuple.Create(current_edge'edgeType)' father)); " is 120.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,AllEdgeWithTargetVertex,The length of the statement  "            Dictionary<IOutgoingEdgeDefinition' Tuple<bool' long>> idList = new Dictionary<IOutgoingEdgeDefinition' Tuple<bool' long>>(); " is 125.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,StringParser,The length of the statement  "            Dictionary<IOutgoingEdgeDefinition' Tuple<bool' long>> idList = new Dictionary<IOutgoingEdgeDefinition' Tuple<bool' long>>(); " is 125.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,StringParser,The length of the statement  "                throw new InvalidFunctionParameterException("edgeType"' "Object reference not set to an instance of an object."' "null"); " is 121.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "                throw new InvalidFunctionParameterException("EndVertex"' "Set of vertices that represents the target vertices"' "null"); " is 120.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "                myPropertyID = myType.GetOutgoingEdgeDefinition(myAttributeDefinition.Name).InnerEdgeType.GetPropertyDefinition("Weight").ID; " is 125.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "            Dictionary<IOutgoingEdgeDefinition' Tuple<bool' long>> edgeTypeID = new Dictionary<IOutgoingEdgeDefinition' Tuple<bool' long>>(); " is 129.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "                    List<Tuple<ISingleEdge' IOutgoingEdgeDefinition>> AllsingleEdge = new List<Tuple<ISingleEdge' IOutgoingEdgeDefinition>>(); " is 122.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "                                current_distance = Math.Abs(AllsingleEdge.ElementAt(iCount).Item1.GetProperty<double>(edgeTypeID[elementSingleEdge.Item2].Item2)); " is 130.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "                                else  if (currentVertexDistance + current_distance == TargetVertexID.Item2 && currentVertexDepth + 1 < TargetVertexID.Item3) " is 124.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The length of the statement  "                    throw new InvalidFunctionParameterException("MaxDepth"' "Max depth to low or end node is not with start node connected' find't end node"' maxDepth); " is 148.
Long Statement,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,FindShortPathToAll,The length of the statement  "                myPropertyID = myType.GetOutgoingEdgeDefinition(myAttributeDefinition.Name).InnerEdgeType.GetPropertyDefinition("Weight").ID; " is 125.
Magic Number,sones.Plugins.SonesGQL.Functions.Dijkstra,Dijkstra,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\Dijkstra\Dijkstra.cs,ExecFunc,The following statement contains a magic number: var edgeType = myParams[2].Value.ToString();
