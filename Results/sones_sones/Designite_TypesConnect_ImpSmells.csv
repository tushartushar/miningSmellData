Implementation smell,Namespace,Class,File,Method,Description
Long Method,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ShortPath,The method has 306 lines of code.
Long Method,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The method has 350 lines of code.
Complex Method,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ShortPath,Cyclomatic complexity of the method is 15
Complex Method,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,Recurs,Cyclomatic complexity of the method is 9
Complex Method,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,Cyclomatic complexity of the method is 17
Long Parameter List,sones.Plugins.SonesGQL.Functions.TypesConnect,DataForFindPathSchema,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\DataForFindPathSchema.cs,Add,The method has 5 parameters. Parameters: current_node' current_distance' current_depth' current_edge' father
Long Parameter List,sones.Plugins.SonesGQL.Functions.TypesConnect,DataForFindPathSchema,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\DataForFindPathSchema.cs,Set,The method has 5 parameters. Parameters: value' current_distance' current_depth' current_edge' father
Long Parameter List,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,Helper,The method has 5 parameters. Parameters: graph' sec' trans' type_property_object' PATHShort
Long Parameter List,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The method has 7 parameters. Parameters: myAttributeDefinition' myCallingObject' myDBObject' myGraphDB' mySecurityToken' myTransactionToken' myParams
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,DFS,The length of the statement  "			  if (Parents.Where(x=>x.Item1 == vertexType.TargetVertexType.ID).Count()==0)//(Tuple.Create(vertexType.TargetVertexType.ID'vertexType.ID))) " is 138.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,DFS,The length of the statement  "			  if (Parents.Where(x => x.Item1 == vertexType.RelatedEdgeDefinition.SourceVertexType.ID).Count() == 0) //if (!Parents.Contains(Tuple.Create(vertexType.RelatedEdgeDefinition.SourceVertexType.ID' vertexType.ID))) " is 209.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ShortPath,The length of the statement  "							else if (currentVertexDistance + current_distance == TargetVertexID.Item2 && currentVertexDepth + 1 < TargetVertexID.Item3) " is 123.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ShortPath,The length of the statement  "							else if (currentVertexDistance + current_distance == TargetVertexID.Item2 && currentVertexDepth + 1 < TargetVertexID.Item3) " is 123.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,Helper,The length of the statement  "			   this._stringPath.Add(Tuple.Create(StartType.Name + '.' + value.PropertyDefinition.Name'StartType.Name + '.' + value.PropertyDefinition.Name)); " is 142.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,Recurs,The length of the statement  "							_stringPath.Add(Tuple.Create(val.Type.Name+'.'+val.PropertyDefinition.Name'str + '.' + value.Name + '.' + val.PropertyDefinition.Name)); " is 136.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,Recurs,The length of the statement  "						foreach (TypeWithProperty val in type_property_object.Where(x => x.Type.ID == value.RelatedEdgeDefinition.SourceVertexType.ID)) " is 127.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,Recurs,The length of the statement  "				          _stringPath.Add(Tuple.Create(val.Type.Name + '.' + val.PropertyDefinition.Name' str + '.' + value.Name + '.' + val.PropertyDefinition.Name)); " is 141.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The length of the statement  "			List<Tuple<double' List<Tuple<long'long>>' IVertexType' IVertexType>> all = new List<Tuple<double' List<Tuple<long'long>>' IVertexType' IVertexType>>(); " is 152.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The length of the statement  "			Dictionary<Tuple<long' long>' List<List<Tuple<long' long>>>> allPath = new Dictionary<Tuple<long' long>' List<List<Tuple<long' long>>>>(); " is 138.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The length of the statement  "								var detekt = (PATH[iCount].Where(x => x.Item1 == value.Key.Item1).Count() > 0) && (PATH[iCount].Where(x => x.Item1 == value.Key.Item2).Count() > 0); //PATH[iCount].Contains(value.Key.Item2); " is 190.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The length of the statement  "							var detekt = (PATHShort[iCount].Where(x => x.Item1 == value.Item3.ID).Count() > 0) && (PATHShort[iCount].Where(x => x.Item1 == value.Item4.ID).Count() > 0); //PATH[iCount].Contains(value.Key.Item2); " is 198.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypeWithProperty,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypeWithProperty.cs,StringParser,The length of the statement  "                        throw new InvalidFunctionParameterException("edgeType"' "Object reference not set to an instance of an object."' "null"); " is 121.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypeWithProperty,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypeWithProperty.cs,StringParser,The length of the statement  "                    var propertyIDString = current_string.Substring(current_string.IndexOf('.') + 1' EndPos - current_string.IndexOf('.') - 1); " is 123.
Long Statement,sones.Plugins.SonesGQL.Functions.TypesConnect,TypeWithProperty,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypeWithProperty.cs,StringParser,The length of the statement  "                         throw new InvalidFunctionParameterException("Property"' "Property: " + propertyIDString + " not exist in VertexType:" + typeVertexString' "null"); " is 146.
Magic Number,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ExecFunc,The following statement contains a magic number: if (ObjectList.Count<2)  				throw new InvalidFunctionParameterException("Input String"' "Input String has insufficient quantity objects"' "null");
Duplicate Code,sones.Plugins.SonesGQL.Functions.TypesConnect,TypesConnect,C:\repos\sones_sones\Plugins\GraphQL\SonesGQL\Functions\Implementations\GraphAlgorithms\TypesConnect\TypesConnect.cs,ShortPath,The method contains a code clone-set at the following line numbers (starting from the method definition): ((55' 202)' (210' 357))
