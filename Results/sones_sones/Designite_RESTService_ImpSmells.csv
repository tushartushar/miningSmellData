Implementation smell,Namespace,Class,File,Method,Description
Complex Method,sones.GraphDS.Services.RESTService,RESTService,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\RESTService.cs,Start,Cyclomatic complexity of the method is 8
Long Parameter List,sones.GraphDS.Services.RESTService,GraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Service.cs,StoreObject,The method has 5 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision
Long Parameter List,sones.GraphDS.Services.RESTService,GraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Service.cs,GetObject,The method has 5 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision
Long Parameter List,sones.GraphDS.Services.RESTService,GraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Service.cs,GetObject,The method has 6 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision' myObjectCopy
Long Parameter List,sones.GraphDS.Services.RESTService,GraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Service.cs,DeleteObject,The method has 5 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision
Long Parameter List,sones.GraphDS.Services.RESTService,IGraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\IGraphDSREST_Service.cs,StoreObject,The method has 5 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision
Long Parameter List,sones.GraphDS.Services.RESTService,IGraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\IGraphDSREST_Service.cs,GetObject,The method has 5 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision
Long Parameter List,sones.GraphDS.Services.RESTService,IGraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\IGraphDSREST_Service.cs,GetObject,The method has 6 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision' myObjectCopy
Long Parameter List,sones.GraphDS.Services.RESTService,IGraphDSREST_Service,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\IGraphDSREST_Service.cs,DeleteObject,The method has 5 parameters. Parameters: myObjectType' myObjectName' myObjectStream' myObjectEdition' myObjectRevision
Long Statement,sones.GraphDS.Services.RESTService,GraphDSREST_Output,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Output.cs,GenerateResultOutput,The length of the statement  "				_ErrorMsg.Error406_NotAcceptable(String.Format("The server does not support the requested content type {0} "' _ContentType.ToString())); " is 136.
Long Statement,sones.GraphDS.Services.RESTService,RESTService,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\RESTService.cs,Start,The length of the statement  "                throw new RESTServiceCouldNotStartException("The REST Service could not be started. See inner exception for details."' Ex); " is 123.
Long Statement,sones.GraphDS.Services.RESTService,RESTService,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\RESTService.cs,GetCurrentStatus,The length of the statement  "            return new ServiceStatus(_HttpServer.ListeningAddress' _HttpServer.ListeningPort' _HttpServer.IsRunning' _LifeTime.Elapsed' true); " is 130.
Empty Catch Block,sones.GraphDS.Services.RESTService,GraphDSREST_Output,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Output.cs,GetResources,The method has an empty catch block.
Empty Catch Block,sones.GraphDS.Services.RESTService,GraphDSREST_Output,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\GraphDSREST_Output.cs,GetResources,The method has an empty catch block.
Magic Number,sones.GraphDS.Services.RESTService,RESTService,C:\repos\sones_sones\Plugins\GraphDS\Services\Implementations\RESTService\RESTService.cs,Start,The following statement contains a magic number: try              {                  if(_HttpServer != null && _HttpServer.IsRunning)                      _HttpServer.Stop();                                    // iterate through input dictionary and upper case it                  Dictionary<string' object> myParameters = new Dictionary<string' object>();                  foreach (String Key in my_Parameters.Keys)                  {                      myParameters.Add(Key.ToUpper()' my_Parameters[Key]);                  }                                      String Username = "test";                  if (myParameters != null && myParameters.ContainsKey("USERNAME"))                      Username = (String)Convert.ChangeType(myParameters["USERNAME"]' typeof(String));                    String Password = "test";                  if (myParameters != null && myParameters.ContainsKey("PASSWORD"))                      Password = (String)Convert.ChangeType(myParameters["PASSWORD"]' typeof(String));                    IPAddress Address = IPAddress.Any;                  if (myParameters != null && myParameters.ContainsKey("IPADDRESS"))                      Address = (IPAddress)Convert.ChangeType(myParameters["IPADDRESS"]' typeof(IPAddress));                    ushort Port = 9975;                  if (myParameters != null && myParameters.ContainsKey("PORT"))                      Port = (ushort)Convert.ChangeType(myParameters["PORT"]' typeof(ushort));                    _Security = new BasicServerSecurity(new PasswordValidator(null' Username' Password));                  _RESTService = new GraphDSREST_Service();                  _RESTService.Initialize(_GraphDS' Port' Address);                  _HttpServer = new HttpServer(                          Address'                          Port'                          _RESTService'                          mySecurity: _Security'                          myAutoStart: false);                    _LifeTime.Start();                  _HttpServer.Start();                      String MyIPAdressString = Address.ToString();                    if (MyIPAdressString == "0.0.0.0")                      MyIPAdressString = "localhost";                   _description =        "   * REST Service is started at http://" + MyIPAdressString + ":" + Port + Environment.NewLine +                                       "      * access it directly by passing the GraphQL query using the" + Environment.NewLine +                                       "        REST interface or a client library. (see documentation)" + Environment.NewLine +                                       "      * if you want JSON Output add ACCEPT: application/json " + Environment.NewLine +                                       "        to the client request header (or application/xml or" + Environment.NewLine +                                       "        application/text)" + Environment.NewLine +                                       "   * for first steps we recommend to use the AJAX WebShell. " + Environment.NewLine +                                       "     Browse to http://" + MyIPAdressString + ":" + Port + "/WebShell" + Environment.NewLine +                                       "     (default username and passwort: test / test)";              }              catch (Exception Ex)              {                  throw new RESTServiceCouldNotStartException("The REST Service could not be started. See inner exception for details."' Ex);              }
