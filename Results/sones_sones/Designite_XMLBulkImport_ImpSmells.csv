Implementation smell,Namespace,Class,File,Method,Description
Long Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteInsert,The method has 133 lines of code.
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,Cyclomatic complexity of the method is 12
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,Cyclomatic complexity of the method is 12
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,Import,Cyclomatic complexity of the method is 9
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteBulkInsert,Cyclomatic complexity of the method is 13
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteImport,Cyclomatic complexity of the method is 12
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteInsert,Cyclomatic complexity of the method is 17
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteSingleLink,Cyclomatic complexity of the method is 12
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteMultiLink,Cyclomatic complexity of the method is 10
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteLink,Cyclomatic complexity of the method is 12
Complex Method,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteSetValue,Cyclomatic complexity of the method is 8
Long Parameter List,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,Add,The method has 5 parameters. Parameters: mySourceVertexTypeID' mySourceVertexID' myTargetVertexTypeID' myTargetVertexID' myPropertyID
Long Parameter List,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,Import,The method has 11 parameters. Parameters: myLocation' myGraphDB' myGraphQL' mySecurityToken' myTransactionToken' myParallelTasks' myComments' myOffset' myLimit' myVerbosityType' myOptions
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,Location,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\Location.cs,ExecuteStore,The length of the statement  "            var stream = new FileStream(myPath' FileMode.Create' FileAccess.Write' FileShare.None' Environment.SystemPageSize' FileOptions.SequentialScan); " is 143.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,Initialize,The length of the statement  "                (long)(2147480000 / IncomingEdge.Size)'                     //about 2GB (max data size in .NET) divided by the size of edges" is 124.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,Import,The length of the statement  "            _resultingFS = (IGraphFS) typeof(SonesGraphDB).GetField("_iGraphFS"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue(_db);" is 131.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,GetResult,The length of the statement  "            return new VertexView(new Dictionary<string' object> { { "Number of import statements:"' _currentImport } }' null).SingleEnumerable();" is 134.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,InsertIncomingEdges,The length of the statement  "                    _resultingFS.UpdateVertex(_security' _transaction' toAdd[0].TargetVertexID' toAdd[0].TargetVertexTypeID' ConvertIncomingEdgesToUpdateDefinition(toAdd)' false);" is 159.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,InsertIncomingEdges,The length of the statement  "                        _logger.Log(Level.SEVERE' "An exception was thrown:{0}\n{1}"' current.GetType().FullName' current.StackTrace.ToString());" is 121.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteInsert,The length of the statement  "                var forResultingFS = new VertexAddDefinition(vertexID' vertexTypeID' edition' hyper' single' null' null' comment' creation' modification' structured' unstructured);" is 164.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteInsert,The length of the statement  "                    _logger.Log(Level.SEVERE' "An exception was thrown:{0}\n{1}"' current.GetType().FullName' current.StackTrace.ToString());" is 121.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ConvertOutgoingEdges,The length of the statement  "                var add = new HyperEdgeAddDefinition(propID' _edgeTypes[propID]' mySource' multiLink.Links.Select(_ => ConvertLink(_' propID' mySource))' null' date' date' null' null);" is 168.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ConvertLink,The length of the statement  "            return new SingleEdgeAddDefinition(myPropertyID' _edgeTypes[myPropertyID]' mySource' target' comment' creation' modification' null' null);" is 138.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ConvertStructuredProperties,The length of the statement  "                        _logger.Log(Level.WARNING' String.Format("Could not convert {0} into {1} of vertex type {2} and property {3}"' value.Value' _propertyTypes[id].Name' myVertexType.Name' value.Key));" is 180.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,GenerateUpdateDefinition,The length of the statement  "            return new VertexUpdateDefinition(mySingleEdgeUpdate: new SingleEdgeUpdate(myOutgoingSingleEdges)' myHyperEdgeUpdate: new HyperEdgeUpdate(myOutgoingHyperEdges)' myToBeAddedIncomingEdges: myIncomingEdges);" is 204.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,CreateSingleEdgeUpdateDefinition,The length of the statement  "                new VertexInformation(sourceVertex.VertexTypeID' sourceVertex.VertexID' sourceVertex.VertexRevisionID' sourceVertex.EditionName)'" is 129.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,CreateSingleEdgeUpdateDefinition,The length of the statement  "                new VertexInformation(targetVertex.VertexTypeID' targetVertex.VertexID' targetVertex.VertexRevisionID' targetVertex.EditionName)'" is 129.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,CreateSingleEdgeUpdateDefinition,The length of the statement  "                    structuredProperties != null && structuredProperties.Count() > 0 ? structuredProperties.ToDictionary(key => key.Item1' value => value.Item2) : null)'" is 149.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,CreateSingleEdgeUpdateDefinition,The length of the statement  "                    unstructuredProperties != null && unstructuredProperties.Count() > 0 ? unstructuredProperties.ToDictionary(key => key.Item1' value => value.Item2) : null));" is 156.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,CreateHyperEdgeUpdateDefinition,The length of the statement  "                    structuredProperties != null && structuredProperties.Count() > 0 ? structuredProperties.ToDictionary(key => key.Item1' value => value.Item2) : null)'" is 149.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,CreateHyperEdgeUpdateDefinition,The length of the statement  "                    unstructuredProperties != null && unstructuredProperties.Count() > 0 ? unstructuredProperties.ToDictionary(key => key.Item1' value => value.Item2) : null)'" is 155.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,GenerateIncomingEdgeDefinitions,The length of the statement  "                    result.Add(new IncomingEdgeAddDefinition(aIncomingEdge.Item1' aIncomingEdge.Item2' aIncomingEdge.Item3.Select(_ => _.VertexID)));" is 129.
Long Statement,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ConvertVertexTypes,The length of the statement  "            var attributetypes = myVertexTypes.SelectMany(_ => _.GetPropertyDefinitions(true)).Distinct().ToDictionary(_ => _.ID' _ => _.BaseType);" is 135.
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,HumanSizeParser,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\HumanSizeParser.cs,ToBytes,The following statement contains a magic number: switch (unit)              {                  case "":                  case "B":                      return (long)number;                  case "KB":                  case "kB":                      return (long)(number * 1000);                  case "KiB":                      return (long)(number * 1024);                  case "MB":                      return (long)(number * 1000000);                  case "MiB":                      return (long)(number * 1048576);                  case "GB":                      return (long)(number * 1000000000);                  case "GiB":                      return (long)(number * 1073741824);                  case "TB":                      return (long)(number * 1000000000000);                  case "TiB":                      return (long)(number * 1099511627776);                  case "PB":                      return (long)(number * 1000000000000000);                  case "PiB":                      return (long)(number * 1125899906842624);                    default:                      throw new ArgumentException("Can not read value for max memory.");              }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,ReadMaxMemory,The following statement contains a magic number: switch (unit)             {                 case "":                 case "B":                     return (long)number;                 case "KB":                 case "kB":                     return (long)(number * 1000);                 case "KiB":                     return (long)(number * 1024);                 case "MB":                     return (long)(number * 1000000);                 case "MiB":                     return (long)(number * 1048576);                 case "GB":                     return (long)(number * 1000000000);                 case "GiB":                     return (long)(number * 1073741824);                 case "TB":                     return (long)(number * 1000000000000);                 case "TiB":                     return (long)(number * 1099511627776);                 case "PB":                     return (long)(number * 1000000000000000);                 case "PiB":                     return (long)(number * 1125899906842624);                  default:                     throw new ArgumentException("Can not read value for max memory.");             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,Initialize,The following statement contains a magic number: myMaxMemoryConsumption < 251658240
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,Initialize,The following statement contains a magic number: myMaxOpenFiles < 3
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,IncomingEdgeSorter,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\IncomingEdgeSorter.cs,Initialize,The following statement contains a magic number: int chunkLength = (int)Math.Min(                 (long)(2147480000 / IncomingEdge.Size)'                     //about 2GB (max data size in .NET) divided by the size of edges                 MaxMemoryConsumption / (IncomingEdge.Size * (chunkCount)));
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteBulkInsert,The following statement contains a magic number: switch (readerBulkInsert.Name)                             {                                 case ImportTag:                                     if (phase > 1)                                         //TODO: log                                         ;                                      if (phase == 0)                                         GetVertexTypes();                                      phase = 1;                                     ExecuteImport(nextReader);                                     _logger.Log(Level.INFO' "Finished one Import tag.");                                     break;                                 case PrePhaseTag:                                     if (phase > 0)                                         //TODO: log                                          ;                                      phase = 0;                                     ExecuteTypesPhase(nextReader);                                     break;                                 case PostPhaseTag:                                     if (phase == 1)                                         InsertIncomingEdges();                                     phase = 2;                                     //TODO: implement post phase                                     break;                                 default:                                     //TODO: log something                                     break;                             }
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,InsertIncomingEdges,The following statement contains a magic number: count > 0 && count % 500 == 0
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteImport,The following statement contains a magic number: free < 1073741824L && free > 0
Magic Number,sones.Plugins.SonesGQL.XMLBulkImport,XMLBulkImportPlugin,D:\research\architectureSmells\repos1\sones_sones\Plugins\GraphQL\SonesGQL\GraphDBImport\Implementations\XMLBulkImport\XMLBulkImportPlugin.cs,ExecuteImport,The following statement contains a magic number: _currentImport > 0 && _currentImport % 500 == 0
