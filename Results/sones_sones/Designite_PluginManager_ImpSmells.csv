Implementation smell,Namespace,Class,File,Method,Description
Complex Method,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DiscoverFile,Cyclomatic complexity of the method is 8
Long Parameter List,sones.Library.VersionedPluginManager,PluginIncompatibleVersionEventArgs,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\Events\PluginIncompatibleVersionEvent.cs,PluginIncompatibleVersionEventArgs,The method has 5 parameters. Parameters: myPluginAssembly' myPluginVersion' myMinVersion' myMaxVersion' myPluginType
Long Parameter List,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,CheckVersion,The method has 5 parameters. Parameters: myThrowExceptionOnIncompatibleVersion' myPluginAssembly' myBaseTypeAssembly' myPluginReferencedAssembly' myActivatorInfo
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,Register,The length of the parameter assemblyVersionCompatibilityAttributes is 38.
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,Register,The length of the parameter assemblyVersionCompatibilityAttribute is 37.
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,Discover,The length of the parameter myThrowExceptionOnIncompatibleVersion is 37.
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DiscoverPath,The length of the parameter myThrowExceptionOnIncompatibleVersion is 37.
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DiscoverFile,The length of the parameter myThrowExceptionOnIncompatibleVersion is 37.
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,FindAndActivateTypes,The length of the parameter myThrowExceptionOnIncompatibleVersion is 37.
Long Identifier,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,CheckVersion,The length of the parameter myThrowExceptionOnIncompatibleVersion is 37.
Long Statement,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DiscoverFile,The length of the statement  "            #region Check all types of the assembly - this might throw a ReflectionTypeLoadException if the plugin definition does no longer match the plugin implementation " is 160.
Long Statement,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DiscoverFile,The length of the statement  "                            //matchingAssemblies.Add(new Tuple<AssemblyName' AssemblyName>(Assembly.GetAssembly(matchAss.Key).GetName()' assembly)); " is 120.
Long Statement,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,FindAndActivateTypes,The length of the statement  "                    if (CheckVersion(myThrowExceptionOnIncompatibleVersion' myLoadedPluginAssembly' baseTypeAssembly' pluginReferencedAssembly' activatorInfo)) " is 139.
Long Statement,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,CheckVersion,The length of the statement  "                //Console.WriteLine("Assembly version does not match! Expected '{0}' but current is '{1}'"' myLoadedPluginAssembly.GetName().Version' pluginReferencedAssembly.Version); " is 168.
Empty Catch Block,sones.Library.VersionedPluginManager,Extensions,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\Extensions.cs,GetReferencedAssembly,The method has an empty catch block.
Empty Catch Block,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DiscoverFile,The method has an empty catch block.
Empty Catch Block,sones.Library.VersionedPluginManager,PluginManager,C:\repos\sones_sones\Library\Internal\VersionedPluginManager\PluginManager.cs,DeGenerification,The method has an empty catch block.
