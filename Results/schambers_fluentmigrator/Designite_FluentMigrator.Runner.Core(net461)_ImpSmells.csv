Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FluentMigrator.Runner,ConventionSetExtensions,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\ConventionSetExtensions.cs,Apply,Cyclomatic complexity of the method is 15
Complex Method,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,FluentMigrator.Runner.Generators.Generic,GenericQuoter,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericQuoter.cs,QuoteValue,Cyclomatic complexity of the method is 16
Complex Method,FluentMigrator.Runner.Logging,FluentMigratorLogger,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Logging\FluentMigratorLogger.cs,Log,Cyclomatic complexity of the method is 14
Complex Method,FluentMigrator.Runner.Processors,ReflectionBasedDbFactory,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\ReflectionBasedDbFactory.cs,TryCreateFactory,Cyclomatic complexity of the method is 9
Long Parameter List,FluentMigrator.Runner.Initialization,IConnectionStringProvider,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Initialization\IConnectionStringProvider.cs,GetConnectionString,The method has 5 parameters. Parameters: announcer' connection' configPath' assemblyLocation' database
Long Parameter List,FluentMigrator.Runner.Logging,FluentMigratorLogger,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Logging\FluentMigratorLogger.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Parameter List,FluentMigrator.Runner.Processors,GenericProcessorBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\GenericProcessorBase.cs,GenericProcessorBase,The method has 5 parameters. Parameters: connection' factory' generator' announcer' options
Long Parameter List,FluentMigrator.Runner.Processors,GenericProcessorBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\GenericProcessorBase.cs,GenericProcessorBase,The method has 5 parameters. Parameters: factoryAccessor' generator' logger' options' connectionStringAccessor
Long Statement,FluentMigrator.Runner.Generators,SelectingGeneratorAccessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\SelectingGeneratorAccessor.cs,FindGenerator,The length of the statement  "            throw new InvalidOperationException($@"A migration generator with the ID {generatorId} couldn't be found. Available generators are: {generatorNames}"); " is 151.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericDescriptionGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericDescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            return GenerateColumnDescription(expression.SchemaName' expression.TableName' expression.Column.Name' expression.Column.ColumnDescription); " is 139.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(RenameTable' Quoter.QuoteTableName(expression.OldName' expression.SchemaName)' Quoter.Quote(expression.NewName)); " is 134.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(AddColumn' Quoter.QuoteTableName(expression.TableName' expression.SchemaName)' Column.Generate(expression.Column)); " is 136.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(AlterColumn' Quoter.QuoteTableName(expression.TableName' expression.SchemaName)' Column.Generate(expression.Column)); " is 138.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                builder.AppendFormat(DropColumn' Quoter.QuoteTableName(expression.TableName' expression.SchemaName)' Quoter.QuoteColumnName(columnName)); " is 137.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(DropIndex' Quoter.QuoteIndexName(expression.Index.Name)' Quoter.QuoteTableName(expression.Index.TableName' expression.Index.SchemaName)); " is 158.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(CreateConstraint' Quoter.QuoteTableName(expression.Constraint.TableName' expression.Constraint.SchemaName)' " is 128.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(DeleteConstraint' Quoter.QuoteTableName(expression.Constraint.TableName' expression.Constraint.SchemaName)' Quoter.QuoteConstraintName(expression.Constraint.ConstraintName)); " is 195.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(DeleteConstraint' Quoter.QuoteTableName(expression.ForeignKey.ForeignTable' expression.ForeignKey.ForeignTableSchema)' Quoter.QuoteColumnName(expression.ForeignKey.Name)); " is 192.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(UpdateData' Quoter.QuoteTableName(expression.TableName' expression.SchemaName)' string.Join("' "' updateItems.ToArray())' string.Join(" AND "' whereClauses.ToArray())); " is 189.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                deleteItems.Add(string.Format(DeleteData' Quoter.QuoteTableName(expression.TableName' expression.SchemaName)' "1 = 1")); " is 120.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                    deleteItems.Add(string.Format(DeleteData' Quoter.QuoteTableName(expression.TableName' expression.SchemaName)' string.Join(" AND "' whereClauses.ToArray()))); " is 157.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                    return CompatibilityMode.HandleCompatibilty("Cache size must be greater than 1; if you intended to disable caching' set Cache to null."); " is 137.
Long Statement,FluentMigrator.Runner.Infrastructure,DefaultMigrationRunnerConventions,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\DefaultMigrationConventions.cs,TypeIsVersionTableMetaDataImpl,The length of the statement  "            return typeof(IVersionTableMetaData).IsAssignableFrom(type) && type.GetCustomAttributes<VersionTableMetaDataAttribute>().Any(); " is 127.
Long Statement,FluentMigrator.Runner.Infrastructure,DefaultMigrationRunnerConventions,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\DefaultMigrationConventions.cs,GetMigrationInfoForMigrationImpl,The length of the statement  "            var migrationInfo = new MigrationInfo(migrationAttribute.Version' migrationAttribute.Description' migrationAttribute.TransactionBehavior' migrationAttribute.BreakingChange' () => migration); " is 190.
Long Statement,FluentMigrator.Runner.Infrastructure,DefaultMigrationRunnerConventions,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\DefaultMigrationConventions.cs,TypeHasMatchingTagsImpl,The length of the statement  "            var tagNamesForAllBehavior = tags.Where(t => t.Behavior == TagBehavior.RequireAll).SelectMany(t => t.TagNames).ToArray(); " is 121.
Long Statement,FluentMigrator.Runner.Infrastructure,DefaultMigrationRunnerConventions,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\DefaultMigrationConventions.cs,TypeHasMatchingTagsImpl,The length of the statement  "            var tagNamesForAnyBehavior = tags.Where(t => t.Behavior == TagBehavior.RequireAny).SelectMany(t => t.TagNames).ToArray(); " is 121.
Long Statement,FluentMigrator.Runner.Processors,GenericProcessorBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\GenericProcessorBase.cs,EnsureConnectionIsClosed,The length of the statement  "            if ((_connection != null || (_lazyConnection.IsValueCreated && Connection != null)) && Connection.State != ConnectionState.Closed) " is 130.
Long Statement,FluentMigrator.Runner.Processors,ReflectionBasedDbFactory,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\ReflectionBasedDbFactory.cs,CreateFactory,The length of the statement  "            throw new AggregateException($"Unable to load the driver. Attempted to load: {assemblyNames}' with {fullExceptionOutput}"' exceptions); " is 135.
Long Statement,FluentMigrator.Runner.Processors,SelectingProcessorAccessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\SelectingProcessorAccessor.cs,FindGenerator,The length of the statement  "            var generatorNames = string.Join("' "' processors.Select(p => p.DatabaseType).Union(processors.SelectMany(p => p.DatabaseTypeAliases))); " is 136.
Long Statement,FluentMigrator.Runner.Processors,SelectingProcessorAccessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\SelectingProcessorAccessor.cs,FindGenerator,The length of the statement  "            throw new ProcessorFactoryNotFoundException($@"A migration generator with the ID {processorsId} couldn't be found. Available generators are: {generatorNames}"); " is 160.
Complex Conditional,FluentMigrator.Runner.Processors,GenericProcessorBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Processors\GenericProcessorBase.cs,EnsureConnectionIsClosed,The conditional expression  "(_connection != null || (_lazyConnection.IsValueCreated && Connection != null)) && Connection.State != ConnectionState.Closed"  is complex.
Virtual Method Call from Constructor,FluentMigrator.Runner.Generators.Base,TypeMapBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Base\TypeMapBase.cs,TypeMapBase,The constructor "TypeMapBase" calls a virtual method "SetupTypeMaps".
Empty Catch Block,FluentMigrator.Runner.Infrastructure.Hosts,NetFrameworkHost,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\Hosts\NetFrameworkHost.cs,CreateInstance,The method has an empty catch block.
Magic Number,FluentMigrator.Runner,LoggingUtilities,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\LoggingUtilities.cs,WriteHorizontalRuler,The following statement contains a magic number: writer.WriteLine("".PadRight(79' '-'));
Magic Number,FluentMigrator.Runner.BatchParser.RangeSearchers,CharWithEscapeByDuplication,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\BatchParser\RangeSearchers\CharWithEscapeByDuplication.cs,FindEndCode,The following statement contains a magic number: startIndex = foundIndex + 2;
Magic Number,FluentMigrator.Runner.BatchParser.SpecialTokenSearchers,GoSearcher,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\BatchParser\SpecialTokenSearchers\GoSearcher.cs,GetGoCount,The following statement contains a magic number: return Convert.ToInt32(countGroup.Value' 10);
Magic Number,FluentMigrator.Runner.Generators.Base,ColumnBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Base\ColumnBase.cs,GenerateForeignKeyName,The following statement contains a magic number: return string.Format("FK_{0}_{1}"' foreignKey.PrimaryTable.Substring(0' 5)' foreignKey.ForeignTable.Substring(0' 5));
Magic Number,FluentMigrator.Runner.Generators.Base,ColumnBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Base\ColumnBase.cs,GenerateForeignKeyName,The following statement contains a magic number: return string.Format("FK_{0}_{1}"' foreignKey.PrimaryTable.Substring(0' 5)' foreignKey.ForeignTable.Substring(0' 5));
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericGenerator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericGenerator.cs,Generate,The following statement contains a magic number: const long MINIMUM_CACHE_VALUE = 2;
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericQuoter,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericQuoter.cs,FormatByteArray,The following statement contains a magic number: var hex = new System.Text.StringBuilder((value.Length * 2)+2);
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericQuoter,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericQuoter.cs,FormatByteArray,The following statement contains a magic number: var hex = new System.Text.StringBuilder((value.Length * 2)+2);
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericQuoter,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericQuoter.cs,UnQuote,The following statement contains a magic number: var unquoted = quoted.Substring(1' quoted.Length - 2);
Magic Number,FluentMigrator.Runner.Infrastructure,RuntimeHost,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\RuntimeHost.cs,GetAssemblyNames,The following statement contains a magic number: parts.Length < 3
Magic Number,FluentMigrator.Runner.Infrastructure,RuntimeHost,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Infrastructure\RuntimeHost.cs,GetAssemblyNames,The following statement contains a magic number: pkToken = parts[2];
Magic Number,FluentMigrator.Runner.Logging,SqlScriptFluentMigratorLogger,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Logging\SqlScriptFluentMigratorLogger.cs,WriteHeading,The following statement contains a magic number: _writer.WriteLine($"{message} ".PadRight(75' '='));
Missing Default,FluentMigrator.Runner.Generators.Base,ColumnBase,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Base\ColumnBase.cs,FormatCascade,The following switch statement is missing a default case: switch (rule)              {                  case Rule.None:                      return "";                  case Rule.Cascade:                      action = "CASCADE";                      break;                  case Rule.SetNull:                      action = "SET NULL";                      break;                  case Rule.SetDefault:                      action = "SET DEFAULT";                      break;              }
Missing Default,FluentMigrator.Runner.Generators.Generic,GenericQuoter,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Generators\Generic\GenericQuoter.cs,QuoteValue,The following switch statement is missing a default case: switch (value)              {                  case null:                  case DBNull _:                      return FormatNull();  #pragma warning disable 618                  case ExplicitUnicodeString _:  #pragma warning restore 618                  case string _:                      return FormatNationalString(value.ToString());                  case NonUnicodeString _:                      return FormatAnsiString(value.ToString());                  case char v:                      return FormatChar(v);                  case bool v:                      return FormatBool(v);                  case Guid v:                      return FormatGuid(v);                  case DateTime v:                      return FormatDateTime(v);                  case DateTimeOffset v:                      return FormatDateTimeOffset(v);                  case double v:                      return FormatDouble(v);                  case float v:                      return FormatFloat(v);                  case SystemMethods v:                      return FormatSystemMethods(v);                  case Enum v:                      return FormatEnum(v);                  case decimal v:                      return FormatDecimal(v);                  case RawSql v:                      return v.Value;                  case byte[] v:                      return FormatByteArray(v);                  case TimeSpan v:                      return FromTimeSpan(v);              }
Missing Default,FluentMigrator.Runner.Logging,FluentMigratorLogger,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.Core\Logging\FluentMigratorLogger.cs,Log,The following switch statement is missing a default case: switch (logLevel)              {                  case LogLevel.Error:                  case LogLevel.Critical:                      if (exception != null)                      {                          WriteError(exception);                      }                      else                      {                          // ReSharper disable once ExpressionIsAlwaysNull                          WriteError(formatter(state' exception));                      }                        break;                  case LogLevel.Warning:                      if (eventId.Name == RunnerEventIds.RunnerCategory)                      {                          WriteEmphasize(formatter(state' exception));                      }                        break;                  case LogLevel.Information:                      if (eventId.Name == RunnerEventIds.RunnerCategory)                      {                          if (eventId.Id == RunnerEventIds.Sql.Id)                          {                              if (_options.ShowSql)                              {                                  var sql = formatter(state' exception);                                  if (string.IsNullOrEmpty(sql))                                  {                                      WriteEmptySql();                                  }                                  else                                  {                                      WriteSql(sql);                                  }                              }                          }                          else if (eventId.Id == RunnerEventIds.Emphasize.Id)                          {                              WriteEmphasize(formatter(state' exception));                          }                          else if (eventId.Id == RunnerEventIds.Heading.Id)                          {                              WriteHeading(formatter(state' exception));                          }                          else if (eventId.Id == RunnerEventIds.ElapsedTime.Id)                          {                              if (typeof(TState) == typeof(TimeSpan))                              {                                  if (_options.ShowElapsedTime)                                  {                                      WriteElapsedTime((TimeSpan)(object)state);                                  }                              }                          }                          else                          {                              WriteSay(formatter(state' exception));                          }                      }                      else                      {                          WriteSay(formatter(state' exception));                      }                        break;              }
