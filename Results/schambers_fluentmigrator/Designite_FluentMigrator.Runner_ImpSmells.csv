Implementation smell,Namespace,Class,File,Method,Description
Long Method,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,The method has 128 lines of code.
Complex Method,FluentMigrator.Runner.Generators.Hana,HanaGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaGenerator.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,FluentMigrator.Runner.Generators.Generic,GenericQuoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericQuoter.cs,QuoteValue,Cyclomatic complexity of the method is 16
Complex Method,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,Cyclomatic complexity of the method is 12
Complex Method,FluentMigrator.Runner.Processors.Firebird,FirebirdTableSchema,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdTableSchema.cs,LoadConstraints,Cyclomatic complexity of the method is 9
Long Parameter List,FluentMigrator.Runner,DefaultMigrationInformationLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\IMigrationInformationLoader.cs,DefaultMigrationInformationLoader,The method has 5 parameters. Parameters: conventions' assembly' namespace' loadNestedNamespaces' tagsToMatch
Long Parameter List,FluentMigrator.Runner,DefaultMigrationInformationLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\IMigrationInformationLoader.cs,DefaultMigrationInformationLoader,The method has 5 parameters. Parameters: conventions' assemblies' namespace' loadNestedNamespaces' tagsToMatch
Long Parameter List,FluentMigrator.Runner,ConnectionlessVersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\ConnectionlessVersionLoader.cs,ConnectionlessVersionLoader,The method has 5 parameters. Parameters: runner' assemblies' conventions' startVersion' targetVersion
Long Parameter List,FluentMigrator.Runner.Processors.Hana,HanaProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Hana\HanaProcessor.cs,HanaProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,OracleProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,Db2Processor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,FirebirdProcessor,The method has 6 parameters. Parameters: connection' generator' announcer' options' factory' fbOptions
Long Parameter List,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,CreateTriggerExpression,The method has 5 parameters. Parameters: tableName' triggerName' onBefore' onEvent' triggerBody
Long Parameter List,FluentMigrator.Runner.Initialization,ConnectionStringManager,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\ConnectionStringManager.cs,ConnectionStringManager,The method has 6 parameters. Parameters: configManager' announcer' connection' configPath' assemblyLocation' database
Long Parameter List,FluentMigrator.Runner.Processors.DotConnectOracle,DotConnectOracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\DotConnectOracle\DotConnectOracleProcessor.cs,DotConnectOracleProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors,GenericProcessorBase,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\GenericProcessorBase.cs,GenericProcessorBase,The method has 5 parameters. Parameters: connection' factory' generator' announcer' options
Long Parameter List,FluentMigrator.Runner.Processors.MySql,MySqlProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\MySql\MySqlProcessor.cs,MySqlProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,PostgresProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.SQLite,SQLiteProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SQLite\SQLiteProcessor.cs,SQLiteProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.SqlServer,SqlServer2000Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServer2000Processor.cs,SqlServer2000Processor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.SqlServer,SqlServerCeProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServerCeProcessor.cs,SqlServerCeProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.SqlServer,SqlServerProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServerProcessor.cs,SqlServerProcessor,The method has 5 parameters. Parameters: connection' generator' announcer' options' factory
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,ApplyMaintenance,The length of the parameter useAutomaticTransactionManagement is 33.
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateUp,The length of the parameter useAutomaticTransactionManagement is 33.
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateUp,The length of the parameter useAutomaticTransactionManagement is 33.
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateDown,The length of the parameter useAutomaticTransactionManagement is 33.
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,Rollback,The length of the parameter useAutomaticTransactionManagement is 33.
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,RollbackToVersion,The length of the parameter useAutomaticTransactionManagement is 33.
Long Identifier,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,,The length of the parameter _alreadyOutputPreviewOnlyModeWarning is 36.
Long Identifier,FluentMigrator.Runner,VersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\VersionLoader.cs,,The length of the parameter _versionSchemaMigrationAlreadyRun is 33.
Long Identifier,FluentMigrator.Runner,VersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\VersionLoader.cs,,The length of the parameter _versionUniqueMigrationAlreadyRun is 33.
Long Identifier,FluentMigrator.Runner,VersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\VersionLoader.cs,,The length of the parameter _versionDescriptionMigrationAlreadyRun is 38.
Long Identifier,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,,The length of the parameter RemoveTableDescriptionTemplate is 30.
Long Identifier,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,,The length of the parameter RemoveColumnDescriptionTemplate is 31.
Long Identifier,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,,The length of the parameter TableDescriptionVerificationTemplate is 36.
Long Identifier,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,,The length of the parameter ColumnDescriptionVerificationTemplate is 37.
Long Identifier,FluentMigrator.Runner.Generators.Hana,HanaGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaGenerator.cs,Generate,The length of the parameter createTableWithDescriptionsBuilder is 34.
Long Identifier,FluentMigrator.Runner.Generators.Hana,HanaGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaGenerator.cs,Generate,The length of the parameter createColumnWithDescriptionBuilder is 34.
Long Identifier,FluentMigrator.Runner.Generators.Hana,HanaGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaGenerator.cs,Generate,The length of the parameter alterColumnWithDescriptionBuilder is 33.
Long Identifier,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,Generate,The length of the parameter createTableWithDescriptionsBuilder is 34.
Long Identifier,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,Generate,The length of the parameter createColumnWithDescriptionBuilder is 34.
Long Identifier,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,Generate,The length of the parameter alterColumnWithDescriptionBuilder is 33.
Long Statement,FluentMigrator.Runner,MigrationScopeHandler,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationScopeHandler.cs,GuardAgainstActiveMigrationScope,The length of the statement  "            if (HasActiveMigrationScope) throw new InvalidOperationException("The runner is already in an active migration scope."); " is 120.
Long Statement,FluentMigrator.Runner,MigrationValidator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationValidator.cs,ApplyConventionsToAndValidateExpressions,The length of the statement  "                _announcer.Error("The migration {0} contained the following Validation Error(s): {1}"' migration.GetType().Name' errorMessage); " is 127.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,ApplyMaintenance,The length of the statement  "                ApplyMigrationUp(maintenanceMigration' useAutomaticTransactionManagement && maintenanceMigration.TransactionBehavior == TransactionBehavior.Default); " is 149.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateUp,The length of the statement  "            using (IMigrationScope scope = _migrationScopeHandler.CreateOrWrapMigrationScope(useAutomaticTransactionManagement && TransactionPerSession)) " is 141.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateUp,The length of the statement  "                        ApplyMigrationUp(migrationInfo' useAutomaticTransactionManagement && migrationInfo.TransactionBehavior == TransactionBehavior.Default); " is 135.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateDown,The length of the statement  "            using (IMigrationScope scope = _migrationScopeHandler.CreateOrWrapMigrationScope(useAutomaticTransactionManagement && TransactionPerSession)) " is 141.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,MigrateDown,The length of the statement  "                        ApplyMigrationDown(migrationInfo' useAutomaticTransactionManagement && migrationInfo.TransactionBehavior == TransactionBehavior.Default); " is 137.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,ApplyMigrationUp,The length of the statement  "                            VersionLoader.UpdateVersionInfo(migrationInfo.Version' migrationInfo.Description ?? migrationInfo.Migration.GetType().Name); " is 124.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,Rollback,The length of the statement  "            using (IMigrationScope scope = _migrationScopeHandler.CreateOrWrapMigrationScope(useAutomaticTransactionManagement && TransactionPerSession)) " is 141.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,Rollback,The length of the statement  "                        ApplyMigrationDown(migrationInfo' useAutomaticTransactionManagement && migrationInfo.TransactionBehavior == TransactionBehavior.Default); " is 137.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,RollbackToVersion,The length of the statement  "            using (IMigrationScope scope = _migrationScopeHandler.CreateOrWrapMigrationScope(useAutomaticTransactionManagement && TransactionPerSession)) " is 141.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,RollbackToVersion,The length of the statement  "                        ApplyMigrationDown(migrationInfo' useAutomaticTransactionManagement && migrationInfo.TransactionBehavior == TransactionBehavior.Default); " is 137.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,ExecuteMigration,The length of the statement  "            var context = new MigrationContext(Conventions' Processor' MigrationAssemblies' RunnerContext.ApplicationContext' Processor.ConnectionString); " is 142.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,ExecuteExpressions,The length of the statement  "                var msg = string.Format("-> {0} Insert operations completed in {1} taking an average of {2}"' insertCount' new TimeSpan(insertTicks)' avg); " is 139.
Long Statement,FluentMigrator.Runner,MigrationRunner,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\MigrationRunner.cs,ValidateVersionOrder,The length of the statement  "            var unappliedVersions = MigrationLoader.LoadMigrations().Where(kvp => MigrationVersionLessThanGreatestAppliedMigration(kvp.Key)).ToList(); " is 138.
Long Statement,FluentMigrator.Runner,ProfileLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\ProfileLoader.cs,FindProfilesIn,The length of the statement  "                .Where(t => Conventions.TypeIsProfile(t) && t.GetOneAttribute<ProfileAttribute>().ProfileName.ToLower() == profile.ToLower()) " is 125.
Long Statement,FluentMigrator.Runner,ConnectionlessVersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\ConnectionlessVersionLoader.cs,DeleteVersion,The length of the statement  "            var expression = new DeleteDataExpression {TableName = VersionTableMetaData.TableName' SchemaName = VersionTableMetaData.SchemaName}; " is 133.
Long Statement,FluentMigrator.Runner,ConnectionlessVersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\ConnectionlessVersionLoader.cs,RemoveVersionTable,The length of the statement  "            var expression = new DeleteTableExpression {TableName = VersionTableMetaData.TableName' SchemaName = VersionTableMetaData.SchemaName}; " is 134.
Long Statement,FluentMigrator.Runner,VersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\VersionLoader.cs,RemoveVersionTable,The length of the statement  "            var expression = new DeleteTableExpression { TableName = VersionTableMetaData.TableName' SchemaName = VersionTableMetaData.SchemaName }; " is 136.
Long Statement,FluentMigrator.Runner,VersionLoader,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\VersionLoader.cs,DeleteVersion,The length of the statement  "            var expression = new DeleteDataExpression { TableName = VersionTableMetaData.TableName' SchemaName = VersionTableMetaData.SchemaName }; " is 135.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresDescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresDescriptionGenerator.cs,GenerateTableDescription,The length of the statement  "            return string.Format(TableDescriptionTemplate' GetFullTableName(schemaName' tableName)' tableDescription.Replace("'"' "''")); " is 125.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            createStatement.Append(string.Format("CREATE TABLE {0}.{1} ({2})"' Quoter.QuoteSchemaName(expression.SchemaName)' tableName' Column.Generate(expression.Columns' tableName))); " is 174.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            alterStatement.Append(String.Format("ALTER TABLE {0}.{1} {2};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' ((PostgresColumn)Column).GenerateAlterClauses(expression.Column))); " is 223.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            createStatement.Append(string.Format("ALTER TABLE {0}.{1} ADD {2};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' Column.Generate(expression.Column))); " is 198.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return String.Format("DROP TABLE {0}.{1};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)); " is 136.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} DROP CONSTRAINT {2};"' Quoter.QuoteSchemaName(expression.ForeignKey.ForeignTableSchema)' Quoter.QuoteTableName(expression.ForeignKey.ForeignTable)' Quoter.Quote(expression.ForeignKey.Name)); " is 232.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return String.Format(result.ToString()' Quoter.QuoteIndexName(expression.Index.Name)' Quoter.QuoteSchemaName(expression.Index.SchemaName)' Quoter.QuoteTableName(expression.Index.TableName)); " is 190.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            var idx = String.Format(result.ToString()' expression.Index.Name' Quoter.QuoteSchemaName(expression.Index.SchemaName)' expression.Index.TableName);  " is 147.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "             // Clustered indexes in Postgres do not cluster updates/inserts to the table after the initial cluster operation is applied. " is 124.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("{0}; CLUSTER {1}\"{2}\" ON \"{3}\""' idx' Quoter.QuoteSchemaName(expression.Index.SchemaName)' expression.Index.TableName' expression.Index.Name); " is 168.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("DROP INDEX {0}.{1};"' Quoter.QuoteSchemaName(expression.Index.SchemaName)' Quoter.QuoteIndexName(expression.Index.Name)); " is 143.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} RENAME TO {2};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.OldName)' Quoter.QuoteTableName(expression.NewName)); " is 192.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} RENAME COLUMN {2} TO {3};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteColumnName(expression.OldName)' Quoter.QuoteColumnName(expression.NewName)); " is 250.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "                result.Append(String.Format("INSERT INTO {0}.{1} ({2}) VALUES ({3});"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' columns' data)); " is 179.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return String.Format("ALTER TABLE {0}.{1} ALTER {2} DROP DEFAULT' ALTER {2} {3};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteColumnName(expression.ColumnName)' ((PostgresColumn)Column).FormatAlterDefaultValue(expression.ColumnName' expression.DefaultValue)); " is 320.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "                result.Append(String.Format("DELETE FROM {0}.{1};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName))); " is 145.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "                        where += String.Format("{0} {1} {2}"' Quoter.QuoteColumnName(item.Key)' item.Value == null ? "IS" : "="' Quoter.QuoteValue(item.Value)); " is 136.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "                    result.Append(String.Format("DELETE FROM {0}.{1} WHERE {2};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' where)); " is 162.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return String.Format("UPDATE {0}.{1} SET {2} WHERE {3};"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' String.Join("' "' updateItems.ToArray())' String.Join(" AND "' whereClauses.ToArray())); " is 238.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} SET SCHEMA {2};"' Quoter.QuoteSchemaName(expression.SourceSchemaName)' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteSchemaName(expression.DestinationSchemaName)); " is 216.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} ALTER {2} DROP DEFAULT;"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' Quoter.Quote(expression.ColumnName)); " is 197.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} DROP CONSTRAINT {2};"' Quoter.QuoteSchemaName(expression.Constraint.SchemaName)' Quoter.QuoteTableName(expression.Constraint.TableName)' Quoter.Quote(expression.Constraint.ConstraintName)); " is 231.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1} ADD CONSTRAINT {2} {3} ({4});"' Quoter.QuoteSchemaName(expression.Constraint.SchemaName)' " is 131.
Long Statement,FluentMigrator.Runner.Generators.Postgres,PostgresTypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresTypeMap.cs,SetupTypeMaps,The length of the statement  "            SetTypeMap(DbType.DateTime2' "timestamp"); // timestamp columns in postgres can support a larger date range.  Source: http://www.postgresql.org/docs/9.1/static/datatype-datetime.html " is 182.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            // For this' we need to remove the extended property first if exists (or implement verification and use sp_updateextendedproperty) " is 130.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            var tableVerificationStatement = string.Format(TableDescriptionVerificationTemplate' formattedSchemaName' expression.TableName); " is 128.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            var removalStatement = string.Format("{0} {1}"' tableVerificationStatement' GenerateTableDescriptionRemoval(formattedSchemaName' expression.TableName)); " is 152.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            var newDescriptionStatement = GenerateTableDescription(formattedSchemaName' expression.TableName' expression.TableDescription); " is 127.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            // For this' we need to remove the extended property first if exists (or implement verification and use sp_updateextendedproperty) " is 130.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            var columnVerificationStatement = string.Format(ColumnDescriptionVerificationTemplate' formattedSchemaName' expression.TableName' expression.Column.Name); " is 154.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            var removalStatement = string.Format("{0} {1}"' columnVerificationStatement' GenerateColumnDescriptionRemoval(formattedSchemaName' expression.TableName' expression.Column.Name)); " is 178.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            var newDescriptionStatement = GenerateColumnDescription(formattedSchemaName' expression.TableName' expression.Column.Name' expression.Column.ColumnDescription); " is 160.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005DescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005DescriptionGenerator.cs,GenerateColumnDescription,The length of the statement  "            return string.Format(ColumnDescriptionTemplate' columnDescription.Replace("'"' "''")' formattedSchemaName' tableName' columnName); " is 130.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2012Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2012Generator.cs,Generate,The length of the statement  "            result.AppendFormat("{0}.{1}"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteSequenceName(expression.SequenceName)); " is 129.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServerCeGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerCeGenerator.cs,Generate,The length of the statement  "            return String.Format("sp_rename {0}' {1}"' Quoter.QuoteValue(expression.OldName)' Quoter.QuoteValue(expression.NewName)); " is 121.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServerCeGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerCeGenerator.cs,Generate,The length of the statement  "            return String.Format(sql' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteColumnName(expression.ColumnNames.ElementAt(0))); " is 132.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServerCeGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerCeGenerator.cs,Generate,The length of the statement  "            return String.Format("DROP INDEX {0}.{1}"' Quoter.QuoteTableName(expression.Index.TableName)' Quoter.QuoteIndexName(expression.Index.Name)); " is 140.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServerCeGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerCeGenerator.cs,Generate,The length of the statement  "            var sql = String.Format(InsertData' Quoter.QuoteTableName(expression.TableName)' columnNamesValues.FirstOrDefault().Key' String.Join(" UNION ALL "' selectStrings.ToArray())); " is 174.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServerColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerColumn.cs,FormatDefaultValue,The length of the statement  "                return "CONSTRAINT " + Quoter.QuoteConstraintName(GetDefaultConstraintName(column.TableName' column.Name)) + " " + defaultValue; " is 128.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2000Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2000Generator.cs,Generate,The length of the statement  "            return String.Format(RenameTable' Quoter.QuoteTableName(Quoter.QuoteCommand(expression.OldName))' Quoter.QuoteCommand(expression.NewName)); " is 139.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2000Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2000Generator.cs,Generate,The length of the statement  "            return String.Format(RenameColumn' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteColumnName(Quoter.QuoteCommand(expression.OldName))' Quoter.QuoteCommand(expression.NewName)); " is 186.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2000Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2000Generator.cs,BuildDelete,The length of the statement  "            builder.AppendLine(String.Format("-- now we can finally drop column" + Environment.NewLine + "ALTER TABLE {0} DROP COLUMN {1};"' " is 128.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2000Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2000Generator.cs,Generate,The length of the statement  "            builder.Append(String.Format("-- create alter table command to create new default constraint as string and run it" + Environment.NewLine +"ALTER TABLE {0} WITH NOCHECK ADD CONSTRAINT {3} DEFAULT({2}) FOR {1};"' " is 210.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            var createTableStatement = string.Format("CREATE TABLE {0}.{1}"' Quoter.QuoteSchemaName(expression.SchemaName)' base.Generate(expression)); " is 139.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            var alterTableStatement = string.Format("ALTER TABLE {0}.{1}"' Quoter.QuoteSchemaName(expression.SchemaName)' base.Generate(expression)); " is 137.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            var alterTableStatement = string.Format("ALTER TABLE {0}.{1}"' Quoter.QuoteSchemaName(expression.SchemaName)' base.Generate(expression)); " is 137.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "                deleteItems.Add(string.Format(DeleteData' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' "1 = 1")); " is 144.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "                        whereClauses.Add(string.Format("{0} {1} {2}"' Quoter.QuoteColumnName(item.Key)' item.Value == null ? "IS" : "="' Quoter.QuoteValue(item.Value))); " is 145.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "                    deleteItems.Add(string.Format(DeleteData' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName)' String.Join(" AND "' whereClauses.ToArray()))); " is 181.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1}"' Quoter.QuoteSchemaName(expression.ForeignKey.ForeignTableSchema)' base.Generate(expression)); " is 137.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            return String.Format(DropIndex' Quoter.QuoteIndexName(expression.Index.Name)' Quoter.QuoteSchemaName(expression.Index.SchemaName)' Quoter.QuoteTableName(expression.Index.TableName)); " is 182.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,BuildDelete,The length of the statement  "            builder.AppendLine(String.Format("-- now we can finally drop column" + Environment.NewLine + "ALTER TABLE {2}.{0} DROP COLUMN {1};"' " is 132.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            builder.Append(String.Format("-- create alter table command to create new default constraint as string and run it" + Environment.NewLine + "ALTER TABLE {3}.{0} WITH NOCHECK ADD CONSTRAINT {4} DEFAULT({2}) FOR {1};"' " is 215.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1}"' Quoter.QuoteSchemaName(expression.Constraint.SchemaName)' base.Generate(expression)); " is 129.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            return String.Format(sql' Quoter.QuoteTableName(expression.TableName)' expression.ColumnName' Quoter.QuoteSchemaName(expression.SchemaName)); " is 141.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0}.{1}"' Quoter.QuoteSchemaName(expression.Constraint.SchemaName)' base.Generate(expression)); " is 129.
Long Statement,FluentMigrator.Runner.Generators.SqlServer,SqlServer2005Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServer2005Generator.cs,Generate,The length of the statement  "            return String.Format(AlterSchema' Quoter.QuoteSchemaName(expression.DestinationSchemaName)' Quoter.QuoteSchemaName(expression.SourceSchemaName)' Quoter.QuoteTableName(expression.TableName)); " is 190.
Long Statement,FluentMigrator.Runner.Generators.Hana,HanaColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaColumn.cs,GetPrimaryKeyConstraintName,The length of the statement  "                        "Hana does not support length of primary key name greater than {0} characters. Reduce length of primary key name. ({1})"' " is 121.
Long Statement,FluentMigrator.Runner.Generators.Hana,HanaGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaGenerator.cs,InnerGenerate,The length of the statement  "            return string.Format("CREATE COLUMN TABLE {0} ({1});"' ExpandTableName(schemaName' tableName)' Column.Generate(expression.Columns' tableName)); " is 143.
Long Statement,FluentMigrator.Runner.Extensions,SqlServerExtensions,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Extensions\SqlServerExtensions.cs,WithIdentityInsert,The length of the statement  "                throw new InvalidOperationException("WithIdentityInsert must be called on an object that implements ISupportAdditionalFeatures."); " is 130.
Long Statement,FluentMigrator.Runner.Extensions,SqlServerExtensions,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Extensions\SqlServerExtensions.cs,SetConstraintType,The length of the statement  "            if (castPrimaryKey == null) throw new InvalidOperationException(type + " must be called on an object that implements ISupportAdditionalFeatures."); " is 147.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                Quoter.QuoteSchemaName(expression.Constraint.SchemaName) + "." + Quoter.QuoteConstraintName(expression.Constraint.ConstraintName) " is 129.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                : Quoter.QuoteSchemaName(expression.Constraint.SchemaName) + "." + Quoter.QuoteConstraintName(expression.Constraint.ConstraintName); " is 132.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                : Quoter.QuoteSchemaName(expression.ForeignKey.ForeignTableSchema) + "." + Quoter.QuoteConstraintName(expression.ForeignKey.Name); " is 130.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                        return acc.AppendFormat("{0}{1} {2} {3}"' accumulator' Quoter.QuoteColumnName(rowVal.Key)' clauseOperator' Quoter.QuoteValue(rowVal.Value)); " is 140.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                    deleteExpressions.AppendFormat("{0}DELETE FROM {1} WHERE {2}"' separator' QuoteSchemaAndTable(expression.SchemaName' expression.TableName)' clauses); " is 149.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                return acc.AppendFormat("{0}{1} = {2}"' accumulator' Quoter.QuoteColumnName(newRow.Key)' Quoter.QuoteValue(newRow.Value)); " is 122.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                return string.Format("UPDATE {0} SET {1}"' this.QuoteSchemaAndTable(expression.SchemaName' expression.TableName)' updateClauses); " is 129.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                return acc.AppendFormat("{0}{1} {2} {3}"' accumulator' Quoter.QuoteColumnName(rowVal.Key)' clauseOperator' Quoter.QuoteValue(rowVal.Value)); " is 140.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "            return string.Format("UPDATE {0} SET {1} WHERE {2}"' this.QuoteSchemaAndTable(expression.SchemaName' expression.TableName)' updateClauses' whereClauses); " is 153.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "            return string.Format("CREATE TABLE {0} ({1})"' this.QuoteSchemaAndTable(expression.SchemaName' expression.TableName)' Column.Generate(expression.Columns' expression.TableName)); " is 177.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                // throws an exception of an attempt is made to alter an identity column' as it is not supported by most version of DB2. " is 120.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,Generate,The length of the statement  "                return string.Format("ALTER TABLE {0} {1}"' this.QuoteSchemaAndTable(expression.SchemaName' expression.TableName)' ((Db2Column)Column).GenerateAlterClause(expression.Column)); " is 175.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Generator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Generator.cs,QuoteSchemaAndTable,The length of the statement  "            return !string.IsNullOrEmpty(schemaName) ? Quoter.QuoteSchemaName(schemaName) + "." + Quoter.QuoteTableName(tableName) : Quoter.QuoteTableName(tableName); " is 154.
Long Statement,FluentMigrator.Runner.Generators.DB2,Db2Quoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Quoter.cs,Quote,The length of the statement  "            // Quotes are only included if the name contains a special character' in order to preserve case insensitivity where possible. " is 125.
Long Statement,FluentMigrator.Runner.Generators.Firebird,FirebirdGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdGenerator.cs,GenerateAlterSequence,The length of the statement  "                return String.Format("ALTER SEQUENCE {0} RESTART WITH {1}"' Quoter.QuoteSequenceName(sequence.Name)' sequence.StartWith.ToString()); " is 132.
Long Statement,FluentMigrator.Runner.Generators.Firebird,FirebirdGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdGenerator.cs,DefaultValuesMatch,The length of the statement  "            if (col1.DefaultValue is ColumnDefinition.UndefinedDefaultValue && col2.DefaultValue is ColumnDefinition.UndefinedDefaultValue) " is 127.
Long Statement,FluentMigrator.Runner.Generators.Firebird,FirebirdGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdGenerator.cs,DefaultValuesMatch,The length of the statement  "            if (col1.DefaultValue is ColumnDefinition.UndefinedDefaultValue || col2.DefaultValue is ColumnDefinition.UndefinedDefaultValue) " is 127.
Long Statement,FluentMigrator.Runner.Generators.Firebird,FirebirdTypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdTypeMap.cs,SetupTypeMaps,The length of the statement  "            SetTypeMap(DbType.Guid' "CHAR(16) CHARACTER SET OCTETS"); //no guid support' "only" uuid is supported(via gen_uuid() built-in function) " is 135.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericDescriptionGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericDescriptionGenerator.cs,GenerateDescriptionStatement,The length of the statement  "            return GenerateColumnDescription(expression.SchemaName' expression.TableName' expression.Column.Name' expression.Column.ColumnDescription); " is 139.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            if (string.IsNullOrEmpty(expression.TableName)) throw new ArgumentNullException("expression"' "expression.TableName cannot be empty"); " is 134.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return String.Format(RenameTable' Quoter.QuoteTableName(expression.OldName)' Quoter.QuoteTableName(expression.NewName)); " is 120.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return String.Format(DropIndex' Quoter.QuoteIndexName(expression.Index.Name)' Quoter.QuoteTableName(expression.Index.TableName)); " is 129.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(DeleteConstraint' Quoter.QuoteTableName(expression.Constraint.TableName)' Quoter.QuoteConstraintName(expression.Constraint.ConstraintName)); " is 161.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,GenerateForeignKeyName,The length of the statement  "            return string.Format("FK_{0}_{1}"' expression.ForeignKey.PrimaryTable.Substring(0' 5)' expression.ForeignKey.ForeignTable.Substring(0' 5)); " is 139.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                throw new ArgumentNullException("Table name not specified' ensure you have appended the OnTable extension. Format should be Delete.ForeignKey(KeyName).OnTable(TableName)"); " is 172.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return string.Format(DeleteConstraint' Quoter.QuoteTableName(expression.ForeignKey.ForeignTable)' Quoter.QuoteColumnName(expression.ForeignKey.Name)); " is 150.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            var insertStrings = GenerateColumnNamesAndValues(expression).Select(x => String.Format(InsertData' Quoter.QuoteTableName(expression.TableName)'x.Key' x.Value)); " is 160.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "            return String.Format(UpdateData' Quoter.QuoteTableName(expression.TableName)' String.Join("' "' updateItems.ToArray())' String.Join(" AND "' whereClauses.ToArray())); " is 166.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                        whereClauses.Add(string.Format("{0} {1} {2}"' Quoter.QuoteColumnName(item.Key)' item.Value == null ? "IS" : "="' Quoter.QuoteValue(item.Value))); " is 145.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                    deleteItems.Add(string.Format(DeleteData' Quoter.QuoteTableName(expression.TableName)' String.Join(" AND "' whereClauses.ToArray()))); " is 134.
Long Statement,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,Generate,The length of the statement  "                result.AppendFormat("{0}.{1}"' Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteSequenceName(expression.SequenceName)); " is 129.
Long Statement,FluentMigrator.Runner.Generators.Oracle,OracleColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleColumn.cs,FormatIdentity,The length of the statement  "                throw new DatabaseOperationNotSupportedException("Oracle does not support identity columns. Please use a SEQUENCE instead"); " is 124.
Long Statement,FluentMigrator.Runner.Generators.Oracle,OracleColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleColumn.cs,GetPrimaryKeyConstraintName,The length of the statement  "                        "Oracle does not support length of primary key name greater than {0} characters. Reduce length of primary key name. ({1})"' " is 123.
Long Statement,FluentMigrator.Runner.Generators.Oracle,OracleQuoterQuotedIdentifier,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleQuoterQuotedIdentifier.cs,FormatDateTime,The length of the statement  "            var result = string.Format("to_date({0}{1}{0}' {0}yyyy-mm-dd hh24:mi:ss{0})"' ValueQuote' value.ToString("yyyy-MM-dd HH:mm:ss")); //ISO 8601 DATETIME FORMAT (EXCEPT 'T' CHAR) " is 174.
Long Statement,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,Generate,The length of the statement  "            return String.Format(DropTable' ExpandTableName(Quoter.QuoteTableName(expression.SchemaName)'Quoter.QuoteTableName(expression.TableName))); " is 139.
Long Statement,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,innerGenerate,The length of the statement  "            return string.Format("CREATE TABLE {0} ({1})"'ExpandTableName(schemaName'tableName)' Column.Generate(expression.Columns' tableName)); " is 133.
Long Statement,FluentMigrator.Runner.Generators.Oracle,OracleGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleGenerator.cs,Generate,The length of the statement  "                insertStrings.Add(String.Format(InsertData' ExpandTableName(Quoter.QuoteSchemaName(expression.SchemaName)' Quoter.QuoteTableName(expression.TableName))' columns' values)); " is 171.
Long Statement,FluentMigrator.Runner.Processors.Hana,HanaProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Hana\HanaProcessor.cs,ColumnExists,The length of the statement  "            return Exists("SELECT 1 FROM TABLE_COLUMNS WHERE SCHEMA_NAME = CURRENT_SCHEMA AND upper(TABLE_NAME) = '{0}' AND upper(COLUMN_NAME) = '{1}'"' " is 140.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleManagedProcessorFactory,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleManagedProcessorFactory.cs,Create,The length of the statement  "            return new OracleProcessor(connection' new OracleGenerator(this.Quoted(options.ProviderSwitches))' announcer' options' factory); " is 128.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,TableExists,The length of the statement  "                return Exists("SELECT 1 FROM USER_TABLES WHERE upper(TABLE_NAME) = '{0}'"' FormatHelper.FormatSqlEscape(tableName.ToUpper())); " is 126.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,TableExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_TABLES WHERE upper(OWNER) = '{0}' AND upper(TABLE_NAME) = '{1}'"' schemaName.ToUpper()' FormatHelper.FormatSqlEscape(tableName.ToUpper())); " is 172.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,ColumnExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_TAB_COLUMNS WHERE upper(OWNER) = '{0}' AND upper(TABLE_NAME) = '{1}' AND upper(COLUMN_NAME) = '{2}'"' " is 134.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,ColumnExists,The length of the statement  "                schemaName.ToUpper()' FormatHelper.FormatSqlEscape(tableName.ToUpper())' FormatHelper.FormatSqlEscape(columnName.ToUpper())); " is 125.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,ConstraintExists,The length of the statement  "                return Exists("SELECT 1 FROM USER_CONSTRAINTS WHERE upper(CONSTRAINT_NAME) = '{0}'"' FormatHelper.FormatSqlEscape(constraintName.ToUpper())); " is 141.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,ConstraintExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_CONSTRAINTS WHERE upper(OWNER) = '{0}' AND upper(CONSTRAINT_NAME) = '{1}'"' schemaName.ToUpper()'  " is 130.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,IndexExists,The length of the statement  "                return Exists("SELECT 1 FROM USER_INDEXES WHERE upper(INDEX_NAME) = '{0}'"' FormatHelper.FormatSqlEscape(indexName.ToUpper())); " is 127.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessor.cs,IndexExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_INDEXES WHERE upper(OWNER) = '{0}' AND upper(INDEX_NAME) = '{1}'"' schemaName.ToUpper()' FormatHelper.FormatSqlEscape(indexName.ToUpper())); " is 173.
Long Statement,FluentMigrator.Runner.Processors.Oracle,OracleProcessorFactory,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Oracle\OracleProcessorFactory.cs,Create,The length of the statement  "            return new OracleProcessor(connection' new OracleGenerator(Quoted(options.ProviderSwitches))' announcer' options' factory); " is 123.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2DbFactory,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2DbFactory.cs,CreateFactory,The length of the statement  "            var assembly = AppDomain.CurrentDomain.Load("IBM.Data.DB2.iSeries' Version=12.0.0.0' Culture=neutral' PublicKeyToken=9cdb2ebfb1f93a26"); " is 136.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,ColumnExists,The length of the statement  "            var schema = string.IsNullOrEmpty(schemaName) ? string.Empty : "TABLE_SCHEMA = '" + this.FormatToSafeName(schemaName) + "' AND "; " is 129.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,ColumnExists,The length of the statement  "            var doesExist = this.Exists("SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE {0} TABLE_NAME = '{1}' AND COLUMN_NAME='{2}'"' schema' this.FormatToSafeName(tableName)' this.FormatToSafeName(columnName)); " is 210.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,ConstraintExists,The length of the statement  "            var schema = string.IsNullOrEmpty(schemaName) ? string.Empty : "TABLE_SCHEMA = '" + this.FormatToSafeName(schemaName) + "' AND "; " is 129.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,ConstraintExists,The length of the statement  "            return this.Exists("SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE {0} TABLE_NAME = '{1}' AND CONSTRAINT_NAME='{2}'"' schema' this.FormatToSafeName(tableName)' this.FormatToSafeName(constraintName)); " is 223.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,DefaultValueExists,The length of the statement  "            var schema = string.IsNullOrEmpty(schemaName) ? string.Empty : "TABLE_SCHEMA = '" + this.FormatToSafeName(schemaName) + "' AND "; " is 129.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,DefaultValueExists,The length of the statement  "            return this.Exists("SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.COLUMNS WHERE {0} TABLE_NAME = '{1}' AND COLUMN_NAME = '{2}' AND COLUMN_DEFAULT LIKE '{3}'"' schema' this.FormatToSafeName(tableName)' columnName.ToUpper()' defaultValueAsString); " is 245.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,ReadTableData,The length of the statement  "            var schemaAndTable = !string.IsNullOrEmpty(schemaName) ? this.Quoter.QuoteSchemaName(schemaName) + "." + this.Quoter.QuoteTableName(tableName) : this.Quoter.QuoteTableName(tableName); " is 183.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,SchemaExists,The length of the statement  "            return this.Exists("SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '{0}'"' this.FormatToSafeName(schemaName)); " is 135.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,TableExists,The length of the statement  "            var schema = string.IsNullOrEmpty(schemaName) ? string.Empty : "TABLE_SCHEMA = '" + this.FormatToSafeName(schemaName) + "' AND "; " is 129.
Long Statement,FluentMigrator.Runner.Processors.DB2,Db2Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Db2\Db2Processor.cs,TableExists,The length of the statement  "            return this.Exists("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE {0} TABLE_NAME = '{1}'"' schema' this.FormatToSafeName(tableName)); " is 142.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessedExpressionBase,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessedExpression.cs,SetupUndoDeleteData,The length of the statement  "                    InsertDataExpression insert = new InsertDataExpression() { SchemaName = String.Empty' TableName = expression.TableName }; " is 121.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,TableExists,The length of the statement  "            return Exists("select rdb$relation_name from rdb$relations where (rdb$flags IS NOT NULL) and (lower(rdb$relation_name) = lower('{0}'))"' FormatToSafeName(tableName)); " is 166.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,ColumnExists,The length of the statement  "            return Exists("select rdb$field_name from rdb$relation_fields where (lower(rdb$relation_name) = lower('{0}')) and (lower(rdb$field_name) = lower('{1}'))"' FormatToSafeName(tableName)' FormatToSafeName(columnName)); " is 214.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,ConstraintExists,The length of the statement  "            return Exists("select rdb$constraint_name from rdb$relation_constraints where (lower(rdb$relation_name) = lower('{0}')) and (lower(rdb$constraint_name) = lower('{1}'))"' FormatToSafeName(tableName)' FormatToSafeName(constraintName)); " is 233.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,IndexExists,The length of the statement  "            return Exists("select rdb$index_name from rdb$indices where (lower(rdb$relation_name) = lower('{0}')) and (lower(rdb$index_name) = lower('{1}')) and (rdb$system_flag <> 1 OR rdb$system_flag IS NULL) and (rdb$foreign_key IS NULL)"' FormatToSafeName(tableName)' FormatToSafeName(indexName)); " is 289.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,SequenceExists,The length of the statement  "            return Exists("select rdb$generator_name from rdb$generators where lower(rdb$generator_name) = lower('{0}')"' FormatToSafeName(sequenceName)); " is 142.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,TriggerExists,The length of the statement  "            return Exists("select rdb$trigger_name from rdb$triggers where (lower(rdb$relation_name) = lower('{0}')) and (lower(rdb$trigger_name) = lower('{1}'))"' FormatToSafeName(tableName)' FormatToSafeName(triggerName)); " is 212.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,RegisterExpression,The length of the statement  "            RegisterExpression(new FirebirdProcessedExpression(expression' expressionType' this) as FirebirdProcessedExpressionBase); " is 121.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,The length of the statement  "                FirebirdProcessedExpressionBase fbExpression = new FirebirdProcessedExpression<AlterColumnExpression>(expression' this); " is 120.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,The length of the statement  "                FirebirdProcessedExpressionBase fbExpression = new FirebirdProcessedExpression(defaultConstraint' defaultConstraint.GetType()' this); " is 133.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,The length of the statement  "                FirebirdProcessedExpressionBase fbExpression = new FirebirdProcessedExpression<AlterColumnExpression>(expression' this); " is 120.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,The length of the statement  "            //copy column definitions (nb: avoid to copy key names' because in firebird they must be globally unique' so let it rename) " is 123.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,Process,The length of the statement  "            var subExpression = new InsertDataExpression() { SchemaName = expression.SchemaName' TableName = expression.TableName }; " is 120.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,CreateSequenceForIdentity,The length of the statement  "            string trigger = String.Format("as begin if (NEW.{0} is NULL) then NEW.{1} = GEN_ID({2}' 1); end"' quotedColumn' quotedColumn' quoter.QuoteSequenceName(sequenceName)); " is 167.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,CreateSequenceForIdentity,The length of the statement  "            PerformDBOperationExpression createTrigger = CreateTriggerExpression(tableName' triggerName' true' TriggerEvent.Insert' trigger); " is 129.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,CreateSequenceForIdentity,The length of the statement  "            FirebirdProcessedExpressionBase fbExpression = new FirebirdProcessedExpression(createTrigger' typeof(PerformDBOperationExpression)' this); " is 138.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessor.cs,DeleteSequenceForIdentity,The length of the statement  "            FirebirdProcessedExpressionBase fbExpression = new FirebirdProcessedExpression<PerformDBOperationExpression>(deleteTrigger' this); " is 130.
Long Statement,FluentMigrator.Runner.Processors.Firebird,FirebirdTableSchema,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdTableSchema.cs,LoadColumns,The length of the statement  "                    DefaultValue = column.DefaultValue == DBNull.Value ? new ColumnDefinition.UndefinedDefaultValue() : column.DefaultValue' " is 120.
Long Statement,FluentMigrator.Runner.Generators.MySql,MySqlGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlGenerator.cs,Generate,The length of the statement  "            if (string.IsNullOrEmpty(expression.TableName)) throw new ArgumentNullException("expression"' "expression.TableName cannot be empty"); " is 134.
Long Statement,FluentMigrator.Runner.Generators.MySql,MySqlGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0} COMMENT {1}"' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteValue(expression.TableDescription)); " is 145.
Long Statement,FluentMigrator.Runner.Generators.MySql,MySqlGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlGenerator.cs,Generate,The length of the statement  "            return string.Format("DROP INDEX {0} ON {1}"' Quoter.QuoteIndexName(expression.Index.Name)' Quoter.QuoteTableName(expression.Index.TableName)); " is 143.
Long Statement,FluentMigrator.Runner.Generators.MySql,MySqlGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlGenerator.cs,Generate,The length of the statement  "            return string.Format("ALTER TABLE {0} CHANGE {1} {2} "' Quoter.QuoteTableName(expression.TableName)' Quoter.QuoteColumnName(expression.OldName)' Quoter.QuoteColumnName(expression.NewName)); " is 189.
Long Statement,FluentMigrator.Runner.Generators.MySql,MySqlGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlGenerator.cs,Generate,The length of the statement  "            return string.Format(DeleteConstraint' Quoter.QuoteTableName(expression.Constraint.TableName)' "INDEX "' Quoter.Quote(expression.Constraint.ConstraintName)); " is 157.
Long Statement,FluentMigrator.Runner.Generators.MySql,MySqlGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlGenerator.cs,Generate,The length of the statement  "            return string.Format(DeleteConstraint' Quoter.QuoteTableName(expression.ForeignKey.ForeignTable)' "FOREIGN KEY "' Quoter.QuoteColumnName(expression.ForeignKey.Name)); " is 166.
Long Statement,FluentMigrator.Runner.Initialization,ConnectionStringManager,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\ConnectionStringManager.cs,OutputResults,The length of the statement  "                throw new UndeterminableConnectionException("Unable to resolve any connectionstring using parameters \"/connection\" and \"/configPath\""); " is 139.
Long Statement,FluentMigrator.Runner.Initialization,ConnectionStringManager,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\ConnectionStringManager.cs,OutputResults,The length of the statement  "                              ? string.Format("Using Database {0} and Connection String {1}"' database' matchPwd.Replace(ConnectionString'"$1********;")) " is 123.
Long Statement,FluentMigrator.Runner.Initialization,TaskExecutor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\TaskExecutor.cs,Initialize,The length of the statement  "            var processor = RunnerContext.NoConnection? InitializeConnectionlessProcessor():InitializeProcessor(assemblyCollection); " is 120.
Long Statement,FluentMigrator.Runner.Initialization,TaskExecutor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\TaskExecutor.cs,InitializeProcessor,The length of the statement  "                throw new ProcessorFactoryNotFoundException(string.Format("The provider or dbtype parameter is incorrect. Available choices are {0}: "' ProcessorFactoryProvider.ListAvailableProcessorTypes())); " is 193.
Long Statement,FluentMigrator.Runner.Initialization,TaskExecutor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\TaskExecutor.cs,LoadConnectionString,The length of the statement  "            var singleAssembly = (assemblyCollection != null && assemblyCollection.Assemblies != null && assemblyCollection.Assemblies.Length == 1) ? assemblyCollection.Assemblies[0] : null; " is 178.
Long Statement,FluentMigrator.Runner.Processors.DotConnectOracle,DotConnectOracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\DotConnectOracle\DotConnectOracleProcessor.cs,TableExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_TABLES WHERE OWNER = '{0}' AND TABLE_NAME = '{1}'"' schemaName.ToUpper()' tableName.ToUpper()); " is 128.
Long Statement,FluentMigrator.Runner.Processors.DotConnectOracle,DotConnectOracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\DotConnectOracle\DotConnectOracleProcessor.cs,ColumnExists,The length of the statement  "                return Exists("SELECT 1 FROM USER_TAB_COLUMNS WHERE TABLE_NAME = '{0}' AND COLUMN_NAME = '{1}'"' tableName.ToUpper()' columnName.ToUpper()); " is 140.
Long Statement,FluentMigrator.Runner.Processors.DotConnectOracle,DotConnectOracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\DotConnectOracle\DotConnectOracleProcessor.cs,ColumnExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_TAB_COLUMNS WHERE OWNER = '{0}' AND TABLE_NAME = '{1}' AND COLUMN_NAME = '{2}'"' schemaName.ToUpper()' tableName.ToUpper()' columnName.ToUpper()); " is 179.
Long Statement,FluentMigrator.Runner.Processors.DotConnectOracle,DotConnectOracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\DotConnectOracle\DotConnectOracleProcessor.cs,ConstraintExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_CONSTRAINTS WHERE OWNER = '{0}' AND CONSTRAINT_NAME = '{1}'"' schemaName.ToUpper()' constraintName.ToUpper()); " is 143.
Long Statement,FluentMigrator.Runner.Processors.DotConnectOracle,DotConnectOracleProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\DotConnectOracle\DotConnectOracleProcessor.cs,IndexExists,The length of the statement  "            return Exists("SELECT 1 FROM ALL_INDEXES WHERE OWNER = '{0}' AND INDEX_NAME = '{1}'"' schemaName.ToUpper()' indexName.ToUpper()); " is 129.
Long Statement,FluentMigrator.Runner.Processors.MySql,MySqlProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\MySql\MySqlProcessor.cs,DefaultValueExists,The length of the statement  "            return Exists("SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = SCHEMA() AND TABLE_NAME = '{0}' AND COLUMN_NAME = '{1}' AND COLUMN_DEFAULT LIKE '{2}'"' " is 164.
Long Statement,FluentMigrator.Runner.Processors.MySql,MySqlProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\MySql\MySqlProcessor.cs,Process,The length of the statement  " WHERE TABLE_NAME = '{0}' AND COLUMN_NAME = '{1}'"' FormatHelper.FormatSqlEscape(expression.TableName)' FormatHelper.FormatSqlEscape(expression.OldName)); " is 153.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,SchemaExists,The length of the statement  "            return Exists("select * from information_schema.schemata where schema_name = '{0}'"' FormatToSafeSchemaName(schemaName)); " is 121.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,TableExists,The length of the statement  "            return Exists("select * from information_schema.tables where table_schema = '{0}' and table_name = '{1}'"' FormatToSafeSchemaName(schemaName)' FormatToSafeName(tableName)); " is 172.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,ColumnExists,The length of the statement  "            return Exists("select * from information_schema.columns where table_schema = '{0}' and table_name = '{1}' and column_name = '{2}'"' FormatToSafeSchemaName(schemaName)' FormatToSafeName(tableName)' FormatToSafeName(columnName)); " is 227.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,ConstraintExists,The length of the statement  "            return Exists("select * from information_schema.table_constraints where constraint_catalog = current_catalog and table_schema = '{0}' and table_name = '{1}' and constraint_name = '{2}'"' FormatToSafeSchemaName(schemaName)' FormatToSafeName(tableName)' FormatToSafeName(constraintName)); " is 286.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,IndexExists,The length of the statement  "            return Exists("select * from pg_catalog.pg_indexes where schemaname='{0}' and tablename = '{1}' and indexname = '{2}'"' FormatToSafeSchemaName(schemaName)' FormatToSafeName(tableName)' FormatToSafeName(indexName)); " is 214.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,SequenceExists,The length of the statement  "            return Exists("select * from information_schema.sequences where sequence_catalog = current_catalog and sequence_schema ='{0}' and sequence_name = '{1}'"' FormatToSafeSchemaName(schemaName)' FormatToSafeName(sequenceName)); " is 222.
Long Statement,FluentMigrator.Runner.Processors.Postgres,PostgresProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Postgres\PostgresProcessor.cs,DefaultValueExists,The length of the statement  "            return Exists("select * from information_schema.columns where table_schema = '{0}' and table_name = '{1}' and column_name = '{2}' and column_default like '{3}'"' FormatToSafeSchemaName(schemaName)' FormatToSafeName(tableName)' FormatToSafeName(columnName)' defaultValueAsString); " is 279.
Long Statement,FluentMigrator.Runner.Processors.SQLite,SQLiteProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SQLite\SQLiteProcessor.cs,ColumnExists,The length of the statement  "            return dataSet.Tables.Count > 0 && dataSet.Tables[0].Select(string.Format("Name='{0}'"' columnName.Replace("'"' "''"))).Length > 0; " is 131.
Long Statement,FluentMigrator.Runner.Processors.SQLite,SQLiteProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SQLite\SQLiteProcessor.cs,IndexExists,The length of the statement  "            return Exists("select count(*) from sqlite_master where name='{0}' and tbl_name='{1}' and type='index'"' indexName' tableName); " is 127.
Long Statement,FluentMigrator.Runner.Processors.SqlServer,SqlServer2000Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServer2000Processor.cs,TableExists,The length of the statement  "                return Exists("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '{0}'"' FormatHelper.FormatSqlEscape(tableName)); " is 123.
Long Statement,FluentMigrator.Runner.Processors.SqlServer,SqlServer2000Processor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServer2000Processor.cs,ConstraintExists,The length of the statement  "            return Exists("SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_CATALOG = DB_NAME() AND TABLE_NAME = '{0}' AND CONSTRAINT_NAME = '{1}'"' " is 155.
Long Statement,FluentMigrator.Runner.Processors.SqlServer,SqlServerCeProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServerCeProcessor.cs,TableExists,The length of the statement  "            return Exists("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '{0}'"' FormatHelper.FormatSqlEscape(tableName)); " is 123.
Long Statement,FluentMigrator.Runner.Processors.SqlServer,SqlServerCeProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServerCeProcessor.cs,ConstraintExists,The length of the statement  "            return Exists("SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_NAME = '{0}' AND CONSTRAINT_NAME = '{1}'"' " is 120.
Long Statement,FluentMigrator.Runner.Processors.SqlServer,SqlServerCeProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\SqlServer\SqlServerCeProcessor.cs,IndexExists,The length of the statement  "            return Exists("SELECT NULL FROM INFORMATION_SCHEMA.INDEXES WHERE INDEX_NAME = '{0}'"' FormatHelper.FormatSqlEscape(indexName)); " is 127.
Long Statement,FluentMigrator.Runner.Versioning,VersionUniqueMigration,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Versioning\VersionMigration.cs,Up,The length of the statement  "            Alter.Table(versionTableMeta.TableName).InSchema(versionTableMeta.SchemaName).AddColumn(versionTableMeta.AppliedOnColumnName).AsDateTime().Nullable(); " is 150.
Complex Conditional,FluentMigrator.Runner.Generators.Firebird,FirebirdTruncator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdTruncator.cs,Pack,The conditional expression  "(c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')"  is complex.
Virtual Method Call from Constructor,FluentMigrator.Runner.Generators.Base,TypeMapBase,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Base\TypeMapBase.cs,TypeMapBase,The constructor "TypeMapBase" calls a virtual method "SetupTypeMaps".
Empty Catch Block,FluentMigrator.Runner.Generators,MigrationGeneratorFactory,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MigrationGeneratorFactory.cs,MigrationGeneratorFactory,The method has an empty catch block.
Empty Catch Block,FluentMigrator.Runner.Processors.Firebird,FirebirdProcessedExpressionBase,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdProcessedExpression.cs,IsReversible,The method has an empty catch block.
Magic Number,FluentMigrator.Runner.Announcers,ConsoleAnnouncer,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Announcers\ConsoleAnnouncer.cs,HorizontalRule,The following statement contains a magic number: Write("".PadRight(79' '-'));
Magic Number,FluentMigrator.Runner.Announcers,TextWriterAnnouncer,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Announcers\TextWriterAnnouncer.cs,Heading,The following statement contains a magic number: base.Heading(string.Format("{0} "' message).PadRight(75' '='));
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.AnsiStringFixedLength' "CHARACTER($size)"' 255);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.AnsiString' "VARCHAR($size)"' 32704);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.Binary' "BINARY($size)"' 255);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.Binary' "VARBINARY($size)"' 32704);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.Binary' "BLOB($size)"' 2147483647);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.Decimal' "NUMERIC($size'$precision)"' 31);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.Decimal' "DECIMAL($size'$precision)"' 31);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.Single' "DECFLOAT"' 34);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.StringFixedLength' "GRAPHIC($size)"' 128);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.String' "VARGRAPHIC($size)"' 16352);
Magic Number,FluentMigrator.Runner.Generators.DB2,Db2TypeMap,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2TypeMap.cs,SetupTypeMaps,The following statement contains a magic number: this.SetTypeMap(DbType.String' "DBCLOB($size)"' 1073741824);
Magic Number,FluentMigrator.Runner.Generators.Firebird,FirebirdTruncator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdTruncator.cs,Pack,The following statement contains a magic number: if (!String.IsNullOrEmpty(name))              {                  if (name.Length > FirebirdOptions.MaxNameLength)                  {                      if (!enabled)                          throw new ArgumentException(String.Format("Name too long: {0}"' name));                        byte[] byteHash = MD5.Create().ComputeHash(System.Text.Encoding.ASCII.GetBytes(name));                      string hash = Convert.ToBase64String(byteHash);                      StringBuilder sb = new StringBuilder(hash.Length);                      int hLength = hash.Length;                       for (int i = 0; i < hLength; i++)                      {                          char c = hash[i];                          if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9'))                              sb.Append(c);                      }                      hash = sb.ToString();                      return String.Format("fk_{0}"' hash.Substring(0' Math.Min(28' hash.Length)));                  }              }
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericQuoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericQuoter.cs,FormatByteArray,The following statement contains a magic number: var hex = new System.Text.StringBuilder((value.Length * 2)+2);
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericQuoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericQuoter.cs,FormatByteArray,The following statement contains a magic number: var hex = new System.Text.StringBuilder((value.Length * 2)+2);
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericQuoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericQuoter.cs,UnQuote,The following statement contains a magic number: if (IsQuoted(quoted))              {                  unquoted = quoted.Substring(1' quoted.Length - 2);              }              else              {                  unquoted = quoted;              }
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,GenerateForeignKeyName,The following statement contains a magic number: return string.Format("FK_{0}_{1}"' expression.ForeignKey.PrimaryTable.Substring(0' 5)' expression.ForeignKey.ForeignTable.Substring(0' 5));
Magic Number,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,GenerateForeignKeyName,The following statement contains a magic number: return string.Format("FK_{0}_{1}"' expression.ForeignKey.PrimaryTable.Substring(0' 5)' expression.ForeignKey.ForeignTable.Substring(0' 5));
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following statement contains a magic number: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Magic Number,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetDefaultValue,The following statement contains a magic number: if (src.StartsWith("DEFAULT "' StringComparison.InvariantCultureIgnoreCase))              {                  string value = src.Substring(8).Trim();                  if (value.StartsWith("'"))                  {                      return value.TrimStart('\'').TrimEnd('\'');                  }                  else if (value.Equals("current_timestamp"' StringComparison.InvariantCultureIgnoreCase))                  {                      return SystemMethods.CurrentDateTime;                  }                  else if (value.Equals("gen_uuid()"' StringComparison.InvariantCultureIgnoreCase))                  {                      return SystemMethods.NewGuid;                  }                  else                   {                      int res = 0;                      if (int.TryParse(value' out res))                          return res;                    }              }
Magic Number,FluentMigrator.Runner.Generators.MySql,MySqlQuoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlQuoter.cs,FromTimeSpan,The following statement contains a magic number: return System.String.Format("{0}{1:00}:{2:00}:{3:00}{0}"                  ' ValueQuote                  ' value.Hours + (value.Days * 24)                  ' value.Minutes                  ' value.Seconds);
Magic Number,FluentMigrator.Runner.Initialization,TaskExecutor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\TaskExecutor.cs,InitializeProcessor,The following statement contains a magic number: if (RunnerContext.Timeout == 0)              {                  RunnerContext.Timeout = 30; // Set default timeout for command              }
Magic Number,FluentMigrator.Runner.Processors.Jet,JetProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Jet\JetProcessor.cs,TableExists,The following statement contains a magic number: using (var tables = Connection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables' restrict))              {                  for (int i = 0; i < tables.Rows.Count; i++)                  {                      var name = tables.Rows[i].ItemArray[2].ToString();                      if (name == tableName)                      {                          return true;                      }                  }                  return false;              }
Magic Number,FluentMigrator.Runner.Processors.Jet,JetProcessor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Jet\JetProcessor.cs,ColumnExists,The following statement contains a magic number: using (var columns = Connection.GetOleDbSchemaTable(OleDbSchemaGuid.Columns' restrict))              {                  for (int i = 0; i < columns.Rows.Count; i++)                  {                      var name = columns.Rows[i].ItemArray[3].ToString();                      if (name == columnName)                      {                          return true;                      }                  }                  return false;              }
Magic Number,FluentMigrator.Runner.Versioning,VersionDescriptionMigration,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Versioning\VersionMigration.cs,Up,The following statement contains a magic number: Alter.Table(versionTableMeta.TableName).InSchema(versionTableMeta.SchemaName)                  .AddColumn(versionTableMeta.DescriptionColumnName).AsString(1024).Nullable();
Missing Default,FluentMigrator.Runner.Generators.Postgres,PostgresColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Postgres\PostgresColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.NewGuid:                      //need to run the script share/contrib/uuid-ossp.sql to install the uuid_generate4 function                      return "uuid_generate_v4()";                  case SystemMethods.NewSequentialId:                      return "uuid_generate_v1()";                  case SystemMethods.CurrentDateTime:                      return "now()";                  case SystemMethods.CurrentUTCDateTime:                      return "(now() at time zone 'UTC')";                  case SystemMethods.CurrentUser:                      return "current_user";              }
Missing Default,FluentMigrator.Runner.Generators.SqlServer,SqlServerColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.NewGuid:                      return "NEWID()";                  case SystemMethods.NewSequentialId:                      return "NEWSEQUENTIALID()";                  case SystemMethods.CurrentDateTime:                      return "GETDATE()";                  case SystemMethods.CurrentUTCDateTime:                      return "GETUTCDATE()";                  case SystemMethods.CurrentUser:                      return "CURRENT_USER";              }
Missing Default,FluentMigrator.Runner.Generators.SqlServer,SqlServerQuoter,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SqlServer\SqlServerQuoter.cs,QuoteValue,The following switch statement is missing a default case: switch ((SystemMethods)value)                  {                      case SystemMethods.NewGuid:                          return "NEWID()";                      case SystemMethods.NewSequentialId:                          return "NEWSEQUENTIALID()";                      case SystemMethods.CurrentDateTime:                          return "GETDATE()";                      case SystemMethods.CurrentUTCDateTime:                          return "GETUTCDATE()";                  }
Missing Default,FluentMigrator.Runner.Generators.Hana,HanaColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Hana\HanaColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.CurrentDateTime:                      return "CURRENT_TIMESTAMP";                  case SystemMethods.CurrentUTCDateTime:                      return "CURRENT_UTCTIMESTAMP";              }
Missing Default,FluentMigrator.Runner.Generators.DB2,Db2Column,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Db2\Db2Column.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.CurrentUTCDateTime:                      return "(CURRENT_TIMESTAMP - CURRENT_TIMEZONE)";                  case SystemMethods.CurrentDateTime:                      return "CURRENT_TIMESTAMP";                  case SystemMethods.CurrentUser:                      return "USER";              }
Missing Default,FluentMigrator.Runner.Generators.Firebird,FirebirdColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Firebird\FirebirdColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.NewGuid:                      return "gen_uuid()";                  case SystemMethods.CurrentDateTime:                      return "CURRENT_TIMESTAMP";              }
Missing Default,FluentMigrator.Runner.Generators.Generic,GenericGenerator,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Generic\GenericGenerator.cs,FormatCascade,The following switch statement is missing a default case: switch (rule)              {                  case Rule.None:                      return "";                  case Rule.Cascade:                      action = "CASCADE";                      break;                  case Rule.SetNull:                      action = "SET NULL";                      break;                  case Rule.SetDefault:                      action = "SET DEFAULT";                      break;              }
Missing Default,FluentMigrator.Runner.Generators.Oracle,OracleColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\Oracle\OracleColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.NewGuid:                      return "sys_guid()";                  case SystemMethods.CurrentDateTime:                      return "CURRENT_TIMESTAMP";                  case SystemMethods.CurrentUser:                      return "USER";              }
Missing Default,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following switch statement is missing a default case: switch (FieldType)              {                  case 261:                      if (FieldSubType.HasValue)                      {                          return "BLOB sub_type " + FieldSubType.Value.ToString();                      }                      else                          return "BLOB";                  case 14:                      return "CHAR";                  case 40:                      return "CSTRING";                  case 11:                      return "D_FLOAT";                  case 27:                      return "DOUBLE";                  case 10:                      return "FLOAT";                  case 16:                      return "BIGINT";                  case 8:                      return "INTEGER";                  case 9:                      return "QUAD";                  case 7:                      return "SMALLINT";                  case 12:                      return "DATE";                  case 13:                      return "TIME";                  case 35:                      return "TIMESTAMP";                  case 37:                      return "VARCHAR(" + CharacterLength.ToString() + ")";              }
Missing Default,FluentMigrator.Runner.Processors.Firebird,ColumnInfo,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Processors\Firebird\FirebirdSchemaInfo.cs,GetCustomDBType,The following switch statement is missing a default case: switch (FieldTypeName)              {                  case "VARYING":                      return "VARCHAR(" + CharacterLength.ToString() + ")";                  case "LONG":                      return "INTEGER";                  case "INT64":                      return "BIGINT";              }
Missing Default,FluentMigrator.Runner.Generators.MySql,MySqlColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\MySql\MySqlColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.CurrentDateTime:                      return "CURRENT_TIMESTAMP";              }
Missing Default,FluentMigrator.Runner.Generators.SQLite,SQLiteColumn,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Generators\SQLite\SQLiteColumn.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (systemMethod)              {                  case SystemMethods.CurrentUTCDateTime:                      return "CURRENT_TIMESTAMP";                  case SystemMethods.CurrentDateTime:                      return "(datetime('now'''localtime'))";              }
Missing Default,FluentMigrator.Runner.Initialization,TaskExecutor,C:\repos\schambers_fluentmigrator\src\FluentMigrator.Runner\Initialization\TaskExecutor.cs,Execute,The following switch statement is missing a default case: switch (RunnerContext.Task)                  {                      case null:                      case "":                      case "migrate":                      case "migrate:up":                          if (RunnerContext.Version != 0)                              Runner.MigrateUp(RunnerContext.Version);                          else                              Runner.MigrateUp();                          break;                      case "rollback":                          if (RunnerContext.Steps == 0)                              RunnerContext.Steps = 1;                          Runner.Rollback(RunnerContext.Steps);                          break;                      case "rollback:toversion":                          Runner.RollbackToVersion(RunnerContext.Version);                          break;                      case "rollback:all":                          Runner.RollbackToVersion(0);                          break;                      case "migrate:down":                          Runner.MigrateDown(RunnerContext.Version);                          break;                      case "validateversionorder":                          Runner.ValidateVersionOrder();                          break;                      case "listmigrations":                          Runner.ListMigrations();                          break;                  }
