Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,FluentMigrator.Runner.Processors.SqlAnywhere,SqlAnywhere16Processor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Processors\SqlAnywhere\SqlAnywhere16Processor.cs,SqlAnywhere16Processor,The method has 6 parameters. Parameters: factory' generator' logger' options' connectionStringAccessor' serviceProvider
Long Parameter List,FluentMigrator.Runner.Processors.SqlAnywhere,SqlAnywhereProcessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Processors\SqlAnywhere\SqlAnywhereProcessor.cs,SqlAnywhereProcessor,The method has 6 parameters. Parameters: databaseType' connection' generator' announcer' options' factory
Long Parameter List,FluentMigrator.Runner.Processors.SqlAnywhere,SqlAnywhereProcessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Processors\SqlAnywhere\SqlAnywhereProcessor.cs,SqlAnywhereProcessor,The method has 7 parameters. Parameters: databaseType' factoryAccessor' generator' logger' options' connectionStringAccessor' serviceProvider
Long Statement,FluentMigrator.Runner.Generators.SqlAnywhere,SqlAnywhere16Generator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Generators\SqlAnywhere\SqlAnywhere16Generator.cs,Generate,The length of the statement  "            builder.Append(string.Format("-- create alter table command to create new default constraint as string and run it" + Environment.NewLine + "ALTER TABLE {0} ALTER {1} DEFAULT {2};"' " is 180.
Long Statement,FluentMigrator.Runner.Generators.SqlAnywhere,SqlAnywhere16Generator,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Generators\SqlAnywhere\SqlAnywhere16Generator.cs,Generate,The length of the statement  "            return string.Format(DropIndex' Quoter.QuoteTableName(expression.Index.TableName' expression.Index.SchemaName)' Quoter.QuoteIndexName(expression.Index.Name)); " is 158.
Long Statement,FluentMigrator.Runner.Processors.SqlAnywhere,SqlAnywhere16ProcessorFactory,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Processors\SqlAnywhere\SqlAnywhere16ProcessorFactory.cs,Create,The length of the statement  "            return new SqlAnywhereProcessor("SqlAnywhere16"' connection' new SqlAnywhere16Generator(new SqlAnywhereQuoter())' announcer' options' factory); " is 143.
Long Statement,FluentMigrator.Runner.Processors.SqlAnywhere,SqlAnywhereProcessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Processors\SqlAnywhere\SqlAnywhereProcessor.cs,Process,The length of the statement  "                throw new Exception("Create schema requires connection for the schema user. No password specified in CreateSchemaExpression."); " is 127.
Long Statement,FluentMigrator.Runner.Processors.SqlAnywhere,SqlAnywhereProcessor,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Processors\SqlAnywhere\SqlAnywhereProcessor.cs,Process,The length of the statement  "            if (!Exists("SELECT count(*) FROM \"dbo\".\"syslogins\" WHERE \"name\"='{0}'"' FormatHelper.FormatSqlEscape(expression.SchemaName))) " is 132.
Magic Number,FluentMigrator.Runner.Generators.SqlAnywhere,SqlAnywhereColumn,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Generators\SqlAnywhere\SqlAnywhereColumn.cs,SqlAnywhereColumn,The following statement contains a magic number: ClauseOrder.Insert(ClauseOrder.Count - 2' FormatUniqueConstraint);
Missing Default,FluentMigrator.Runner.Generators.SqlAnywhere,SqlAnywhereQuoter,D:\research\architectureSmells\repos1\schambers_fluentmigrator\src\FluentMigrator.Runner.SqlAnywhere\Generators\SqlAnywhere\SqlAnywhereQuoter.cs,FormatSystemMethods,The following switch statement is missing a default case: switch (value)              {                  case SystemMethods.NewSequentialId:                  case SystemMethods.NewGuid:                      return "NEWID()";                  case SystemMethods.CurrentDateTimeOffset:                  case SystemMethods.CurrentDateTime:                      return "CURRENT TIMESTAMP";                  case SystemMethods.CurrentUTCDateTime:                      return "CURRENT UTC TIMESTAMP";                  case SystemMethods.CurrentUser:                      return "CURRENT USER";              }
