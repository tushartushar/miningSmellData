Implementation smell,Namespace,Class,File,Method,Description
Long Method,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,ExploreHelper,The method has 113 lines of code.
Complex Method,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,Cyclomatic complexity of the method is 16
Complex Method,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,Cyclomatic complexity of the method is 12
Long Parameter List,CultureInfoExplorer,CultureInfoPropertyCollectionFilterConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyCollectionFilterConverter.cs,Convert,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,CultureInfoCollectionFilterConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoCollectionFilterConverter.cs,Convert,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,CultureInfoPropertyToValuesConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyToValuesConverter.cs,Convert,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,CultureInfoPropertyValueToCulturesConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyValueToCulturiesConverter.cs,Convert,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,PatternToValuesConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\PatternToValuesConverter.cs,Convert,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,PatternValueToCulturesConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\PatternValueToCulturiesConverter.cs,Convert,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,CultureInfoProperty,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\CultureInfoProperty.cs,CultureInfoProperty,The method has 5 parameters.
Long Parameter List,CultureInfoExplorer,CultureInfoPropertyToDescriptionConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyToDescriptionConverter.cs,Convert,The method has 7 parameters.
Long Parameter List,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,ExploreHelper,The method has 76 parameters.
Long Statement,CultureInfoExplorer,CultureInfoPropertyToDescriptionConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyToDescriptionConverter.cs,Convert,The length of the statement  "		var availableValues = ExploreHelper.AllCultures.Select (culture => string.Format ("'{0}'"' property.GetValue (culture))).Distinct ().OrderBy (v => v); " is 150.
Long Statement,CultureInfoExplorer,CultureInfoPropertyToDescriptionConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyToDescriptionConverter.cs,Convert,The length of the statement  "			builder.AppendLine (string.Format ("{0}: {1}"' culture.Name.PadRight (maxNameWidth' ' ')' property.GetValue (culture))); " is 120.
Long Statement,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CalendarToString,The length of the statement  "	return string.Format ("{0} ({1})"' calendar.ToString ().Replace ("System.Globalization."' "").Replace ("Calendar"' "")' algorithmType); " is 135.
Long Statement,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,GetPatternValues,The length of the statement  "		builder.AppendLine (string.Format ("{0} : {1}"' pattern.Name.PadRight (maxPatternNameWidth' ' ')' pattern.GetValue (culture))); " is 127.
Magic Number,CultureInfoExplorer,CultureInfoPropertyValueToCulturesConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\CultureInfoPropertyValueToCulturiesConverter.cs,Convert,The following statement contains a magic number: if (!(values.Length == 2 && values [0] is CultureInfoProperty && values [1] is string))  	return new CultureInfo[0];  
Magic Number,CultureInfoExplorer,PatternValueToCulturesConverter,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Converters\PatternValueToCulturiesConverter.cs,Convert,The following statement contains a magic number: if (!(values.Length == 2 && values [0] is Pattern && values [1] is string))  	return new CultureInfo[0];  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyPositivePatternToString,The following statement contains a magic number: switch (currencyPositivePattern) {  case 0:  	return "$n";  case 1:  	return "n$";  case 2:  	return "$ n";  case 3:  	return "n $";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyPositivePatternToString,The following statement contains a magic number: switch (currencyPositivePattern) {  case 0:  	return "$n";  case 1:  	return "n$";  case 2:  	return "$ n";  case 3:  	return "n $";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,NumberNegativePatternToString,The following statement contains a magic number: switch (numberNegativePattern) {  case 0:  	return "(n)";  case 1:  	return "-n";  case 2:  	return "- n";  case 3:  	return "n-";  case 4:  	return "n -";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,NumberNegativePatternToString,The following statement contains a magic number: switch (numberNegativePattern) {  case 0:  	return "(n)";  case 1:  	return "-n";  case 2:  	return "- n";  case 3:  	return "n-";  case 4:  	return "n -";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,NumberNegativePatternToString,The following statement contains a magic number: switch (numberNegativePattern) {  case 0:  	return "(n)";  case 1:  	return "-n";  case 2:  	return "- n";  case 3:  	return "n-";  case 4:  	return "n -";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following statement contains a magic number: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentPositivePatternToString,The following statement contains a magic number: switch (percentPositivePattern) {  case 0:  	return "n %";  case 1:  	return "n%";  case 2:  	return "%n";  case 3:  	return "% n";  }  
Magic Number,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentPositivePatternToString,The following statement contains a magic number: switch (percentPositivePattern) {  case 0:  	return "n %";  case 1:  	return "n%";  case 2:  	return "%n";  case 3:  	return "% n";  }  
Missing Default,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyNegativePatternToString,The following switch statement is missing a default case: switch (currencyNegativePattern) {  case 0:  	return "($n)";  case 1:  	return "-$n";  case 2:  	return "$-n";  case 3:  	return "$n-";  case 4:  	return "(n$)";  case 5:  	return "-n$";  case 6:  	return "n-$";  case 7:  	return "n$-";  case 8:  	return "-n $";  case 9:  	return "-$ n";  case 10:  	return "n $-";  case 11:  	return "$ n-";  case 12:  	return "$ -n";  case 13:  	return "n- $";  case 14:  	return "($ n)";  case 15:  	return "(n $)";  }  
Missing Default,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,CurrencyPositivePatternToString,The following switch statement is missing a default case: switch (currencyPositivePattern) {  case 0:  	return "$n";  case 1:  	return "n$";  case 2:  	return "$ n";  case 3:  	return "n $";  }  
Missing Default,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,NumberNegativePatternToString,The following switch statement is missing a default case: switch (numberNegativePattern) {  case 0:  	return "(n)";  case 1:  	return "-n";  case 2:  	return "- n";  case 3:  	return "n-";  case 4:  	return "n -";  }  
Missing Default,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentNegativePatternToString,The following switch statement is missing a default case: switch (percentNegativePattern) {  case 0:  	return "-n %";  case 1:  	return "-n%";  case 2:  	return "-%n";  case 3:  	return "%-n";  case 4:  	return "%n-";  case 5:  	return "n-%";  case 6:  	return "n%-";  case 7:  	return "-% n";  case 8:  	return "n %-";  case 9:  	return "% n-";  case 10:  	return "% -n";  case 11:  	return "n- %";  }  
Missing Default,CultureInfoExplorer,ExploreHelper,C:\repos\AndreyAkinshin_CultureInfoExplorer\CultureInfoExplorer\Logic\ExploreHelper.cs,PercentPositivePatternToString,The following switch statement is missing a default case: switch (percentPositivePattern) {  case 0:  	return "n %";  case 1:  	return "n%";  case 2:  	return "%n";  case 3:  	return "% n";  }  
