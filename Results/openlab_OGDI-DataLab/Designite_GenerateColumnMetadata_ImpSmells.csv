Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,GenerateColumnMetadata,RESTHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,CreateRESTRequest,The method has 6 parameters. Parameters: method' resource' requestBody' headers' ifMatch' md5
Long Parameter List,GenerateColumnMetadata,RESTHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,AuthorizationHeader,The method has 5 parameters. Parameters: method' now' request' ifMatch' md5
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,Main,The length of the statement  "                    dataPager = new DataPagerStorage(resulTableStorageXML.FilterNextPartitionKey' resulTableStorageXML.FilterNextRowKey' string.Empty); " is 131.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateRdf,The length of the statement  "                            WriteInFile(filename' "Error generating RdfSnippet for dataset " + entity.Entityset + " in line with entityid " + datasetLine["entityid"].ToString()); " is 150.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateRdf,The length of the statement  "                        dataPager = new DataPagerStorage(resulTableStorageXML.FilterNextPartitionKey' resulTableStorageXML.FilterNextRowKey' string.Empty); " is 131.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateTableColumnMetadata,The length of the statement  "            List<Entity> tableColumnsMetadata = TableMetadata.LoadGenericEntitiesFromTableStorageXML(tableHelper.QueryEntities("TableColumnsMetadata"' strFilter' dataPager).Result); " is 169.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateTableColumnMetadata,The length of the statement  "                        columnsMeta = new TableColumnsMetadataItem(column.Key.ToString()' string.Empty' defaultDescriptionToAdd' "ogdi=ogdiUrl"); " is 121.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateTableColumnMetadata,The length of the statement  "                            WriteInFile(filename' "Error generating columns metadata for dataset " + entity.Entityset + " in column " + column.Key.ToString()); " is 131.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateRdfSnippet,The length of the statement  "                    if (item.Name != "EntityId" && item.Name != "PartitionKey" && item.Name != "RowKey" && item.Name != "Timestamp" && item.Name != "entityid" && item.Name != "rdfsnippet") " is 168.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateRdfSnippet,The length of the statement  "                            rdfXmlDescriptionElement.Add(new XElement(customNS + cleanHeader' stringValue.ToString()' new XAttribute(rdfNamespace + "datatype"' datatype))); " is 144.
Long Statement,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateRdfSnippet,The length of the statement  "                    datasetLine.AddProperty(DataLoaderConstants.PropNameRdfSnippet.ToLower()' rdfXml.ToString(SaveOptions.DisableFormatting)); " is 122.
Long Statement,GenerateColumnMetadata,RESTHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,AuthorizationHeader,The length of the statement  "            System.Security.Cryptography.HMACSHA256 SHA256 = new System.Security.Cryptography.HMACSHA256(Convert.FromBase64String(StorageKey)); " is 131.
Long Statement,GenerateColumnMetadata,RESTHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,AuthorizationHeader,The length of the statement  "            String AuthorizationHeader = "SharedKey " + StorageAccount + ":" + Convert.ToBase64String(SHA256.ComputeHash(SignatureBytes)); " is 126.
Long Statement,GenerateColumnMetadata,TableHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,QueryEntities,The length of the statement  "                    string resource = String.Format(tableName + "?" + queryResult.Filter + queryResult.FilterTop + queryResult.FilterNextPartitionKey + queryResult.FilterNextRowKey); " is 162.
Long Statement,GenerateColumnMetadata,TableHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,QueryEntities,The length of the statement  "                        dataPager.AddPage(response.GetResponseHeader("x-ms-continuation-NextPartitionKey")' response.GetResponseHeader("x-ms-continuation-NextRowKey")); " is 144.
Complex Conditional,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GenerateRdfSnippet,The conditional expression  "item.Name != "EntityId" && item.Name != "PartitionKey" && item.Name != "RowKey" && item.Name != "Timestamp" && item.Name != "entityid" && item.Name != "rdfsnippet""  is complex.
Empty Catch Block,GenerateColumnMetadata,Filter,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,GetRESTFilter,The method has an empty catch block.
Magic Number,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,UpdateEntity,The following statement contains a magic number: TableContext context = new TableContext(account.TableEndpoint.ToString()' account.Credentials)              {                  RetryPolicy = RetryPolicies.RetryExponential(5' new TimeSpan(0' 0' 1))              };
Magic Number,GenerateColumnMetadata,Program,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,StoreEntity,The following statement contains a magic number: TableContext context = new TableContext(account.TableEndpoint.ToString()' account.Credentials)              {                  RetryPolicy = RetryPolicies.RetryExponential(5' new TimeSpan(0' 0' 1))              };
Magic Number,GenerateColumnMetadata,TableHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,QueryEntities,The following statement contains a magic number: return Retry<QueryResult>(delegate()              {                  HttpWebRequest request;                  HttpWebResponse response;                    string entityXml = null;                  try                  {                      string resource = String.Format(tableName + "?" + queryResult.Filter + queryResult.FilterTop + queryResult.FilterNextPartitionKey + queryResult.FilterNextRowKey);                      request = CreateRESTRequest("GET"' resource' null' null);                      request.Accept = "application/atom+xml'application/xml";                        response = request.GetResponse() as HttpWebResponse;                        if ((int)response.StatusCode == 200)                      {                          using (StreamReader reader = new StreamReader(response.GetResponseStream()'true))                          {                              string result = reader.ReadToEnd();                                XNamespace ns = "http://www.w3.org/2005/Atom";                              XNamespace d = "http://schemas.microsoft.com/ado/2007/08/dataservices";                                XElement entry = XElement.Parse(result);                                entityXml = entry.ToString();                          }                            dataPager.AddPage(response.GetResponseHeader("x-ms-continuation-NextPartitionKey")' response.GetResponseHeader("x-ms-continuation-NextRowKey"));                        }                        response.Close();                      queryResult.Result = entityXml;                      queryResult.FilterNextPartitionKey = dataPager.NextPartitionKey;                      queryResult.FilterNextRowKey = dataPager.NextRowKey;                      return queryResult;                  }                  catch (WebException ex)                  {                      if (ex.Status == WebExceptionStatus.ProtocolError &&                          ex.Response != null &&                          (int)(ex.Response as HttpWebResponse).StatusCode == 409)                          return null;                        throw;                  }              });
Magic Number,GenerateColumnMetadata,TableHelper,C:\repos\openlab_OGDI-DataLab\DataLoader\GenerateColumnMetadata\Program.cs,QueryEntities,The following statement contains a magic number: return Retry<QueryResult>(delegate()              {                  HttpWebRequest request;                  HttpWebResponse response;                    string entityXml = null;                  try                  {                      string resource = String.Format(tableName + "?" + queryResult.Filter + queryResult.FilterTop + queryResult.FilterNextPartitionKey + queryResult.FilterNextRowKey);                      request = CreateRESTRequest("GET"' resource' null' null);                      request.Accept = "application/atom+xml'application/xml";                        response = request.GetResponse() as HttpWebResponse;                        if ((int)response.StatusCode == 200)                      {                          using (StreamReader reader = new StreamReader(response.GetResponseStream()'true))                          {                              string result = reader.ReadToEnd();                                XNamespace ns = "http://www.w3.org/2005/Atom";                              XNamespace d = "http://schemas.microsoft.com/ado/2007/08/dataservices";                                XElement entry = XElement.Parse(result);                                entityXml = entry.ToString();                          }                            dataPager.AddPage(response.GetResponseHeader("x-ms-continuation-NextPartitionKey")' response.GetResponseHeader("x-ms-continuation-NextRowKey"));                        }                        response.Close();                      queryResult.Result = entityXml;                      queryResult.FilterNextPartitionKey = dataPager.NextPartitionKey;                      queryResult.FilterNextRowKey = dataPager.NextRowKey;                      return queryResult;                  }                  catch (WebException ex)                  {                      if (ex.Status == WebExceptionStatus.ProtocolError &&                          ex.Response != null &&                          (int)(ex.Response as HttpWebResponse).StatusCode == 409)                          return null;                        throw;                  }              });
