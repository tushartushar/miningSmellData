Implementation smell,Namespace,Class,File,Method,Description
Long Method,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseComparison,The method has 110 lines of code.
Long Method,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The method has 122 lines of code.
Long Method,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,NextToken,The method has 200 lines of code.
Complex Method,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseIdentifier,Cyclomatic complexity of the method is 11
Complex Method,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseOdataFonction,Cyclomatic complexity of the method is 8
Complex Method,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,CompareConversions,Cyclomatic complexity of the method is 8
Long Parameter List,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,CheckAndPromoteOperands,The method has 5 parameters. Parameters: signatures' opName' left' right' errorPos
Long Parameter List,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,FindMethod,The method has 5 parameters. Parameters: type' methodName' staticAccess' args' method
Long Identifier,Ogdi.DataServices.Helper,Res,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,,The length of the parameter AmbiguousConstructorInvocation is 30.
Long Identifier,Ogdi.DataServices.v1,ColumnsMetadataHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\ColumnsMetadataHttpHandler.cs,,The length of the parameter START_SERVICEDOCUMENT_TEMPLATE is 30.
Long Identifier,Ogdi.DataServices.v1,CommentsHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\CommentsHttpHandler.cs,,The length of the parameter START_SERVICEDOCUMENT_TEMPLATE is 30.
Long Identifier,Ogdi.DataServices.v1,NestedServiceDocumentHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\NestedServiceDocumentHttpHandler.cs,,The length of the parameter START_SERVICEDOCUMENT_TEMPLATE is 30.
Long Identifier,Ogdi.DataServices.v1,ServiceDocumentHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\ServiceDocumentHttpHandler.cs,,The length of the parameter START_SERVICEDOCUMENT_TEMPLATE is 30.
Long Statement,Ogdi.DataServices,Global,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Global.asax.cs,RegisterRoutes,The length of the statement  "            routes.Add("v1ColumnsMetadata"' new Route("v1/ColumnsMetadata/{OgdiAlias}/{EntitySet}"' new v1.ColumnsMetadataRouteHandler())); " is 127.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseInt32Column,The length of the statement  "                Expression<Func<XElement' Int32>> exprFunc = elem => elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault() != null ? " is 202.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseInt32Column,The length of the statement  "                    Int32.Parse((string)elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault().Value) : " is 168.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseInt64Column,The length of the statement  "                Expression<Func<XElement' Int64>> exprFunc = elem => elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault() != null ? " is 202.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseInt64Column,The length of the statement  "                    Int64.Parse((string)elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault().Value) : " is 168.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseDoubleColumn,The length of the statement  "                Expression<Func<XElement' Double>> exprFunc = elem => elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault() != null ? " is 203.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseDoubleColumn,The length of the statement  "                    Double.Parse((string)elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault().Value' CultureInfo.InvariantCulture.NumberFormat) : " is 212.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseStringColumn,The length of the statement  "                Expression<Func<XElement' string>> exprFunc = elem => elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault() != null ? " is 203.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseStringColumn,The length of the statement  "                    elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault().Value : ""; " is 151.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseDateTimeColumn,The length of the statement  "                Expression<Func<XElement' DateTime>> exprFunc = elem => elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault() != null ? " is 205.
Long Statement,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseDateTimeColumn,The length of the statement  "                    DateTime.Parse((string)elem.Elements(atomNamespace + "content").Elements(metadataNamespace + "properties").Elements(dataservicesNamespace + expr).FirstOrDefault().Value' CultureInfo.InvariantCulture.DateTimeFormat) : " is 216.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,CheckDataServiceHeader,The length of the statement  "                    if (headerKey.Equals("DataServiceVersion") && double.Parse(parts[0]' NumberStyles.AllowDecimalPoint' NumberFormatInfo.InvariantInfo) > double.Parse(DataServiceVersion' NumberStyles.AllowDecimalPoint' NumberFormatInfo.InvariantInfo)) " is 232.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,CheckDataServiceHeader,The length of the statement  "                    if (headerKey.Equals("MaxDataServiceVersion") && double.Parse(parts[0]' NumberStyles.AllowDecimalPoint' NumberFormatInfo.InvariantInfo) < double.Parse(DataServiceVersion' NumberStyles.AllowDecimalPoint' NumberFormatInfo.InvariantInfo)) " is 235.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,HandleSkiptoken,The length of the statement  "                string[] items = skiptoken.Substring(1' skiptoken.Length - 2).Split(new Char[] { '&' }' StringSplitOptions.RemoveEmptyEntries); " is 127.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,GetFeedFromAzure,The length of the statement  "                        if (!string.IsNullOrEmpty(response.Headers["x-ms-continuation-NextPartitionKey"]) && !string.IsNullOrEmpty(response.Headers["x-ms-continuation-NextRowKey"])) " is 157.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,ProcessOrder,The length of the statement  "            DynamicQueryable.OGDIExpressionParser parser = new DynamicQueryable.OGDIExpressionParser(it' orderOption' null' ColumnsInformation.ToArray()); " is 142.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,ProcessFilter,The length of the statement  "            DynamicQueryable.OGDIExpressionParser parser = new DynamicQueryable.OGDIExpressionParser(it' filterOption' null' ColumnsInformation.ToArray()); " is 143.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,GetPaginationLink,The length of the statement  "            queryString.Add("$skiptoken"' string.Format("'NextPartitionKey={1}{0}NextRowKey={2}'"' _HttpContext.Server.UrlEncode("&")' _Pagination.NextPartitionKey' _Pagination.NextRowKey)); " is 178.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,GetColumnsMetadata,The length of the statement  "            List<TableColumnsMetadataEntity> resultsQuery = serviceContextTable.Execute<TableColumnsMetadataEntity>(new Uri(query' UriKind.Relative)).ToList(); " is 147.
Long Statement,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,GetColumnsProperties,The length of the statement  "            string uri = string.Format("{0}EntityMetadata(PartitionKey='{1}'' RowKey='{1}Item')"' _Account.TableEndpoint.AbsoluteUri' EntitySet); " is 133.
Long Statement,Ogdi.DataServices.v1,AvailableEndpointsHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AvailableEndpointsHttpHandler.cs,ProcessRequest,The length of the statement  "            _AzureTableUrlToReplace = string.Format(AppSettings.TableStorageBaseUrl' AppSettings.OgdiConfigTableStorageAccountName); " is 120.
Long Statement,Ogdi.DataServices.v1,AvailableEndpointsHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AvailableEndpointsHttpHandler.cs,ProcessRequest,The length of the statement  "            _AzureTableUrlReplacement = string.Format("{0}://{1}/v1/"' _HttpContext.Request.Url.Scheme' _HttpContext.Request.Url.Host); " is 123.
Long Statement,Ogdi.DataServices.v1,ColumnsMetadataHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\ColumnsMetadataHttpHandler.cs,Render,The length of the statement  "                    e.Element(_nsd + "columndescription") != null && e.Element(_nsd + "columndescription").Value != string.Empty ? e.Element(_nsd + "columndescription").Value : e.Element(_nsd + "columnnamespace").Value' " is 199.
Long Statement,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,ProcessRequest,The length of the statement  "            _AzureTableUrlToReplace = string.Format(AppSettings.TableStorageBaseUrl' AppSettings.EnabledStorageAccounts[OgdiAlias].storageaccountname); " is 139.
Long Statement,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,RenderKml,The length of the statement  "                    //      <KmlSnippetReference><Container>zipcodes</Container><Blob>33a8d702-c21b-4b09-8cdb-a09cef2e3115</Blob></KmlSnippetReference> " is 131.
Long Statement,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,getRdfNamespaces,The length of the statement  "            XElement rdfXml = new XElement(rdfNamespace + "RDF"' new XAttribute(XNamespace.Xmlns + "rdf"' rdfNamespace.ToString())); " is 120.
Long Statement,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,GetTableColumnsMetadata,The length of the statement  "            TableColumnsMetadataDataServiceContext context = new TableColumnsMetadataDataServiceContext(_Account.TableEndpoint.ToString()' _Account.Credentials) " is 148.
Long Statement,Ogdi.DataServices.v1,NestedServiceDocumentHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\NestedServiceDocumentHttpHandler.cs,Render,The length of the statement  "            OgdiConfigDataServiceContext ogdiConfigContext = new OgdiConfigDataServiceContext(_Account.TableEndpoint.AbsoluteUri' _Account.Credentials); " is 140.
Long Statement,Ogdi.DataServices.v1,ServiceDocumentHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\ServiceDocumentHttpHandler.cs,Render,The length of the statement  "            string xmlBase = string.Format("http://{0}:{1}{2}"' _HttpContext.Request.Url.Host' _HttpContext.Request.Url.Port' _HttpContext.Request.Url.AbsolutePath); " is 153.
Complex Conditional,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseComparison,The conditional expression  "token.id == TokenId.Equal || token.id == TokenId.DoubleEqual ||                      token.id == TokenId.ExclamationEqual || token.id == TokenId.LessGreater ||                      token.id == TokenId.GreaterThan || token.id == TokenId.GreaterThanEqual ||                      token.id == TokenId.LessThan || token.id == TokenId.LessThanEqual ||                      TokenIdentifierIs("eq") || TokenIdentifierIs("ne") ||                      TokenIdentifierIs("gt") || TokenIdentifierIs("ge") ||                      TokenIdentifierIs("lt") || TokenIdentifierIs("le")"  is complex.
Complex Conditional,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseAdditive,The conditional expression  "token.id == TokenId.Plus || token.id == TokenId.Minus ||                      token.id == TokenId.Amphersand ||                      TokenIdentifierIs("add") || TokenIdentifierIs("sub")"  is complex.
Complex Conditional,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseMultiplicative,The conditional expression  "token.id == TokenId.Asterisk || token.id == TokenId.Slash ||                      token.id == TokenId.Percent || TokenIdentifierIs("mod") ||                      TokenIdentifierIs("mul") || TokenIdentifierIs("div")"  is complex.
Complex Conditional,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,GenerateConversion,The conditional expression  "(IsNumericType(exprType) || IsEnumType(exprType)) &&                          (IsNumericType(type)) || IsEnumType(type)"  is complex.
Complex Conditional,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,GenerateConversion,The conditional expression  "exprType.IsAssignableFrom(type) || type.IsAssignableFrom(exprType) ||                      exprType.IsInterface || type.IsInterface"  is complex.
Empty Catch Block,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,HandleTop,The method has an empty catch block.
Empty Catch Block,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,HandleSkip,The method has an empty catch block.
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseStringLiteral,The following statement contains a magic number: string s = token.text.Substring(1' token.text.Length - 2);
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseIif,The following statement contains a magic number: if (args.Length != 3)                      throw ParseError(errorPos' Res.IifRequiresThreeArgs);
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseIif,The following statement contains a magic number: return GenerateConditional(args[0]' args[1]' args[2]' errorPos);
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsSignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 2;
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsUnsignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 3;
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type))                  {                      case TypeCode.Char:                      case TypeCode.Single:                      case TypeCode.Double:                      case TypeCode.Decimal:                          return 1;                      case TypeCode.SByte:                      case TypeCode.Int16:                      case TypeCode.Int32:                      case TypeCode.Int64:                          return 2;                      case TypeCode.Byte:                      case TypeCode.UInt16:                      case TypeCode.UInt32:                      case TypeCode.UInt64:                          return 3;                      default:                          return 0;                  }
Magic Number,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type))                  {                      case TypeCode.Char:                      case TypeCode.Single:                      case TypeCode.Double:                      case TypeCode.Decimal:                          return 1;                      case TypeCode.SByte:                      case TypeCode.Int16:                      case TypeCode.Int32:                      case TypeCode.Int64:                          return 2;                      case TypeCode.Byte:                      case TypeCode.UInt16:                      case TypeCode.UInt32:                      case TypeCode.UInt64:                          return 3;                      default:                          return 0;                  }
Magic Number,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,HandleSkiptoken,The following statement contains a magic number: if (!string.IsNullOrEmpty(skiptoken))              {                  string[] items = skiptoken.Substring(1' skiptoken.Length - 2).Split(new Char[] { '&' }' StringSplitOptions.RemoveEmptyEntries);                  foreach (string item in items)                  {                      string[] keyVal = item.Split(new Char[] { '=' }' StringSplitOptions.RemoveEmptyEntries);                      if (keyVal.Length == 2 && keyVal[0].Equals("NextPartitionKey"))                      {                          nextPartitionKey = keyVal[1];                      }                      else if (keyVal.Length == 2 && keyVal[0].Equals("NextRowKey"))                      {                          nextRowKey = keyVal[1];                      }                  }              }
Magic Number,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,HandleSkiptoken,The following statement contains a magic number: if (!string.IsNullOrEmpty(skiptoken))              {                  string[] items = skiptoken.Substring(1' skiptoken.Length - 2).Split(new Char[] { '&' }' StringSplitOptions.RemoveEmptyEntries);                  foreach (string item in items)                  {                      string[] keyVal = item.Split(new Char[] { '=' }' StringSplitOptions.RemoveEmptyEntries);                      if (keyVal.Length == 2 && keyVal[0].Equals("NextPartitionKey"))                      {                          nextPartitionKey = keyVal[1];                      }                      else if (keyVal.Length == 2 && keyVal[0].Equals("NextRowKey"))                      {                          nextRowKey = keyVal[1];                      }                  }              }
Magic Number,Ogdi.DataServices.v1,AbstractHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\AbstractHttpHandler.cs,HandleSkiptoken,The following statement contains a magic number: if (!string.IsNullOrEmpty(skiptoken))              {                  string[] items = skiptoken.Substring(1' skiptoken.Length - 2).Split(new Char[] { '&' }' StringSplitOptions.RemoveEmptyEntries);                  foreach (string item in items)                  {                      string[] keyVal = item.Split(new Char[] { '=' }' StringSplitOptions.RemoveEmptyEntries);                      if (keyVal.Length == 2 && keyVal[0].Equals("NextPartitionKey"))                      {                          nextPartitionKey = keyVal[1];                      }                      else if (keyVal.Length == 2 && keyVal[0].Equals("NextRowKey"))                      {                          nextRowKey = keyVal[1];                      }                  }              }
Magic Number,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,RenderRdf,The following statement contains a magic number: foreach (var propertiesElement in propertiesElements)              {                  var rdfSnipperElement = propertiesElement.Element(_nsd + "rdfsnippet");                  if (rdfSnipperElement != null)                  {                      string rdfSnip = rdfSnipperElement.ToString();                      if (rdfSnip.Contains("ogdiUrl") == true)                      {                          baseUrl = _HttpContext.Request.Url.AbsoluteUri.Split('?')[0];                          beginUrl = baseUrl.Substring(0' baseUrl.IndexOf("v1") + 3);                          endUrl = baseUrl.Substring(baseUrl.IndexOf("v1") + 3);                          ogdiUrl = beginUrl + "ColumnsMetadata/" + endUrl;                          rdfSnip = rdfSnip.Replace("ogdiUrl"' ogdiUrl);                      }                        XElement rdfSnippet = XElement.Parse(rdfSnip);                      if (rdfSnippet != null)                      {                          string rdfSnippetValue = rdfSnippet.Value;                          if (rdfSnippetValue.Contains("RdfSnippetReference"))                          {                              WebRequest request = CreateAzureBlobStorageRequest(XElement.Parse(rdfSnippetValue).Element("Blob").Value);                              WebResponse response = request.GetResponse();                              StreamReader strReader = new StreamReader(response.GetResponseStream()'true);                              string rdfSnippetString = strReader.ReadToEnd();                                rdfNamespaces.Add(XElement.Parse(rdfSnippetValue).Element(rdfNamespace + "Description"));                          }                          else                          {                              rdfMetadataValue = XElement.Parse(rdfSnippetValue).Element(rdfNamespace + "Description");                              rdfNamespaces.Add(rdfMetadataValue);                          }                      }                  }              }
Magic Number,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,RenderRdf,The following statement contains a magic number: foreach (var propertiesElement in propertiesElements)              {                  var rdfSnipperElement = propertiesElement.Element(_nsd + "rdfsnippet");                  if (rdfSnipperElement != null)                  {                      string rdfSnip = rdfSnipperElement.ToString();                      if (rdfSnip.Contains("ogdiUrl") == true)                      {                          baseUrl = _HttpContext.Request.Url.AbsoluteUri.Split('?')[0];                          beginUrl = baseUrl.Substring(0' baseUrl.IndexOf("v1") + 3);                          endUrl = baseUrl.Substring(baseUrl.IndexOf("v1") + 3);                          ogdiUrl = beginUrl + "ColumnsMetadata/" + endUrl;                          rdfSnip = rdfSnip.Replace("ogdiUrl"' ogdiUrl);                      }                        XElement rdfSnippet = XElement.Parse(rdfSnip);                      if (rdfSnippet != null)                      {                          string rdfSnippetValue = rdfSnippet.Value;                          if (rdfSnippetValue.Contains("RdfSnippetReference"))                          {                              WebRequest request = CreateAzureBlobStorageRequest(XElement.Parse(rdfSnippetValue).Element("Blob").Value);                              WebResponse response = request.GetResponse();                              StreamReader strReader = new StreamReader(response.GetResponseStream()'true);                              string rdfSnippetString = strReader.ReadToEnd();                                rdfNamespaces.Add(XElement.Parse(rdfSnippetValue).Element(rdfNamespace + "Description"));                          }                          else                          {                              rdfMetadataValue = XElement.Parse(rdfSnippetValue).Element(rdfNamespace + "Description");                              rdfNamespaces.Add(rdfMetadataValue);                          }                      }                  }              }
Magic Number,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,getRdfNamespaces,The following statement contains a magic number: if (entitySet != null)              {                  ns = this.GetTableColumnsMetadata();                  if (ns.Count > 0)                  {                      foreach (var item in ns)                      {                          if (item == "ogdi=ogdiUrl")                          {                              baseUrl = _HttpContext.Request.Url.AbsoluteUri.Split('?')[0];                              beginUrl = baseUrl.Substring(0' baseUrl.IndexOf("v1") + 3);                              endUrl = baseUrl.Substring(baseUrl.IndexOf("v1") + 3);                              customNamespaceUrl = beginUrl + "ColumnsMetadata/" + endUrl;                          }                          else                          {                              customNamespaceUrl = item.Split('=')[1];                          }                            rdfXml.Add(new XAttribute(XNamespace.Xmlns + item.Split('=')[0]' customNamespaceUrl));                      }                  }              }
Magic Number,Ogdi.DataServices.v1,MainHttpHandler,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\HttpHandlers\v1\MainHttpHandler.cs,getRdfNamespaces,The following statement contains a magic number: if (entitySet != null)              {                  ns = this.GetTableColumnsMetadata();                  if (ns.Count > 0)                  {                      foreach (var item in ns)                      {                          if (item == "ogdi=ogdiUrl")                          {                              baseUrl = _HttpContext.Request.Url.AbsoluteUri.Split('?')[0];                              beginUrl = baseUrl.Substring(0' baseUrl.IndexOf("v1") + 3);                              endUrl = baseUrl.Substring(baseUrl.IndexOf("v1") + 3);                              customNamespaceUrl = beginUrl + "ColumnsMetadata/" + endUrl;                          }                          else                          {                              customNamespaceUrl = item.Split('=')[1];                          }                            rdfXml.Add(new XAttribute(XNamespace.Xmlns + item.Split('=')[0]' customNamespaceUrl));                      }                  }              }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseComparison,The following switch statement is missing a default case: switch (op.id)                      {                          case TokenId.Equal:                          case TokenId.DoubleEqual:                              left = GenerateEqual(left' right);                              break;                          case TokenId.ExclamationEqual:                          case TokenId.LessGreater:                              left = GenerateNotEqual(left' right);                              break;                          case TokenId.GreaterThan:                              left = GenerateGreaterThan(left' right);                              break;                          case TokenId.GreaterThanEqual:                              left = GenerateGreaterThanEqual(left' right);                              break;                          case TokenId.LessThan:                              left = GenerateLessThan(left' right);                              break;                          case TokenId.LessThanEqual:                              left = GenerateLessThanEqual(left' right);                              break;                          case TokenId.Identifier:                              if (TokenIdentifierIs(op' "eq"))                              {                                  left = GenerateEqual(left' right);                              }                              if (TokenIdentifierIs(op' "ne"))                              {                                  left = GenerateNotEqual(left' right);                              }                              if (TokenIdentifierIs(op' "gt"))                              {                                  left = GenerateGreaterThan(left' right);                              }                              if (TokenIdentifierIs(op' "ge"))                              {                                  left = GenerateGreaterThanEqual(left' right);                              }                              if (TokenIdentifierIs(op' "lt"))                              {                                  left = GenerateLessThan(left' right);                              }                              if (TokenIdentifierIs(op' "le"))                              {                                  left = GenerateLessThanEqual(left' right);                              }                              break;                      }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseAdditive,The following switch statement is missing a default case: switch (op.id)                      {                          case TokenId.Plus:                              if (left.Type == typeof(string) || right.Type == typeof(string))                                  goto case TokenId.Amphersand;                              CheckAndPromoteOperands(typeof(IAddSignatures)' op.text' ref left' ref right' op.pos);                              left = GenerateAdd(left' right);                              break;                          case TokenId.Minus:                              CheckAndPromoteOperands(typeof(ISubtractSignatures)' op.text' ref left' ref right' op.pos);                              left = GenerateSubtract(left' right);                              break;                          case TokenId.Amphersand:                              left = GenerateStringConcat(left' right);                              break;                          case TokenId.Identifier:                              if (TokenIdentifierIs(op' "add"))                              {                                  CheckAndPromoteOperands(typeof(IAddSignatures)' op.text' ref left' ref right' op.pos);                                  left = GenerateAdd(left' right);                              }                              if (TokenIdentifierIs(op' "sub"))                              {                                  CheckAndPromoteOperands(typeof(ISubtractSignatures)' op.text' ref left' ref right' op.pos);                                  left = GenerateSubtract(left' right);                              }                              break;                      }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseMultiplicative,The following switch statement is missing a default case: switch (op.id)                      {                          case TokenId.Asterisk:                              left = Expression.Multiply(left' right);                              break;                          case TokenId.Slash:                              left = Expression.Divide(left' right);                              break;                          case TokenId.Percent:                          case TokenId.Identifier:                              if (TokenIdentifierIs(op' "mul"))                              {                                  left = Expression.Multiply(left' right);                              }                              if (TokenIdentifierIs(op' "div"))                              {                                  left = Expression.Divide(left' right);                              }                              if (TokenIdentifierIs(op' "mod"))                              {                                  left = Expression.Modulo(left' right);                              }                              break;                        }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,PromoteExpression,The following switch statement is missing a default case: switch (Type.GetTypeCode(ce.Type))                              {                                  case TypeCode.Int32:                                  case TypeCode.UInt32:                                  case TypeCode.Int64:                                  case TypeCode.UInt64:                                      value = ParseNumber(text' target);                                      break;                                  case TypeCode.Double:                                      if (target == typeof(decimal)) value = ParseNumber(text' target);                                      break;                                  case TypeCode.String:                                      value = ParseEnum(text' target);                                      break;                              }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,ParseNumber,The following switch statement is missing a default case: switch (Type.GetTypeCode(GetNonNullableType(type)))                  {                      case TypeCode.SByte:                          sbyte sb;                          if (sbyte.TryParse(text' out sb)) return sb;                          break;                      case TypeCode.Byte:                          byte b;                          if (byte.TryParse(text' out b)) return b;                          break;                      case TypeCode.Int16:                          short s;                          if (short.TryParse(text' out s)) return s;                          break;                      case TypeCode.UInt16:                          ushort us;                          if (ushort.TryParse(text' out us)) return us;                          break;                      case TypeCode.Int32:                          int i;                          if (int.TryParse(text' out i)) return i;                          break;                      case TypeCode.UInt32:                          uint ui;                          if (uint.TryParse(text' out ui)) return ui;                          break;                      case TypeCode.Int64:                          long l;                          if (long.TryParse(text' out l)) return l;                          break;                      case TypeCode.UInt64:                          ulong ul;                          if (ulong.TryParse(text' out ul)) return ul;                          break;                      case TypeCode.Single:                          float f;                          if (float.TryParse(text' out f)) return f;                          break;                      case TypeCode.Double:                          double d;                          if (double.TryParse(text' out d)) return d;                          break;                      case TypeCode.Decimal:                          decimal e;                          if (decimal.TryParse(text' out e)) return e;                          break;                  }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.SByte:                              case TypeCode.Int16:                              case TypeCode.Int32:                              case TypeCode.Int64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.Byte:                              case TypeCode.Int16:                              case TypeCode.UInt16:                              case TypeCode.Int32:                              case TypeCode.UInt32:                              case TypeCode.Int64:                              case TypeCode.UInt64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.Int16:                              case TypeCode.Int32:                              case TypeCode.Int64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.UInt16:                              case TypeCode.Int32:                              case TypeCode.UInt32:                              case TypeCode.Int64:                              case TypeCode.UInt64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.Int32:                              case TypeCode.Int64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.UInt32:                              case TypeCode.Int64:                              case TypeCode.UInt64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.Int64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.UInt64:                              case TypeCode.Single:                              case TypeCode.Double:                              case TypeCode.Decimal:                                  return true;                          }
Missing Default,Ogdi.DataServices.Helper,OGDIExpressionParser,C:\repos\openlab_OGDI-DataLab\DataService\DataService.WebRole\Helper\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                          {                              case TypeCode.Single:                              case TypeCode.Double:                                  return true;                          }
