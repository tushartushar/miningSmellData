Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,OpenSerialPort,Cyclomatic complexity of the method is 30
Complex Method,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,Cyclomatic complexity of the method is 8
Complex Method,SiXi.Logs,Log,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\SixiLog.cs,WriteNomalLog,Cyclomatic complexity of the method is 9
Complex Method,SiXi.Logs,Log,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\SixiLog.cs,WriteExceptionLog,Cyclomatic complexity of the method is 9
Complex Method,SiXi.Logs,Log,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\SixiLog.cs,WriteDebugLog,Cyclomatic complexity of the method is 9
Long Statement,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The length of the statement  "	else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) { " is 172.
Long Statement,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The length of the statement  "		msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + ""; " is 165.
Long Statement,PulseComm,JumpSampling,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\JumpSampling.cs,End,The length of the statement  "	_msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 采样结束，跳动值为： " + GetJumpValue ().ToString () + "mm \r\n"; " is 120.
Empty Catch Block,SiXi.Logs,Log,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\SixiLog.cs,WriteNomalLog,The method has an empty catch block.
Empty Catch Block,SiXi.Logs,Log,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\SixiLog.cs,WriteNomalLog,The method has an empty catch block.
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetCenterPosi,The following statement contains a magic number: if (B1 / 80 == 1)  	sign = -1;  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetCenterPosi,The following statement contains a magic number: return sign * (B1 % 10 * 10 + B2 / 10 + B2 % 10 * 01 + B3 * 0.001);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetCenterPosi,The following statement contains a magic number: return sign * (B1 % 10 * 10 + B2 / 10 + B2 % 10 * 01 + B3 * 0.001);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetCenterPosi,The following statement contains a magic number: return sign * (B1 % 10 * 10 + B2 / 10 + B2 % 10 * 01 + B3 * 0.001);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetCenterPosi,The following statement contains a magic number: return sign * (B1 % 10 * 10 + B2 / 10 + B2 % 10 * 01 + B3 * 0.001);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetCenterPosi,The following statement contains a magic number: return sign * (B1 % 10 * 10 + B2 / 10 + B2 % 10 * 01 + B3 * 0.001);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetDiameter,The following statement contains a magic number: return B4 * 10 + B5 / 10 + B5 % 10 * 0.1 + B6 * 0.001;  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetDiameter,The following statement contains a magic number: return B4 * 10 + B5 / 10 + B5 % 10 * 0.1 + B6 * 0.001;  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetDiameter,The following statement contains a magic number: return B4 * 10 + B5 / 10 + B5 % 10 * 0.1 + B6 * 0.001;  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetDiameter,The following statement contains a magic number: return B4 * 10 + B5 / 10 + B5 % 10 * 0.1 + B6 * 0.001;  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,GetDiameter,The following statement contains a magic number: return B4 * 10 + B5 / 10 + B5 % 10 * 0.1 + B6 * 0.001;  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B0 = Convert.ToInt32 (ReceiveData.Substring (0' 2)' 16);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B0 = Convert.ToInt32 (ReceiveData.Substring (0' 2)' 16);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B1 = Convert.ToInt32 (ReceiveData.Substring (2' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B1 = Convert.ToInt32 (ReceiveData.Substring (2' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B1 = Convert.ToInt32 (ReceiveData.Substring (2' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B2 = Convert.ToInt32 (ReceiveData.Substring (4' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B2 = Convert.ToInt32 (ReceiveData.Substring (4' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B2 = Convert.ToInt32 (ReceiveData.Substring (4' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B3 = Convert.ToInt32 (ReceiveData.Substring (6' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B3 = Convert.ToInt32 (ReceiveData.Substring (6' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B3 = Convert.ToInt32 (ReceiveData.Substring (6' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B4 = Convert.ToInt32 (ReceiveData.Substring (8' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B4 = Convert.ToInt32 (ReceiveData.Substring (8' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B4 = Convert.ToInt32 (ReceiveData.Substring (8' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B5 = Convert.ToInt32 (ReceiveData.Substring (10' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B5 = Convert.ToInt32 (ReceiveData.Substring (10' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B5 = Convert.ToInt32 (ReceiveData.Substring (10' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B6 = Convert.ToInt32 (ReceiveData.Substring (12' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B6 = Convert.ToInt32 (ReceiveData.Substring (12' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B6 = Convert.ToInt32 (ReceiveData.Substring (12' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B7 = Convert.ToInt32 (ReceiveData.Substring (14' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B7 = Convert.ToInt32 (ReceiveData.Substring (14' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B7 = Convert.ToInt32 (ReceiveData.Substring (14' 2)' 10);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B8 = Convert.ToInt32 (ReceiveData.Substring (16' 2)' 16);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B8 = Convert.ToInt32 (ReceiveData.Substring (16' 2)' 16);  
Magic Number,PulseComm,CommHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfo.cs,_ParseData,The following statement contains a magic number: B8 = Convert.ToInt32 (ReceiveData.Substring (16' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,DigestData,The following statement contains a magic number: if (data.Length < _DataByteLength * 2)  	return data;  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,DigestData,The following statement contains a magic number: _data = data.Substring (0' _DataByteLength * 2);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,DigestData,The following statement contains a magic number: return data.Substring (_DataByteLength * 2 - 1' data.Length - _DataByteLength * 2);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,DigestData,The following statement contains a magic number: return data.Substring (_DataByteLength * 2 - 1' data.Length - _DataByteLength * 2);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: for (int i = 0; i < _DataByteLength * 2 - 1; i++) {  	_dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  	_dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  }  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 10);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataHexArray [i] = Convert.ToInt32 (_data.Substring (i * 2' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [0] = Convert.ToInt32 (_data.Substring (0' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [0] = Convert.ToInt32 (_data.Substring (0' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [_DataByteLength - 1] = Convert.ToInt32 (_data.Substring (_DataByteLength * 2 - 2' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [_DataByteLength - 1] = Convert.ToInt32 (_data.Substring (_DataByteLength * 2 - 2' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [_DataByteLength - 1] = Convert.ToInt32 (_data.Substring (_DataByteLength * 2 - 2' 2)' 16);  
Magic Number,PulseComm,CommHexInfoBase,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommHexInfoBase.cs,_ParseData,The following statement contains a magic number: _dataArray [_DataByteLength - 1] = Convert.ToInt32 (_data.Substring (_DataByteLength * 2 - 2' 2)' 16);  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataArray [0] != 06) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      起始位不是06";  	result = false;  }  else if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,PassValidate,The following statement contains a magic number: if (_dataHexArray [7] != (_dataHexArray [0] ^ _dataHexArray [1] ^ _dataHexArray [2] ^ _dataHexArray [3] ^ _dataHexArray [4] ^ _dataHexArray [5] ^ _dataHexArray [6])) {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      校验位不匹配";  	result = false;  }  else {  	msg = DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss") + "    ---- 接收到数据：" + _data + "      中心位置 = " + GetCenterPosi () + "mm     测量外径 = " + GetDiameter () + "mm" + "";  	result = true;  }  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: centerPosi += _dataArray [1] % 10 * 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: centerPosi += _dataArray [1] % 10 * 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: centerPosi += _dataArray [2] / 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: centerPosi += _dataArray [2] / 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: centerPosi += _dataArray [3] / 1000;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: centerPosi += _dataArray [3] / 1000;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: if (_dataArray [1] / 10 == 8)  	centerPosi *= -1;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetCenterPosi,The following statement contains a magic number: if (_dataArray [1] / 10 == 8)  	centerPosi *= -1;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetDiameter,The following statement contains a magic number: diameter += _dataArray [4] * 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetDiameter,The following statement contains a magic number: diameter += _dataArray [4] * 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetDiameter,The following statement contains a magic number: diameter += _dataArray [5] / 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetDiameter,The following statement contains a magic number: diameter += _dataArray [5] / 10;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetDiameter,The following statement contains a magic number: diameter += _dataArray [6] / 1000;  
Magic Number,PulseComm,CommOldHexInfo,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\CommOldHexInfo.cs,GetDiameter,The following statement contains a magic number: diameter += _dataArray [6] / 1000;  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,Form1_Load,The following statement contains a magic number: try {  	//设置串口的默认参数  	portNum += SerialPort.GetPortNames ().Length.ToString ();  	for (int i = 0; i < SerialPort.GetPortNames ().Length; i++) {  		portNum += "\r\n" + SerialPort.GetPortNames ().GetValue (i).ToString () + "\r\n";  		ComboBoxPortNum.Items.Add (SerialPort.GetPortNames ().GetValue (i).ToString ());  	}  	//SetMSG(portNum);  	ComboBoxPortNum.SelectedIndex = 0;  	comboBoxDateBits.SelectedIndex = 3;  	comboBoxParity.SelectedIndex = 2;  	comboBoxStopBit.SelectedIndex = 0;  	comboBoxBondRate.SelectedIndex = 3;  	comboBoxParity.SelectedIndex = 0;  	//作为服务程序运行，需要自行打开串口  	//OpenSerialPort();  }  catch {  	portNum += "0\r\nTheir is no any SerialPort on your computer!";  	//SetMSG(portNum);  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,Form1_Load,The following statement contains a magic number: try {  	//设置串口的默认参数  	portNum += SerialPort.GetPortNames ().Length.ToString ();  	for (int i = 0; i < SerialPort.GetPortNames ().Length; i++) {  		portNum += "\r\n" + SerialPort.GetPortNames ().GetValue (i).ToString () + "\r\n";  		ComboBoxPortNum.Items.Add (SerialPort.GetPortNames ().GetValue (i).ToString ());  	}  	//SetMSG(portNum);  	ComboBoxPortNum.SelectedIndex = 0;  	comboBoxDateBits.SelectedIndex = 3;  	comboBoxParity.SelectedIndex = 2;  	comboBoxStopBit.SelectedIndex = 0;  	comboBoxBondRate.SelectedIndex = 3;  	comboBoxParity.SelectedIndex = 0;  	//作为服务程序运行，需要自行打开串口  	//OpenSerialPort();  }  catch {  	portNum += "0\r\nTheir is no any SerialPort on your computer!";  	//SetMSG(portNum);  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,Form1_Load,The following statement contains a magic number: try {  	//设置串口的默认参数  	portNum += SerialPort.GetPortNames ().Length.ToString ();  	for (int i = 0; i < SerialPort.GetPortNames ().Length; i++) {  		portNum += "\r\n" + SerialPort.GetPortNames ().GetValue (i).ToString () + "\r\n";  		ComboBoxPortNum.Items.Add (SerialPort.GetPortNames ().GetValue (i).ToString ());  	}  	//SetMSG(portNum);  	ComboBoxPortNum.SelectedIndex = 0;  	comboBoxDateBits.SelectedIndex = 3;  	comboBoxParity.SelectedIndex = 2;  	comboBoxStopBit.SelectedIndex = 0;  	comboBoxBondRate.SelectedIndex = 3;  	comboBoxParity.SelectedIndex = 0;  	//作为服务程序运行，需要自行打开串口  	//OpenSerialPort();  }  catch {  	portNum += "0\r\nTheir is no any SerialPort on your computer!";  	//SetMSG(portNum);  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,Form1_Load,The following statement contains a magic number: comboBoxDateBits.SelectedIndex = 3;  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,Form1_Load,The following statement contains a magic number: comboBoxParity.SelectedIndex = 2;  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,Form1_Load,The following statement contains a magic number: comboBoxBondRate.SelectedIndex = 3;  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: try {  	string sendvalue = "";  	sendvalue = cmd;  	if (checkBoxTrimSpace.Checked) {  		sendvalue = sendvalue.Replace (" "' "");  	}  	if (chBoxIsHex.Checked) {  		int sendLength = sendvalue.Length / 2;  		byte[] StrBuffer = new byte[sendLength];  		string hexstring = "";  		int k = 0;  		for (int i = 0; i < sendvalue.Length;) {  			try {  				hexstring = sendvalue.Substring (i' 2);  			}  			catch (Exception ex) {  				sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  				return sResult;  			}  			int j;  			j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  			StrBuffer [k] = (byte)j;  			i += 2;  			k++;  		}  		serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  	}  	else {  		serialPort1.Write (sendvalue);  		System.Threading.Thread.Sleep (50);  		//每次发送完毕，休眠50ms  	}  }  catch (Exception ex) {  	sResult = ex.Message;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: try {  	string sendvalue = "";  	sendvalue = cmd;  	if (checkBoxTrimSpace.Checked) {  		sendvalue = sendvalue.Replace (" "' "");  	}  	if (chBoxIsHex.Checked) {  		int sendLength = sendvalue.Length / 2;  		byte[] StrBuffer = new byte[sendLength];  		string hexstring = "";  		int k = 0;  		for (int i = 0; i < sendvalue.Length;) {  			try {  				hexstring = sendvalue.Substring (i' 2);  			}  			catch (Exception ex) {  				sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  				return sResult;  			}  			int j;  			j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  			StrBuffer [k] = (byte)j;  			i += 2;  			k++;  		}  		serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  	}  	else {  		serialPort1.Write (sendvalue);  		System.Threading.Thread.Sleep (50);  		//每次发送完毕，休眠50ms  	}  }  catch (Exception ex) {  	sResult = ex.Message;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: try {  	string sendvalue = "";  	sendvalue = cmd;  	if (checkBoxTrimSpace.Checked) {  		sendvalue = sendvalue.Replace (" "' "");  	}  	if (chBoxIsHex.Checked) {  		int sendLength = sendvalue.Length / 2;  		byte[] StrBuffer = new byte[sendLength];  		string hexstring = "";  		int k = 0;  		for (int i = 0; i < sendvalue.Length;) {  			try {  				hexstring = sendvalue.Substring (i' 2);  			}  			catch (Exception ex) {  				sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  				return sResult;  			}  			int j;  			j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  			StrBuffer [k] = (byte)j;  			i += 2;  			k++;  		}  		serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  	}  	else {  		serialPort1.Write (sendvalue);  		System.Threading.Thread.Sleep (50);  		//每次发送完毕，休眠50ms  	}  }  catch (Exception ex) {  	sResult = ex.Message;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: try {  	string sendvalue = "";  	sendvalue = cmd;  	if (checkBoxTrimSpace.Checked) {  		sendvalue = sendvalue.Replace (" "' "");  	}  	if (chBoxIsHex.Checked) {  		int sendLength = sendvalue.Length / 2;  		byte[] StrBuffer = new byte[sendLength];  		string hexstring = "";  		int k = 0;  		for (int i = 0; i < sendvalue.Length;) {  			try {  				hexstring = sendvalue.Substring (i' 2);  			}  			catch (Exception ex) {  				sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  				return sResult;  			}  			int j;  			j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  			StrBuffer [k] = (byte)j;  			i += 2;  			k++;  		}  		serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  	}  	else {  		serialPort1.Write (sendvalue);  		System.Threading.Thread.Sleep (50);  		//每次发送完毕，休眠50ms  	}  }  catch (Exception ex) {  	sResult = ex.Message;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: if (chBoxIsHex.Checked) {  	int sendLength = sendvalue.Length / 2;  	byte[] StrBuffer = new byte[sendLength];  	string hexstring = "";  	int k = 0;  	for (int i = 0; i < sendvalue.Length;) {  		try {  			hexstring = sendvalue.Substring (i' 2);  		}  		catch (Exception ex) {  			sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  			return sResult;  		}  		int j;  		j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  		StrBuffer [k] = (byte)j;  		i += 2;  		k++;  	}  	serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  }  else {  	serialPort1.Write (sendvalue);  	System.Threading.Thread.Sleep (50);  	//每次发送完毕，休眠50ms  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: if (chBoxIsHex.Checked) {  	int sendLength = sendvalue.Length / 2;  	byte[] StrBuffer = new byte[sendLength];  	string hexstring = "";  	int k = 0;  	for (int i = 0; i < sendvalue.Length;) {  		try {  			hexstring = sendvalue.Substring (i' 2);  		}  		catch (Exception ex) {  			sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  			return sResult;  		}  		int j;  		j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  		StrBuffer [k] = (byte)j;  		i += 2;  		k++;  	}  	serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  }  else {  	serialPort1.Write (sendvalue);  	System.Threading.Thread.Sleep (50);  	//每次发送完毕，休眠50ms  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: if (chBoxIsHex.Checked) {  	int sendLength = sendvalue.Length / 2;  	byte[] StrBuffer = new byte[sendLength];  	string hexstring = "";  	int k = 0;  	for (int i = 0; i < sendvalue.Length;) {  		try {  			hexstring = sendvalue.Substring (i' 2);  		}  		catch (Exception ex) {  			sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  			return sResult;  		}  		int j;  		j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  		StrBuffer [k] = (byte)j;  		i += 2;  		k++;  	}  	serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  }  else {  	serialPort1.Write (sendvalue);  	System.Threading.Thread.Sleep (50);  	//每次发送完毕，休眠50ms  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: if (chBoxIsHex.Checked) {  	int sendLength = sendvalue.Length / 2;  	byte[] StrBuffer = new byte[sendLength];  	string hexstring = "";  	int k = 0;  	for (int i = 0; i < sendvalue.Length;) {  		try {  			hexstring = sendvalue.Substring (i' 2);  		}  		catch (Exception ex) {  			sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  			return sResult;  		}  		int j;  		j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  		StrBuffer [k] = (byte)j;  		i += 2;  		k++;  	}  	serialPort1.Write (StrBuffer' 0' StrBuffer.Length);  }  else {  	serialPort1.Write (sendvalue);  	System.Threading.Thread.Sleep (50);  	//每次发送完毕，休眠50ms  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: for (int i = 0; i < sendvalue.Length;) {  	try {  		hexstring = sendvalue.Substring (i' 2);  	}  	catch (Exception ex) {  		sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  		return sResult;  	}  	int j;  	j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  	StrBuffer [k] = (byte)j;  	i += 2;  	k++;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: for (int i = 0; i < sendvalue.Length;) {  	try {  		hexstring = sendvalue.Substring (i' 2);  	}  	catch (Exception ex) {  		sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  		return sResult;  	}  	int j;  	j = int.Parse (hexstring' System.Globalization.NumberStyles.HexNumber);  	StrBuffer [k] = (byte)j;  	i += 2;  	k++;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: try {  	hexstring = sendvalue.Substring (i' 2);  }  catch (Exception ex) {  	sResult += "使用hex发送数据出错，请检查发送的数据是否是16进制格式！详细信息：" + ex.Message;  	return sResult;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: hexstring = sendvalue.Substring (i' 2);  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: i += 2;  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,WriteData,The following statement contains a magic number: System.Threading.Thread.Sleep (50);  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,serialPort1_DataReceived,The following statement contains a magic number: while (serialPort1.BytesToRead > 0) {  	if (chBoxIsHex.Checked) {  		int data = 0x00;  		try {  			data = serialPort1.ReadByte ();  		}  		catch (Exception e2) {  			// MessageBox.Show(e2.Message);  			//SetMSG(e2.Message);  			break;  		}  		ReceiveData += data.ToString ("X").PadLeft (2' '0');  		ReceiveData = ReceiveData.ToUpper ();  	}  	else {  		ReceiveData += serialPort1.ReadExisting ();  	}  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,serialPort1_DataReceived,The following statement contains a magic number: if (chBoxIsHex.Checked) {  	int data = 0x00;  	try {  		data = serialPort1.ReadByte ();  	}  	catch (Exception e2) {  		// MessageBox.Show(e2.Message);  		//SetMSG(e2.Message);  		break;  	}  	ReceiveData += data.ToString ("X").PadLeft (2' '0');  	ReceiveData = ReceiveData.ToUpper ();  }  else {  	ReceiveData += serialPort1.ReadExisting ();  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,serialPort1_DataReceived,The following statement contains a magic number: ReceiveData += data.ToString ("X").PadLeft (2' '0');  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,SetmsgDelegateTargetFun,The following statement contains a magic number: if (txtBoxMSG.Text.Length > 1024 * 512) {  	txtBoxMSG.Text = string.Empty;  }  
Magic Number,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,SetmsgDelegateTargetFun,The following statement contains a magic number: if (txtBoxMSG.Text.Length > 1024 * 512) {  	txtBoxMSG.Text = string.Empty;  }  
Missing Default,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,OpenSerialPort,The following switch statement is missing a default case: switch (comboBoxStopBit.Text.ToString ()) {  case "1":  	serialPort1.StopBits = StopBits.One;  	break;  case "1.5":  	serialPort1.StopBits = StopBits.OnePointFive;  	break;  case "2":  	serialPort1.StopBits = StopBits.Two;  	break;  }  
Missing Default,PulseComm,Main,C:\repos\berniegao_projects\PulseComm\PulseComm\PulseComm\Main.cs,OpenSerialPort,The following switch statement is missing a default case: switch (comboBoxParity.Text.ToString ()) {  /*                           *                            * Even                           * Mark                           * None                           * Odd                           * Space                           */case "Even":  	serialPort1.Parity = Parity.Even;  	break;  case "Mark":  	serialPort1.Parity = Parity.Mark;  	break;  case "None":  	serialPort1.Parity = Parity.None;  	break;  case "Odd":  	serialPort1.Parity = Parity.Odd;  	break;  case "Space":  	serialPort1.Parity = Parity.Space;  	break;  }  
