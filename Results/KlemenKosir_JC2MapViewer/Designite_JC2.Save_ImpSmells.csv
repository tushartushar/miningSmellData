Implementation smell,Namespace,Class,File,Method,Description
Long Method,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The method has 106 lines of code.
Long Method,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The method has 101 lines of code.
Complex Method,JC2.Save,ClassLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\ClassLookup.cs,GetClassName,Cyclomatic complexity of the method is 9
Complex Method,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,GetName,Cyclomatic complexity of the method is 10
Complex Method,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,GetSavedObjectInfo,Cyclomatic complexity of the method is 10
Long Parameter List,JC2.Save,SavedObjectInfo,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\SavedObjectInfo.cs,SavedObjectInfo,The method has 8 parameters.
Long Statement,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The length of the statement  "	return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]); " is 204.
Long Statement,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The length of the statement  "	return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]); " is 205.
Long Statement,JC2.Save,SavedSettlementInfo,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\SavedSettlementInfo.cs,ToString,The length of the statement  "	return string.Format (System.Globalization.CultureInfo.InvariantCulture' "Discovered:{0} Completed:{1} Name:\"{2}\" Percent:{3}% Faction:{4} Type:{5} X:{6} Y:{7}"' Discovered' Completed' Text' PercentDone' Faction' Type' X' Y); " is 227.
Long Statement,JC2.Save,SettlementInfo,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\SettlementInfo.cs,ToString,The length of the statement  "	return string.Format (System.Globalization.CultureInfo.InvariantCulture' "Name:\"{0}\" Faction:{1} Type:{2} X:{3} Y:{4}"' Text' Faction' Type' X' Y); " is 149.
Empty Catch Block,JC2.Save,SettlementInfoLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\SettlementInfoLookup.cs,SettlementInfoLookup,The method has an empty catch block.
Empty Catch Block,JC2.Save,ClassLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\ClassLookup.cs,GetClassName,The method has an empty catch block.
Empty Catch Block,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,GetName,The method has an empty catch block.
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt16,The following statement contains a magic number: return (short)((byteBuffer [0] << 8) | byteBuffer [1]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt32,The following statement contains a magic number: return (int)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt32,The following statement contains a magic number: return (int)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt32,The following statement contains a magic number: return (int)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt32,The following statement contains a magic number: return (int)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt32,The following statement contains a magic number: return (int)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return (long)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt16,The following statement contains a magic number: return (ushort)((byteBuffer [0] << 8) | byteBuffer [1]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((byteBuffer [0] << 24) | (byteBuffer [1] << 16) | (byteBuffer [2] << 8) | byteBuffer [3]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,BigEndianBinaryReader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return (ulong)((byteBuffer [0] << 56) | (byteBuffer [1] << 48) | (byteBuffer [2] << 40) | (byteBuffer [3] << 32) | (byteBuffer [4] << 24) | (byteBuffer [5] << 16) | (byteBuffer [6] << 8) | byteBuffer [7]);  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToSingle,The following statement contains a magic number: if (Mode == Endianess.LITTLE) {  	return BitConverter.ToSingle (value' startIndex);  }  else {  	return BitConverter.ToSingle (swap (value' startIndex' 4)' 0);  }  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToSingle,The following statement contains a magic number: return BitConverter.ToSingle (swap (value' startIndex' 4)' 0);  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToUInt32,The following statement contains a magic number: if (Mode == Endianess.LITTLE) {  	return BitConverter.ToUInt32 (value' startIndex);  }  else {  	return BitConverter.ToUInt32 (swap (value' startIndex' 4)' 0);  }  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToUInt32,The following statement contains a magic number: return BitConverter.ToUInt32 (swap (value' startIndex' 4)' 0);  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToInt32,The following statement contains a magic number: if (Mode == Endianess.LITTLE) {  	return BitConverter.ToInt32 (value' startIndex);  }  else {  	return BitConverter.ToInt32 (swap (value' startIndex' 4)' 0);  }  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToInt32,The following statement contains a magic number: return BitConverter.ToInt32 (swap (value' startIndex' 4)' 0);  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToInt16,The following statement contains a magic number: if (Mode == Endianess.LITTLE) {  	return BitConverter.ToInt16 (value' startIndex);  }  else {  	return BitConverter.ToInt16 (swap (value' startIndex' 2)' 0);  }  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToInt16,The following statement contains a magic number: return BitConverter.ToInt16 (swap (value' startIndex' 2)' 0);  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToInt64,The following statement contains a magic number: if (Mode == Endianess.LITTLE) {  	return BitConverter.ToInt64 (value' startIndex);  }  else {  	return BitConverter.ToInt64 (swap (value' startIndex' 8)' 0);  }  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToInt64,The following statement contains a magic number: return BitConverter.ToInt64 (swap (value' startIndex' 8)' 0);  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToUInt64,The following statement contains a magic number: if (Mode == Endianess.LITTLE) {  	return BitConverter.ToUInt64 (value' startIndex);  }  else {  	return BitConverter.ToUInt64 (swap (value' startIndex' 8)' 0);  }  
Magic Number,JC2.Save,EndianessSwitchableBitConverter,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\EndianessSwitchableBitConverter.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (swap (value' startIndex' 8)' 0);  
Magic Number,JC2.Save,Chunk_CSheldonService,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_CSheldonService.cs,Parse,The following statement contains a magic number: Unknown3 = EndianessSwitchableBitConverter.ToInt32 (data [2].Data' 0);  
Magic Number,JC2.Save,Chunk_HeatSystem,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_HeatSystem.cs,Parse,The following statement contains a magic number: for (int i = 0; i < 12; i++) {  	SavedObject1 o = new SavedObject1 ();  	o.Parse (data' ref listOffset);  	_objects.Add (o);  }  
Magic Number,JC2.Save,Chunk_MissionSystem,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_MissionSystem.cs,Parse,The following statement contains a magic number: listOffset = 2402;  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [1].Data' i * 8);  	_objects.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [1].Data' i * 8);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: count = EndianessSwitchableBitConverter.ToInt32 (data [2].Data' 0);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [3].Data' i * 8);  	_objects2.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [3].Data' i * 8);  	_objects2.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [3].Data' i * 8);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [3].Data' i * 8);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: count = EndianessSwitchableBitConverter.ToInt32 (data [4].Data' 0);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [5].Data' i * 8);  	_objects3.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [5].Data' i * 8);  	_objects3.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [5].Data' i * 8);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [5].Data' i * 8);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: count = EndianessSwitchableBitConverter.ToInt32 (data [6].Data' 0);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	PdaDbEntryVehicle so = new PdaDbEntryVehicle ();  	so.Parse (data [7].Data' i * 4);  	_vehicles.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	PdaDbEntryVehicle so = new PdaDbEntryVehicle ();  	so.Parse (data [7].Data' i * 4);  	_vehicles.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [7].Data' i * 4);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [7].Data' i * 4);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: count = EndianessSwitchableBitConverter.ToInt32 (data [8].Data' 0);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [9].Data' i * 8);  	_objects5.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	SavedObject1 so = new SavedObject1 ();  	so.Parse (data [9].Data' i * 8);  	_objects5.Add (so);  }  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [9].Data' i * 8);  
Magic Number,JC2.Save,Chunk_PDADatabase,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_PDADatabase.cs,Parse,The following statement contains a magic number: so.Parse (data [9].Data' i * 8);  
Magic Number,JC2.Save,Chunk_DripfeedManager,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_DripfeedManager.cs,Parse,The following statement contains a magic number: Unknown1 = data [500].Data [0];  
Magic Number,JC2.Save,SaveFileHeader,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\SaveFileHeader.cs,Read,The following statement contains a magic number: TimeSaved = new DateTime (1970' 1' 1).AddSeconds (r.ReadUInt64 ());  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (2' "Total kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (3' "Fall kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (4' "Drag kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (5' "Pinata kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (7' "Melee kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (8' "Hang kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (9' "Road kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (10' "Stunt driver points"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (11' "Highest parachute climb (m)"' data' StatisticEntry.ValueType.Float));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (12' "Fully upgraded Items"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (13' "Stunt jump combo"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (163' "Unique vehicles driven"' data' StatisticEntry.ValueType.HashedStringList));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (313' "Hijackings"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (314' "Highest Base jump (m)"' data' StatisticEntry.ValueType.Float));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (316' "Locations discovered"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (317' "Headshots"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (318' "Locations completed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (319' "Total chaos"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (320' "Game Time (h)"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (321' "Total earnings ($)"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (322' "Agency missions completed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (323' "Faction missions completed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (324' "Stronghold takeovers completed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (325' "Black market orders"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (326' "Weapons parts"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (327' "Vehicle parts"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (328' "Armor parts"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (329' "Cash stashes"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (331' "Resource Items"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (332' "Sabotages comleted"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (333' "Skulls collected"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (334' "Black boxed collected"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (335' "Drug drops collected"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (336' "Faction items collected"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (337' "Challenges completed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (339' "Wrecking Ball"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (341' "Juggle kills"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (343' "Kilometers driven"' data' StatisticEntry.ValueType.Float));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (344' "Bridge limbo"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (345' "Low flyer record (s)"' data' StatisticEntry.ValueType.Float));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (352' "Fuel depots destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (355' "Mobile radars destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (358' "Baby panay statues destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (361' "Comm. stations destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (364' "Fuel shafts destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (367' "Propaganda trailers destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (370' "Faction items collected"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (373' "Colonels assassinated"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (376' "Pipelines destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (379' "Satellite dishes destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (382' "Gas pumps destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (385' "Gas holders destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (391' "Water towers destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (394' "Radars destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (397' "Wind turbines destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (400' "Generators destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (403' "Transformers destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (406' "Broadcast towers destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (409' "Radio masts destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (415' "Sams destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (418' "Military vehicles destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (421' "Demolition Officers killed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (424' "Elites killed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (427' "Ninjas killed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (433' "Offshore rigs destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (436' "Factory chimneys destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (439' "Cranes destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,Chunk_Statistics,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_Statistics.cs,Parse,The following statement contains a magic number: _entries.Add (new StatisticEntry (442' "Silos destroyed"' data' StatisticEntry.ValueType.Int));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: fixed (byte* ptrData = data) {  	uint* k = (uint*)ptrData;  	while (length > 12) {  		a += k [0];  		b += k [1];  		c += k [2];  		// mix  		a -= c;  		a ^= (c << 4) | (c >> (32 - 4));  		c += b;  		b -= a;  		b ^= (a << 6) | (a >> (32 - 6));  		a += c;  		c -= b;  		c ^= (b << 8) | (b >> (32 - 8));  		b += a;  		a -= c;  		a ^= (c << 16) | (c >> (32 - 16));  		c += b;  		b -= a;  		b ^= (a << 19) | (a >> (32 - 19));  		a += c;  		c -= b;  		c ^= (b << 4) | (b >> (32 - 4));  		b += a;  		length -= 12;  		k += 3;  	}  	switch (length) {  	case 12:  		c += k [2];  		b += k [1];  		a += k [0];  		break;  	case 11:  		c += k [2] & 0xffffff;  		b += k [1];  		a += k [0];  		break;  	case 10:  		c += k [2] & 0xffff;  		b += k [1];  		a += k [0];  		break;  	case 9:  		c += k [2] & 0xff;  		b += k [1];  		a += k [0];  		break;  	case 8:  		b += k [1];  		a += k [0];  		break;  	case 7:  		b += k [1] & 0xffffff;  		a += k [0];  		break;  	case 6:  		b += k [1] & 0xffff;  		a += k [0];  		break;  	case 5:  		b += k [1] & 0xff;  		a += k [0];  		break;  	case 4:  		a += k [0];  		break;  	case 3:  		a += k [0] & 0xffffff;  		break;  	case 2:  		a += k [0] & 0xffff;  		break;  	case 1:  		a += k [0] & 0xff;  		break;  	case 0:  		return c;  	/* zero length strings require no mixing */}  	// final  	c ^= b;  	c -= (b << 14) | (b >> (32 - 14));  	a ^= c;  	a -= (c << 11) | (c >> (32 - 11));  	b ^= a;  	b -= (a << 25) | (a >> (32 - 25));  	c ^= b;  	c -= (b << 16) | (b >> (32 - 16));  	a ^= c;  	a -= (c << 4) | (c >> (32 - 4));  	b ^= a;  	b -= (a << 14) | (a >> (32 - 14));  	c ^= b;  	c -= (b << 24) | (b >> (32 - 24));  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: while (length > 12) {  	a += k [0];  	b += k [1];  	c += k [2];  	// mix  	a -= c;  	a ^= (c << 4) | (c >> (32 - 4));  	c += b;  	b -= a;  	b ^= (a << 6) | (a >> (32 - 6));  	a += c;  	c -= b;  	c ^= (b << 8) | (b >> (32 - 8));  	b += a;  	a -= c;  	a ^= (c << 16) | (c >> (32 - 16));  	c += b;  	b -= a;  	b ^= (a << 19) | (a >> (32 - 19));  	a += c;  	c -= b;  	c ^= (b << 4) | (b >> (32 - 4));  	b += a;  	length -= 12;  	k += 3;  }  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c += k [2];  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a ^= (c << 4) | (c >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a ^= (c << 4) | (c >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a ^= (c << 4) | (c >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b ^= (a << 6) | (a >> (32 - 6));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b ^= (a << 6) | (a >> (32 - 6));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b ^= (a << 6) | (a >> (32 - 6));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c ^= (b << 8) | (b >> (32 - 8));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c ^= (b << 8) | (b >> (32 - 8));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c ^= (b << 8) | (b >> (32 - 8));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a ^= (c << 16) | (c >> (32 - 16));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a ^= (c << 16) | (c >> (32 - 16));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a ^= (c << 16) | (c >> (32 - 16));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b ^= (a << 19) | (a >> (32 - 19));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b ^= (a << 19) | (a >> (32 - 19));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b ^= (a << 19) | (a >> (32 - 19));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c ^= (b << 4) | (b >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c ^= (b << 4) | (b >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c ^= (b << 4) | (b >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: length -= 12;  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: k += 3;  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c += k [2];  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c += k [2] & 0xffffff;  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c += k [2] & 0xffff;  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c += k [2] & 0xff;  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 14) | (b >> (32 - 14));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 14) | (b >> (32 - 14));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 14) | (b >> (32 - 14));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a -= (c << 11) | (c >> (32 - 11));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a -= (c << 11) | (c >> (32 - 11));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a -= (c << 11) | (c >> (32 - 11));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b -= (a << 25) | (a >> (32 - 25));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b -= (a << 25) | (a >> (32 - 25));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b -= (a << 25) | (a >> (32 - 25));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 16) | (b >> (32 - 16));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 16) | (b >> (32 - 16));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 16) | (b >> (32 - 16));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a -= (c << 4) | (c >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a -= (c << 4) | (c >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: a -= (c << 4) | (c >> (32 - 4));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b -= (a << 14) | (a >> (32 - 14));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b -= (a << 14) | (a >> (32 - 14));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: b -= (a << 14) | (a >> (32 - 14));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 24) | (b >> (32 - 24));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 24) | (b >> (32 - 24));  
Magic Number,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following statement contains a magic number: c -= (b << 24) | (b >> (32 - 24));  
Magic Number,JC2.Save,ChunkDataEntry,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\ChunkDataEntry.cs,ToString,The following statement contains a magic number: return string.Format ("[{0}] {1}"' Index' Length - 6);  
Magic Number,JC2.Save,Chunk_BlackmarketHook,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_BlackmarketHook.cs,Parse,The following statement contains a magic number: if (data.DataEntries.Count < 7) {  	System.Diagnostics.Debugger.Break ();  }  
Magic Number,JC2.Save,Chunk_BlackmarketHook,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_BlackmarketHook.cs,Parse,The following statement contains a magic number: NumVehicleParts = EndianessSwitchableBitConverter.ToInt32 (data.DataEntries [2].Data' 0);  
Magic Number,JC2.Save,Chunk_BlackmarketHook,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_BlackmarketHook.cs,Parse,The following statement contains a magic number: Money = EndianessSwitchableBitConverter.ToInt32 (data.DataEntries [3].Data' 0);  
Magic Number,JC2.Save,Chunk_BlackmarketHook,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_BlackmarketHook.cs,Parse,The following statement contains a magic number: Chaos = EndianessSwitchableBitConverter.ToInt32 (data.DataEntries [4].Data' 0);  
Magic Number,JC2.Save,Chunk_BlackmarketHook,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_BlackmarketHook.cs,Parse,The following statement contains a magic number: if (expectedEntryCount != data.DataEntries.Count - 7) {  	System.Diagnostics.Debugger.Break ();  }  
Magic Number,JC2.Save,Chunk_TriggerSaveHandler,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_TriggerSaveHandler.cs,GetSavedObjectInfo,The following statement contains a magic number: for (int i = 0; i < _objects4.Count; i++) {  	ulong key = _objects4 [i].Object.ObjectID;  	key <<= 32;  	key |= _objects4 [i].Object.InstanceID;  	if (_objects4 [i].Unknown2 == 1) {  		exclude.Add (key);  	}  }  
Magic Number,JC2.Save,Chunk_TriggerSaveHandler,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_TriggerSaveHandler.cs,GetSavedObjectInfo,The following statement contains a magic number: key <<= 32;  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,Parse,The following statement contains a magic number: for (int i = 0; i < Capacity * 8; i += 8) {  	ObjectReference obj = new ObjectReference ();  	obj.Parse (data [9].Data' i);  	_objects.Add (obj);  }  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,Parse,The following statement contains a magic number: for (int i = 0; i < Capacity * 8; i += 8) {  	ObjectReference obj = new ObjectReference ();  	obj.Parse (data [9].Data' i);  	_objects.Add (obj);  }  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,Parse,The following statement contains a magic number: for (int i = 0; i < Capacity * 8; i += 8) {  	ObjectReference obj = new ObjectReference ();  	obj.Parse (data [9].Data' i);  	_objects.Add (obj);  }  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,Parse,The following statement contains a magic number: i += 8
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,Parse,The following statement contains a magic number: obj.Parse (data [9].Data' i);  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,Parse,The following statement contains a magic number: Bits = new BitArray (data [10].Data);  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,GetSavedObjectInfo,The following statement contains a magic number: for (int i = 0; i < _objects.Count; i++) {  	ulong key = _objects [i].ObjectID;  	key <<= 32;  	key |= _objects [i].InstanceID;  	if (Bits [i]) {  		exclude.Add (key);  	}  	all.Add (key);  }  
Magic Number,JC2.Save,Chunk_SaveBitStorage,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_SaveBitsStorage.cs,GetSavedObjectInfo,The following statement contains a magic number: key <<= 32;  
Magic Number,JC2.Save,Chunk_ResourceItemHandler,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_ResourceItemHandler.cs,GetSavedObjectInfo,The following statement contains a magic number: for (int i = 0; i < _objects.Count; i++) {  	ulong key = _objects [i].ObjectID;  	key <<= 32;  	key |= _objects [i].InstanceID;  	exclude.Add (key);  }  
Magic Number,JC2.Save,Chunk_ResourceItemHandler,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\Chunk_ResourceItemHandler.cs,GetSavedObjectInfo,The following statement contains a magic number: key <<= 32;  
Missing Default,JC2.Save,NameLookup,C:\repos\KlemenKosir_JC2MapViewer\JC2Save\JC2\Save\NameLookup.cs,HashJenkins,The following switch statement is missing a default case: switch (length) {  case 12:  	c += k [2];  	b += k [1];  	a += k [0];  	break;  case 11:  	c += k [2] & 0xffffff;  	b += k [1];  	a += k [0];  	break;  case 10:  	c += k [2] & 0xffff;  	b += k [1];  	a += k [0];  	break;  case 9:  	c += k [2] & 0xff;  	b += k [1];  	a += k [0];  	break;  case 8:  	b += k [1];  	a += k [0];  	break;  case 7:  	b += k [1] & 0xffffff;  	a += k [0];  	break;  case 6:  	b += k [1] & 0xffff;  	a += k [0];  	break;  case 5:  	b += k [1] & 0xff;  	a += k [0];  	break;  case 4:  	a += k [0];  	break;  case 3:  	a += k [0] & 0xffffff;  	break;  case 2:  	a += k [0] & 0xffff;  	break;  case 1:  	a += k [0] & 0xff;  	break;  case 0:  	return c;  /* zero length strings require no mixing */}  
