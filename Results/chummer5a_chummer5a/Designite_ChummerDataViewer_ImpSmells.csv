Implementation smell,Namespace,Class,File,Method,Description
Long Method,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The method has 154 lines of code.
Long Method,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The method has 153 lines of code.
Complex Method,ChummerDataViewer.Model,CrashReport,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\CrashReport.cs,WorkerOnStatusChanged,Cyclomatic complexity of the method is 9
Complex Method,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,Cyclomatic complexity of the method is 11
Complex Method,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,OnProgressChanged,Cyclomatic complexity of the method is 24
Long Parameter List,ChummerDataViewer.Model,CrashReport,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\CrashReport.cs,CrashReport,The method has 12 parameters.
Long Statement,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetKey,The length of the statement  "	return Enumerable.Range (0' keypart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (keypart.Substring (x' 2)' 16)).ToArray (); " is 139.
Long Statement,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetIv,The length of the statement  "	return Enumerable.Range (0' ivpart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (ivpart.Substring (x' 2)' 16)).ToArray (); " is 137.
Long Statement,ChummerDataViewer.Model,CrashReport,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\CrashReport.cs,WorkerOnStatusChanged,The length of the statement  "	using (ZipArchive archive = new ZipArchive (File.OpenRead (args.AttachedData.destinationPath)' ZipArchiveMode.Read' false)) { " is 125.
Long Statement,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The length of the statement  "				ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key")); " is 154.
Long Statement,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The length of the statement  "				OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ())); " is 120.
Long Statement,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WriteCrashToDb,The length of the statement  "	PersistentState.Database.CreateCrashReport (guid' long.Parse (attributeValues ["upload_timestamp"].N)' attributeValues ["build_type"].S' attributeValues ["error_friendly"].S' attributeValues ["key"].S' attributeValues ["location"].S' version); " is 243.
Long Statement,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The length of the statement  "	this.btnAction.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,Mainform_Shown,The length of the statement  "	_bldCrashReports = new BindingListDisplay<CrashReport> (_crashReports' c => new CrashReportView (c' _downloader)' true) { " is 121.
Long Statement,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The length of the statement  "	this.deleteDatabaserequiresRestartToolStripMenuItem.Click += new System.EventHandler (this.deleteDatabaserequiresRestartToolStripMenuItem_Click); " is 145.
Long Statement,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The length of the statement  "	this.txtSearch.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 188.
Long Statement,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The length of the statement  "	this.cboAutomation.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The length of the statement  "	this.lblDesc.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 186.
Empty Catch Block,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,OtherThreadNotificationHandler,The method has an empty catch block.
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,WorkerEntryPoint,The following statement contains a magic number: try {  	WebClient client = new WebClient ();  	while (true) {  		DownloadTask task;  		if (_queue.TryTake (out task)) {  			OnStatusChanged (new StatusChangedEventArgs ("Downloading " + task.Url + Queue ()));  			byte[] encrypted = client.DownloadData (task.Url);  			byte[] buffer;  			buffer = Decrypt (task.Key' encrypted);  			WriteAndForget (buffer' task.DestinationPath' task.ReportGuid);  		}  		if (_queue.IsEmpty) {  			OnStatusChanged (new StatusChangedEventArgs ("Idle"));  			resetEvent.WaitOne (15000);  		}  	}  } catch (StackOverflowException ex) {  	OnStatusChanged (new StatusChangedEventArgs ("Crashed"' ex));  }  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,WorkerEntryPoint,The following statement contains a magic number: while (true) {  	DownloadTask task;  	if (_queue.TryTake (out task)) {  		OnStatusChanged (new StatusChangedEventArgs ("Downloading " + task.Url + Queue ()));  		byte[] encrypted = client.DownloadData (task.Url);  		byte[] buffer;  		buffer = Decrypt (task.Key' encrypted);  		WriteAndForget (buffer' task.DestinationPath' task.ReportGuid);  	}  	if (_queue.IsEmpty) {  		OnStatusChanged (new StatusChangedEventArgs ("Idle"));  		resetEvent.WaitOne (15000);  	}  }  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,WorkerEntryPoint,The following statement contains a magic number: if (_queue.IsEmpty) {  	OnStatusChanged (new StatusChangedEventArgs ("Idle"));  	resetEvent.WaitOne (15000);  }  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,WorkerEntryPoint,The following statement contains a magic number: resetEvent.WaitOne (15000);  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetKey,The following statement contains a magic number: return Enumerable.Range (0' keypart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (keypart.Substring (x' 2)' 16)).ToArray ();  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetKey,The following statement contains a magic number: return Enumerable.Range (0' keypart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (keypart.Substring (x' 2)' 16)).ToArray ();  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetKey,The following statement contains a magic number: return Enumerable.Range (0' keypart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (keypart.Substring (x' 2)' 16)).ToArray ();  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetIv,The following statement contains a magic number: return Enumerable.Range (0' ivpart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (ivpart.Substring (x' 2)' 16)).ToArray ();  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetIv,The following statement contains a magic number: return Enumerable.Range (0' ivpart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (ivpart.Substring (x' 2)' 16)).ToArray ();  
Magic Number,ChummerDataViewer.Model,DownloaderWorker,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DownloaderWorker.cs,GetIv,The following statement contains a magic number: return Enumerable.Range (0' ivpart.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (ivpart.Substring (x' 2)' 16)).ToArray ();  
Magic Number,ChummerDataViewer.Model,CrashReport,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\CrashReport.cs,CrashReport,The following statement contains a magic number: Timestamp = unixStart.AddTicks (unixTimeStamp * 10000);  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: try {  	OnStatusChanged (new StatusChangedEventArgs ("Connecting"));  	while (true) {  		try {  			//Scan 10 items. If middle of scan' pick up there  			ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  			//Start scanning based on last key in db  			//Into anon type with a little extra info. DB lookup to see if known' parse guid   			var newItems = response.Items.Select (x => new {  				item = x'  				guid = Guid.Parse (x ["crash_id"].S)  			}).Select (old => new {  				item = old.item'  				guid = old.guid'  				known = PersistentState.Database.GetCrash (old.guid) != null  			}).ToList ();  			//If all items are known  			if (newItems.All (item => item.known)) {  				//reset progress so we start from start (new first on dynamoDB)  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  				PersistentState.Database.SetKey ("crashdumps_last_key"' null);  				//And sleep for exponential backoff  				int timeout = _backoff.GetSeconds ();  				OnStatusChanged (new StatusChangedEventArgs ());  				for (int i = timeout - 1; i >= 0; i--) {  					Thread.Sleep (1000);  				}  				continue;  			}  			//Otherwise' add _NEW_ items to db  			using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  				if (response.LastEvaluatedKey.Count == 0) {  					//If we reached the last (oldest)' reset progress meter  					PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  					PersistentState.Database.SetKey ("crashdumps_last_key"' null);  				} else {  					//Otherwise set next to take next block  					Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  					PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  					PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  				}  				//Write stuff  				foreach (var item in newItems.Where (x => !x.known)) {  					WriteCrashToDb (item.item);  					//Don't take so long waiting for the next if we found anything.  					//Theoretically this should keep it checking roughly same frequency as new items gets added  					//in reality it is probably bull  					_backoff.Sucess ();  				}  				transaction.Commit ();  			}  			//Tell the good news that we have new items. Also tell guids so it can be found  			OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  		} catch (InternalServerErrorException) {  			int timeout = _backoff.GetSeconds ();  			for (int i = timeout - 1; i >= 0; i--) {  				OnStatusChanged (new StatusChangedEventArgs ());  				Thread.Sleep (1000);  			}  		} catch (ProvisionedThroughputExceededException) {  			int timeout = _backoff.GetSeconds ();  			for (int i = timeout - 1; i >= 0; i--) {  				OnStatusChanged (new StatusChangedEventArgs ());  				Thread.Sleep (1000);  			}  		}  	}  }   #if DEBUG  catch (StackOverflowException ex)			catch (Exception ex)   #else  			catch (Exception ex) #endif   {  	OnStatusChanged (new StatusChangedEventArgs ("Crashed"' ex));  	throw;  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: try {  	OnStatusChanged (new StatusChangedEventArgs ("Connecting"));  	while (true) {  		try {  			//Scan 10 items. If middle of scan' pick up there  			ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  			//Start scanning based on last key in db  			//Into anon type with a little extra info. DB lookup to see if known' parse guid   			var newItems = response.Items.Select (x => new {  				item = x'  				guid = Guid.Parse (x ["crash_id"].S)  			}).Select (old => new {  				item = old.item'  				guid = old.guid'  				known = PersistentState.Database.GetCrash (old.guid) != null  			}).ToList ();  			//If all items are known  			if (newItems.All (item => item.known)) {  				//reset progress so we start from start (new first on dynamoDB)  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  				PersistentState.Database.SetKey ("crashdumps_last_key"' null);  				//And sleep for exponential backoff  				int timeout = _backoff.GetSeconds ();  				OnStatusChanged (new StatusChangedEventArgs ());  				for (int i = timeout - 1; i >= 0; i--) {  					Thread.Sleep (1000);  				}  				continue;  			}  			//Otherwise' add _NEW_ items to db  			using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  				if (response.LastEvaluatedKey.Count == 0) {  					//If we reached the last (oldest)' reset progress meter  					PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  					PersistentState.Database.SetKey ("crashdumps_last_key"' null);  				} else {  					//Otherwise set next to take next block  					Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  					PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  					PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  				}  				//Write stuff  				foreach (var item in newItems.Where (x => !x.known)) {  					WriteCrashToDb (item.item);  					//Don't take so long waiting for the next if we found anything.  					//Theoretically this should keep it checking roughly same frequency as new items gets added  					//in reality it is probably bull  					_backoff.Sucess ();  				}  				transaction.Commit ();  			}  			//Tell the good news that we have new items. Also tell guids so it can be found  			OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  		} catch (InternalServerErrorException) {  			int timeout = _backoff.GetSeconds ();  			for (int i = timeout - 1; i >= 0; i--) {  				OnStatusChanged (new StatusChangedEventArgs ());  				Thread.Sleep (1000);  			}  		} catch (ProvisionedThroughputExceededException) {  			int timeout = _backoff.GetSeconds ();  			for (int i = timeout - 1; i >= 0; i--) {  				OnStatusChanged (new StatusChangedEventArgs ());  				Thread.Sleep (1000);  			}  		}  	}  }   #if DEBUG  catch (StackOverflowException ex)			catch (Exception ex)   #else  			catch (Exception ex) #endif   {  	OnStatusChanged (new StatusChangedEventArgs ("Crashed"' ex));  	throw;  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: try {  	OnStatusChanged (new StatusChangedEventArgs ("Connecting"));  	while (true) {  		try {  			//Scan 10 items. If middle of scan' pick up there  			ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  			//Start scanning based on last key in db  			//Into anon type with a little extra info. DB lookup to see if known' parse guid   			var newItems = response.Items.Select (x => new {  				item = x'  				guid = Guid.Parse (x ["crash_id"].S)  			}).Select (old => new {  				item = old.item'  				guid = old.guid'  				known = PersistentState.Database.GetCrash (old.guid) != null  			}).ToList ();  			//If all items are known  			if (newItems.All (item => item.known)) {  				//reset progress so we start from start (new first on dynamoDB)  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  				PersistentState.Database.SetKey ("crashdumps_last_key"' null);  				//And sleep for exponential backoff  				int timeout = _backoff.GetSeconds ();  				OnStatusChanged (new StatusChangedEventArgs ());  				for (int i = timeout - 1; i >= 0; i--) {  					Thread.Sleep (1000);  				}  				continue;  			}  			//Otherwise' add _NEW_ items to db  			using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  				if (response.LastEvaluatedKey.Count == 0) {  					//If we reached the last (oldest)' reset progress meter  					PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  					PersistentState.Database.SetKey ("crashdumps_last_key"' null);  				} else {  					//Otherwise set next to take next block  					Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  					PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  					PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  				}  				//Write stuff  				foreach (var item in newItems.Where (x => !x.known)) {  					WriteCrashToDb (item.item);  					//Don't take so long waiting for the next if we found anything.  					//Theoretically this should keep it checking roughly same frequency as new items gets added  					//in reality it is probably bull  					_backoff.Sucess ();  				}  				transaction.Commit ();  			}  			//Tell the good news that we have new items. Also tell guids so it can be found  			OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  		} catch (InternalServerErrorException) {  			int timeout = _backoff.GetSeconds ();  			for (int i = timeout - 1; i >= 0; i--) {  				OnStatusChanged (new StatusChangedEventArgs ());  				Thread.Sleep (1000);  			}  		} catch (ProvisionedThroughputExceededException) {  			int timeout = _backoff.GetSeconds ();  			for (int i = timeout - 1; i >= 0; i--) {  				OnStatusChanged (new StatusChangedEventArgs ());  				Thread.Sleep (1000);  			}  		}  	}  }   #if DEBUG  catch (StackOverflowException ex)			catch (Exception ex)   #else  			catch (Exception ex) #endif   {  	OnStatusChanged (new StatusChangedEventArgs ("Crashed"' ex));  	throw;  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: while (true) {  	try {  		//Scan 10 items. If middle of scan' pick up there  		ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  		//Start scanning based on last key in db  		//Into anon type with a little extra info. DB lookup to see if known' parse guid   		var newItems = response.Items.Select (x => new {  			item = x'  			guid = Guid.Parse (x ["crash_id"].S)  		}).Select (old => new {  			item = old.item'  			guid = old.guid'  			known = PersistentState.Database.GetCrash (old.guid) != null  		}).ToList ();  		//If all items are known  		if (newItems.All (item => item.known)) {  			//reset progress so we start from start (new first on dynamoDB)  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  			PersistentState.Database.SetKey ("crashdumps_last_key"' null);  			//And sleep for exponential backoff  			int timeout = _backoff.GetSeconds ();  			OnStatusChanged (new StatusChangedEventArgs ());  			for (int i = timeout - 1; i >= 0; i--) {  				Thread.Sleep (1000);  			}  			continue;  		}  		//Otherwise' add _NEW_ items to db  		using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  			if (response.LastEvaluatedKey.Count == 0) {  				//If we reached the last (oldest)' reset progress meter  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  				PersistentState.Database.SetKey ("crashdumps_last_key"' null);  			} else {  				//Otherwise set next to take next block  				Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  				PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  			}  			//Write stuff  			foreach (var item in newItems.Where (x => !x.known)) {  				WriteCrashToDb (item.item);  				//Don't take so long waiting for the next if we found anything.  				//Theoretically this should keep it checking roughly same frequency as new items gets added  				//in reality it is probably bull  				_backoff.Sucess ();  			}  			transaction.Commit ();  		}  		//Tell the good news that we have new items. Also tell guids so it can be found  		OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  	} catch (InternalServerErrorException) {  		int timeout = _backoff.GetSeconds ();  		for (int i = timeout - 1; i >= 0; i--) {  			OnStatusChanged (new StatusChangedEventArgs ());  			Thread.Sleep (1000);  		}  	} catch (ProvisionedThroughputExceededException) {  		int timeout = _backoff.GetSeconds ();  		for (int i = timeout - 1; i >= 0; i--) {  			OnStatusChanged (new StatusChangedEventArgs ());  			Thread.Sleep (1000);  		}  	}  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: while (true) {  	try {  		//Scan 10 items. If middle of scan' pick up there  		ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  		//Start scanning based on last key in db  		//Into anon type with a little extra info. DB lookup to see if known' parse guid   		var newItems = response.Items.Select (x => new {  			item = x'  			guid = Guid.Parse (x ["crash_id"].S)  		}).Select (old => new {  			item = old.item'  			guid = old.guid'  			known = PersistentState.Database.GetCrash (old.guid) != null  		}).ToList ();  		//If all items are known  		if (newItems.All (item => item.known)) {  			//reset progress so we start from start (new first on dynamoDB)  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  			PersistentState.Database.SetKey ("crashdumps_last_key"' null);  			//And sleep for exponential backoff  			int timeout = _backoff.GetSeconds ();  			OnStatusChanged (new StatusChangedEventArgs ());  			for (int i = timeout - 1; i >= 0; i--) {  				Thread.Sleep (1000);  			}  			continue;  		}  		//Otherwise' add _NEW_ items to db  		using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  			if (response.LastEvaluatedKey.Count == 0) {  				//If we reached the last (oldest)' reset progress meter  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  				PersistentState.Database.SetKey ("crashdumps_last_key"' null);  			} else {  				//Otherwise set next to take next block  				Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  				PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  			}  			//Write stuff  			foreach (var item in newItems.Where (x => !x.known)) {  				WriteCrashToDb (item.item);  				//Don't take so long waiting for the next if we found anything.  				//Theoretically this should keep it checking roughly same frequency as new items gets added  				//in reality it is probably bull  				_backoff.Sucess ();  			}  			transaction.Commit ();  		}  		//Tell the good news that we have new items. Also tell guids so it can be found  		OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  	} catch (InternalServerErrorException) {  		int timeout = _backoff.GetSeconds ();  		for (int i = timeout - 1; i >= 0; i--) {  			OnStatusChanged (new StatusChangedEventArgs ());  			Thread.Sleep (1000);  		}  	} catch (ProvisionedThroughputExceededException) {  		int timeout = _backoff.GetSeconds ();  		for (int i = timeout - 1; i >= 0; i--) {  			OnStatusChanged (new StatusChangedEventArgs ());  			Thread.Sleep (1000);  		}  	}  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: while (true) {  	try {  		//Scan 10 items. If middle of scan' pick up there  		ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  		//Start scanning based on last key in db  		//Into anon type with a little extra info. DB lookup to see if known' parse guid   		var newItems = response.Items.Select (x => new {  			item = x'  			guid = Guid.Parse (x ["crash_id"].S)  		}).Select (old => new {  			item = old.item'  			guid = old.guid'  			known = PersistentState.Database.GetCrash (old.guid) != null  		}).ToList ();  		//If all items are known  		if (newItems.All (item => item.known)) {  			//reset progress so we start from start (new first on dynamoDB)  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  			PersistentState.Database.SetKey ("crashdumps_last_key"' null);  			//And sleep for exponential backoff  			int timeout = _backoff.GetSeconds ();  			OnStatusChanged (new StatusChangedEventArgs ());  			for (int i = timeout - 1; i >= 0; i--) {  				Thread.Sleep (1000);  			}  			continue;  		}  		//Otherwise' add _NEW_ items to db  		using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  			if (response.LastEvaluatedKey.Count == 0) {  				//If we reached the last (oldest)' reset progress meter  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  				PersistentState.Database.SetKey ("crashdumps_last_key"' null);  			} else {  				//Otherwise set next to take next block  				Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  				PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  				PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  			}  			//Write stuff  			foreach (var item in newItems.Where (x => !x.known)) {  				WriteCrashToDb (item.item);  				//Don't take so long waiting for the next if we found anything.  				//Theoretically this should keep it checking roughly same frequency as new items gets added  				//in reality it is probably bull  				_backoff.Sucess ();  			}  			transaction.Commit ();  		}  		//Tell the good news that we have new items. Also tell guids so it can be found  		OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  	} catch (InternalServerErrorException) {  		int timeout = _backoff.GetSeconds ();  		for (int i = timeout - 1; i >= 0; i--) {  			OnStatusChanged (new StatusChangedEventArgs ());  			Thread.Sleep (1000);  		}  	} catch (ProvisionedThroughputExceededException) {  		int timeout = _backoff.GetSeconds ();  		for (int i = timeout - 1; i >= 0; i--) {  			OnStatusChanged (new StatusChangedEventArgs ());  			Thread.Sleep (1000);  		}  	}  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: try {  	//Scan 10 items. If middle of scan' pick up there  	ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  	//Start scanning based on last key in db  	//Into anon type with a little extra info. DB lookup to see if known' parse guid   	var newItems = response.Items.Select (x => new {  		item = x'  		guid = Guid.Parse (x ["crash_id"].S)  	}).Select (old => new {  		item = old.item'  		guid = old.guid'  		known = PersistentState.Database.GetCrash (old.guid) != null  	}).ToList ();  	//If all items are known  	if (newItems.All (item => item.known)) {  		//reset progress so we start from start (new first on dynamoDB)  		PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  		PersistentState.Database.SetKey ("crashdumps_last_key"' null);  		//And sleep for exponential backoff  		int timeout = _backoff.GetSeconds ();  		OnStatusChanged (new StatusChangedEventArgs ());  		for (int i = timeout - 1; i >= 0; i--) {  			Thread.Sleep (1000);  		}  		continue;  	}  	//Otherwise' add _NEW_ items to db  	using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  		if (response.LastEvaluatedKey.Count == 0) {  			//If we reached the last (oldest)' reset progress meter  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  			PersistentState.Database.SetKey ("crashdumps_last_key"' null);  		} else {  			//Otherwise set next to take next block  			Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  			PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  		}  		//Write stuff  		foreach (var item in newItems.Where (x => !x.known)) {  			WriteCrashToDb (item.item);  			//Don't take so long waiting for the next if we found anything.  			//Theoretically this should keep it checking roughly same frequency as new items gets added  			//in reality it is probably bull  			_backoff.Sucess ();  		}  		transaction.Commit ();  	}  	//Tell the good news that we have new items. Also tell guids so it can be found  	OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  } catch (InternalServerErrorException) {  	int timeout = _backoff.GetSeconds ();  	for (int i = timeout - 1; i >= 0; i--) {  		OnStatusChanged (new StatusChangedEventArgs ());  		Thread.Sleep (1000);  	}  } catch (ProvisionedThroughputExceededException) {  	int timeout = _backoff.GetSeconds ();  	for (int i = timeout - 1; i >= 0; i--) {  		OnStatusChanged (new StatusChangedEventArgs ());  		Thread.Sleep (1000);  	}  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: try {  	//Scan 10 items. If middle of scan' pick up there  	ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  	//Start scanning based on last key in db  	//Into anon type with a little extra info. DB lookup to see if known' parse guid   	var newItems = response.Items.Select (x => new {  		item = x'  		guid = Guid.Parse (x ["crash_id"].S)  	}).Select (old => new {  		item = old.item'  		guid = old.guid'  		known = PersistentState.Database.GetCrash (old.guid) != null  	}).ToList ();  	//If all items are known  	if (newItems.All (item => item.known)) {  		//reset progress so we start from start (new first on dynamoDB)  		PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  		PersistentState.Database.SetKey ("crashdumps_last_key"' null);  		//And sleep for exponential backoff  		int timeout = _backoff.GetSeconds ();  		OnStatusChanged (new StatusChangedEventArgs ());  		for (int i = timeout - 1; i >= 0; i--) {  			Thread.Sleep (1000);  		}  		continue;  	}  	//Otherwise' add _NEW_ items to db  	using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  		if (response.LastEvaluatedKey.Count == 0) {  			//If we reached the last (oldest)' reset progress meter  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  			PersistentState.Database.SetKey ("crashdumps_last_key"' null);  		} else {  			//Otherwise set next to take next block  			Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  			PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  		}  		//Write stuff  		foreach (var item in newItems.Where (x => !x.known)) {  			WriteCrashToDb (item.item);  			//Don't take so long waiting for the next if we found anything.  			//Theoretically this should keep it checking roughly same frequency as new items gets added  			//in reality it is probably bull  			_backoff.Sucess ();  		}  		transaction.Commit ();  	}  	//Tell the good news that we have new items. Also tell guids so it can be found  	OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  } catch (InternalServerErrorException) {  	int timeout = _backoff.GetSeconds ();  	for (int i = timeout - 1; i >= 0; i--) {  		OnStatusChanged (new StatusChangedEventArgs ());  		Thread.Sleep (1000);  	}  } catch (ProvisionedThroughputExceededException) {  	int timeout = _backoff.GetSeconds ();  	for (int i = timeout - 1; i >= 0; i--) {  		OnStatusChanged (new StatusChangedEventArgs ());  		Thread.Sleep (1000);  	}  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: try {  	//Scan 10 items. If middle of scan' pick up there  	ScanResponse response = ScanData (PersistentState.Database.GetKey ("crashdumps_last_timestamp")' PersistentState.Database.GetKey ("crashdumps_last_key"));  	//Start scanning based on last key in db  	//Into anon type with a little extra info. DB lookup to see if known' parse guid   	var newItems = response.Items.Select (x => new {  		item = x'  		guid = Guid.Parse (x ["crash_id"].S)  	}).Select (old => new {  		item = old.item'  		guid = old.guid'  		known = PersistentState.Database.GetCrash (old.guid) != null  	}).ToList ();  	//If all items are known  	if (newItems.All (item => item.known)) {  		//reset progress so we start from start (new first on dynamoDB)  		PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  		PersistentState.Database.SetKey ("crashdumps_last_key"' null);  		//And sleep for exponential backoff  		int timeout = _backoff.GetSeconds ();  		OnStatusChanged (new StatusChangedEventArgs ());  		for (int i = timeout - 1; i >= 0; i--) {  			Thread.Sleep (1000);  		}  		continue;  	}  	//Otherwise' add _NEW_ items to db  	using (SQLiteTransaction transaction = PersistentState.Database.GetTransaction ()) {  		if (response.LastEvaluatedKey.Count == 0) {  			//If we reached the last (oldest)' reset progress meter  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  			PersistentState.Database.SetKey ("crashdumps_last_key"' null);  		} else {  			//Otherwise set next to take next block  			Dictionary<string' AttributeValue> nextRead = response.LastEvaluatedKey;  			PersistentState.Database.SetKey ("crashdumps_last_timestamp"' nextRead ["upload_timestamp"].N);  			PersistentState.Database.SetKey ("crashdumps_last_key"' nextRead ["crash_id"].S);  		}  		//Write stuff  		foreach (var item in newItems.Where (x => !x.known)) {  			WriteCrashToDb (item.item);  			//Don't take so long waiting for the next if we found anything.  			//Theoretically this should keep it checking roughly same frequency as new items gets added  			//in reality it is probably bull  			_backoff.Sucess ();  		}  		transaction.Commit ();  	}  	//Tell the good news that we have new items. Also tell guids so it can be found  	OnStatusChanged (new StatusChangedEventArgs ("Working"' newItems.Where (x => !x.known).Select (x => x.guid).ToList ()));  } catch (InternalServerErrorException) {  	int timeout = _backoff.GetSeconds ();  	for (int i = timeout - 1; i >= 0; i--) {  		OnStatusChanged (new StatusChangedEventArgs ());  		Thread.Sleep (1000);  	}  } catch (ProvisionedThroughputExceededException) {  	int timeout = _backoff.GetSeconds ();  	for (int i = timeout - 1; i >= 0; i--) {  		OnStatusChanged (new StatusChangedEventArgs ());  		Thread.Sleep (1000);  	}  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: if (newItems.All (item => item.known)) {  	//reset progress so we start from start (new first on dynamoDB)  	PersistentState.Database.SetKey ("crashdumps_last_timestamp"' null);  	PersistentState.Database.SetKey ("crashdumps_last_key"' null);  	//And sleep for exponential backoff  	int timeout = _backoff.GetSeconds ();  	OnStatusChanged (new StatusChangedEventArgs ());  	for (int i = timeout - 1; i >= 0; i--) {  		Thread.Sleep (1000);  	}  	continue;  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: for (int i = timeout - 1; i >= 0; i--) {  	Thread.Sleep (1000);  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: for (int i = timeout - 1; i >= 0; i--) {  	OnStatusChanged (new StatusChangedEventArgs ());  	Thread.Sleep (1000);  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: for (int i = timeout - 1; i >= 0; i--) {  	OnStatusChanged (new StatusChangedEventArgs ());  	Thread.Sleep (1000);  }  
Magic Number,ChummerDataViewer.Model,DynamoDbLoader,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,WorkerEntryPrt,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,ChummerDataViewer.Model,WaitDurationProvider,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,GetSeconds,The following statement contains a magic number: _time *= 2;  
Magic Number,ChummerDataViewer.Model,WaitDurationProvider,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,Sucess,The following statement contains a magic number: if (_time > 4) {  	_time /= 4;  } else {  	_time = 1;  }  
Magic Number,ChummerDataViewer.Model,WaitDurationProvider,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,Sucess,The following statement contains a magic number: if (_time > 4) {  	_time /= 4;  } else {  	_time = 1;  }  
Magic Number,ChummerDataViewer.Model,WaitDurationProvider,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Model\DynamoDbLoader.cs,Sucess,The following statement contains a magic number: _time /= 4;  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,CrashReportView,The following statement contains a magic number: lblVersion.Text = report.Version.ToString (3);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblGuid.Location = new System.Drawing.Point (70' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblGuid.Location = new System.Drawing.Point (70' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblGuid.Size = new System.Drawing.Size (211' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblGuid.Size = new System.Drawing.Size (211' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblVersion.Location = new System.Drawing.Point (364' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblVersion.Location = new System.Drawing.Point (364' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblVersion.Size = new System.Drawing.Size (43' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblVersion.Size = new System.Drawing.Size (43' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblBuildType.Location = new System.Drawing.Point (296' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblBuildType.Location = new System.Drawing.Point (296' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblBuildType.Size = new System.Drawing.Size (62' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblBuildType.Size = new System.Drawing.Size (62' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblBuildType.TabIndex = 2;  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Location = new System.Drawing.Point (4' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Location = new System.Drawing.Point (4' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Size = new System.Drawing.Size (60' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Size = new System.Drawing.Size (60' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.TabIndex = 3;  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblExceptionGuess.Location = new System.Drawing.Point (413' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblExceptionGuess.Location = new System.Drawing.Point (413' 5);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblExceptionGuess.Size = new System.Drawing.Size (43' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblExceptionGuess.Size = new System.Drawing.Size (43' 13);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.lblExceptionGuess.TabIndex = 5;  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.btnAction.Location = new System.Drawing.Point (659' 0);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.btnAction.Size = new System.Drawing.Size (75' 23);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.btnAction.Size = new System.Drawing.Size (75' 23);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.btnAction.TabIndex = 4;  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (737' 23);  
Magic Number,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (737' 23);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,Mainform_Shown,The following statement contains a magic number: _bldCrashReports = new BindingListDisplay<CrashReport> (_crashReports' c => new CrashReportView (c' _downloader)' true) {  	Anchor = AnchorStyles.Bottom | AnchorStyles.Top | AnchorStyles.Right | AnchorStyles.Left'  	Location = new Point (12' 69)'  	Size = new Size (863' 277)'  };  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,Mainform_Shown,The following statement contains a magic number: _bldCrashReports = new BindingListDisplay<CrashReport> (_crashReports' c => new CrashReportView (c' _downloader)' true) {  	Anchor = AnchorStyles.Bottom | AnchorStyles.Top | AnchorStyles.Right | AnchorStyles.Left'  	Location = new Point (12' 69)'  	Size = new Size (863' 277)'  };  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,Mainform_Shown,The following statement contains a magic number: _bldCrashReports = new BindingListDisplay<CrashReport> (_crashReports' c => new CrashReportView (c' _downloader)' true) {  	Anchor = AnchorStyles.Bottom | AnchorStyles.Top | AnchorStyles.Right | AnchorStyles.Left'  	Location = new Point (12' 69)'  	Size = new Size (863' 277)'  };  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,Mainform_Shown,The following statement contains a magic number: _bldCrashReports = new BindingListDisplay<CrashReport> (_crashReports' c => new CrashReportView (c' _downloader)' true) {  	Anchor = AnchorStyles.Bottom | AnchorStyles.Top | AnchorStyles.Right | AnchorStyles.Left'  	Location = new Point (12' 69)'  	Size = new Size (863' 277)'  };  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tsBackground.Location = new System.Drawing.Point (0' 408);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tsBackground.Size = new System.Drawing.Size (895' 25);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tsBackground.Size = new System.Drawing.Size (895' 25);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size (895' 24);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size (895' 24);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.TabIndex = 2;  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size (37' 20);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size (37' 20);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.deleteDatabaserequiresRestartToolStripMenuItem.Size = new System.Drawing.Size (249' 22);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.deleteDatabaserequiresRestartToolStripMenuItem.Size = new System.Drawing.Size (249' 22);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.Location = new System.Drawing.Point (8' 6);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.Location = new System.Drawing.Point (8' 6);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.Size = new System.Drawing.Size (746' 20);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.Size = new System.Drawing.Size (746' 20);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.TabIndex = 3;  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboAutomation.Location = new System.Drawing.Point (760' 6);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboAutomation.Location = new System.Drawing.Point (760' 6);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboAutomation.Size = new System.Drawing.Size (121' 21);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboAutomation.Size = new System.Drawing.Size (121' 21);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboAutomation.TabIndex = 4;  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabsContainer.Location = new System.Drawing.Point (0' 24);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabsContainer.Size = new System.Drawing.Size (895' 384);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabsContainer.Size = new System.Drawing.Size (895' 384);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabsContainer.TabIndex = 5;  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabReports.Location = new System.Drawing.Point (4' 22);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabReports.Location = new System.Drawing.Point (4' 22);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabReports.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabReports.Size = new System.Drawing.Size (887' 358);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabReports.Size = new System.Drawing.Size (887' 358);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboBuild.Location = new System.Drawing.Point (307' 32);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboBuild.Location = new System.Drawing.Point (307' 32);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboBuild.Size = new System.Drawing.Size (60' 21);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboBuild.Size = new System.Drawing.Size (60' 21);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboBuild.TabIndex = 6;  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboVersion.Location = new System.Drawing.Point (378' 32);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboVersion.Location = new System.Drawing.Point (378' 32);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboVersion.Size = new System.Drawing.Size (60' 21);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboVersion.Size = new System.Drawing.Size (60' 21);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.cboVersion.TabIndex = 5;  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabStats.Location = new System.Drawing.Point (4' 22);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabStats.Location = new System.Drawing.Point (4' 22);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabStats.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabStats.Size = new System.Drawing.Size (887' 358);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.tabStats.Size = new System.Drawing.Size (887' 358);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (895' 433);  
Magic Number,ChummerDataViewer,Mainform,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Mainform.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (895' 433);  
Magic Number,ChummerDataViewer,Program,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Program.cs,Main,The following statement contains a magic number: if (args.Length > 0) {  	if (args [0] == "decrypt") {  		string file = args [1];  		byte[] fileContents = File.ReadAllBytes (file);  		byte[] decrypted = DownloaderWorker.Decrypt (args [2]' fileContents);  		string newPath = Path.GetFileNameWithoutExtension (file) + ".zip";  		File.WriteAllBytes (newPath' decrypted);  	}  } else {  	Application.EnableVisualStyles ();  	Application.SetCompatibleTextRenderingDefault (false);  	Application.Run (new Mainform ());  }  
Magic Number,ChummerDataViewer,Program,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\Program.cs,Main,The following statement contains a magic number: if (args [0] == "decrypt") {  	string file = args [1];  	byte[] fileContents = File.ReadAllBytes (file);  	byte[] decrypted = DownloaderWorker.Decrypt (args [2]' fileContents);  	string newPath = Path.GetFileNameWithoutExtension (file) + ".zip";  	File.WriteAllBytes (newPath' decrypted);  }  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,AnyTextChanged,The following statement contains a magic number: if (txtId.Text.Length != 20) {  	lblStatus.Text = "Access Id too " + (txtId.Text.Length > 20 ? "long" : "short");  	return;  }  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,AnyTextChanged,The following statement contains a magic number: if (txtId.Text.Length != 20) {  	lblStatus.Text = "Access Id too " + (txtId.Text.Length > 20 ? "long" : "short");  	return;  }  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,AnyTextChanged,The following statement contains a magic number: lblStatus.Text = "Access Id too " + (txtId.Text.Length > 20 ? "long" : "short");  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,AnyTextChanged,The following statement contains a magic number: if (txtKey.Text.Length != 40) {  	lblStatus.Text = "Access Key too " + (txtKey.Text.Length > 40 ? "long" : "short");  	return;  }  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,AnyTextChanged,The following statement contains a magic number: if (txtKey.Text.Length != 40) {  	lblStatus.Text = "Access Key too " + (txtKey.Text.Length > 40 ? "long" : "short");  	return;  }  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,AnyTextChanged,The following statement contains a magic number: lblStatus.Text = "Access Key too " + (txtKey.Text.Length > 40 ? "long" : "short");  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtId.Location = new System.Drawing.Point (113' 111);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtId.Location = new System.Drawing.Point (113' 111);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtId.Size = new System.Drawing.Size (268' 20);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtId.Size = new System.Drawing.Size (268' 20);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtKey.Location = new System.Drawing.Point (113' 151);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtKey.Location = new System.Drawing.Point (113' 151);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtKey.Size = new System.Drawing.Size (268' 20);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtKey.Size = new System.Drawing.Size (268' 20);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point (115' 204);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point (115' 204);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size (75' 23);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size (75' 23);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblID.Location = new System.Drawing.Point (13' 111);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblID.Location = new System.Drawing.Point (13' 111);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblID.Size = new System.Drawing.Size (70' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblID.Size = new System.Drawing.Size (70' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblID.TabIndex = 3;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblKey.Location = new System.Drawing.Point (13' 151);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblKey.Location = new System.Drawing.Point (13' 151);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblKey.Size = new System.Drawing.Size (94' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblKey.Size = new System.Drawing.Size (94' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblKey.TabIndex = 4;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDb.Location = new System.Drawing.Point (13' 48);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDb.Location = new System.Drawing.Point (13' 48);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDb.Size = new System.Drawing.Size (62' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDb.Size = new System.Drawing.Size (62' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDb.TabIndex = 5;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCanel.Location = new System.Drawing.Point (196' 204);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCanel.Location = new System.Drawing.Point (196' 204);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCanel.Size = new System.Drawing.Size (75' 23);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCanel.Size = new System.Drawing.Size (75' 23);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCanel.TabIndex = 6;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDesc.Location = new System.Drawing.Point (12' 9);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDesc.Location = new System.Drawing.Point (12' 9);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDesc.Size = new System.Drawing.Size (372' 23);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDesc.Size = new System.Drawing.Size (372' 23);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDesc.TabIndex = 7;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblStatus.Location = new System.Drawing.Point (14' 177);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblStatus.Location = new System.Drawing.Point (14' 177);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblStatus.Size = new System.Drawing.Size (41' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblStatus.Size = new System.Drawing.Size (41' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblStatus.TabIndex = 8;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDbDesc.Location = new System.Drawing.Point (13' 32);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDbDesc.Location = new System.Drawing.Point (13' 32);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDbDesc.Size = new System.Drawing.Size (96' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDbDesc.Size = new System.Drawing.Size (96' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblDbDesc.TabIndex = 9;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblBulk.Location = new System.Drawing.Point (14' 74);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblBulk.Location = new System.Drawing.Point (14' 74);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblBulk.Size = new System.Drawing.Size (71' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblBulk.Size = new System.Drawing.Size (71' 13);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.lblBulk.TabIndex = 10;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtBulk.Location = new System.Drawing.Point (113' 74);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtBulk.Location = new System.Drawing.Point (113' 74);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtBulk.Size = new System.Drawing.Size (268' 20);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtBulk.Size = new System.Drawing.Size (268' 20);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.txtBulk.TabIndex = 11;  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (396' 234);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (396' 234);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size (412' 273);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size (412' 273);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size (412' 273);  
Magic Number,ChummerDataViewer,SetupForm,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\SetupForm.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size (412' 273);  
Missing Default,ChummerDataViewer,CrashReportView,F:\newReposMay17\chummer5a_chummer5a\ChummerDataViewer\View\CrashReportView.cs,btnAction_Click,The following switch statement is missing a default case: switch (_report.Progress) {  case CrashReportProcessingProgress.NotStarted:  	_report.StartDownload (_worker);  	break;  case CrashReportProcessingProgress.Downloaded:  	break;  case CrashReportProcessingProgress.Unpacked:  	break;  }  
