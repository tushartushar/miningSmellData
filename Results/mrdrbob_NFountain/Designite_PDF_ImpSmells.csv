Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteContentLine,Cyclomatic complexity of the method is 15
Long Parameter List,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteTitleElement,The method has 5 parameters.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Transform,The length of the statement  "	var root = compositor.RootPageCollection.MediaBox (0' 0' (int)PageSettings.InPoints (_settings.PageWidth)' (int)PageSettings.InPoints (_settings.PageHeight)).AddResources ().AddSimpeType1Font ("Courier"' out _courier).AddSimpeType1Font ("Courier-Bold"' out _courierBold).AddSimpeType1Font ("Courier-Oblique"' out _courierItalic).AddSimpeType1Font ("Courier-BoldOblique"' out _courierBoldItalic).End (); " is 402.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Transform,The length of the statement  "		bool found = Write (element as DialogGroupElement) || Write (element as ActionElement) || Write (element as HeadingElement) || Write (element as TransitionElement) || Write (element as CenteredTextElement) || Write (element as BoneyardElement) || Write (element as NoteBlockElement) || Write (element as SectionElement); " is 320.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteTitleElement,The length of the statement  "		float distFromBottom = PageSettings.InPoints (_settings.BottomMargin) + (split.Length * _settings.EffectiveCharHeight) + PageSettings.InPoints (_settings.AddressDistanceFromBottomMargin); " is 187.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteTitleElement,The length of the statement  "			var otherItems = titleElement.Parts.Where(x => x.Key.ToLowerInvariant() != "title" && x.Key.ToLowerInvariant() != "author");" is 124.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The length of the statement  "	string[] parenthetical = string.IsNullOrEmpty (dialog.Parenthetical) ? new string[0] : BreakIntoLines (dialog.Parenthetical' _settings.ParentheticalWidth); " is 155.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The length of the statement  "	WriteContentNode (dialog.Dialog' PageSettings.InPoints (_settings.DialogWidth)' x => PageSettings.InPoints (_settings.DialogIndent)' l =>  { " is 140.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The length of the statement  "	var lines = boneyard.Value.Trim ().Replace ("\r\n"' "\n").Replace ('\r'' '\n').Replace ("\n\n"' "\r").Replace ("\n"' "").Split ('\r'); " is 134.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The length of the statement  "	var lines = notes.Value.Trim ().Replace ("\r\n"' "\n").Replace ('\r'' '\n').Replace ("\n\n"' "\r").Replace ("\n"' "").Split ('\r'); " is 131.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The length of the statement  "	string[] lines = BreakIntoLines (section.Value' _settings.EffectiveCharWidth * sizeChange' _settings.WritablePageWidth ()); " is 123.
Long Statement,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,NewPage,The length of the statement  "	_page = builder.AddPage ().SetFont (_courier' _settings.FontSize).SetMatrix (1' 0' 0' 1' PageSettings.InPoints (_settings.LeftMargin)' PageSettings.InPoints (_settings.PageHeight) - PageSettings.InPoints (_settings.TopMargin)); " is 227.
Long Statement,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCompositor,The length of the statement  "	WriteObject (new DictionaryObject ().Set ("Size"' new IntegerNumberObject (itemCount)).Set ("Root"' comp.CatalogReference)); " is 124.
Long Statement,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteObject,The length of the statement  "	bool found = WriteObject (obj as IntegerNumberObject) || WriteObject (obj as RealNumberObject) || WriteObject (obj as StringObject) || WriteObject (obj as ArrayObject) || WriteObject (obj as DictionaryObject) || WriteObject (obj as IndirectReferenceObject) || WriteObject (obj as IndirectObject) || WriteObject (obj as NameObject) || WriteObject (obj as StreamObject); " is 368.
Long Statement,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteObject,The length of the statement  "	WriteIndent ().Write (obj.Reference.Id.ToString ()).Write (" ").Write (obj.Reference.Generation.ToString ()).WriteLine (" obj").Indent (); " is 138.
Long Statement,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCommand,The length of the statement  "	return WriteCommand (cmd as NextlineWithOffset) || WriteCommand (cmd as NextLine) || WriteCommand (cmd as PrintString) || WriteCommand (cmd as SetTextMatrix) || WriteCommand (cmd as SetFontCommand)/* || WriteCommand(cmd as SetGray) */; " is 235.
Long Statement,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCommand,The length of the statement  "	Write (string.Format ("{0:0.#} {1:0.#} {2:0.#} {3:0.#} {4:0.#} {5:0.#} Tm"' cmd.Matrix [0]' cmd.Matrix [1]' cmd.Matrix [2]' cmd.Matrix [3]' cmd.Matrix [4]' cmd.Matrix [5])); " is 173.
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteTitleElement,The following statement contains a magic number: if (author.Equals (default(KeyValuePair<string' string>))) {  	MoveDown (4);  }  else {  	EmptyLine ();  	WriteCenteredLine ("Written by");  	EmptyLine ();  	WriteCenteredLines (author.Value);  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteTitleElement,The following statement contains a magic number: MoveDown (4);  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The following statement contains a magic number: if (!HaveRoomFor (2))  	NewPage ();  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The following statement contains a magic number: if (!HaveRoomFor (totalLines) && dialogtext.Length <= 2) {  	NewPage ();  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The following statement contains a magic number: if (!HaveRoomFor (2))  	NewPage ();  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,Write,The following statement contains a magic number: WriteContentNode (centered.Content' widthInPoints' x => (widthInPoints - x) / 2' null);  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteContentNode,The following statement contains a magic number: for (int x = 0; x < lines.Length; x++) {  	if (!HaveRoomFor (2) && lines.Length > 2) {  		if (notEnoughRoom == null)  			NewPage ();  		else  			notEnoughRoom (linesWritten);  	}  	WriteContentLine (lines [x]);  	MoveDown (1);  	linesWritten += 1;  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteContentNode,The following statement contains a magic number: for (int x = 0; x < lines.Length; x++) {  	if (!HaveRoomFor (2) && lines.Length > 2) {  		if (notEnoughRoom == null)  			NewPage ();  		else  			notEnoughRoom (linesWritten);  	}  	WriteContentLine (lines [x]);  	MoveDown (1);  	linesWritten += 1;  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteContentNode,The following statement contains a magic number: if (!HaveRoomFor (2) && lines.Length > 2) {  	if (notEnoughRoom == null)  		NewPage ();  	else  		notEnoughRoom (linesWritten);  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteContentNode,The following statement contains a magic number: if (!HaveRoomFor (2) && lines.Length > 2) {  	if (notEnoughRoom == null)  		NewPage ();  	else  		notEnoughRoom (linesWritten);  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,NewPage,The following statement contains a magic number: if (_pageNumber > 1) {  	MoveDownInches (-_settings.PageNumberDistanceTop);  	EmptyLine ();  	WriteRightAlignedLine (_pageNumber.ToString () + ".");  	MoveDown (-2);  	MoveDownInches (_settings.PageNumberDistanceTop);  }  
Magic Number,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,NewPage,The following statement contains a magic number: MoveDown (-2);  
Magic Number,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCommand,The following statement contains a magic number: Write (string.Format ("{0:0.#} {1:0.#} {2:0.#} {3:0.#} {4:0.#} {5:0.#} Tm"' cmd.Matrix [0]' cmd.Matrix [1]' cmd.Matrix [2]' cmd.Matrix [3]' cmd.Matrix [4]' cmd.Matrix [5]));  
Magic Number,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCommand,The following statement contains a magic number: Write (string.Format ("{0:0.#} {1:0.#} {2:0.#} {3:0.#} {4:0.#} {5:0.#} Tm"' cmd.Matrix [0]' cmd.Matrix [1]' cmd.Matrix [2]' cmd.Matrix [3]' cmd.Matrix [4]' cmd.Matrix [5]));  
Magic Number,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCommand,The following statement contains a magic number: Write (string.Format ("{0:0.#} {1:0.#} {2:0.#} {3:0.#} {4:0.#} {5:0.#} Tm"' cmd.Matrix [0]' cmd.Matrix [1]' cmd.Matrix [2]' cmd.Matrix [3]' cmd.Matrix [4]' cmd.Matrix [5]));  
Magic Number,PageOfBob.NFountain.PDF,PdfOutput,C:\repos\mrdrbob_NFountain\src\PDF\PDF\PdfOutput.cs,WriteCommand,The following statement contains a magic number: Write (string.Format ("{0:0.#} {1:0.#} {2:0.#} {3:0.#} {4:0.#} {5:0.#} Tm"' cmd.Matrix [0]' cmd.Matrix [1]' cmd.Matrix [2]' cmd.Matrix [3]' cmd.Matrix [4]' cmd.Matrix [5]));  
Magic Number,PageOfBob.NFountain.PDF,Reference,C:\repos\mrdrbob_NFountain\src\PDF\PDF\Reference.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hash = 13;  	hash = (hash * 7) + _generation.GetHashCode ();  	hash = (hash * 7) + _id.GetHashCode ();  	return hash;  }  
Magic Number,PageOfBob.NFountain.PDF,Reference,C:\repos\mrdrbob_NFountain\src\PDF\PDF\Reference.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hash = 13;  	hash = (hash * 7) + _generation.GetHashCode ();  	hash = (hash * 7) + _id.GetHashCode ();  	return hash;  }  
Magic Number,PageOfBob.NFountain.PDF,Reference,C:\repos\mrdrbob_NFountain\src\PDF\PDF\Reference.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hash = 13;  	hash = (hash * 7) + _generation.GetHashCode ();  	hash = (hash * 7) + _id.GetHashCode ();  	return hash;  }  
Magic Number,PageOfBob.NFountain.PDF,Reference,C:\repos\mrdrbob_NFountain\src\PDF\PDF\Reference.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 7) + _generation.GetHashCode ();  
Magic Number,PageOfBob.NFountain.PDF,Reference,C:\repos\mrdrbob_NFountain\src\PDF\PDF\Reference.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 7) + _id.GetHashCode ();  
Missing Default,PageOfBob.NFountain.Plugins,PdfWriter,C:\repos\mrdrbob_NFountain\src\PDF\PdfWriter.cs,WriteContentLine,The following switch statement is missing a default case: switch (i.Style) {  case FontStyle.Bold:  	_page.SetFont (_courierBold' _settings.FontSize);  	break;  case FontStyle.Italic:  	_page.SetFont (_courierItalic' _settings.FontSize);  	break;  case FontStyle.BoldItalic:  	_page.SetFont (_courierBoldItalic' _settings.FontSize);  	break;  case FontStyle.Plain:  	_page.SetFont (_courier' _settings.FontSize);  	break;  }  
