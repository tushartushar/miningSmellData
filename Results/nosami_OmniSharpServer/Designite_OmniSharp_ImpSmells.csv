Implementation smell,Namespace,Class,File,Method,Description
Long Method,OmniSharp.Refactoring,DefaultNameService,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Refactoring\OmniSharpRefactoringContext.cs,GetDefaultRules,The method has 100 lines of code.
Complex Method,MonoDevelop.Projects,HelpExtension,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\HelpExtension.cs,GetMonodocDocumentation,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Projects,HelpService,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\HelpService.cs,GetMonoDocHelpUrl,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\MonoDocDocumentationProvider.cs,SelectOverload,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\MonoDocDocumentationProvider.cs,GetTypeString,Cyclomatic complexity of the method is 11
Complex Method,OmniSharp.AutoComplete,CompletionDataFactory,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\CompletionDataFactory.cs,CreateEntityCompletionData,Cyclomatic complexity of the method is 8
Complex Method,OmniSharp.AutoComplete,SnippetGenerator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\SnippetGenerator.cs,WriteMemberDeclarationName,Cyclomatic complexity of the method is 9
Complex Method,OmniSharp.Extensions,NodeExtensions,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Extensions\NodeExtensions.cs,GetIdentifier,Cyclomatic complexity of the method is 16
Complex Method,OmniSharp.FindUsages,AstNodeExtensions,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindUsages\AstNodeExtensions.cs,GetDefinition,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindUsages\MemberCollector.cs,CollectMembers,Cyclomatic complexity of the method is 17
Complex Method,OmniSharp.Refactoring,OmniSharpScript,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Refactoring\OmniSharpScript.cs,Rename,Cyclomatic complexity of the method is 10
Complex Method,OmniSharp.Solution,CSharpProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpProject.cs,CSharpProject,Cyclomatic complexity of the method is 8
Complex Method,OmniSharp.SemanticErrors,SemanticErrorsNavigator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\SemanticErrors\SemanticErrorsHandler.cs,GetErrorStrings,Cyclomatic complexity of the method is 17
Complex Method,NDesk.Options,Option,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Complex Method,OmniSharp.TypeLookup,TypeLookupHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\TypeLookup\TypeLookupHandler.cs,GetTypeLookupResponse,Cyclomatic complexity of the method is 9
Long Parameter List,OmniSharp.Overrides,OverrideHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Overrides\OverrideHandler.cs,runOverrideTargetWorker,The method has 5 parameters. Parameters: request' refactoringContext' parsedContent' memberDeclaration' script
Long Parameter List,OmniSharp,Program,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Program.cs,StartServer,The method has 6 parameters. Parameters: solutionPath' clientPathMode' port' verbosity' configLocation' hostPID
Long Parameter List,OmniSharp.AutoComplete,CompletionDataFactory,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\CompletionDataFactory.cs,CompletionDataFactory,The method has 5 parameters. Parameters: project' partialWord' instantiating' request' config
Long Parameter List,OmniSharp.AutoComplete,CompletionDataFactory,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\CompletionDataFactory.cs,CreateEventCreationCompletionData,The method has 6 parameters. Parameters: varName' delegateType' evt' parameterDefinition' currentMember' currentType
Long Parameter List,OmniSharp.Refactoring,OmniSharpRefactoringContext,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Refactoring\OmniSharpRefactoringContext.cs,OmniSharpRefactoringContext,The method has 5 parameters. Parameters: document' resolver' location' selectionStart' selectionEnd
Long Parameter List,OmniSharp.Solution,IAssemblyName,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\Fusion.cs,BindToObject,The method has 8 parameters. Parameters: refIID' pAsmBindSink' pApplicationContext' szCodeBase' llFlags' pvReserved' cbReserved' ppv
Long Parameter List,OmniSharp.Solution,Fusion,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\Fusion.cs,CreateAssemblyEnum,The method has 5 parameters. Parameters: ppEnum' pAppCtx' pName' dwFlags' pvReserved
Long Parameter List,OmniSharp.Solution,CSharpProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpProject.cs,CSharpProject,The method has 6 parameters. Parameters: solution' fileSystem' logger' title' fileName' id
Long Parameter List,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Identifier,OmniSharp.CodeIssues,FixUsingsHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeActions\FixUsingsHandler.cs,GetNodeToAddUsing,The length of the parameter unknownIdentifierResolveResult is 30.
Long Identifier,OmniSharp.ProjectManipulation.AddReference,AddProjectReferenceProcessor,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProjectManipulation\AddReference\AddProjectReferenceProcessor.cs,AddReference,The length of the parameter projectContainsProjectReferences is 32.
Long Statement,MonoDevelop.Projects,HelpExtension,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\HelpExtension.cs,GetMonodocDocumentation,The length of the statement  "            var declaringXml = HelpService.HelpTree != null && member.DeclaringTypeDefinition != null ? HelpService.HelpTree.GetHelpXml(member.DeclaringTypeDefinition.GetIdString()) : null;" is 177.
Long Statement,OmniSharp.AutoComplete.Metadata,AutoCompleteRequestMetadataProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\Metadata\AutoCompleteRequestMetadataProvider.cs,GetModelData,The length of the statement  "                builder.Property(r => r.WantDocumentationForEveryCompletionResult).Description("Specifies whether to return the code documentation for each and every returned autocomplete result.");" is 182.
Long Statement,OmniSharp.AutoComplete.Metadata,AutoCompleteRequestMetadataProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\Metadata\AutoCompleteRequestMetadataProvider.cs,GetModelData,The length of the statement  "                builder.Property(r => r.WantImportableTypes).Description("Specifies whether to return importable types. Defaults to false. Can be turned off to get a small speed boost.");" is 171.
Long Statement,OmniSharp.AutoComplete.Metadata,AutoCompleteRequestMetadataProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\Metadata\AutoCompleteRequestMetadataProvider.cs,GetModelData,The length of the statement  "                builder.Property(r => r.WantMethodHeader).Description("Returns a 'method header' for working with parameter templating.");" is 122.
Long Statement,OmniSharp.AutoComplete.Metadata,AutoCompleteRequestMetadataProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\Metadata\AutoCompleteRequestMetadataProvider.cs,GetModelData,The length of the statement  "                builder.Property(r => r.WantSnippet).Description("Returns a snippet that can be used by common snippet libraries to provide parameter and type parameter placeholders");" is 168.
Long Statement,OmniSharp.CodeIssues,FixUsingsHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeActions\FixUsingsHandler.cs,GetResolvedNodes,The length of the statement  "            return tree.Descendants.Distinct().SkipWhile(n => n != after).Skip(1).OrderBy(n => n.StartLocation).Select(n => new NodeResolved" is 128.
Long Statement,OmniSharp.Documentation,XmlDocumentationProviderFactory,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\XmlDocumentationProviderFactory.cs,Get,The length of the statement  "            IUnresolvedAssembly reference = project.References.OfType<IUnresolvedAssembly>().FirstOrDefault(i => i.AssemblyName.Equals(assemblyName));" is 138.
Long Statement,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\MonoDocDocumentationProvider.cs,SelectNode,The length of the statement  "                    return SelectOverload(doc.SelectNodes("/Type/Members/Member[@MemberName='" + entity.Name + "']")' (IParameterizedMember)entity);" is 128.
Long Statement,OmniSharp.Build,BuildCommandBuilder,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\BuildCommandBuilder.cs,BuildCommand,The length of the statement  "                    // Specifying a specific configuration will cause issues when dependent projects do not have the same configuration (Debug\Release) as the target project" is 153.
Long Statement,OmniSharp,Bootstrapper,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Bootstrapper.cs,ConfigureApplicationContainer,The length of the statement  "            container.RegisterMultiple<IReferenceProcessor>(new []{typeof(AddProjectReferenceProcessor)' typeof(AddFileReferenceProcessor)' typeof(AddGacReferenceProcessor)});			" is 163.
Long Statement,OmniSharp.AutoComplete,AutoCompleteHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\AutoCompleteHandler.cs,CreateProvider,The length of the statement  "            var contextProvider = new DefaultCompletionContextProvider(completionContext.Document' completionContext.ParsedContent.UnresolvedFile);" is 135.
Long Statement,OmniSharp.AutoComplete,AutoCompleteHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\AutoCompleteHandler.cs,CreateProvider,The length of the statement  "            IEnumerable<CompletionData> data = engine.GetCompletionData(completionContext.CursorPosition' request.ForceSemanticCompletion.GetValueOrDefault(true)).Cast<CompletionData>();" is 174.
Long Statement,OmniSharp.AutoComplete,BufferContext,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\BufferContext.cs,Initialize,The length of the statement  "            this.ResolveContext = this.ParsedContent.UnresolvedFile.GetTypeResolveContext(this.ParsedContent.Compilation' this.TextLocation);" is 129.
Long Statement,OmniSharp.AutoComplete,SnippetGenerator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\SnippetGenerator.cs,Generate,The length of the statement  "                _writer.WriteToken(symbol.SymbolKind == SymbolKind.Indexer ? Roles.LBracket : Roles.LPar' symbol.SymbolKind == SymbolKind.Indexer ? "[" : "(");" is 143.
Long Statement,OmniSharp.AutoComplete,SnippetGenerator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\SnippetGenerator.cs,Generate,The length of the statement  "                _writer.WriteToken(symbol.SymbolKind == SymbolKind.Indexer ? Roles.RBracket : Roles.RPar' symbol.SymbolKind == SymbolKind.Indexer ? "]" : ")");" is 143.
Long Statement,OmniSharp.AutoComplete,SnippetGenerator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\SnippetGenerator.cs,WriteMemberDeclarationName,The length of the statement  "                        IEnumerable<AstNode> typeArgs = node.GetChildrenByRole(Roles.TypeParameter).Where(arg => !methodParameterTypeArguments.Contains(arg.Name));" is 139.
Long Statement,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindUsages\MemberCollector.cs,CollectMembers,The length of the statement  "					return member.DeclaringType.GetMembers(m => m.SymbolKind == SymbolKind.Constructor' GetMemberOptions.IgnoreInheritedMembers);" is 125.
Long Statement,OmniSharp.ProjectManipulation.RemoveFromProject,RemoveFromProjectHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProjectManipulation\RemoveFromProject\RemoveFromProjectHandler.cs,RemoveFromProject,The length of the statement  "            var relativeFileName = request.FileName.Replace(relativeProject.FileName.Substring(0' relativeProject.FileName.LastIndexOf(separator) + 1)' "")" is 143.
Long Statement,OmniSharp.ProjectManipulation.RemoveFromProject,RemoveFromProjectHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProjectManipulation\RemoveFromProject\RemoveFromProjectHandler.cs,RemoveFromProject,The length of the statement  "                project.CompilationNodes().Where(n => n.Attribute("Include").Value.Equals(relativeFileName' StringComparison.InvariantCultureIgnoreCase)).Remove();" is 147.
Long Statement,OmniSharp.Refactoring,DefaultNameService,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Refactoring\OmniSharpRefactoringContext.cs,GetDefaultRules,The length of the statement  "                yield return new NamingRule(AffectedEntity.Class | AffectedEntity.Struct | AffectedEntity.Enum | AffectedEntity.Delegate) {" is 123.
Long Statement,OmniSharp.Solution,CSharpProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpProject.cs,GetAssemblyFileNameFromHintPath,The length of the statement  "                assemblyFileName = _fileSystem.Path.Combine(p.DirectoryPath' item.GetMetadataValue("HintPath")).ForceNativePathSeparator();" is 123.
Long Statement,OmniSharp.Solution,CSharpSolution,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpSolution.cs,ProjectContainingFile,The length of the statement  "            var project = Projects.FirstOrDefault(p => p.Files.Any(f => f.FileName.Equals(filename' StringComparison.InvariantCultureIgnoreCase)));" is 135.
Long Statement,OmniSharp.Solution,ProjectFinder,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\ProjectFinder.cs,FindProjectsReferencing,The length of the statement  "            IProject sourceProject = _solution.Projects.FirstOrDefault(p => p.ProjectContent.FullAssemblyName == contextAssemblyName); " is 122.
Long Statement,OmniSharp.SemanticErrors,SemanticErrorsNavigator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\SemanticErrors\SemanticErrorsHandler.cs,GetErrorStrings,The length of the statement  "                    yield return String.Format("'{1}' contains ambiguous definitions for '{0}'"' specificResult.Type.Name' specificResult.Member.Name);" is 131.
Long Statement,OmniSharp.SemanticErrors,SemanticErrorsNavigator,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\SemanticErrors\SemanticErrorsHandler.cs,GetErrorStrings,The length of the statement  "                    yield return String.Format("'{0}' does not contain a definition for '{1}'"' specificResult.TargetType.Name' specificResult.MemberName);" is 135.
Complex Conditional,NDesk.Options,Option,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,Option,The conditional expression  "Array.IndexOf(names' "<>") >= 0 &&                     ((names.Length == 1 && this.type != OptionValueType.None) ||                      (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n[n.Length - 1] == '+' || n[n.Length - 1] == '-') &&                     Contains((rn = n.Substring(0' n.Length - 1)))"  is complex.
Virtual Method Call from Constructor,OmniSharp.Solution,OrphanProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\OrphanProject.cs,OrphanProject,The constructor "OrphanProject" calls a virtual method "LoadAssembly".
Virtual Method Call from Constructor,OmniSharp.Solution,CSharpProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpProject.cs,CSharpProject,The constructor "CSharpProject" calls a virtual method "LoadAssembly".
Virtual Method Call from Constructor,OmniSharp.Solution,CSharpProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpProject.cs,CSharpProject,The constructor "CSharpProject" calls a virtual method "LoadAssembly".
Virtual Method Call from Constructor,OmniSharp.Solution,CSharpProject,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpProject.cs,CSharpProject,The constructor "CSharpProject" calls a virtual method "LoadAssembly".
Empty Catch Block,OmniSharp.CodeIssues,CodeIssuesHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeIssues\CodeIssuesHandler.cs,GetContextualCodeActions,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\MonoDocDocumentationProvider.cs,GetDocumentation,The method has an empty catch block.
Empty Catch Block,OmniSharp.Solution,GacInterop,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\GacInterop.cs,GetGacAssemblyFullNames,The method has an empty catch block.
Empty Catch Block,OmniSharp.Solution,GacInterop,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\GacInterop.cs,GetGacAssemblyFullNames,The method has an empty catch block.
Empty Catch Block,OmniSharp.Solution,GacInterop,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\GacInterop.cs,GetGacAssemblyFullNames,The method has an empty catch block.
Magic Number,OmniSharp.AutoComplete.Metadata,AutoCompleteMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\Metadata\AutoCompleteMetadataModule.cs,AutoCompleteMetadataModule,The following statement contains a magic number: Describe["AutoComplete"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/autocomplete")                 .Summary("Get completions at the text location")                 .BodyParam<AutoCompleteRequest>(null' true)                 .Response(200)                 .Model<AutoCompleteResponse>());
Magic Number,OmniSharp.Build.Metadata,BuildCommandMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\Metadata\BuildCommandMetadataModule.cs,BuildCommandMetadataModule,The following statement contains a magic number: Describe["BuildCommand"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/buildcommand")                 .Response(200)                 .Model<string>());
Magic Number,OmniSharp.Build.Metadata,BuildCommandMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\Metadata\BuildCommandMetadataModule.cs,BuildCommandMetadataModule,The following statement contains a magic number: Describe["BuildTarget"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/buildtarget")                 .BodyParam<BuildTargetRequest>()                 .Response(200)                 .Model<BuildTargetResponse>());
Magic Number,OmniSharp.CheckAliveStatus.Metadata,CheckAliveStatusMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CheckAliveStatus\Metadata\CheckAliveStatusMetadataModule.cs,CheckAliveStatusMetadataModule,The following statement contains a magic number: Describe["CheckAliveStatus"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/checkalivestatus")                 .Response(200)                 .Model<bool>());
Magic Number,OmniSharp.CheckReadyStatus.Metadata,CheckReadyStatusMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CheckReadyStatus\Metadata\CheckReadyStatusMetadataModule.cs,CheckReadyStatusMetadataModule,The following statement contains a magic number: Describe["CheckReadyStatus"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/checkreadystatus")                 .Response(200)                 .Model<bool>());
Magic Number,OmniSharp.CodeActions.Metadata,FixUsingsMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeActions\Metadata\FixUsingsMetadataModule.cs,FixUsingsMetadataModule,The following statement contains a magic number: Describe["FixUsings"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/fixusings")                 .BodyParam<Request>()                 .Response(200)                 .Model<FixUsingsResponse>());
Magic Number,OmniSharp.CodeActions.Metadata,GetCodeActionsMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeActions\Metadata\GetCodeActionsMetadataModule.cs,GetCodeActionsMetadataModule,The following statement contains a magic number: Describe["GetCodeActions"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/getcodeactions")                 .BodyParam<CodeActionRequest>()                 .Response(200)                 .Model<GetCodeActionsResponse>());
Magic Number,OmniSharp.CodeActions.Metadata,RunCodeActionMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeActions\Metadata\RunCodeActionMetadataModule.cs,RunCodeActionMetadataModule,The following statement contains a magic number: Describe["RunCodeAction"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/runcodeaction")                 .BodyParam<CodeActionRequest>()                 .Response(200)                 .Model<RunCodeActionsResponse>());
Magic Number,OmniSharp.CodeFormat.Metadata,CodeFormatMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeFormat\Metadata\CodeFormatMetadataModule.cs,CodeFormatMetadataModule,The following statement contains a magic number: Describe["CodeFormat"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/codeformat")                 .BodyParam<CodeFormatRequest>()                 .Response(200)                 .Model<CodeFormatResponse>());
Magic Number,OmniSharp.CodeIssues.Metadata,CodeIssuesMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeIssues\Metadata\CodeIssuesMetadataModule.cs,CodeIssuesMetadataModule,The following statement contains a magic number: Describe["GetCodeIssues"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/getcodeissues")                 .BodyParam<Request>()                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.CodeIssues.Metadata,CodeIssuesMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CodeIssues\Metadata\CodeIssuesMetadataModule.cs,CodeIssuesMetadataModule,The following statement contains a magic number: Describe["FixCodeIssue"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/fixcodeissue")                 .BodyParam<RunCodeActionRequest>()                 .Response(200)                 .Model<RunCodeIssuesResponse>());
Magic Number,OmniSharp.CurrentFileMembers.Metadata,CurrentFileMembersAsTreeMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CurrentFileMembers\Metadata\CurrentFileMembersAsTreeMetadataModule.cs,CurrentFileMembersAsTreeMetadataModule,The following statement contains a magic number: Describe["CurrentFileMembersAsTree"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/currentfilemembersastree")                 .BodyParam<CurrentFileMembersRequest>()                 .Response(200)                 .Model<CurrentFileMembersAsTreeResponse>());
Magic Number,OmniSharp.CurrentFileMembers.Metadata,CurrentFileMembersAsFlatMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CurrentFileMembers\Metadata\CurrentFileMembersAsFlatMetadataModule.cs,CurrentFileMembersAsFlatMetadataModule,The following statement contains a magic number: Describe["CurrentFileMembersAsFlat"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/currentfilemembersasflat")                 .BodyParam<CurrentFileMembersRequest>()                 .Response(200)                 .Model<IEnumerable<QuickFix>>());
Magic Number,OmniSharp.CurrentFileMembers.Metadata,CurrentFileTopLevelTypesMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\CurrentFileMembers\Metadata\CurrentFileTopLevelTypesMetadataModule.cs,CurrentFileTopLevelTypesMetadataModule,The following statement contains a magic number: Describe["CurrentFileTopLevelTypes"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/currentfiletopleveltypes")                 .BodyParam<CurrentFileMembersRequest>()                 .Response(200)                 .Model<IEnumerable<QuickFix>>());
Magic Number,OmniSharp.FindSymbols.Metadata,FindSymbolsMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindSymbols\Metadata\FindSymbolsMetadataModule.cs,FindSymbolsMetadataModule,The following statement contains a magic number: Describe["FindSymbols"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/findsymbols")                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.FindTypes.Metadata,FindTypesMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindTypes\Metadata\FindTypesMetadataModule.cs,FindTypesMetadataModule,The following statement contains a magic number: Describe["FindTypes"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/findtypes")                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.FindUsages.Metadata,FindUsagesMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindUsages\Metadata\FindUsagesMetadataModule.cs,FindUsagesMetadataModule,The following statement contains a magic number: Describe["FindUsages"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/findusages")                 .BodyParam<FindUsagesRequest>()                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.GotoDefinition.Metadata,GotoDefinitionMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\GotoDefinition\Metadata\GotoDefinitionMetadataModule.cs,GotoDefinitionMetadataModule,The following statement contains a magic number: Describe["GoToDefinition"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/gotodefinition")                 .Summary("Retrieve the location of the definition of the symbol at the specified location")                 .BodyParam<GotoDefinitionRequest>(null' true)                 .Response(200)                 .Model<GotoDefinitionResponse>());
Magic Number,OmniSharp.GotoFile.Metadata,GotoFileMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\GotoFile\Metadata\GotoFileMetadataModule.cs,GotoFileMetadataModule,The following statement contains a magic number: Describe["GotoFile"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/gotofile")                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.GotoImplementation.Metadata,GotoImplementationMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\GotoImplementation\Metadata\GotoImplementationMetadataModule.cs,GotoImplementationMetadataModule,The following statement contains a magic number: Describe["FindImplementations"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/findimplementations")                 .BodyParam<GotoImplementationRequest>()                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.GotoRegion.Metadata,GotoRegionMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\GotoRegion\Metadata\GotoRegionMetadataModule.cs,GotoRegionMetadataModule,The following statement contains a magic number: Describe["GotoRegion"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/gotoregion")                 .BodyParam<Request>()                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.LookupAllTypes.Metadata,LookupAllTypesMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\LookupAllTypes\Metadata\LookupAllTypesMetadataModule.cs,LookupAllTypesMetadataModule,The following statement contains a magic number: Describe["LookupAllTypes"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/lookupalltypes")                 .Response(200)                 .Model<LookupAllTypesResponse>());
Magic Number,OmniSharp.Overrides.Metadata,GetOverrideTargetsMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Overrides\Metadata\GetOverrideTargetsMetadataModule.cs,GetOverrideTargetsMetadataModule,The following statement contains a magic number: Describe["GetOverrideTargets"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/getoverridetargets")                 .BodyParam<Request>()                 .Response(200)                 .Model<GetOverrideTargetsResponse>());
Magic Number,OmniSharp.Overrides.Metadata,RunOverrideTargetMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Overrides\Metadata\RunOverrideTargetMetadataModule.cs,RunOverrideTargetMetadataModule,The following statement contains a magic number: Describe["RunOverrideTarget"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/runoverridetarget")                 .BodyParam<RunOverrideTargetRequest>()                 .Response(200)                 .Model<RunOverrideTargetResponse>());
Magic Number,OmniSharp.ProjectManipulation.AddReference.Metadata,AddReferenceMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProjectManipulation\AddReference\Metadata\AddReferenceMetadataModule.cs,AddReferenceMetadataModule,The following statement contains a magic number: Describe["AddReference"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/addreference")                 .BodyParam<AddReferenceRequest>()                 .Response(200)                 .Model<AddReferenceResponse>());
Magic Number,OmniSharp.ProjectManipulation.AddToProject.Metadata,AddToProjectMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProjectManipulation\AddToProject\Metadata\AddToProjectMetadataModule.cs,AddToProjectMetadataModule,The following statement contains a magic number: Describe["AddToProject"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/addtoproject")                 .BodyParam<AddToProjectRequest>()                 .Response(200)                 .Model<bool>());
Magic Number,OmniSharp.ProjectManipulation.RemoveFromProject.Metadata,RemoveFromProjectMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProjectManipulation\RemoveFromProject\Metadata\RemoveFromProjectMetadataModule.cs,RemoveFromProjectMetadataModule,The following statement contains a magic number: Describe["RemoveFromProject"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/removefromproject")                 .BodyParam<RemoveFromProjectRequest>()                 .Response(200)                 .Model<bool>());
Magic Number,OmniSharp.ReloadSolution.Metadata,ReloadSolutionMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ReloadSolution\Metadata\ReloadSolutionMetadataModule.cs,ReloadSolutionMetadataModule,The following statement contains a magic number: Describe["ReloadSolution"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/reloadsolution")                 .Response(200)                 .Model<bool>());
Magic Number,OmniSharp.Rename.Metadata,RenameMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Rename\Metadata\RenameMetadataModule.cs,RenameMetadataModule,The following statement contains a magic number: Describe["Rename"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/rename")                 .BodyParam<RenameRequest>()                 .Response(200)                 .Model<RenameResponse>());
Magic Number,OmniSharp.SemanticErrors.Metadata,SemanticErrorsMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\SemanticErrors\Metadata\SemanticErrorsMetadataModule.cs,SemanticErrorsMetadataModule,The following statement contains a magic number: Describe["SemanticErrors"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/semanticerrors")                 .BodyParam<Request>()                 .Response(200)                 .Model<SemanticErrorsResponse>());
Magic Number,OmniSharp.StopServer.Metadata,StopServerMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\StopServer\Metadata\StopServerMetadataModule.cs,StopServerMetadataModule,The following statement contains a magic number: Describe["StopServer"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/stopserver")                 .Response(200)                 .Model<bool>());
Magic Number,OmniSharp.SyntaxErrors.Metadata,CodeCheckMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\SyntaxErrors\Metadata\CodeCheckMetadataModule.cs,CodeCheckMetadataModule,The following statement contains a magic number: Describe["CodeCheck"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/codecheck")                 .BodyParam<Request>()                 .Response(200)                 .Model<QuickFixResponse>());
Magic Number,OmniSharp.SyntaxErrors.Metadata,SyntaxErrorsMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\SyntaxErrors\Metadata\SyntaxErrorsMetadataModule.cs,SyntaxErrorsMetadataModule,The following statement contains a magic number: Describe["SyntaxErrors"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/syntaxerrors")                 .BodyParam<Request>()                 .Response(200)                 .Model<SyntaxErrorsResponse>());
Magic Number,OmniSharp.Documentation,DocumentationConverter,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\DocumentationConverter.cs,GetCref,The following statement contains a magic number: cref.Length < 2
Magic Number,OmniSharp.Documentation,DocumentationConverter,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\DocumentationConverter.cs,GetCref,The following statement contains a magic number: return cref.Substring(2' cref.Length - 2);
Magic Number,OmniSharp.Documentation,DocumentationConverter,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\DocumentationConverter.cs,GetCref,The following statement contains a magic number: return cref.Substring(2' cref.Length - 2);
Magic Number,OmniSharp.Build,BuildLogParser,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\BuildLogParser.cs,Parse,The following statement contains a magic number: var quickFix = new QuickFix                     {                         FileName = matches[0].Groups[2].Value'                         Text = matches[0].Groups[1].Value.Replace("'"' "''")                     };
Magic Number,OmniSharp.Build,BuildLogParser,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\BuildLogParser.cs,Parse,The following statement contains a magic number: var quickFix = new QuickFix                     {                         FileName = matches[0].Groups[1].Value'                         Line = int.Parse(matches[0].Groups[2].Value)'                         Column = int.Parse(matches[0].Groups[3].Value)'                         Text = "[" + matches[0].Groups[4].Value + "] " + matches[0].Groups[5].Value.Replace("'"' "''")                     };
Magic Number,OmniSharp.Build,BuildLogParser,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\BuildLogParser.cs,Parse,The following statement contains a magic number: var quickFix = new QuickFix                     {                         FileName = matches[0].Groups[1].Value'                         Line = int.Parse(matches[0].Groups[2].Value)'                         Column = int.Parse(matches[0].Groups[3].Value)'                         Text = "[" + matches[0].Groups[4].Value + "] " + matches[0].Groups[5].Value.Replace("'"' "''")                     };
Magic Number,OmniSharp.Build,BuildLogParser,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\BuildLogParser.cs,Parse,The following statement contains a magic number: var quickFix = new QuickFix                     {                         FileName = matches[0].Groups[1].Value'                         Line = int.Parse(matches[0].Groups[2].Value)'                         Column = int.Parse(matches[0].Groups[3].Value)'                         Text = "[" + matches[0].Groups[4].Value + "] " + matches[0].Groups[5].Value.Replace("'"' "''")                     };
Magic Number,OmniSharp.Build,BuildLogParser,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Build\BuildLogParser.cs,Parse,The following statement contains a magic number: var quickFix = new QuickFix                     {                         FileName = matches[0].Groups[1].Value'                         Line = int.Parse(matches[0].Groups[2].Value)'                         Column = int.Parse(matches[0].Groups[3].Value)'                         Text = "[" + matches[0].Groups[4].Value + "] " + matches[0].Groups[5].Value.Replace("'"' "''")                     };
Magic Number,OmniSharp,Program,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Program.cs,Main,The following statement contains a magic number: var port = 2000;
Magic Number,OmniSharp,Program,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Program.cs,StartServer,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,OmniSharp,ProcessExtensions,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\ProcessExtensions.cs,WatchProcesses,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,OmniSharp.AutoComplete,CompletionDataFactory,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\CompletionDataFactory.cs,CreateImportCompletionData,The following statement contains a magic number: setAsImport = (ICompletionData icompleteData' int depth) =>             {                 if (depth > 5)                     return;                 icompleteData.DisplayFlags |= DisplayFlags.IsImportCompletion;                 icompleteData.DisplayText += " [Using " + type.Namespace + "]";                 icompleteData.Description = "Using " + type.Namespace + "\n" + icompleteData.Description;                 var completeData = icompleteData as CompletionData;                 if (completeData != null)                 {                     completeData.RequiredNamespaceImport = type.Namespace;                 }                 foreach (var overload in icompleteData.OverloadedData.Where(i => i != icompleteData))                 {                     setAsImport(overload' depth + 1);                 }             };
Magic Number,OmniSharp.FindUsages,AstNodeExtensions,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\FindUsages\AstNodeExtensions.cs,Preview,The following statement contains a magic number: var charactersEitherSide = (maxWidth - (ellipsis.Length * 2));
Magic Number,OmniSharp.Solution,Fusion,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\Fusion.cs,GetGacPath,The following statement contains a magic number: const int size = 260;
Magic Number,OmniSharp.Solution,GacInterop,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\GacInterop.cs,GetGacAssemblyFullNames,The following statement contains a magic number: Fusion.CreateAssemblyEnum(out assemblyEnum' null' null' 2' 0);
Magic Number,OmniSharp.Solution,GacInterop,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\GacInterop.cs,FindAssemblyInNetGac,The following statement contains a magic number: i < 2
Magic Number,OmniSharp.Solution,CSharpSolution,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Solution\CSharpSolution.cs,LoadSolution,The following statement contains a magic number: switch (typeGuid.ToUpperInvariant())                     {                         case "{2150E333-8FDC-42A3-9474-1A3956D46DE8}": // Solution Folder                                 // ignore folders                             break;                         case "{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}": // C# project                             LoadProject(title' location' guid);                             break;                         default:                                 // Unity3D makes type GUID from the MD5 of title.                             if (MD5(title) == typeGuid.Substring(1' typeGuid.Length - 2).ToLower().Replace("-"' ""))                             {                                 LoadProject(title' location' guid);                             }                             else                             {                                 _logger.Debug("Project {0} has unsupported type {1}"' location' typeGuid);                             }                             break;                     }
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption(prototype' description' 2'                     delegate(OptionValueCollection v) { action(v[0]' v[1]); });
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: string prefix = new string(' '' OptionWidth + 2);
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,OmniSharp.TypeLookup.Metadata,TypeLookupMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\TypeLookup\Metadata\TypeLookupMetadataModule.cs,TypeLookupMetadataModule,The following statement contains a magic number: Describe["TypeLookup"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/typelookup")                 .BodyParam<TypeLookupRequest>()                 .Response(200)                 .Model<TypeLookupResponse>());
Magic Number,OmniSharp.UpdateBuffer.Metadata,UpdateBufferMetadataModule,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\UpdateBuffer\Metadata\UpdateBufferMetadataModule.cs,UpdateBufferMetadataModule,The following statement contains a magic number: Describe["UpdateBuffer"] = desc => desc.AsSwagger(builder => builder                 .ResourcePath("/updatebuffer")                 .BodyParam<Request>()                 .Response(200)                 .Model<bool>());
Missing Default,OmniSharp.TestContextInformation,GetTestContextHandler,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\TestContextInformation\GetTestContextHandler.cs,TestCommand,The following switch statement is missing a default case: switch (request.Type)             {                 case TestCommandRequest.TestCommandType.All:                     testCommand = testCommands.All;                     break;                 case TestCommandRequest.TestCommandType.Fixture:                     testCommand = testCommands.Fixture;                     break;                 case TestCommandRequest.TestCommandType.Single:                     testCommand = testCommands.Single;                     break;             }
Missing Default,OmniSharp.Documentation,DocumentationConverter,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Documentation\DocumentationConverter.cs,ConvertDocumentation,The following switch statement is missing a default case: switch (elname)                         {                             case "filterpriority":                                 xml.Skip();                                 break;                             case "remarks":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append("Remarks:");                                 ret.Append(config.TextEditorOptions.EolMarker);                                 break;                             case "example":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append("Example:");                                 ret.Append(config.TextEditorOptions.EolMarker);                                 break;                             case "exception":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append(GetCref(xml["cref"]));                                 ret.Append(": ");                                 break;                             case "returns":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append("Returns: ");                                 break;                             case "see":                                 ret.Append(GetCref(xml["cref"]));                                 ret.Append(xml["langword"]);                                 break;                             case "seealso":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append("See also: ");                                 ret.Append(GetCref(xml["cref"]));                                 break;                             case "paramref":                                 ret.Append(xml["name"]);                                 break;                             case "param":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append(Whitespace.Replace(xml["name"].Trim()' " "));                                 ret.Append(": ");                                 break;                             case "value":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 ret.Append("Value: ");                                 ret.Append(config.TextEditorOptions.EolMarker);                                 break;                             case "br":                             case "para":                                 ret.Append(config.TextEditorOptions.EolMarker);                                 break;                         }
Missing Default,OmniSharp.AutoComplete,MyCompletionsCategory,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\AutoComplete\MyCompletionCategory.cs,GetVimKind,The following switch statement is missing a default case: switch(entityType)             { 			case(SymbolKind.Method):                     return "f"; 			case(SymbolKind.Field):                     return "v"; 			case(SymbolKind.Property):                     return "m";             }
Missing Default,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType)                 {                     case OptionValueType.None:                         c.OptionValues.Add(n);                         c.Option.Invoke(c);                         break;                     case OptionValueType.Optional:                     case OptionValueType.Required:                         ParseValue(v' c);                         break;                 }
Missing Default,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\nosami_OmniSharpServer\OmniSharp\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description[i])                 {                     case ' ':                     case '\t':                     case '\v':                     case '-':                     case ''':                     case '.':                     case ';':                         sep = i;                         break;                     case '\n':                         return i;                 }
