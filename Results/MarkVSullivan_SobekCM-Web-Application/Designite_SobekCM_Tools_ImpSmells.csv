Implementation smell,Namespace,Class,File,Method,Description
Long Method,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The method has 177 lines of code.
Long Method,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,read_file_info,The method has 109 lines of code.
Complex Method,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Contains,Cyclomatic complexity of the method is 10
Complex Method,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,Cyclomatic complexity of the method is 32
Complex Method,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,read_file_info,Cyclomatic complexity of the method is 23
Long Parameter List,SobekCM.Tools,SecurityInfo,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\SecurityInfo.cs,ReadFromEncryptedFile,The method has 5 parameters. Parameters: Filename' Key' Iv' Position' Length
Long Parameter List,SobekCM.Tools,SecurityInfo,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\SecurityInfo.cs,WriteToEncryptedFile,The method has 5 parameters. Parameters: TextToWrite' Filename' Key' Iv' Position
Long Parameter List,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,LogFileXhtml,The method has 5 parameters. Parameters: NewFileName' Title' AppName' RowHeader' SuppressExceptions
Long Parameter List,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,SetupLogFile,The method has 5 parameters. Parameters: Log_FileName' Title' AppName' RowHeader' SuppressExceptionsFlag
Long Parameter List,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,AddNewStyle,The method has 5 parameters. Parameters: StyleName' FontColor' FontSize' Bold' Italics
Long Parameter List,SobekCM.Tools.Logs,LogFileXhtmlStyle,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML_Style.cs,LogFileXhtmlStyle,The method has 5 parameters. Parameters: Bold' FontColor' FontSize' Italics' Name
Long Parameter List,SobekCM.Tools.FDA,FDA_File,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_File.cs,FDA_File,The method has 6 parameters. Parameters: ID' Name' Size' MD5_Checksum' SHA1_Checksum' Preservation
Long Statement,SobekCM.Tools,Custom_Tracer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Custom_Tracer.cs,Add_Trace,The length of the statement  "                    traceBuilder.Append("<tr><td>" + Milliseconds + "</td><td>" + Method.ToLower() + "</td><td>" + Message.Replace("<"' "&lt;").Replace(">"'"&gt;") + "</td></tr>\n"); " is 162.
Long Statement,SobekCM.Tools,Custom_Tracer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Custom_Tracer.cs,Add_Trace,The length of the statement  "                    traceBuilder.Append("<tr><td>" + Milliseconds + "</td><td>" + Method.ToLower() + "</td><td><font color=\"red\">" + Message.Replace("<"' "&lt;").Replace(">"' "&gt;") + "</font></td></tr>\n"); " is 190.
Long Statement,SobekCM.Tools,SecurityInfo,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\SecurityInfo.cs,ReadFromEncryptedFile,The length of the statement  "			    CryptoStream cryptoStreamDecrypt = new CryptoStream(projectDataFile' desProvider.CreateDecryptor()' CryptoStreamMode.Read ); " is 124.
Long Statement,SobekCM.Tools,SecurityInfo,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\SecurityInfo.cs,WriteToEncryptedFile,The length of the statement  "			    CryptoStream cryptoStreamEncrypt = new CryptoStream(projectDataFile' desProvider.CreateEncryptor()' CryptoStreamMode.Write ); " is 125.
Long Statement,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ToUlong,The length of the statement  "            ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2]) * 256) + (Convert.ToUInt64(bytes[1]) * 65536) + (Convert.ToUInt64(bytes[0]) * 16777216); " is 146.
Long Statement,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Ready,The length of the statement  "            Dictionary<byte' SortedList<ulong' SingleIpRangeV4>> tempDictionary = new Dictionary<byte' SortedList<ulong' SingleIpRangeV4>>(); " is 129.
Long Statement,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Ready,The length of the statement  "                                individualPrefixDictionary[ipRange.StartIpAddress].EndIpAddress = Math.Max(currentRange.EndIpAddress.Value' ipRange.EndIpAddress.Value); " is 136.
Long Statement,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Ready,The length of the statement  "                    SortedList<ulong' SingleIpRangeV4> newSorted = new SortedList<ulong' SingleIpRangeV4> {{ipRange.StartIpAddress' ipRange}}; " is 122.
Long Statement,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,SetupLogFile,The length of the statement  "                    throw new LogFile_Exception("Unable to create the directory [" + new FileInfo(Log_FileName).DirectoryName + "] in a LogFileXHTML object."); " is 139.
Long Statement,SobekCM.Tools.Settings,IsolatedStorage_Settings,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Settings\IsolatedStorage_Settings.cs,Read_XML_File,The length of the statement  "				StreamReader stmReader = new StreamReader( new IsolatedStorageFileStream( fileName + ".xml"' FileMode.Open' userSettingFile ) ); " is 128.
Long Statement,SobekCM.Tools.Settings,IsolatedStorage_Settings,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Settings\IsolatedStorage_Settings.cs,Write_XML_File,The length of the statement  "					StreamWriter stmWriter = new StreamWriter( new IsolatedStorageFileStream( fileName + ".xml"' FileMode.Create' userSettingFile ) ); " is 130.
Long Statement,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,Write,The length of the statement  "                writer.WriteLine("<REPORT xmlns=\"http://www.fcla.edu/dls/md/daitss/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.fcla.edu/dls/md/daitss/ http://www.fcla.edu/dls/md/daitss/daitssReport.xsd\">"); " is 239.
Long Statement,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,Write,The length of the statement  "                writer.WriteLine("<" + ReportData.Report_Type_String.ToUpper() + " IEID=\"" + ReportData.IEID + "\" INGEST_TIME=\"" + format_date(ReportData.Date) + "\" PACKAGE=\"" + ReportData.Package + "\">"); " is 195.
Long Statement,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,format_date,The length of the statement  "                date.Hour.ToString().PadLeft(2' '0') + ":" + date.Minute.ToString().PadLeft(2' '0') + ":" + date.Second.ToString().PadLeft(2' '0') + "Z"; " is 137.
Magic Number,SobekCM.Tools,DateTime_Helper,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\DateTime_Helper.cs,ToRfc822,The following statement contains a magic number: string timeZone = "+" + offset.ToString().PadLeft(2' '0');
Magic Number,SobekCM.Tools,DateTime_Helper,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\DateTime_Helper.cs,ToRfc822,The following statement contains a magic number: timeZone = "-" + i.ToString().PadLeft(2' '0');
Magic Number,SobekCM.Tools,DateTime_Helper,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\DateTime_Helper.cs,ToRfc822,The following statement contains a magic number: return Date.ToString("ddd' dd MMM yyyy HH:mm:ss " + timeZone.PadRight(5' '0'));
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ComparableIpAddress,The following statement contains a magic number: Prefix = Convert.ToByte(Value /16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ComparableIpAddress,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2])*256) + (Convert.ToUInt64(bytes[1])*65536) + (Convert.ToUInt64(bytes[0])*16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ComparableIpAddress,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2])*256) + (Convert.ToUInt64(bytes[1])*65536) + (Convert.ToUInt64(bytes[0])*16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ComparableIpAddress,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2])*256) + (Convert.ToUInt64(bytes[1])*65536) + (Convert.ToUInt64(bytes[0])*16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ComparableIpAddress,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2])*256) + (Convert.ToUInt64(bytes[1])*65536) + (Convert.ToUInt64(bytes[0])*16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ComparableIpAddress,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2])*256) + (Convert.ToUInt64(bytes[1])*65536) + (Convert.ToUInt64(bytes[0])*16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ToUlong,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2]) * 256) + (Convert.ToUInt64(bytes[1]) * 65536) + (Convert.ToUInt64(bytes[0]) * 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ToUlong,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2]) * 256) + (Convert.ToUInt64(bytes[1]) * 65536) + (Convert.ToUInt64(bytes[0]) * 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ToUlong,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2]) * 256) + (Convert.ToUInt64(bytes[1]) * 65536) + (Convert.ToUInt64(bytes[0]) * 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ToUlong,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2]) * 256) + (Convert.ToUInt64(bytes[1]) * 65536) + (Convert.ToUInt64(bytes[0]) * 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,ComparableIpAddress,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\ComparableIpAddress.cs,ToUlong,The following statement contains a magic number: ulong ipAddrLong = bytes[3] + (Convert.ToUInt64(bytes[2]) * 256) + (Convert.ToUInt64(bytes[1]) * 65536) + (Convert.ToUInt64(bytes[0]) * 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Contains,The following statement contains a magic number: values.Count <= 3
Magic Number,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Contains,The following statement contains a magic number: int middle_point = (start_index + end_index)/2;
Magic Number,SobekCM.Tools.IpRangeUtilities,IpRangeSetV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\IpRangeSetV4.cs,Contains,The following statement contains a magic number: end_index - start_index >= 2
Magic Number,SobekCM.Tools.IpRangeUtilities,SingleIpRangeV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\SingleIpRangeV4.cs,SingleIpRangeV4,The following statement contains a magic number: Prefix = Convert.ToByte(this.StartIpAddress / 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,SingleIpRangeV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\SingleIpRangeV4.cs,SingleIpRangeV4,The following statement contains a magic number: int add_number = (int) Math.Pow(2' (32 - cidr)) - 1;
Magic Number,SobekCM.Tools.IpRangeUtilities,SingleIpRangeV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\SingleIpRangeV4.cs,SingleIpRangeV4,The following statement contains a magic number: int add_number = (int) Math.Pow(2' (32 - cidr)) - 1;
Magic Number,SobekCM.Tools.IpRangeUtilities,SingleIpRangeV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\SingleIpRangeV4.cs,SingleIpRangeV4,The following statement contains a magic number: Prefix = Convert.ToByte(StartIpAddress / 16777216);
Magic Number,SobekCM.Tools.IpRangeUtilities,SingleIpRangeV4,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\IpRangeUtilities\SingleIpRangeV4.cs,SingleIpRangeV4,The following statement contains a magic number: Prefix = Convert.ToByte(this.StartIpAddress / 16777216);
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,SetupLogFile,The following statement contains a magic number: AppName = AppName.Substring(0' 30);
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,SetupLogFile,The following statement contains a magic number: AppName.Length > 30
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,CreateHeader,The following statement contains a magic number: WriteAtPos( TITLE_POSITION' title.Substring(0'25) + " </title>");
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,CreateHeader,The following statement contains a magic number: title.Length > 25
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: ! tempRead.ToString().Substring(tempRead.Length-8' 7).Equals("</head>")
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: ! tempRead.ToString().Substring(tempRead.Length-8' 7).Equals("</head>")
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: tempRead.Remove(0' 10);
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: currentPosition = Convert.ToInt32(tempReadString.Substring(POSITION_POSITION' 11).Split('\"')[0]);
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: string dateString = tempReadString.Substring(CREATE_DATE_POSITION' 23);
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: eachRowHeader = tempReadString.Substring(ROW_HEADER_POSITION' 23).Split('\"')[0];
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: DateStampingEnabled = Convert.ToBoolean(tempReadString.Substring(DATE_STAMP_POSITION' 6).Split('\"')[0]);
Magic Number,SobekCM.Tools.Logs,LogFileXhtml,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\Logs\LogFileXHTML.cs,ReadHeader,The following statement contains a magic number: ErrorCount = Convert.ToInt32(tempReadString.Substring(ERROR_POSITION' 8).Split('\"')[0]);
Magic Number,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following statement contains a magic number: switch (thisAttribute.Name)                                          {                                              case "IEID":                                                  report_data.IEID = thisAttribute.Value;                                                  break;                                                case "INGEST_TIME":                                                  string date_string_value =                                                      thisAttribute.Value.Replace("-0400 "' "").Replace("-0500 "' "");                                                  string[] split = date_string_value.Split(" ".ToCharArray());                                                  if (split.Length == 5)                                                  {                                                      string new_date_string = split[1] + " " + split[2] + " " + split[4] +" " + split[3];                                                      DateTime report_date;                                                      if (DateTime.TryParse(new_date_string' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  else                                                  {                                                      // Just try to convert it as it is                                                      DateTime report_date;                                                      if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  break;                                                case "PACKAGE":                                                  report_data.Package = thisAttribute.Value;                                                  break;                                          }
Magic Number,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following statement contains a magic number: switch (thisAttribute.Name)                                          {                                              case "IEID":                                                  report_data.IEID = thisAttribute.Value;                                                  break;                                                case "INGEST_TIME":                                                  string date_string_value =                                                      thisAttribute.Value.Replace("-0400 "' "").Replace("-0500 "' "");                                                  string[] split = date_string_value.Split(" ".ToCharArray());                                                  if (split.Length == 5)                                                  {                                                      string new_date_string = split[1] + " " + split[2] + " " + split[4] +" " + split[3];                                                      DateTime report_date;                                                      if (DateTime.TryParse(new_date_string' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  else                                                  {                                                      // Just try to convert it as it is                                                      DateTime report_date;                                                      if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  break;                                                case "PACKAGE":                                                  report_data.Package = thisAttribute.Value;                                                  break;                                          }
Magic Number,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following statement contains a magic number: switch (thisAttribute.Name)                                          {                                              case "IEID":                                                  report_data.IEID = thisAttribute.Value;                                                  break;                                                case "INGEST_TIME":                                                  string date_string_value =                                                      thisAttribute.Value.Replace("-0400 "' "").Replace("-0500 "' "");                                                  string[] split = date_string_value.Split(" ".ToCharArray());                                                  if (split.Length == 5)                                                  {                                                      string new_date_string = split[1] + " " + split[2] + " " + split[4] +" " + split[3];                                                      DateTime report_date;                                                      if (DateTime.TryParse(new_date_string' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  else                                                  {                                                      // Just try to convert it as it is                                                      DateTime report_date;                                                      if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  break;                                                case "PACKAGE":                                                  report_data.Package = thisAttribute.Value;                                                  break;                                          }
Magic Number,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following statement contains a magic number: switch (thisAttribute.Name)                                          {                                              case "IEID":                                                  report_data.IEID = thisAttribute.Value;                                                  break;                                                case "INGEST_TIME":                                                  string date_string_value =                                                      thisAttribute.Value.Replace("-0400 "' "").Replace("-0500 "' "");                                                  string[] split = date_string_value.Split(" ".ToCharArray());                                                  if (split.Length == 5)                                                  {                                                      string new_date_string = split[1] + " " + split[2] + " " + split[4] +" " + split[3];                                                      DateTime report_date;                                                      if (DateTime.TryParse(new_date_string' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  else                                                  {                                                      // Just try to convert it as it is                                                      DateTime report_date;                                                      if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  break;                                                case "PACKAGE":                                                  report_data.Package = thisAttribute.Value;                                                  break;                                          }
Magic Number,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,format_date,The following statement contains a magic number: return date.Year + "-" + date.Month.ToString().PadLeft(2' '0') + "-" + date.Day.ToString().PadLeft(2' '0') + "T" +                  date.Hour.ToString().PadLeft(2' '0') + ":" + date.Minute.ToString().PadLeft(2' '0') + ":" + date.Second.ToString().PadLeft(2' '0') + "Z";
Magic Number,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,format_date,The following statement contains a magic number: return date.Year + "-" + date.Month.ToString().PadLeft(2' '0') + "-" + date.Day.ToString().PadLeft(2' '0') + "T" +                  date.Hour.ToString().PadLeft(2' '0') + ":" + date.Minute.ToString().PadLeft(2' '0') + ":" + date.Second.ToString().PadLeft(2' '0') + "Z";
Magic Number,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,format_date,The following statement contains a magic number: return date.Year + "-" + date.Month.ToString().PadLeft(2' '0') + "-" + date.Day.ToString().PadLeft(2' '0') + "T" +                  date.Hour.ToString().PadLeft(2' '0') + ":" + date.Minute.ToString().PadLeft(2' '0') + ":" + date.Second.ToString().PadLeft(2' '0') + "Z";
Magic Number,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,format_date,The following statement contains a magic number: return date.Year + "-" + date.Month.ToString().PadLeft(2' '0') + "-" + date.Day.ToString().PadLeft(2' '0') + "T" +                  date.Hour.ToString().PadLeft(2' '0') + ":" + date.Minute.ToString().PadLeft(2' '0') + ":" + date.Second.ToString().PadLeft(2' '0') + "Z";
Magic Number,SobekCM.Tools.FDA,FDA_Report_Writer,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Writer.cs,format_date,The following statement contains a magic number: return date.Year + "-" + date.Month.ToString().PadLeft(2' '0') + "-" + date.Day.ToString().PadLeft(2' '0') + "T" +                  date.Hour.ToString().PadLeft(2' '0') + ":" + date.Minute.ToString().PadLeft(2' '0') + ":" + date.Second.ToString().PadLeft(2' '0') + "Z";
Missing Default,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following switch statement is missing a default case: switch (thisAttribute.Name)                                          {                                              case "IEID":                                                  report_data.IEID = thisAttribute.Value;                                                  break;                                                case "INGEST_TIME":                                                  string date_string_value =                                                      thisAttribute.Value.Replace("-0400 "' "").Replace("-0500 "' "");                                                  string[] split = date_string_value.Split(" ".ToCharArray());                                                  if (split.Length == 5)                                                  {                                                      string new_date_string = split[1] + " " + split[2] + " " + split[4] +" " + split[3];                                                      DateTime report_date;                                                      if (DateTime.TryParse(new_date_string' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  else                                                  {                                                      // Just try to convert it as it is                                                      DateTime report_date;                                                      if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                          report_data.Date = report_date;                                                  }                                                  break;                                                case "PACKAGE":                                                  report_data.Package = thisAttribute.Value;                                                  break;                                          }
Missing Default,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following switch statement is missing a default case: switch (childNode.Name)                                      {                                          case "AGREEMENT_INFO":                                              if (childNode.Attributes != null)                                              {                                                  foreach (XmlAttribute thisAttribute in childNode.Attributes)                                                  {                                                      switch (thisAttribute.Name)                                                      {                                                          case "ACCOUNT":                                                              report_data.Account = thisAttribute.Value;                                                              break;                                                            case "PROJECT":                                                              report_data.Project = thisAttribute.Value;                                                              break;                                                      }                                                  }                                              }                                              break;                                            case "FILES":                                              read_file_info(childNode' report_data);                                              break;                                      }
Missing Default,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following switch statement is missing a default case: switch (thisAttribute.Name)                                                      {                                                          case "ACCOUNT":                                                              report_data.Account = thisAttribute.Value;                                                              break;                                                            case "PROJECT":                                                              report_data.Project = thisAttribute.Value;                                                              break;                                                      }
Missing Default,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following switch statement is missing a default case: switch (thisAttribute.Name)                                          {                                              case "IEID":                                                  report_data.IEID = thisAttribute.Value;                                                  break;                                                case "WITHDRAWAL_TIME":                                                      DateTime report_date;                                                      if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                          report_data.Date = report_date;                                                  break;                                                case "PACKAGE_NAME":                                                  report_data.Package = thisAttribute.Value;                                                  break;                                                case "NOTE":                                                  report_data.Message_Note = thisAttribute.Value;                                                  break;                                          }
Missing Default,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,Read,The following switch statement is missing a default case: switch (thisAttribute.Name)                                          {                                              case "REJECT_TIME":                                                  DateTime report_date;                                                  if (DateTime.TryParse(thisAttribute.Value' out report_date))                                                      report_data.Date = report_date;                                                  break;                                          }
Missing Default,SobekCM.Tools.FDA,FDA_Report_Reader,D:\research\architectureSmells\repos\MarkVSullivan_SobekCM-Web-Application\SobekCM_Tools\FDA\FDA_Report_Reader.cs,read_file_info,The following switch statement is missing a default case: switch (fileAttribute.Name)                          {                              case "DFID":                                  dfid = fileAttribute.Value;                                  break;                                case "GLOBAL":                                  global = fileAttribute.Value;                                  break;                                case "ORIGIN":                                  origin = fileAttribute.Value;                                  break;                                case "PATH":                                  path = fileAttribute.Value;                                  break;                                case "PRESERVATION":                                  preservation = fileAttribute.Value;                                  break;                                case "SIZE":                                  size = fileAttribute.Value;                                  break;                          }
