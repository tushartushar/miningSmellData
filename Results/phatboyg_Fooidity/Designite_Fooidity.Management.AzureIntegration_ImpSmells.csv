Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Fooidity.Management.AzureIntegration.UserStore.Encoding,Base32BinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\Base32BinaryEncodingParser.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,Cyclomatic complexity of the method is 8
Complex Method,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllLoginsAsync,Cyclomatic complexity of the method is 10
Complex Method,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllClaimsAsync,Cyclomatic complexity of the method is 8
Complex Method,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveFromAllRolesAsync,Cyclomatic complexity of the method is 8
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,ApplicationContextCodeFeatureStateEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\ApplicationContextCodeFeatureStateEntity.cs,ApplicationContextCodeFeatureStateEntity,The method has 7 parameters. Parameters: applicationId' contextId' contextKey' codeFeatureId' timestamp' enabled' commandId
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,ApplicationCodeFeatureStateEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\ApplicationCodeFeatureStateEntity.cs,ApplicationCodeFeatureStateEntity,The method has 5 parameters. Parameters: applicationId' codeFeatureId' timestamp' enabled' commandId
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,OrganizationApplicationKeyEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\OrganizationApplicationKeyEntity.cs,OrganizationApplicationKeyEntity,The method has 6 parameters. Parameters: key' organizationId' organizationName' applicationId' applicationName' timestamp
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,KeyOrganizationApplicationIndexEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\KeyOrganizationApplicationIndexEntity.cs,KeyOrganizationApplicationIndexEntity,The method has 6 parameters. Parameters: key' organizationId' organizationName' applicationId' applicationName' timestamp
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,OrganizationApplicationIndexEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\OrganizationApplicationIndexEntity.cs,OrganizationApplicationIndexEntity,The method has 5 parameters. Parameters: organizationId' organizationName' applicationId' applicationName' timestamp
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,UserApplicationIndexEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\UserApplicationIndexEntity.cs,UserApplicationIndexEntity,The method has 6 parameters. Parameters: userId' organizationId' organizationName' applicationId' applicationName' timestamp
Long Parameter List,Fooidity.Management.AzureIntegration.Entities,UserOrganizationIndexEntity,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\Entities\UserOrganizationIndexEntity.cs,UserOrganizationIndexEntity,The method has 6 parameters. Parameters: timestamp' userId' organizationId' organizationName' createdByUserId' active
Long Parameter List,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,TableUserStore,The method has 8 parameters. Parameters: tableProvider' userTableName' userNameIndexTableName' userLoginTableName' userLoginProviderKeyIndexTableName' userClaimTableName' userRoleTableName' userEmailIndexTableName
Long Identifier,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,TableUserStore,The length of the parameter userLoginProviderKeyIndexTableName is 34.
Long Identifier,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,,The length of the parameter _userLoginProviderKeyIndexTable is 31.
Long Statement,Fooidity.Management.AzureIntegration.CommandHandlers,CreateApplicationCommandHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\CommandHandlers\CreateApplicationCommandHandler.cs,Execute,The length of the statement  "                await _organizationQueryHandler.Execute(new GetOrganization(command.UserId' command.OrganizationId)' cancellationToken); " is 120.
Long Statement,Fooidity.Management.AzureIntegration.CommandHandlers,CreateApplicationCommandHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\CommandHandlers\CreateApplicationCommandHandler.cs,Execute,The length of the statement  "            var indexEntity = new OrganizationApplicationIndexEntity(organization.OrganizationId' organization.OrganizationName' appEntity.Id' command.ApplicationName' " is 155.
Long Statement,Fooidity.Management.AzureIntegration.CommandHandlers,CreateApplicationCommandHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\CommandHandlers\CreateApplicationCommandHandler.cs,Execute,The length of the statement  "            var userIndexEntity = new UserApplicationIndexEntity(command.UserId' organization.OrganizationId' organization.OrganizationName' appEntity.Id' command.ApplicationName' " is 167.
Long Statement,Fooidity.Management.AzureIntegration.CommandHandlers,CreateApplicationKeyCommandHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\CommandHandlers\CreateApplicationKeyCommandHandler.cs,Execute,The length of the statement  "            var indexEntity = new KeyOrganizationApplicationIndexEntity(key' application.OrganizationId' application.OrganizationName' " is 122.
Long Statement,Fooidity.Management.AzureIntegration.CommandHandlers,UpdateApplicationCodeFeatureStateCommandHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\CommandHandlers\UpdateApplicationCodeFeatureStateCommandHandler.cs,Execute,The length of the statement  "            Task<IApplicationCodeFeatureStateUpdated> eventTask = Task.FromResult<IApplicationCodeFeatureStateUpdated>(updateEvent); " is 120.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetApplicationKeyQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetApplicationKeyQueryHandler.cs,Execute,The length of the statement  "            TableQuery<KeyOrganizationApplicationIndexEntity> userAppQuery = new TableQuery<KeyOrganizationApplicationIndexEntity>() " is 120.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetApplicationQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetApplicationQueryHandler.cs,Execute,The length of the statement  "                .Where(TableQuery.CombineFilters(TableQuery.GenerateFilterCondition("PartitionKey"' QueryComparisons.Equal' query.UserId)' " is 122.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetApplicationQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetApplicationQueryHandler.cs,Execute,The length of the statement  "                    TableOperators.And' TableQuery.GenerateFilterCondition("RowKey"' QueryComparisons.Equal' query.ApplicationId))).Take(1); " is 120.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetApplicationQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetApplicationQueryHandler.cs,Execute,The length of the statement  "            IEnumerable<UserApplicationIndexEntity> userApps = await userAppIndexTable.ExecuteQueryAsync(userAppQuery' cancellationToken); " is 126.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetCodeFeatureDetailQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetCodeFeatureDetailQueryHandler.cs,Execute,The length of the statement  "            return new CodeFeatureDetail(application.ApplicationId' application.ApplicationName' new CodeFeatureId(query.CodeFeatureId)' " is 124.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetOrganizationQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetOrganizationQueryHandler.cs,Execute,The length of the statement  "                .Where(TableQuery.CombineFilters(TableQuery.GenerateFilterCondition("PartitionKey"' QueryComparisons.Equal' query.UserId)' " is 122.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetOrganizationQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetOrganizationQueryHandler.cs,Execute,The length of the statement  "                    TableOperators.And' TableQuery.GenerateFilterCondition("RowKey"' QueryComparisons.Equal' query.OrganizationId))).Take(1); " is 121.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,GetOrganizationQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\GetOrganizationQueryHandler.cs,Execute,The length of the statement  "            IEnumerable<OrganizationEntity> organizations = await organizationTable.ExecuteQueryAsync(organizationQuery' cancellationToken); " is 128.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,ListApplicationKeysQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\ListApplicationKeysQueryHandler.cs,Execute,The length of the statement  "            return await appKeyTable.ExecutePartitionKeyQueryAsync<OrganizationApplicationKeyEntity>(query.ApplicationId' cancellationToken); " is 129.
Long Statement,Fooidity.Management.AzureIntegration.QueryHandlers,ListOrganizationsQueryHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\QueryHandlers\ListOrganizationsQueryHandler.cs,Execute,The length of the statement  "            return cloudTable.ExecuteQueryAsync(indexQuery' x => (IOrganization)new OrganizationResult(x.OrganizationId' x.OrganizationName)' " is 129.
Long Statement,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,AddLoginAsync,The length of the statement  "            var userLoginProviderKeyIndex = new UserLoginProviderKeyIndexEntity(user.Id' userLogin.ProviderKey' userLogin.LoginProvider); " is 125.
Long Statement,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveLoginAsync,The length of the statement  "            var userLoginProviderKeyIndex = new UserLoginProviderKeyIndexEntity(user.Id' userLogin.ProviderKey' userLogin.LoginProvider) " is 124.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,CreateAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,DeleteAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,DeleteAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,DeleteAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,DeleteAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllLoginsAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllLoginsAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllClaimsAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllClaimsAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveFromAllRolesAsync,The method has an empty catch block.
Empty Catch Block,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveFromAllRolesAsync,The method has an empty catch block.
Magic Number,Fooidity.Management.AzureIntegration.CommandHandlers,CreateApplicationKeyCommandHandler,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\CommandHandlers\CreateApplicationKeyCommandHandler.cs,GenerateKey,The following statement contains a magic number: using (var cryptoServiceProvider = new RNGCryptoServiceProvider())              {                  var data = new byte[2048];                  cryptoServiceProvider.GetBytes(data);                    return data.ToSha256();              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,Base32BinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\Base32BinaryEncodingFormatter.cs,Base32BinaryEncodingFormatter,The following statement contains a magic number: if (chars.Length != 32)                  throw new ArgumentException("The character string must be exactly 32 characters");
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,Base32BinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\Base32BinaryEncodingParser.cs,Base32BinaryEncodingParser,The following statement contains a magic number: if (chars.Length % 32 != 0)                  throw new ArgumentException("The characters must be a multiple of 32");
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,Base32BinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\Base32BinaryEncodingParser.cs,Parse,The following statement contains a magic number: while (outputIndex < bytes.Length)              {                  int currentBase32Byte = _chars.IndexOf(input[inputIndex]);                  if (currentBase32Byte < 0)                      throw new ArgumentException(string.Format("Invalid input string (unknown character \'{0}\')"' input[inputIndex]));                    currentBase32Byte %= 32;                    int bitsAvailableInByte = Math.Min(Base32ByteSize - inputSubIndex' ByteSize - outputSubIndex);                    bytes[outputIndex] <<= bitsAvailableInByte;                    bytes[outputIndex] |= (byte)(currentBase32Byte >> (Base32ByteSize - (inputSubIndex + bitsAvailableInByte)));                    outputSubIndex += bitsAvailableInByte;                  if (outputSubIndex >= ByteSize)                  {                      outputIndex++;                      outputSubIndex = 0;                  }                    inputSubIndex += bitsAvailableInByte;                  if (inputSubIndex >= Base32ByteSize)                  {                      inputIndex++;                      inputSubIndex = 0;                  }              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,HashedHexBinaryEncodingFormatter,The following statement contains a magic number: if (prefix == '\0' || suffix == '\0')                  _length = 36;              else              {                  _prefix = prefix;                  _suffix = suffix;                  _length = 38;              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,HashedHexBinaryEncodingFormatter,The following statement contains a magic number: if (prefix == '\0' || suffix == '\0')                  _length = 36;              else              {                  _prefix = prefix;                  _suffix = suffix;                  _length = 38;              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 4; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 4; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 6; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 6; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 8; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 8; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 10; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 10; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 16; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (; i < 16; i++)              {                  int value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,HexToChar,The following statement contains a magic number: return (char)((value > 9) ? value - 10 + alpha : value + 0x30);
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HashedHexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HashedHexBinaryEncodingFormatter.cs,HexToChar,The following statement contains a magic number: return (char)((value > 9) ? value - 10 + alpha : value + 0x30);
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: var result = new char[bytes.Length * 2];
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingFormatter.cs,Format,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)              {                  byte value = bytes[i];                  result[offset++] = HexToChar(value >> 4' _alpha);                  result[offset++] = HexToChar(value' _alpha);              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingFormatter.cs,HexToChar,The following statement contains a magic number: return (char)((value > 9) ? value - 10 + alpha : value + 0x30);
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingFormatter,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingFormatter.cs,HexToChar,The following statement contains a magic number: return (char)((value > 9) ? value - 10 + alpha : value + 0x30);
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingParser.cs,Parse,The following statement contains a magic number: if (input.Length % 2 == 1)                  throw new Exception("The binary key cannot have an odd number of digits");
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingParser.cs,Parse,The following statement contains a magic number: for (int i = 0; i < input.Length >> 1; ++i)                  result[i] = (byte)((GetHexVal(input[i << 1]) << 4) + (GetHexVal(input[(i << 1) + 1])));
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingParser.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : 55);
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingParser.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : 55);
Magic Number,Fooidity.Management.AzureIntegration.UserStore.Encoding,HexBinaryEncodingParser,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\Encoding\HexBinaryEncodingParser.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : 55);
Magic Number,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,CreateAsync,The following statement contains a magic number: try              {                  await _userNameIndexTable.ExecuteAsync(indexOperation);              }              catch (StorageException ex)              {                  if (ex.RequestInformation.HttpStatusCode == 409)                      throw new DuplicateUsernameException();                    throw;              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,CreateAsync,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace(user.Email))              {                  var userEmailIndexEntity = new UserEmailIndexEntity(user.Email.ToSha256()' user.Id);                  TableOperation emailIndexOperation = TableOperation.Insert(userEmailIndexEntity);                  try                  {                      await _userEmailIndexTable.ExecuteAsync(emailIndexOperation);                  }                  catch (StorageException ex)                  {                      try                      {                          userNameIndex.ETag = "*";                          TableOperation deleteOperation = TableOperation.Delete(userNameIndex);                          _userNameIndexTable.ExecuteAsync(deleteOperation).Wait();                      }                      catch (Exception)                      {                          // if we can't delete the index item throw out the exception below                      }                        if (ex.RequestInformation.HttpStatusCode == 409)                          throw new DuplicateEmailException();                      throw;                  }              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllLoginsAsync,The following statement contains a magic number: foreach (UserLoginEntity login in Logins)              {                  login.ETag = "*"; //Delete even if it has changed                  batch.Add(TableOperation.Delete(login));                  var providerKeyIndex = new UserLoginProviderKeyIndexEntity(user.Id' login.ProviderKey' login.LoginProvider);                  providerKeyIndex.ETag = "*";                  batchIndex.Add(TableOperation.Delete(providerKeyIndex));                    if (batch.Count >= 100 || batchIndex.Count >= 100)                  {                      try                      {                          //Try executing as a batch                          await _userLoginTable.ExecuteBatchAsync(batch);                          batch.Clear();                      }                      catch                      {                      }                        //If a batch wont work' try individually                      foreach (TableOperation op in batch)                      {                          try                          {                              await _userLoginTable.ExecuteAsync(op);                          }                          catch                          {                              error = true;                          }                      }                        //Delete the index individually becase of the partition keys                      foreach (TableOperation op in batchIndex)                      {                          try                          {                              await _userLoginProviderKeyIndexTable.ExecuteAsync(op);                          }                          catch                          {                              error = true;                          }                      }                        batch.Clear();                      batchIndex.Clear();                  }              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllLoginsAsync,The following statement contains a magic number: foreach (UserLoginEntity login in Logins)              {                  login.ETag = "*"; //Delete even if it has changed                  batch.Add(TableOperation.Delete(login));                  var providerKeyIndex = new UserLoginProviderKeyIndexEntity(user.Id' login.ProviderKey' login.LoginProvider);                  providerKeyIndex.ETag = "*";                  batchIndex.Add(TableOperation.Delete(providerKeyIndex));                    if (batch.Count >= 100 || batchIndex.Count >= 100)                  {                      try                      {                          //Try executing as a batch                          await _userLoginTable.ExecuteBatchAsync(batch);                          batch.Clear();                      }                      catch                      {                      }                        //If a batch wont work' try individually                      foreach (TableOperation op in batch)                      {                          try                          {                              await _userLoginTable.ExecuteAsync(op);                          }                          catch                          {                              error = true;                          }                      }                        //Delete the index individually becase of the partition keys                      foreach (TableOperation op in batchIndex)                      {                          try                          {                              await _userLoginProviderKeyIndexTable.ExecuteAsync(op);                          }                          catch                          {                              error = true;                          }                      }                        batch.Clear();                      batchIndex.Clear();                  }              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllClaimsAsync,The following statement contains a magic number: foreach (UserClaimEntity claim in Claims)              {                  claim.ETag = "*"; //Delete even it has changed                  batch.Add(TableOperation.Delete(claim));                  if (batch.Count >= 100)                  {                      try                      {                          //Try executing as a batch                          await _userClaimTable.ExecuteBatchAsync(batch);                          batch.Clear();                      }                      catch                      {                      }                          //If a batch wont work' try individually                      foreach (TableOperation op in batch)                      {                          try                          {                              await _userClaimTable.ExecuteAsync(op);                          }                          catch                          {                              error = true;                          }                      }                        batch.Clear();                  }              }
Magic Number,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveFromAllRolesAsync,The following statement contains a magic number: foreach (UserRoleEntity role in Roles)              {                  role.ETag = "*"; //Delete even if it has changed                  batch.Add(TableOperation.Delete(role));                  if (batch.Count >= 100)                  {                      try                      {                          //Try executing as a batch                          await _userRoleTable.ExecuteBatchAsync(batch);                          batch.Clear();                      }                      catch                      {                      }                        //If a batch wont work' try individually                      foreach (TableOperation op in batch)                      {                          try                          {                              await _userRoleTable.ExecuteAsync(op);                          }                          catch                          {                              error = true;                          }                      }                        batch.Clear();                  }              }
Duplicate Code,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllLoginsAsync,The method contains a code clone-set at the following line numbers (starting from the method definition): ((26' 61)' (68' 103))
Duplicate Code,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveAllClaimsAsync,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 44)' (50' 73))
Duplicate Code,Fooidity.Management.AzureIntegration.UserStore,TableUserStore<T>,C:\repos\phatboyg_Fooidity\src\Fooidity.Management.AzureIntegration\UserStore\TableUserStore.cs,RemoveFromAllRolesAsync,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 43)' (49' 71))
