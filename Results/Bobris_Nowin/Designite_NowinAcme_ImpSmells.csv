Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,RedirectToHttps,The length of the statement  "	var loc = "https://" + ((IDictionary<string' string[]>)env ["owin.RequestHeaders"]) ["Host"].First () + env ["owin.RequestPath"] + (query.Length > 0 ? "?" + query : ""); " is 169.
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,RedirectToHttps,The following statement contains a magic number: env ["owin.ResponseStatusCode"] = 301;  
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,Use,The following statement contains a magic number: updateWorker = async task => {  	var utcNow = DateTime.UtcNow;  	var lastUpdate = cfg.LastUpdate;  	if (utcNow - lastUpdate > TimeSpan.FromDays (30)) {  		await new AcmeProcess (cfg.Email' cfg.Domain' cfg.UpdateCertificate' (path' content) => {  			Log.Info ();  			challengePath = path;  			challengeContent = content;  		}).StartAsync ();  	}  	#pragma  	// This cannot be awaited because it has to run once in a while without holding any resources.  	// ReSharper disable once AssignNullToNotNullAttribute  	Task.Delay (TimeSpan.FromMinutes (15)).ContinueWith (updateWorker);  	#pragma  };  
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,Use,The following statement contains a magic number: updateWorker = async task => {  	var utcNow = DateTime.UtcNow;  	var lastUpdate = cfg.LastUpdate;  	if (utcNow - lastUpdate > TimeSpan.FromDays (30)) {  		await new AcmeProcess (cfg.Email' cfg.Domain' cfg.UpdateCertificate' (path' content) => {  			Log.Info ();  			challengePath = path;  			challengeContent = content;  		}).StartAsync ();  	}  	#pragma  	// This cannot be awaited because it has to run once in a while without holding any resources.  	// ReSharper disable once AssignNullToNotNullAttribute  	Task.Delay (TimeSpan.FromMinutes (15)).ContinueWith (updateWorker);  	#pragma  };  
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,Use,The following statement contains a magic number: updateWorker = async task => {  	var utcNow = DateTime.UtcNow;  	var lastUpdate = cfg.LastUpdate;  	if (utcNow - lastUpdate > TimeSpan.FromDays (30)) {  		await new AcmeProcess (cfg.Email' cfg.Domain' cfg.UpdateCertificate' (path' content) => {  			Log.Info ();  			challengePath = path;  			challengeContent = content;  		}).StartAsync ();  	}  	#pragma  	// This cannot be awaited because it has to run once in a while without holding any resources.  	// ReSharper disable once AssignNullToNotNullAttribute  	Task.Delay (TimeSpan.FromMinutes (15)).ContinueWith (updateWorker);  	#pragma  };  
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,Use,The following statement contains a magic number: updateWorker = async task => {  	var utcNow = DateTime.UtcNow;  	var lastUpdate = cfg.LastUpdate;  	if (utcNow - lastUpdate > TimeSpan.FromDays (30)) {  		await new AcmeProcess (cfg.Email' cfg.Domain' cfg.UpdateCertificate' (path' content) => {  			Log.Info ();  			challengePath = path;  			challengeContent = content;  		}).StartAsync ();  	}  	#pragma  	// This cannot be awaited because it has to run once in a while without holding any resources.  	// ReSharper disable once AssignNullToNotNullAttribute  	Task.Delay (TimeSpan.FromMinutes (15)).ContinueWith (updateWorker);  	#pragma  };  
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,Use,The following statement contains a magic number: if (utcNow - lastUpdate > TimeSpan.FromDays (30)) {  	await new AcmeProcess (cfg.Email' cfg.Domain' cfg.UpdateCertificate' (path' content) => {  		Log.Info ();  		challengePath = path;  		challengeContent = content;  	}).StartAsync ();  }  
Magic Number,NowinAcme,NowinAcme,F:\newReposMay17\Bobris_Nowin\NowinAcme\NowinAcme.cs,Use,The following statement contains a magic number: Task.Delay (TimeSpan.FromMinutes (15)).ContinueWith (updateWorker);  
