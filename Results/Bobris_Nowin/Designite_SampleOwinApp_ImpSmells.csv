Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Map("/echo"' a => a.Run(c =>              {                  var accept = c.Get<WebSocketAccept>("websocket.Accept");                  if (accept == null)                  {                      c.Response.StatusCode = 500;                      return Task.Delay(0);                  }                  accept(                      null'                      async wsEnv =>                      {                          var sendAsync = wsEnv.Get<WebSocketSendAsync>("websocket.SendAsync");                          var receiveAsync = wsEnv.Get<WebSocketReceiveAsync>("websocket.ReceiveAsync");                          var closeAsync = wsEnv.Get<WebSocketCloseAsync>("websocket.CloseAsync");                            var buffer = new ArraySegment<byte>(new byte[1000]);                          var serverReceive = await receiveAsync(buffer' CancellationToken.None);                          await sendAsync(new ArraySegment<byte>(buffer.Array' 0' serverReceive.Item3)'                              serverReceive.Item1' serverReceive.Item2' CancellationToken.None);                          await closeAsync((int)WebSocketCloseStatus.NormalClosure' "Closing"' CancellationToken.None);                      });                    return Task.Delay(0);              }));
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Map("/echo"' a => a.Run(c =>              {                  var accept = c.Get<WebSocketAccept>("websocket.Accept");                  if (accept == null)                  {                      c.Response.StatusCode = 500;                      return Task.Delay(0);                  }                  accept(                      null'                      async wsEnv =>                      {                          var sendAsync = wsEnv.Get<WebSocketSendAsync>("websocket.SendAsync");                          var receiveAsync = wsEnv.Get<WebSocketReceiveAsync>("websocket.ReceiveAsync");                          var closeAsync = wsEnv.Get<WebSocketCloseAsync>("websocket.CloseAsync");                            var buffer = new ArraySegment<byte>(new byte[1000]);                          var serverReceive = await receiveAsync(buffer' CancellationToken.None);                          await sendAsync(new ArraySegment<byte>(buffer.Array' 0' serverReceive.Item3)'                              serverReceive.Item1' serverReceive.Item2' CancellationToken.None);                          await closeAsync((int)WebSocketCloseStatus.NormalClosure' "Closing"' CancellationToken.None);                      });                    return Task.Delay(0);              }));
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
Magic Number,SampleOwinApp,Startup,C:\repos\Bobris_Nowin\SampleOwinApp\Sample.cs,Configuration,The following statement contains a magic number: app.Run(async c =>                  {                      var path = c.Request.Path.Value;                      if (path == "/")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/plain";                          c.Response.Write("Hello World!");                          return;                      }                      if (path == "/sse")                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = "text/event-stream";                          c.Response.Headers.Add("Cache-Control"' new[] { "no-cache" });                          for (int i = 0; i < 10; i++)                          {                              await c.Response.WriteAsync("data: " + i.ToString() + "\n\n");                              await c.Response.Body.FlushAsync();                              await Task.Delay(500);                          }                          await c.Response.WriteAsync("data: Finish!\n\n");                          return;                      }                      if (path.Contains(".."))                      {                          // hackers ..                          c.Response.StatusCode = 500;                          return;                      }                      var p = Path.Combine(@"..\..\..\SampleOwinApp\"' path.Substring(1));                      if (File.Exists(p))                      {                          c.Response.StatusCode = 200;                          c.Response.ContentType = p.EndsWith(".js") ? "application/javascript" : "text/html";                          await c.Response.WriteAsync(File.ReadAllBytes(p));                          return;                      }                      c.Response.StatusCode = 404;                      return;                  });
