Implementation smell,Namespace,Class,File,Method,Description
Long Method,Blacker.MangaScraper.Library.DAL,StorageDAL,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\DAL\StorageDAL.cs,StoreChapterInfo,The method has 69 lines of code.
Complex Method,Blacker.MangaScraper.Library.DAL,StorageDAL,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\DAL\StorageDAL.cs,StoreChapterInfo,Cyclomatic complexity of the method is 13
Complex Method,Blacker.MangaScraper.Library.DAL,StorageDAL,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\DAL\StorageDAL.cs,UpdateScrapers,Cyclomatic complexity of the method is 8
Complex Method,Blacker.MangaScraper.Library.DAL,StorageDAL,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\DAL\StorageDAL.cs,GetRecentFolders,Cyclomatic complexity of the method is 9
Complex Method,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,Cyclomatic complexity of the method is 12
Complex Method,Blacker.MangaScraper.Library.SQLite,SQLiteDALBase,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SQLiteDALBase.cs,ExecuteDataTable,Cyclomatic complexity of the method is 9
Long Statement,Blacker.MangaScraper.Library.DAL,StorageDAL,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\DAL\StorageDAL.cs,GetChaptersInfo,The length of the statement  "	return GetChaptersInfo ("ch.ChapterName GLOB @SearchString OR m.MangaName GLOB @SearchString"' new Dictionary<string' object> () { " is 130.
Long Statement,Blacker.MangaScraper.Library.DAL,StorageDAL,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\DAL\StorageDAL.cs,GetRecentFolders,The length of the statement  "	const string sql = @"SELECT DownloadFolder FROM Chapters WHERE ScraperId=@ScraperId AND MangaId=@MangaId ORDER BY Downloaded DESC LIMIT 5"; " is 139.
Long Statement,Blacker.MangaScraper.Library.SQLite,SchemaManager,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaManager.cs,CheckSchema,The length of the statement  "		throw new InvalidOperationException (String.Format ("Unsupported schema version. Database uses newer schema ({0}) than application ({1})."' version' SchemaVersion)); " is 165.
Long Statement,Blacker.MangaScraper.Library.SQLite,SchemaManager,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaManager.cs,CheckSchema,The length of the statement  "		IDictionary<long' ISchemaMigrator> migrators = ReflectionHelper.GetInstances<ISchemaMigrator> (this.GetType ().Assembly' Enumerable.Empty<Type> ()).ToDictionary (sm => sm.FromVersion); " is 184.
Long Statement,Blacker.MangaScraper.Library.SQLite,SchemaManager,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaManager.cs,BackupDatabase,The length of the statement  "		string dataSource = Path.Combine (Path.GetDirectoryName (LibraryConfiguration.Instance.StoragePath) ?? String.Empty' backupName); " is 129.
Long Statement,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The length of the statement  "		const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;"; " is 125.
Long Statement,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The length of the statement  "		const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId) " is 154.
Long Statement,Blacker.MangaScraper.Library.SQLite,SQLiteDALBase,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SQLiteDALBase.cs,GetDBSafeDateTime,The length of the statement  "	return (DateTime)(date < (DateTime)SqlDateTime.MinValue ? SqlDateTime.MinValue : (date > (DateTime)SqlDateTime.MaxValue ? SqlDateTime.MaxValue : date)); " is 152.
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaManager,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaManager.cs,BackupDatabase,The following statement contains a magic number: try {  	string dataSource = Path.Combine (Path.GetDirectoryName (LibraryConfiguration.Instance.StoragePath) ?? String.Empty' backupName);  	var connectionStringBuilder = new SQLiteConnectionStringBuilder () {  		DataSource = dataSource'  		Version = 3'  		//Set page size to NTFS cluster size = 4096 bytes  		PageSize = 4096'  		CacheSize = 10000'  		JournalMode = SQLiteJournalModeEnum.Wal'  		Pooling = true'  		ForeignKeys = true'  		LegacyFormat = false'  		FailIfMissing = false  	};  	using (var backupConnection = new SQLiteConnection (connectionStringBuilder.ToString ())) {  		backupConnection.Open ();  		connection.BackupDatabase (backupConnection' "main"' "main"' -1' null' -1);  	}  	return true;  } catch (Exception ex) {  	_log.Error ("Unable to backup database."' ex);  	return false;  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaManager,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaManager.cs,BackupDatabase,The following statement contains a magic number: try {  	string dataSource = Path.Combine (Path.GetDirectoryName (LibraryConfiguration.Instance.StoragePath) ?? String.Empty' backupName);  	var connectionStringBuilder = new SQLiteConnectionStringBuilder () {  		DataSource = dataSource'  		Version = 3'  		//Set page size to NTFS cluster size = 4096 bytes  		PageSize = 4096'  		CacheSize = 10000'  		JournalMode = SQLiteJournalModeEnum.Wal'  		Pooling = true'  		ForeignKeys = true'  		LegacyFormat = false'  		FailIfMissing = false  	};  	using (var backupConnection = new SQLiteConnection (connectionStringBuilder.ToString ())) {  		backupConnection.Open ();  		connection.BackupDatabase (backupConnection' "main"' "main"' -1' null' -1);  	}  	return true;  } catch (Exception ex) {  	_log.Error ("Unable to backup database."' ex);  	return false;  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaManager,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaManager.cs,BackupDatabase,The following statement contains a magic number: try {  	string dataSource = Path.Combine (Path.GetDirectoryName (LibraryConfiguration.Instance.StoragePath) ?? String.Empty' backupName);  	var connectionStringBuilder = new SQLiteConnectionStringBuilder () {  		DataSource = dataSource'  		Version = 3'  		//Set page size to NTFS cluster size = 4096 bytes  		PageSize = 4096'  		CacheSize = 10000'  		JournalMode = SQLiteJournalModeEnum.Wal'  		Pooling = true'  		ForeignKeys = true'  		LegacyFormat = false'  		FailIfMissing = false  	};  	using (var backupConnection = new SQLiteConnection (connectionStringBuilder.ToString ())) {  		backupConnection.Open ();  		connection.BackupDatabase (backupConnection' "main"' "main"' -1' null' -1);  	}  	return true;  } catch (Exception ex) {  	_log.Error ("Unable to backup database."' ex);  	return false;  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var transaction = connection.BeginTransaction ()) {  	// create temporary table  	using (var cmd = new SQLiteCommand (ChaptersTableDefinition' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	const string selectQuery = @"SELECT ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' IsZip FROM Chapters;";  	const string insertQuery = @"INSERT INTO ChaptersTemp(ScraperId' MangaId' ChapterId' ChapterName' Url' Downloaded' Path' DownloadFolder' FormatProviderId)                                                  VALUES (@ScraperId' @MangaId' @ChapterId' @ChapterName' @Url' @Downloaded' @Path' @DownloadFolder' @FormatProviderId)";  	using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  		using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  			using (IDataReader reader = selectCommand.ExecuteReader ()) {  				while (reader.Read ()) {  					string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  					bool isZip = reader.GetBoolean (7);  					insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  					insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  					insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  					insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  					insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  					insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  					insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  					insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  					insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  					insertCommand.ExecuteNonQuery ();  				}  			}  	const string finalizeQuery = @"DROP TABLE Chapters;                                                ALTER TABLE ChaptersTemp RENAME TO Chapters;                                                PRAGMA user_version = 2;";  	using (var cmd = new SQLiteCommand (finalizeQuery' connection' transaction)) {  		cmd.ExecuteNonQuery ();  	}  	transaction.Commit ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var selectCommand = new SQLiteCommand (selectQuery' connection' transaction))  	using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  		using (IDataReader reader = selectCommand.ExecuteReader ()) {  			while (reader.Read ()) {  				string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  				bool isZip = reader.GetBoolean (7);  				insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  				insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  				insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  				insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  				insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  				insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  				insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  				insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  				insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  				insertCommand.ExecuteNonQuery ();  			}  		}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (var insertCommand = new SQLiteCommand (insertQuery' connection' transaction))  	using (IDataReader reader = selectCommand.ExecuteReader ()) {  		while (reader.Read ()) {  			string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  			bool isZip = reader.GetBoolean (7);  			insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  			insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  			insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  			insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  			insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  			insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  			insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  			insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  			insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  			insertCommand.ExecuteNonQuery ();  		}  	}  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: using (IDataReader reader = selectCommand.ExecuteReader ()) {  	while (reader.Read ()) {  		string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  		bool isZip = reader.GetBoolean (7);  		insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  		insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  		insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  		insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  		insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  		insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  		insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  		insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  		insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  		insertCommand.ExecuteNonQuery ();  	}  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: while (reader.Read ()) {  	string downloadFolder = Path.GetDirectoryName (reader.GetString (6));  	bool isZip = reader.GetBoolean (7);  	insertCommand.Parameters.AddWithValue ("@ScraperId"' reader.GetValue (0));  	insertCommand.Parameters.AddWithValue ("@MangaId"' reader.GetValue (1));  	insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  	insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  	insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  	insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  	insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  	insertCommand.Parameters.AddWithValue ("@DownloadFolder"' downloadFolder);  	insertCommand.Parameters.AddWithValue ("@FormatProviderId"' isZip ? ZipFormatProviderId : FolderFormatProviderId);  	insertCommand.ExecuteNonQuery ();  }  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: insertCommand.Parameters.AddWithValue ("@ChapterId"' reader.GetValue (2));  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: insertCommand.Parameters.AddWithValue ("@ChapterName"' reader.GetValue (3));  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: insertCommand.Parameters.AddWithValue ("@Url"' reader.GetValue (4));  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: insertCommand.Parameters.AddWithValue ("@Downloaded"' reader.GetValue (5));  
Magic Number,Blacker.MangaScraper.Library.SQLite,SchemaMigratorFromV1,D:\newReposJune17\blacker-cz_MangaScraper\Blacker.MangaScraper.Library\SQLite\SchemaMigratorFromV1.cs,Migrate,The following statement contains a magic number: insertCommand.Parameters.AddWithValue ("@Path"' reader.GetValue (6));  
