Implementation smell,Namespace,Class,File,Method,Description
Long Method,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The method has 178 lines of code.
Long Method,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The method has 102 lines of code.
Long Method,StyleCop.Analyzers.Helpers,SymbolNameHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SymbolNameHelpers.cs,AppendQualifiedSymbolName,The method has 101 lines of code.
Long Method,StyleCop.Analyzers.LayoutRules,BracesVisitor,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1513ClosingBraceMustBeFollowedByBlankLine.cs,AnalyzeCloseBrace,The method has 104 lines of code.
Long Method,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The method has 105 lines of code.
Long Method,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The method has 213 lines of code.
Long Method,StyleCop.Analyzers.ReadabilityRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1121UseBuiltInTypeAlias.cs,HandleIdentifierNameSyntax,The method has 116 lines of code.
Long Method,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The method has 157 lines of code.
Long Method,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,The method has 147 lines of code.
Complex Method,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleDeclaration,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,Cyclomatic complexity of the method is 26
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1604ElementDocumentationMustHaveSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1604ElementDocumentationMustHaveSummary.cs,HandleXmlElement,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleXmlElement,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleCompleteDocumentation,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDeclaration,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1629DocumentationTextMustEndWithAPeriod,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1629DocumentationTextMustEndWithAPeriod.cs,HandleSectionOrBlockXmlElement,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,GetAccessLevel,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,GetDeclaredAccessibility,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,CombineEffectiveAccessibility,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.Helpers,DeclarationModifiersHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DeclarationModifiersHelper.cs,WithModifiers,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,Cyclomatic complexity of the method is 20
Complex Method,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.Helpers,MemberOrderHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.Helpers,SymbolNameHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SymbolNameHelpers.cs,AppendQualifiedSymbolName,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,IsPrecededByBlankLines,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Helpers,XmlCommentHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlCommentHelper.cs,IsConsideredEmpty,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.OrderingRules,SA1202ElementsMustBeOrderedByAccess,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1202ElementsMustBeOrderedByAccess.cs,HandleMemberList,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.OrderingRules,SA1203ConstantsMustAppearBeforeFields,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1203ConstantsMustAppearBeforeFields.cs,HandleTypeDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.OrderingRules,SA1204StaticElementsMustAppearBeforeInstanceElements,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1204StaticElementsMustAppearBeforeInstanceElements.cs,HandleMemberList,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CompareModifiersType,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.OrderingRules,SA1211UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1211UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName.cs,HandleUsingDirectives,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.OrderingRules,SA1214ReadonlyElementsMustAppearBeforeNonReadonlyElements,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1214ReadonlyElementsMustAppearBeforeNonReadonlyElements.cs,HandleTypeDeclaration,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.OrderingRules,SA1217UsingStaticDirectivesMustBeOrderedAlphabetically,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1217UsingStaticDirectivesMustBeOrderedAlphabetically.cs,CheckUsingDeclarations,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,CheckBraces,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,CheckBraceToken,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,AnalyzeOpenBrace,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.LayoutRules,BracesVisitor,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1513ClosingBraceMustBeFollowedByBlankLine.cs,AnalyzeCloseBrace,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 18
Complex Method,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadJsonValue,Cyclomatic complexity of the method is 8
Complex Method,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadString,Cyclomatic complexity of the method is 12
Complex Method,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,Cyclomatic complexity of the method is 17
Complex Method,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadObject,Cyclomatic complexity of the method is 8
Complex Method,LightJson.Serialization,JsonWriter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonWriter.cs,WriteEncodedString,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.MaintainabilityRules,SA1400AccessModifierMustBeDeclared,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1400AccessModifierMustBeDeclared.cs,CheckAccessModifiers,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.MaintainabilityRules,AnalyzerInstance,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1404CodeAnalysisSuppressionMustHaveJustification.cs,HandleAttributeNode,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.NamingRules,SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.NamingRules,SA1306FieldNamesMustBeginWithLowerCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1306FieldNamesMustBeginWithLowerCaseLetter.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.NamingRules,SA1310FieldNamesMustNotContainUnderscore,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1310FieldNamesMustNotContainUnderscore.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.NamingRules,SA1313ParameterNamesMustBeginWithLowerCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1313ParameterNamesMustBeginWithLowerCaseLetter.cs,NameMatchesAbstraction,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.NamingRules,SX1309FieldNamesMustBeginWithUnderscore,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SX1309FieldNamesMustBeginWithUnderscore.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.NamingRules,SX1309SStaticFieldNamesMustBeginWithUnderscore,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SX1309SStaticFieldNamesMustBeginWithUnderscore.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleSimpleName,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleIdentifierNameImpl,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HasThis,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.ReadabilityRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1121UseBuiltInTypeAlias.cs,HandleIdentifierNameSyntax,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1125UseShorthandForNullableTypes,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1125UseShorthandForNullableTypes.cs,HandleGenericName,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1135UsingDirectivesMustBeQualified,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1135UsingDirectivesMustBeQualified.cs,CheckUsingDeclaration,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1135UsingDirectivesMustBeQualified,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1135UsingDirectivesMustBeQualified.cs,AppendCanonicalString,Cyclomatic complexity of the method is 16
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,AddMemberAndAttributes,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleCastExpression,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Settings.ObjectModel,DocumentationSettings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\DocumentationSettings.cs,DocumentationSettings,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.Settings.ObjectModel,NamingSettings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\NamingSettings.cs,NamingSettings,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Settings.ObjectModel,StyleCopSettings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\StyleCopSettings.cs,StyleCopSettings,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1002SemicolonsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1002SemicolonsMustBeSpacedCorrectly.cs,HandleSemicolonToken,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1004DocumentationLinesMustBeginWithSingleSpace,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1004DocumentationLinesMustBeginWithSingleSpace.cs,HandleDocumentationCommentExteriorTrivia,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSingleLineCommentTrivia,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,Cyclomatic complexity of the method is 24
Complex Method,StyleCop.Analyzers.SpacingRules,SA1011ClosingSquareBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1011ClosingSquareBracketsMustBeSpacedCorrectly.cs,HandleCloseBracketToken,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.SpacingRules,SA1015ClosingGenericBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1015ClosingGenericBracketsMustBeSpacedCorrectly.cs,HandleGreaterThanToken,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.SpacingRules,SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly.cs,HandleIncrementDecrementToken,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.SpacingRules,SA1024ColonsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1024ColonsMustBeSpacedCorrectly.cs,HandleColonToken,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.SpacingRules,SA1027UseTabsCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1027UseTabsCorrectly.cs,ReportIncorrectTabUsage,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.SpacingRules,SA1027UseTabsCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1027UseTabsCorrectly.cs,LocateExcludedSpans,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1028CodeMustNotContainTrailingWhitespace,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1028CodeMustNotContainTrailingWhitespace.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 20
Long Parameter List,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDeclaration,The method has 5 parameters. Parameters: context' settings' needsComment' node' locations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleXmlElement,The method has 6 parameters. Parameters: context' needsComment' documentation' syntax' completeDocumentation' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,CheckCopyrightText,The method has 5 parameters. Parameters: context' documentationSettings' compilation' fileHeader' copyrightElement
Long Parameter List,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,CheckCompanyName,The method has 5 parameters. Parameters: context' documentationSettings' compilation' fileHeader' copyrightElement
Long Parameter List,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The method has 5 parameters. Parameters: context' documentedParameterName' index' typeParameterList' locationToReport
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertyDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertyDocumentationBase.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocation
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocation
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The method has 7 parameters. Parameters: context' syntax' diagnosticLocation' propertyDeclaration' startingTextGets' startingTextSets' startingTextGetsOrSets
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1623,The method has 7 parameters. Parameters: context' diagnosticLocation' diagnosticProperties' text' expectedStartingText' unexpectedStartingText1' unexpectedStartingText2
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1624,The method has 6 parameters. Parameters: context' diagnosticLocation' diagnosticProperties' accessor' expectedStartingText' startingTextToRemove
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1600ElementsMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1600ElementsMustBeDocumented.cs,NeedsComment,The method has 5 parameters. Parameters: documentationSettings' syntaxKind' parentSyntaxKind' declaredAccessibility' effectiveAccessibility
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1604ElementDocumentationMustHaveSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1604ElementDocumentationMustHaveSummary.cs,HandleXmlElement,The method has 6 parameters. Parameters: context' needsComment' documentation' syntax' completeDocumentation' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1605PartialElementDocumentationMustHaveSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1605PartialElementDocumentationMustHaveSummary.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1606ElementDocumentationMustHaveSummaryText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1606ElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The method has 6 parameters. Parameters: context' needsComment' documentation' syntax' completeDocumentation' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1607PartialElementDocumentationMustHaveSummaryText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1607PartialElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1608ElementDocumentationMustNotHaveDefaultSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1608ElementDocumentationMustNotHaveDefaultSummary.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1609PropertyDocumentationMustHaveValue,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1609PropertyDocumentationMustHaveValue.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocation
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1610PropertyDocumentationMustHaveValueText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1610PropertyDocumentationMustHaveValueText.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' needsComment' syntax' completeDocumentation' diagnosticLocation
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1613ElementParameterDocumentationMustDeclareParameterName,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1613ElementParameterDocumentationMustDeclareParameterName.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1614ElementParameterDocumentationMustHaveText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1614ElementParameterDocumentationMustHaveText.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1616ElementReturnValueDocumentationMustHaveText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1616ElementReturnValueDocumentationMustHaveText.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1625ElementDocumentationMustNotBeCopiedAndPasted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1625ElementDocumentationMustNotBeCopiedAndPasted.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1629DocumentationTextMustEndWithAPeriod,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1629DocumentationTextMustEndWithAPeriod.cs,HandleXmlElement,The method has 5 parameters. Parameters: context' settings' needsComment' syntaxList' diagnosticLocations
Long Parameter List,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The method has 5 parameters. Parameters: context' elementOrder' kindIndex' members' order
Long Parameter List,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The method has 5 parameters. Parameters: context' leadingTrivia' blankLineIndex' blankLineEndIndex' blankLineCount
Long Parameter List,StyleCop.Analyzers.NamingRules,SA1316TupleElementNamesShouldUseCorrectCasing,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1316TupleElementNamesShouldUseCorrectCasing.cs,CheckName,The method has 5 parameters. Parameters: context' settings' tupleElementName' location' prepareCodeFix
Long Parameter List,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,ReportDiagnostic,The method has 5 parameters. Parameters: context' token' tokenLeadingTrivia' indentation' expectedIndentation
Long Parameter List,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The method has 6 parameters. Parameters: context' token' withLeadingWhitespace' allowAtEndOfLine' withTrailingWhitespace' tokenText
Long Identifier,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,,The length of the parameter conversionOperatorDeclarationAction is 35.
Long Identifier,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,,The length of the parameter MissingParamForDocumentationMessageFormat is 41.
Long Identifier,StyleCop.Analyzers.DocumentationRules,SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes.cs,,The length of the parameter SingleLineDocumentationTriviaAction is 35.
Long Identifier,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,,The length of the parameter HandledTypeLikeDeclarationKinds is 31.
Long Identifier,StyleCop.Analyzers.Helpers,UsingDirectiveSyntaxHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\UsingDirectiveSyntaxHelpers.cs,,The length of the parameter SystemUsingDirectiveIdentifier is 30.
Long Identifier,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the parameter systemUsingDirectivesShouldBeBeforeThisName is 43.
Long Identifier,StyleCop.Analyzers.OrderingRules,SA1217UsingStaticDirectivesMustBeOrderedAlphabetically,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1217UsingStaticDirectivesMustBeOrderedAlphabetically.cs,CheckUsingDeclarations,The length of the parameter lastSystemStaticUsingDirective is 30.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,,The length of the parameter AnonymousObjectCreationExpressionAction is 39.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,,The length of the parameter AnonymousObjectCreationExpressionAction is 39.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1508ClosingBracesMustNotBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1508ClosingBracesMustNotBePrecededByBlankLine.cs,,The length of the parameter AnonymousObjectCreationExpressionAction is 39.
Long Identifier,StyleCop.Analyzers.Lightup,IFieldSymbolExtensions,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\IFieldSymbolExtensions.cs,,The length of the parameter CorrespondingTupleFieldAccessor is 31.
Long Identifier,StyleCop.Analyzers.Lightup,ITypeParameterSymbolExtensions,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\ITypeParameterSymbolExtensions.cs,,The length of the parameter HasUnmanagedTypeConstraintAccessor is 34.
Long Identifier,StyleCop.Analyzers.Lightup,RecursivePatternSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\RecursivePatternSyntaxWrapper.cs,,The length of the parameter PositionalPatternClauseAccessor is 31.
Long Identifier,StyleCop.Analyzers.Lightup,RecursivePatternSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\RecursivePatternSyntaxWrapper.cs,,The length of the parameter WithPositionalPatternClauseAccessor is 35.
Long Identifier,StyleCop.Analyzers.Lightup,RecursivePatternSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\RecursivePatternSyntaxWrapper.cs,,The length of the parameter WithPropertyPatternClauseAccessor is 33.
Long Identifier,StyleCop.Analyzers.Lightup,SwitchExpressionArmSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SwitchExpressionArmSyntaxWrapper.cs,,The length of the parameter EqualsGreaterThanTokenAccessor is 30.
Long Identifier,StyleCop.Analyzers.Lightup,SwitchExpressionArmSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SwitchExpressionArmSyntaxWrapper.cs,,The length of the parameter WithEqualsGreaterThanTokenAccessor is 34.
Long Identifier,StyleCop.Analyzers.Lightup,SwitchExpressionSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SwitchExpressionSyntaxWrapper.cs,,The length of the parameter WithGoverningExpressionAccessor is 31.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,,The length of the parameter PositionalPatternClauseAccessor1 is 32.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,,The length of the parameter PositionalPatternClauseAccessor2 is 32.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,,The length of the parameter PropertyPatternClauseAccessor1 is 30.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,,The length of the parameter PropertyPatternClauseAccessor2 is 30.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxFactsEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactsEx.cs,,The length of the parameter TryGetInferredMemberNameAccessor is 32.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxFactsEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactsEx.cs,,The length of the parameter IsReservedTupleElementNameAccessor is 34.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxKindEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxKindEx.cs,,The length of the parameter ParenthesizedVariableDesignation is 32.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxKindEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxKindEx.cs,,The length of the parameter ImplicitStackAllocArrayCreationExpression is 41.
Long Identifier,StyleCop.Analyzers.Lightup,SyntaxKindEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxKindEx.cs,,The length of the parameter SuppressNullableWarningExpression is 33.
Long Identifier,StyleCop.Analyzers.MaintainabilityRules,SA1410RemoveDelegateParenthesisWhenPossible,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1410RemoveDelegateParenthesisWhenPossible.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.MaintainabilityRules,SA1413UseTrailingCommasInMultiLineInitializers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1413UseTrailingCommasInMultiLineInitializers.cs,,The length of the parameter HandleAnonymousObjectInitializerAction is 38.
Long Identifier,StyleCop.Analyzers.MaintainabilityRules,SA1414TupleTypesInSignaturesShouldHaveElementNames,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1414TupleTypesInSignaturesShouldHaveElementNames.cs,,The length of the parameter ConversionOperatorDeclarationAction is 35.
Long Identifier,StyleCop.Analyzers.NamingRules,SA1305FieldNamesMustNotUseHungarianNotation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1305FieldNamesMustNotUseHungarianNotation.cs,,The length of the parameter SingleVariableDesignationAction is 31.
Long Identifier,StyleCop.Analyzers.NamingRules,SA1312VariableNamesMustBeginWithLowerCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1312VariableNamesMustBeginWithLowerCaseLetter.cs,,The length of the parameter SingleVariableDesignationAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,GetIdentifier,The length of the parameter objectCreationExpressionSyntax is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,,The length of the parameter ConversionOperatorDeclarationAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,,The length of the parameter ParenthesizedLambdaExpressionAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,,The length of the parameter ParenthesizedLambdaExpressionAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,,The length of the parameter ParenthesizedLambdaExpressionAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,,The length of the parameter ParenthesizedLambdaExpressionAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,,The length of the parameter ElementBindingExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1116SplitParametersMustStartOnLineAfterDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1116SplitParametersMustStartOnLineAfterDeclaration.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1116SplitParametersMustStartOnLineAfterDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1116SplitParametersMustStartOnLineAfterDeclaration.cs,,The length of the parameter ElementBindingExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1116SplitParametersMustStartOnLineAfterDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1116SplitParametersMustStartOnLineAfterDeclaration.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1116SplitParametersMustStartOnLineAfterDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1116SplitParametersMustStartOnLineAfterDeclaration.cs,,The length of the parameter ParenthesizedLambdaExpressionAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,,The length of the parameter ElementBindingExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,,The length of the parameter ParenthesizedLambdaExpressionAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1127GenericTypeConstraintsMustBeOnOwnLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1127GenericTypeConstraintsMustBeOnOwnLine.cs,,The length of the parameter TypeParameterConstraintClauseAction is 35.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1129DoNotUseDefaultValueTypeConstructor,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1129DoNotUseDefaultValueTypeConstructor.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,,The length of the parameter AnonymousMethodExpressionAction is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,HandleAnonymousObjectCreationExpression,The length of the parameter anonymousObjectCreationExpression is 33.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,,The length of the parameter AnonymousObjectCreationExpressionAction is 39.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1141UseTupleSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1141UseTupleSyntax.cs,,The length of the parameter ObjectCreationExpressionAction is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1142ReferToTupleElementsByName,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1142ReferToTupleElementsByName.cs,,The length of the parameter SimpleMemberAccessExpressionAction is 34.
Long Identifier,StyleCop.Analyzers.Settings.ObjectModel,DocumentationSettings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\DocumentationSettings.cs,,The length of the parameter DefaultExcludeFromPunctuationCheck is 34.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter RemoveEndOfLineWithTrailingSpaceTag is 35.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter MessageFormatNotFollowedByComment is 33.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter MessageFormatPrecededByWhitespace is 33.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter MessageFormatNotPrecededByWhitespace is 36.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter MessageFormatFollowedByWhitespace is 33.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter MessageFormatNotFollowedByWhitespace is 36.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,,The length of the parameter TypeParameterConstraintClauseAction is 35.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the parameter isInInterpolationAlignmentClause is 32.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the parameter isInInterpolationAlignmentClause is 32.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation.cs,,The length of the parameter ImplicitArrayCreationExpressionAction is 37.
Long Identifier,StyleCop.Analyzers.SpacingRules,SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation.cs,,The length of the parameter ImplicitStackAllocArrayCreationExpressionAction is 47.
Long Statement,StyleCop.Analyzers,SettingsHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\SettingsHelper.cs,GetStyleCopSettings,The length of the statement  "            return GetStyleCopSettings(options != null ? options.AdditionalFiles : ImmutableArray.Create<AdditionalText>()' failureBehavior' cancellationToken); " is 148.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleMethodDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleMethodDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleConstructorDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleConstructorDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDelegateDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDelegateDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleIndexerDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleIndexerDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleOperatorDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleOperatorDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleConversionOperatorDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleConversionOperatorDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleBaseTypeDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleBaseTypeDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleFieldDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleFieldDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandlePropertyDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandlePropertyDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDeclaration,The length of the statement  "                    var rawDocumentation = declaration?.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleTypeDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleTypeDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleDelegateDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleDelegateDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleMethodDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleMethodDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleConstructorDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleConstructorDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleDestructorDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleDestructorDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandlePropertyDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandlePropertyDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleIndexerDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleIndexerDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleFieldDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleFieldDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleEventDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleEventDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleDeclaration,The length of the statement  "                    var rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,CheckCopyrightText,The length of the statement  "                if (string.Equals(settingsCopyrightText' DocumentationSettings.DefaultCopyrightText' StringComparison.OrdinalIgnoreCase)) " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,CheckCompanyName,The length of the statement  "                if (string.Equals(documentationSettings.CompanyName' DocumentationSettings.DefaultCompanyName' StringComparison.OrdinalIgnoreCase)) " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleBaseTypeDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleBaseTypeDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleBaseTypeDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleMethodDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleMethodDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleMethodDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleConstructorDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleConstructorDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleConstructorDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleDestructorDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleDestructorDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleDestructorDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandlePropertyDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandlePropertyDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandlePropertyDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleIndexerDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleIndexerDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleIndexerDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleFieldDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleFieldDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleFieldDeclaration,The length of the statement  "                if (variableDeclaration != null && NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleDelegateDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleDelegateDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleDelegateDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEventDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEventDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEventDeclaration,The length of the statement  "                if (NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEventFieldDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEventFieldDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEventFieldDeclaration,The length of the statement  "                if (variableDeclaration != null && NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleBaseTypeDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleBaseTypeDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleBaseTypeDeclaration,The length of the statement  "                if (SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleMethodDeclaration,The length of the statement  "                Accessibility declaredAccessibility = declaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleMethodDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleMethodDeclaration,The length of the statement  "                if (SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEnumMemberDeclaration,The length of the statement  "                Accessibility effectiveAccessibility = declaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleEnumMemberDeclaration,The length of the statement  "                if (SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' declaration.Kind()' declaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility)) " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleSyntaxTree,The length of the statement  "                var expectedFileName = FileNameHelpers.GetConventionalFileName(firstTypeDeclaration' settings.DocumentationRules.FileNamingConvention); " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,HandleSyntaxTree,The length of the statement  "                        && string.Compare(fileName' FileNameHelpers.GetSimpleFileName(firstTypeDeclaration)' StringComparison.OrdinalIgnoreCase) == 0) " is 126.
Long Statement,StyleCop.Analyzers.DocumentationRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\FileHeaderAnalyzers.cs,GetFirstTypeDeclaration,The length of the statement  "                return root.DescendantNodes(descendIntoChildren: node => node.IsKind(SyntaxKind.CompilationUnit) || node.IsKind(SyntaxKind.NamespaceDeclaration)) " is 145.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(TypeDeclarationAction' SyntaxKind.ClassDeclaration' SyntaxKind.StructDeclaration' SyntaxKind.InterfaceDeclaration); " is 148.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "                rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 126.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "                // Check based on the documented type parameters' as we must detect scenarios where there are too many type parameters documented. " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "                // Check based on the documented type parameters' as we must detect scenarios where there are too many type parameters documented. " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The length of the statement  "            var typeParameterName = (index < typeParameterList.Parameters.Count) ? typeParameterList.Parameters[index].Identifier.ValueText : null; " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The length of the statement  "            var matchingTypeParameter = typeParameterList.Parameters.FirstOrDefault(tp => string.Equals(tp.Identifier.ValueText' documentedParameterName' StringComparison.Ordinal)); " is 169.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleTypeDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleTypeDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleMethodDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleMethodDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleDeclaration,The length of the statement  "                        rawDocumentation = declaration?.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertyDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertyDocumentationBase.cs,HandlePropertyDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertyDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertyDocumentationBase.cs,HandlePropertyDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertyDocumentationBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertyDocumentationBase.cs,HandleDeclaration,The length of the statement  "                    var rawDocumentation = declaration?.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "            string text = textElement is null ? string.Empty : XmlCommentHelper.GetText(textElement' normalizeWhitespace: true).TrimStart(); " is 128.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                    var propertyAccessibility = propertyDeclaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                        ReportSA1623(context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextGetsOrSets' unexpectedStartingText1: startingTextGets' unexpectedStartingText2: startingTextSets); " is 202.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                            ReportSA1624(context' diagnosticLocation' diagnosticProperties' accessor: "get"' expectedStartingText: startingTextGets' startingTextToRemove: startingTextGetsOrSets); " is 167.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                            ReportSA1623(context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextGets' unexpectedStartingText1: startingTextSets); " is 153.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                        ReportSA1623(context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextGets' unexpectedStartingText1: startingTextSets' unexpectedStartingText2: startingTextGetsOrSets); " is 202.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                            ReportSA1624(context' diagnosticLocation' diagnosticProperties' accessor: "set"' expectedStartingText: startingTextSets' startingTextToRemove: startingTextGetsOrSets); " is 167.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                            ReportSA1623(context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextSets' unexpectedStartingText1: startingTextGets); " is 153.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "                        ReportSA1623(context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextSets' unexpectedStartingText1: startingTextGetsOrSets' unexpectedStartingText2: startingTextGets); " is 202.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1623,The length of the statement  "            else if ((unexpectedStartingText2 != null) && text.StartsWith(unexpectedStartingText2' StringComparison.OrdinalIgnoreCase)) " is 123.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1623,The length of the statement  "            context.ReportDiagnostic(Diagnostic.Create(SA1623Descriptor' diagnosticLocation' diagnosticProperties.ToImmutable()' expectedStartingText)); " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1624,The length of the statement  "            context.ReportDiagnostic(Diagnostic.Create(SA1624Descriptor' diagnosticLocation' diagnosticProperties.ToImmutable()' accessor' expectedStartingText)); " is 150.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1605PartialElementDocumentationMustHaveSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1605PartialElementDocumentationMustHaveSummary.cs,HandleXmlElement,The length of the statement  "                var hasSummaryTag = completeDocumentation.Nodes().OfType<XElement>().Any(element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 132.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1605PartialElementDocumentationMustHaveSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1605PartialElementDocumentationMustHaveSummary.cs,HandleXmlElement,The length of the statement  "                var hasContentTag = completeDocumentation.Nodes().OfType<XElement>().Any(element => element.Name == XmlCommentHelper.ContentXmlTag); " is 132.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1606ElementDocumentationMustHaveSummaryText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1606ElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The length of the statement  "                XElement summaryNode = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 146.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1607PartialElementDocumentationMustHaveSummaryText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1607PartialElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The length of the statement  "                var summaryTag = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1607PartialElementDocumentationMustHaveSummaryText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1607PartialElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The length of the statement  "                var contentTag = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.ContentXmlTag); " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1608ElementDocumentationMustNotHaveDefaultSummary,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1608ElementDocumentationMustNotHaveDefaultSummary.cs,HandleCompleteDocumentation,The length of the statement  "            var includedSummaryElement = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 152.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1609PropertyDocumentationMustHaveValue,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1609PropertyDocumentationMustHaveValue.cs,HandleXmlElement,The length of the statement  "                var hasValueTag = completeDocumentation.Nodes().OfType<XElement>().Any(element => element.Name == XmlCommentHelper.ValueXmlTag); " is 128.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1610PropertyDocumentationMustHaveValueText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1610PropertyDocumentationMustHaveValueText.cs,HandleXmlElement,The length of the statement  "                var valueTag = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.ValueXmlTag); " is 136.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,ReportMissingParameters,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' parameter.Identifier.GetLocation()' parameter.Identifier.ValueText)); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleMethodDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleMethodDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDelegateDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = node.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDelegateDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' node.Kind()' node.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 173.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDeclaration,The length of the statement  "                var rawDocumentation = declaration?.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,The length of the statement  "                    rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 126.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,The length of the statement  "                    var includedReturnsElement = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.ReturnsXmlTag); " is 152.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleTypeDeclaration,The length of the statement  "            Accessibility declaredAccessibility = typeDeclaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 129.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleTypeDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = typeDeclaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleTypeDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' typeDeclaration.Kind()' typeDeclaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 195.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMethodDeclaration,The length of the statement  "            Accessibility declaredAccessibility = methodDeclaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMethodDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = methodDeclaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 133.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMethodDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' methodDeclaration.Kind()' methodDeclaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 199.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleDelegateDeclaration,The length of the statement  "            Accessibility declaredAccessibility = delegateDeclaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 133.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleDelegateDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = delegateDeclaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleDelegateDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' delegateDeclaration.Kind()' delegateDeclaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 203.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "                rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 126.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(Descriptor' parameter.Identifier.GetLocation()' parameter.Identifier.ValueText)); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(Descriptor' parameter.Identifier.GetLocation()' parameter.Identifier.ValueText)); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "            Accessibility declaredAccessibility = typeDeclaration.GetDeclaredAccessibility(context.SemanticModel' context.CancellationToken); " is 129.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "            Accessibility effectiveAccessibility = typeDeclaration.GetEffectiveAccessibility(context.SemanticModel' context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "            bool needsComment = SA1600ElementsMustBeDocumented.NeedsComment(settings.DocumentationRules' typeDeclaration.Kind()' typeDeclaration.Parent.Kind()' declaredAccessibility' effectiveAccessibility); " is 195.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "                rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 126.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(Descriptor' parameter.Identifier.GetLocation()' parameter.Identifier.ValueText)); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(Descriptor' parameter.Identifier.GetLocation()' parameter.Identifier.ValueText)); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1625ElementDocumentationMustNotBeCopiedAndPasted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1625ElementDocumentationMustNotBeCopiedAndPasted.cs,HandleXmlElement,The length of the statement  "                if (ShouldSkipElement(documentation' resourceManager.GetString(nameof(DocumentationResources.ParameterNotUsed)' culture))) " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1625ElementDocumentationMustNotBeCopiedAndPasted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1625ElementDocumentationMustNotBeCopiedAndPasted.cs,HandleCompleteDocumentation,The length of the statement  "                if (ShouldSkipElement(documentation' resourceManager.GetString(nameof(DocumentationResources.ParameterNotUsed)' culture))) " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1627DocumentationTextMustNotBeEmpty,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1627DocumentationTextMustNotBeEmpty.cs,HandleIncludedDocumentation,The length of the statement  "            var rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1629DocumentationTextMustEndWithAPeriod,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1629DocumentationTextMustEndWithAPeriod.cs,HandleSectionOrBlockXmlElement,The length of the statement  "                                var location = Location.Create(xmlElement.SyntaxTree' new TextSpan(textToken.SpanStart + textWithoutTrailingWhitespace.Length' 1)); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "            var typeKindText = resourceManager.GetString(isStruct ? nameof(DocumentationResources.TypeTextStruct) : nameof(DocumentationResources.TypeTextClass)' culture); " is 159.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "                    string.Format(resourceManager.GetString(nameof(DocumentationResources.StaticConstructorStandardTextFirstPart)' culture)' typeKindText)' " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "                    string.Format(resourceManager.GetString(nameof(DocumentationResources.StaticConstructorStandardTextSecondPart)' culture)' typeKindText)' " is 136.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "                    string.Format(resourceManager.GetString(nameof(DocumentationResources.PrivateConstructorStandardTextFirstPart)' culture)' typeKindText)' " is 136.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,The length of the statement  "                var rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,The length of the statement  "                var inheritDocElement = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.InheritdocXmlTag); " is 150.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,The length of the statement  "                var rawDocumentation = declaredSymbol.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 133.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,The length of the statement  "                var inheritDocElement = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.InheritdocXmlTag); " is 150.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1651DoNotUsePlaceholderElements,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1651DoNotUsePlaceholderElements.cs,IncludedDocumentationContainsPlaceHolderTags,The length of the statement  "            var rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1651DoNotUsePlaceholderElements,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1651DoNotUsePlaceholderElements.cs,IncludedDocumentationContainsPlaceHolderTags,The length of the statement  "            return completeDocumentation.DescendantNodesAndSelf().OfType<XElement>().Any(element => element.Name == XmlCommentHelper.PlaceholderTag); " is 137.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "            if (documentationStructure.Content.GetFirstXmlElement(XmlCommentHelper.IncludeXmlTag) is XmlEmptyElementSyntax includeElement) " is 126.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "                var rawDocumentation = declaration.GetDocumentationCommentXml(expandIncludes: true' cancellationToken: context.CancellationToken); " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "                var summaryElement = completeDocumentation.Nodes().OfType<XElement>().FirstOrDefault(element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 144.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "                if (!(documentationStructure.Content.GetFirstXmlElement(XmlCommentHelper.SummaryXmlTag) is XmlElementSyntax summaryElement)) " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "            XmlCrefAttributeSyntax crefAttribute = XmlCommentHelper.GetFirstAttributeOrDefault<XmlCrefAttributeSyntax>(classReferencePart); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "            INamedTypeSymbol expectedSymbol = semanticModel.GetDeclaredSymbol(constructorDeclarationSyntax.Parent' context.CancellationToken) as INamedTypeSymbol; " is 150.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "            INamedTypeSymbol expectedSymbol = semanticModel.GetDeclaredSymbol(constructorDeclarationSyntax.Parent' context.CancellationToken) as INamedTypeSymbol; " is 150.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,AdjustDocumentationCommentNewLineTrivia,The length of the statement  "                let next = token.GetNextToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true) " is 136.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,AdjustDocumentationCommentNewLineTrivia,The length of the statement  "                replacements[pair.Value] = pair.Value.WithLeadingTrivia(pair.Value.LeadingTrivia.InsertRange(0' pair.Key.TrailingTrivia)); " is 122.
Long Statement,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseXmlFileHeader,The length of the statement  "                xmlString = ProcessSingleLineCommentsHeader(firstToken.LeadingTrivia' firstNonWhitespaceTrivia' out fileHeaderStart' out fileHeaderEnd); " is 136.
Long Statement,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseXmlFileHeader,The length of the statement  "                xmlString = ProcessMultiLineCommentsHeader(firstToken.LeadingTrivia[firstNonWhitespaceTrivia]' out fileHeaderStart' out fileHeaderEnd); " is 135.
Long Statement,StyleCop.Analyzers.Helpers,FileNameHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileNameHelpers.cs,GetStyleCopFileName,The length of the statement  "            var typeParameterList = string.Join("'"' typeDeclaration.TypeParameterList.Parameters.Select(p => p.Identifier.ValueText)); " is 123.
Long Statement,StyleCop.Analyzers.Helpers,LiteralExpressionHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\LiteralExpressionHelpers.cs,WithLiteralSuffix,The length of the statement  "            return literalExpression.WithToken(SyntaxFactory.ParseToken(textWithoutSuffix + suffix).WithTriviaFrom(literalExpression.Token)); " is 129.
Long Statement,StyleCop.Analyzers.Helpers,NamedTypeHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\NamedTypeHelpers.cs,GetNameOrIdentifierLocation,The length of the statement  "            location = location ?? (member as FieldDeclarationSyntax)?.Declaration?.Variables.FirstOrDefault()?.Identifier.GetLocation(); " is 125.
Long Statement,StyleCop.Analyzers.Helpers,NameSyntaxHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\NameSyntaxHelpers.cs,Compare,The length of the statement  "            int result = CultureInfo.InvariantCulture.CompareInfo.Compare(left' right' CompareOptions.IgnoreCase | CompareOptions.IgnoreNonSpace | CompareOptions.IgnoreWidth); " is 163.
Long Statement,StyleCop.Analyzers.Helpers,NameSyntaxHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\NameSyntaxHelpers.cs,Compare,The length of the statement  "                result = CultureInfo.InvariantCulture.CompareInfo.Compare(left' right' CompareOptions.IgnoreNonSpace | CompareOptions.IgnoreWidth); " is 131.
Long Statement,StyleCop.Analyzers.Helpers,SyntaxTreeHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SyntaxTreeHelpers.cs,GetOrCreateUsingAliasCache,The length of the statement  "                var replacementCache = Tuple.Create(new WeakReference<Compilation>(compilation)' new ConcurrentDictionary<SyntaxTree' bool>()); " is 127.
Long Statement,StyleCop.Analyzers.Helpers,SyntaxTreeHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SyntaxTreeHelpers.cs,ContainsUsingAliasNoCache,The length of the statement  "            var nodes = tree.GetRoot().DescendantNodes(node => node.IsKind(SyntaxKind.CompilationUnit) || node.IsKind(SyntaxKind.NamespaceDeclaration)); " is 140.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutTrailingWhitespace,The length of the statement  "            return (trailingWhitespaceIndex >= 0) ? SyntaxFactory.TriviaList(triviaList.Take(trailingWhitespaceIndex)) : triviaList; " is 120.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutLeadingWhitespace,The length of the statement  "            return (nonWhitespaceIndex >= 0) ? SyntaxFactory.TriviaList(triviaList.Skip(nonWhitespaceIndex)) : SyntaxFactory.TriviaList(); " is 126.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutLeadingBlankLines,The length of the statement  "            var newLeadingTrivia = SyntaxFactory.TriviaList(triviaList.Take(blankLinesStart).Concat(triviaList.Skip(leadingWhitespaceStart))); " is 130.
Long Statement,StyleCop.Analyzers.Helpers,XmlFileHeader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlFileHeader.cs,GetElementLocation,The length of the statement  "            var headerSourceText = syntaxTree.GetText().GetSubText(TextSpan.FromBounds(this.fileHeaderStart' this.fileHeaderEnd)).ToString(); " is 129.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,MultiLineElement,The length of the statement  "                        var updatedTrailingTrivia = previousTrailingTrivia.Replace(lastTrivia' SyntaxFactory.SyntaxTrivia(lastTrivia.Kind()' updatedLastTriviaText)); " is 141.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "            if (rewrittenToken.IsKind(SyntaxKind.LessThanToken) && string.Equals("<"' rewrittenToken.Text' StringComparison.Ordinal)) " is 121.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "                return SyntaxFactory.Token(rewrittenToken.LeadingTrivia' SyntaxKind.LessThanToken' "{"' rewrittenToken.ValueText' rewrittenToken.TrailingTrivia); " is 145.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "            if (rewrittenToken.IsKind(SyntaxKind.GreaterThanToken) && string.Equals(">"' rewrittenToken.Text' StringComparison.Ordinal)) " is 124.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "                return SyntaxFactory.Token(rewrittenToken.LeadingTrivia' SyntaxKind.GreaterThanToken' "}"' rewrittenToken.ValueText' rewrittenToken.TrailingTrivia); " is 148.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "                elementSyntaxKind = elementSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : elementSyntaxKind; " is 124.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "                nextElementSyntaxKind = nextElementSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : nextElementSyntaxKind; " is 136.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' NamedTypeHelpers.GetNameOrIdentifierLocation(members[i + 1])' MemberNames[nextElementSyntaxKind]' MemberNames[elementSyntaxKind])); " is 186.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1202ElementsMustBeOrderedByAccess,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1202ElementsMustBeOrderedByAccess.cs,HandleMemberList,The length of the statement  "                currentSyntaxKind = currentSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : currentSyntaxKind; " is 124.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1204StaticElementsMustAppearBeforeInstanceElements,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1204StaticElementsMustAppearBeforeInstanceElements.cs,HandleMemberList,The length of the statement  "                currentSyntaxKind = currentSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : currentSyntaxKind; " is 124.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CheckModifiersOrderAndReportDiagnostics,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' modifier.GetLocation()' modifier.ValueText' previousModifier.ValueText)); " is 128.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CheckModifiersOrderAndReportDiagnostics,The length of the statement  "                if (AccessOrStaticModifierNotFollowingOtherModifier(currentModifierType' previousModifierType) && otherModifiersAppearEarlier) " is 126.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CheckModifiersOrderAndReportDiagnostics,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' modifier.GetLocation()' modifier.ValueText' previousOtherModifier.ValueText)); " is 133.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "                if (usingDirective.Alias != null || !usingDirective.StaticKeyword.IsKind(SyntaxKind.None) || usingDirective.IsPrecededByPreprocessorDirective()) " is 144.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(Descriptor' usingDirective.GetLocation()' usingDirective.Name.ToNormalizedString()' systemUsingDirectivesShouldBeBeforeThisName)); " is 173.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(Descriptor' usingDirective.GetLocation()' usingDirective.Name.ToNormalizedString()' systemUsingDirectivesShouldBeBeforeThisName)); " is 173.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1209UsingAliasDirectivesMustBePlacedAfterOtherUsingDirectives,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1209UsingAliasDirectivesMustBePlacedAfterOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "                    if (nextUsingDirective.Alias == null && nextUsingDirective.StaticKeyword.IsKind(SyntaxKind.None) && !nextUsingDirective.IsPrecededByPreprocessorDirective()) " is 156.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,CheckBraces,The length of the statement  "                        if (((ImplicitStackAllocArrayCreationExpressionSyntaxWrapper)context.Node.Parent).StackAllocKeyword.GetLine() == openBraceTokenLine) " is 132.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((DoStatementSyntax)ctx.Node).Statement)' SyntaxKind.DoStatement); " is 131.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((WhileStatementSyntax)ctx.Node).Statement)' SyntaxKind.WhileStatement); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((ForStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForStatement); " is 133.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((ForEachStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForEachStatement); " is 141.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((LockStatementSyntax)ctx.Node).Statement)' SyntaxKind.LockStatement); " is 135.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((UsingStatementSyntax)ctx.Node).Statement)' SyntaxKind.UsingStatement); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((FixedStatementSyntax)ctx.Node).Statement)' SyntaxKind.FixedStatement); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502ElementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1502ElementMustNotBeOnASingleLine.cs,HandleBasePropertyDeclaration,The length of the statement  "                    CheckViolation(context' basePropertyDeclaration.AccessorList.OpenBraceToken' basePropertyDeclaration.AccessorList.CloseBraceToken); " is 131.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((DoStatementSyntax)ctx.Node).Statement)' SyntaxKind.DoStatement); " is 131.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((WhileStatementSyntax)ctx.Node).Statement)' SyntaxKind.WhileStatement); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((ForStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForStatement); " is 133.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((ForEachStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForEachStatement); " is 141.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((FixedStatementSyntax)ctx.Node).Statement)' SyntaxKind.FixedStatement); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ctx => CheckChildStatement(ctx' ((LockStatementSyntax)ctx.Node).Statement)' SyntaxKind.LockStatement); " is 135.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The length of the statement  "            TextSpan span = TextSpan.FromBounds(leadingTrivia[blankLineIndex].SpanStart' leadingTrivia[blankLineEndIndex].Span.End); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1508ClosingBracesMustNotBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1508ClosingBracesMustNotBePrecededByBlankLine.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The length of the statement  "            foreach (var trivia in syntaxRoot.DescendantTrivia().Where(trivia => trivia.IsKind(SyntaxKind.SingleLineCommentTrivia))) " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The length of the statement  "            var documentationHeaderIndex = context.Node.GetLeadingTrivia().IndexOf(SyntaxKind.SingleLineDocumentationCommentTrivia); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,HandleSyntaxTree,The length of the statement  "            foreach (var trivia in syntaxRoot.DescendantTrivia().Where(trivia => trivia.IsKind(SyntaxKind.SingleLineCommentTrivia))) " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleNamespaceDeclaration,The length of the statement  "                ReportIfThereIsNoBlankLine(context' namespaceDeclaration.Externs[namespaceDeclaration.Externs.Count - 1]' namespaceDeclaration.Usings[0]); " is 138.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorRequire' usings[i].UsingKeyword.GetLocation()' DiagnosticPropertiesRequire)); " is 130.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorOmit' usings[i].UsingKeyword.GetLocation()' DiagnosticPropertiesOmit)); " is 124.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1517CodeMustNotContainBlankLinesAtStartOfFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1517CodeMustNotContainBlankLinesAtStartOfFile.cs,HandleSyntaxTree,The length of the statement  "                    var textSpan = TextSpan.FromBounds(leadingTrivia[0].Span.Start' leadingTrivia[firstNonBlankLineTriviaIndex].Span.Start); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "                var previousToken = endOfFileToken.GetPreviousToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 159.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "                    var trailingWhitespaceIndex = TriviaHelper.IndexOfTrailingWhitespace(directiveTriviaSyntax.EndOfDirectiveToken.TrailingTrivia); " is 127.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "                        reportedSpan = TextSpan.FromBounds(directiveTriviaSyntax.EndOfDirectiveToken.TrailingTrivia[trailingWhitespaceIndex].SpanStart' reportedSpan.End); " is 146.
Long Statement,StyleCop.Analyzers.Lightup,ImplicitStackAllocArrayCreationExpressionSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\ImplicitStackAllocArrayCreationExpressionSyntaxWrapper.cs,WithStackAllocKeyword,The length of the statement  "            return new ImplicitStackAllocArrayCreationExpressionSyntaxWrapper(WithStackAllocKeywordAccessor(this.SyntaxNode' stackAllocKeyword)); " is 133.
Long Statement,StyleCop.Analyzers.Lightup,ImplicitStackAllocArrayCreationExpressionSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\ImplicitStackAllocArrayCreationExpressionSyntaxWrapper.cs,WithOpenBracketToken,The length of the statement  "            return new ImplicitStackAllocArrayCreationExpressionSyntaxWrapper(WithOpenBracketTokenAccessor(this.SyntaxNode' openBracketToken)); " is 131.
Long Statement,StyleCop.Analyzers.Lightup,ImplicitStackAllocArrayCreationExpressionSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\ImplicitStackAllocArrayCreationExpressionSyntaxWrapper.cs,WithCloseBracketToken,The length of the statement  "            return new ImplicitStackAllocArrayCreationExpressionSyntaxWrapper(WithCloseBracketTokenAccessor(this.SyntaxNode' closeBracketToken)); " is 133.
Long Statement,StyleCop.Analyzers.Lightup,ImplicitStackAllocArrayCreationExpressionSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\ImplicitStackAllocArrayCreationExpressionSyntaxWrapper.cs,WithInitializer,The length of the statement  "            return new ImplicitStackAllocArrayCreationExpressionSyntaxWrapper(WithInitializerAccessor(this.SyntaxNode' initializer)); " is 121.
Long Statement,StyleCop.Analyzers.Lightup,ImplicitStackAllocArrayCreationExpressionSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\ImplicitStackAllocArrayCreationExpressionSyntaxWrapper.cs,AddInitializerExpressions,The length of the statement  "            return new ImplicitStackAllocArrayCreationExpressionSyntaxWrapper(this.WithInitializer(this.Initializer.AddExpressions(items))); " is 128.
Long Statement,StyleCop.Analyzers.Lightup,LightupHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\LightupHelpers.cs,CanWrapNode,The length of the statement  "            ConcurrentDictionary<SyntaxKind' bool> wrappedSyntax = SupportedWrappers.GetOrAdd(underlyingType' _ => new ConcurrentDictionary<SyntaxKind' bool>()); " is 149.
Long Statement,StyleCop.Analyzers.Lightup,LightupHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\LightupHelpers.cs,CreateSeparatedSyntaxListPropertyAccessor,The length of the statement  "            var constructorInfo = boundWrapperType.GetTypeInfo().DeclaredConstructors.Single(constructor => constructor.GetParameters().Length == 1); " is 137.
Long Statement,StyleCop.Analyzers.Lightup,LightupHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\LightupHelpers.cs,CreateSyntaxWithPropertyAccessor,The length of the statement  "                .SingleOrDefault(m => !m.IsStatic && m.GetParameters().Length == 1 && m.GetParameters()[0].ParameterType.Equals(property.PropertyType)); " is 136.
Long Statement,StyleCop.Analyzers.Lightup,LightupHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\LightupHelpers.cs,CreateSeparatedSyntaxListWithPropertyAccessor,The length of the statement  "                .Single(m => !m.IsStatic && m.GetParameters().Length == 1 && m.GetParameters()[0].ParameterType.Equals(property.PropertyType)); " is 127.
Long Statement,StyleCop.Analyzers.Lightup,LightupHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\LightupHelpers.cs,CreateSeparatedSyntaxListWithPropertyAccessor,The length of the statement  "            var valueParameter = Expression.Parameter(typeof(SeparatedSyntaxListWrapper<TProperty>)' methodInfo.GetParameters()[0].Name); " is 125.
Long Statement,StyleCop.Analyzers.Lightup,LightupHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\LightupHelpers.cs,CreateSeparatedSyntaxListWithPropertyAccessor,The length of the statement  "            var underlyingListProperty = typeof(SeparatedSyntaxListWrapper<TProperty>).GetTypeInfo().GetDeclaredProperty(nameof(SeparatedSyntaxListWrapper<TProperty>.UnderlyingList)); " is 171.
Long Statement,StyleCop.Analyzers.Lightup,RecursivePatternSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\RecursivePatternSyntaxWrapper.cs,AddPositionalPatternClauseSubpatterns,The length of the statement  "            return this.WithPositionalPatternClause(positionalPatternClause.WithSubpatterns(positionalPatternClause.Subpatterns.AddRange(items))); " is 134.
Long Statement,StyleCop.Analyzers.Lightup,RecursivePatternSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\RecursivePatternSyntaxWrapper.cs,AddPropertyPatternClauseSubpatterns,The length of the statement  "            return this.WithPropertyPatternClause(propertyPatternClause.WithSubpatterns(propertyPatternClause.Subpatterns.AddRange(items))); " is 128.
Long Statement,StyleCop.Analyzers.Lightup,RecursivePatternSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\RecursivePatternSyntaxWrapper.cs,WithPositionalPatternClause,The length of the statement  "            return new RecursivePatternSyntaxWrapper(WithPositionalPatternClauseAccessor(this.SyntaxNode' positionalPatternClause)); " is 120.
Long Statement,StyleCop.Analyzers.Lightup,SwitchExpressionArmSyntaxWrapper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SwitchExpressionArmSyntaxWrapper.cs,WithEqualsGreaterThanToken,The length of the statement  "            return new SwitchExpressionArmSyntaxWrapper(WithEqualsGreaterThanTokenAccessor(this.SyntaxNode' equalsGreaterThanToken)); " is 121.
Long Statement,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,PositionalPatternClause,The length of the statement  "            return (PositionalPatternClauseSyntaxWrapper)PositionalPatternClauseAccessor2(openParenToken' subpatterns' closeParenToken); " is 124.
Long Statement,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,PropertyPatternClause,The length of the statement  "            return (PropertyPatternClauseSyntaxWrapper)PropertyPatternClauseAccessor2(openBraceToken' subpatterns' closeBraceToken); " is 120.
Long Statement,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,ThrowNotSupportedOnFallback,The length of the statement  "            return (arg1' arg2' arg3) => throw new NotSupportedException($"{typeName}.{methodName} is not supported in this version"); " is 122.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,HandleSyntaxTree,The length of the statement  "            var preferredTypeNode = typeNodes.FirstOrDefault(n => FileNameHelpers.GetConventionalFileName(n' settings.DocumentationRules.FileNamingConvention) == fileName) ?? typeNodes.FirstOrDefault(); " is 190.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,HandleSyntaxTree,The length of the statement  "                if (typeNode == preferredTypeNode || (isPartialType && foundTypeName == NamedTypeHelpers.GetNameOrIdentifier(typeNode))) " is 120.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,GetTopLevelTypeDeclarations,The length of the statement  "            var allTypeDeclarations = root.DescendantNodes(descendIntoChildren: node => ContainsTopLevelTypeDeclarations(node)).OfType<MemberDeclarationSyntax>().ToList(); " is 159.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1403FileMayOnlyContainASingleNamespace,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1403FileMayOnlyContainASingleNamespace.cs,HandleSyntaxTree,The length of the statement  "            var descentNodes = syntaxRoot.DescendantNodes(descendIntoChildren: node => node != null && !node.IsKind(SyntaxKind.ClassDeclaration)); " is 134.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,AnalyzerInstance,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1404CodeAnalysisSuppressionMustHaveJustification.cs,HandleAttributeNode,The length of the statement  "                        this.suppressMessageAttribute = context.SemanticModel.Compilation.GetTypeByMetadataName(typeof(SuppressMessageAttribute).FullName); " is 131.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,AnalyzerInstance,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1404CodeAnalysisSuppressionMustHaveJustification.cs,HandleAttributeNode,The length of the statement  "                                if (!value.HasValue || (!string.IsNullOrWhiteSpace(value.Value as string) && (value.Value as string) != JustificationPlaceholder)) " is 130.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1407ArithmeticExpressionsMustDeclarePrecedence,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1407ArithmeticExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "            isSameFamily |= (operatorToken1.IsKind(SyntaxKind.LessThanLessThanToken) || operatorToken1.IsKind(SyntaxKind.GreaterThanGreaterThanToken)) " is 138.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1407ArithmeticExpressionsMustDeclarePrecedence,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1407ArithmeticExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "                && (operatorToken2.IsKind(SyntaxKind.LessThanLessThanToken) || operatorToken2.IsKind(SyntaxKind.GreaterThanGreaterThanToken)); " is 126.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1408ConditionalExpressionsMustDeclarePrecedence,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1408ConditionalExpressionsMustDeclarePrecedence.cs,HandleBinaryExpression,The length of the statement  "                if (right.OperatorToken.IsKind(SyntaxKind.AmpersandAmpersandToken) || right.OperatorToken.IsKind(SyntaxKind.BarBarToken)) " is 121.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1408ConditionalExpressionsMustDeclarePrecedence,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1408ConditionalExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "            return (operatorToken1.IsKind(SyntaxKind.AmpersandAmpersandToken) && operatorToken2.IsKind(SyntaxKind.AmpersandAmpersandToken)) " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1410RemoveDelegateParenthesisWhenPossible,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1410RemoveDelegateParenthesisWhenPossible.cs,HasAmbiguousOverload,The length of the statement  "            var nodeForSpeculation = methodCallSyntax.ReplaceNode(anonymousMethodExpression' anonymousMethodExpression.WithParameterList(null)); " is 132.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1410RemoveDelegateParenthesisWhenPossible,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1410RemoveDelegateParenthesisWhenPossible.cs,HasAmbiguousOverload,The length of the statement  "            var speculativeSymbolInfo = context.SemanticModel.GetSpeculativeSymbolInfo(methodCallSyntax.SpanStart' nodeForSpeculation' SpeculativeBindingOption.BindAsExpression); " is 166.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412StoreFilesAsUtf8,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1412StoreFilesAsUtf8.cs,HandleSyntaxTree,The length of the statement  "                ImmutableDictionary<string' string> properties = ImmutableDictionary<string' string>.Empty.SetItem(EncodingProperty' context.Tree.Encoding?.WebName ?? "<null>"); " is 161.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412StoreFilesAsUtf8,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1412StoreFilesAsUtf8.cs,HandleSyntaxTree,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' Location.Create(context.Tree' TextSpan.FromBounds(0' 0))' properties)); " is 126.
Long Statement,StyleCop.Analyzers.NamingRules,SA1300ElementMustBeginWithUpperCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1300ElementMustBeginWithUpperCaseLetter.cs,CheckElementNameToken,The length of the statement  "            if (allowUnderscoreDigit && (identifier.ValueText.Length > 1) && (identifier.ValueText[0] == '_') && char.IsDigit(identifier.ValueText[1])) " is 139.
Long Statement,StyleCop.Analyzers.NamingRules,SA1307AccessibleFieldsMustBeginWithUpperCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1307AccessibleFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,The length of the statement  "            // To improve performance we are looking for the field instead of the declarator directly. That way we don't get called for local variables. " is 140.
Long Statement,StyleCop.Analyzers.NamingRules,SA1313ParameterNamesMustBeginWithLowerCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1313ParameterNamesMustBeginWithLowerCaseLetter.cs,NameMatchesAbstraction,The length of the statement  "                // OverridenMethod can be null in case of an invalid method declaration -> exit because there is no meaningful analysis to be done. " is 131.
Long Statement,StyleCop.Analyzers.NamingRules,SA1313ParameterNamesMustBeginWithLowerCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1313ParameterNamesMustBeginWithLowerCaseLetter.cs,NameMatchesAbstraction,The length of the statement  "                if ((methodSymbol.OverriddenMethod == null) || (methodSymbol.OverriddenMethod.Parameters[index].Name == syntax.Identifier.ValueText)) " is 133.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1100DoNotPrefixCallsWithBaseUnlessLocalImplementationExists,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1100DoNotPrefixCallsWithBaseUnlessLocalImplementationExists.cs,HandleBaseExpression,The length of the statement  "            var speculativeSymbol = context.SemanticModel.GetSpeculativeSymbolInfo(parent.SpanStart' speculativeExpression' SpeculativeBindingOption.BindAsExpression); " is 155.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleAnonymousMethodExpression,The length of the statement  "            CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' anonymousMethod.ParameterList.OpenParenToken' preserveLayout); " is 124.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleDelegateDeclaration,The length of the statement  "                CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' delegateDeclaration.ParameterList.OpenParenToken' preserveLayout); " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleElementAccessExpression,The length of the statement  "            CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' elementAccess.ArgumentList.OpenBracketToken' preserveLayout); " is 123.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleIndexerDeclaration,The length of the statement  "                CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(obj' indexerDeclaration.ParameterList.OpenBracketToken' preserveLayout); " is 125.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleObjectCreationExpression,The length of the statement  "                CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' objectCreation.ArgumentList.OpenParenToken' preserveLayout); " is 122.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleInvocationExpression,The length of the statement  "                    CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' invocationExpression.ArgumentList.OpenParenToken' preserveLayout); " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleConstructorDeclaration,The length of the statement  "                CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' constructotDeclarationSyntax.ParameterList.OpenParenToken' preserveLayout); " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleMethodDeclaration,The length of the statement  "                CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' methodDeclaration.ParameterList.OpenParenToken' preserveLayout); " is 126.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleLocalFunctionStatement,The length of the statement  "                CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame(context' localFunctionStatement.ParameterList.OpenParenToken' preserveLayout); " is 131.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame,The length of the statement  "                var properties = preserveLayout ? TokenSpacingProperties.RemovePrecedingPreserveLayout : TokenSpacingProperties.RemovePreceding; " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleIndexerDeclaration,The length of the statement  "                CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame(context' lastParameter' indexerDeclaration.ParameterList.CloseBracketToken); " is 140.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleBaseMethodDeclaration,The length of the statement  "                CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame(context' lastParameter' baseMethodDeclarationSyntax.ParameterList.CloseParenToken); " is 147.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleLocalFunctionStatement,The length of the statement  "                CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame(context' lastParameter' localFunctionStatementSyntax.ParameterList.CloseParenToken); " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleParameterList,The length of the statement  "                    CheckIfLocationOfOpenAndCloseTokensAreTheSame(context' parameterListSyntax.OpenParenToken' parameterListSyntax.CloseParenToken); " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1121UseBuiltInTypeAlias.cs,HandleIdentifierNameSyntax,The length of the statement  "                INamedTypeSymbol symbol = semanticModel.GetSymbolInfo(identifierNameSyntax' context.CancellationToken).Symbol as INamedTypeSymbol; " is 130.
Long Statement,StyleCop.Analyzers.ReadabilityRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1121UseBuiltInTypeAlias.cs,HandleIdentifierNameSyntax,The length of the statement  "                else if (identifierNameSyntax.Parent is NameMemberCrefSyntax && identifierNameSyntax.Parent.Parent is QualifiedCrefSyntax) " is 122.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1122UseStringEmptyForEmptyStrings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1122UseStringEmptyForEmptyStrings.cs,HasToBeConstant,The length of the statement  "                if (!(equalsValueClause.Parent is VariableDeclaratorSyntax variableDeclaratorSyntax) || !(variableDeclaratorSyntax?.Parent is VariableDeclarationSyntax variableDeclarationSyntax)) " is 179.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1125UseShorthandForNullableTypes,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1125UseShorthandForNullableTypes.cs,HandleGenericName,The length of the statement  "            INamedTypeSymbol symbol = semanticModel.GetSymbolInfo(genericNameSyntax' context.CancellationToken).Symbol as INamedTypeSymbol; " is 127.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,HandleAnonymousMethodExpression,The length of the statement  "                reportDiagnostic = HandleMethodInvocation(context.SemanticModel' anonymousMethod' (ArgumentSyntax)anonymousMethod.Parent); " is 122.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,HandleMethodInvocation,The length of the statement  "                // Determine the parameter list from the method that is invoked' as delegates without parameters are allowed' but they cannot be replaced by a lambda without parameters. " is 169.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,HandleMethodInvocation,The length of the statement  "                SymbolInfo newSymbolInfo = semanticModel.GetSpeculativeSymbolInfo(location.SourceSpan.Start' invocationExpression' SpeculativeBindingOption.BindAsExpression); " is 158.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134AttributesMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1134AttributesMustNotShareLine.cs,HandleAttributeList,The length of the statement  "                if ((nextTokenLineSpan.EndLinePosition.Line == attributeListLineSpan.EndLinePosition.Line) && !nextToken.Parent.IsKind(SyntaxKind.AttributeList)) " is 145.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134AttributesMustNotShareLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1134AttributesMustNotShareLine.cs,HandleAttributeList,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' attributeList.OpenBracketToken.GetLocation()' diagnosticProperties.ToImmutable())); " is 138.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 120.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,HandleAnonymousObjectCreationExpression,The length of the statement  "            CheckBraces(context' anonymousObjectCreationExpression.OpenBraceToken' anonymousObjectCreationExpression.CloseBraceToken); " is 122.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBlocks,The length of the statement  "                string openBraceIndentation = openBraceIndentationTrivia.IsKind(SyntaxKind.WhitespaceTrivia) ? openBraceIndentationTrivia.ToString() : string.Empty; " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBlocks,The length of the statement  "                string closeBraceIndentation = closeBraceIndentationTrivia.IsKind(SyntaxKind.WhitespaceTrivia) ? closeBraceIndentationTrivia.ToString() : string.Empty; " is 151.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBlocks,The length of the statement  "                    ReportDiagnostic(context' element.OpenBraceToken' openBraceIndentationTrivia' openBraceIndentation' expectedIndentation); " is 121.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBlocks,The length of the statement  "                    ReportDiagnostic(context' element.CloseBraceToken' closeBraceIndentationTrivia' closeBraceIndentation' expectedIndentation); " is 124.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The length of the statement  "                string indentation = indentationTrivia.IsKind(SyntaxKind.WhitespaceTrivia) ? indentationTrivia.ToString() : string.Empty; " is 121.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBraces,The length of the statement  "            string openBraceIndentation = openBraceIndentationTrivia.IsKind(SyntaxKind.WhitespaceTrivia) ? openBraceIndentationTrivia.ToString() : string.Empty; " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBraces,The length of the statement  "            string closeBraceIndentation = closeBraceIndentationTrivia.IsKind(SyntaxKind.WhitespaceTrivia) ? closeBraceIndentationTrivia.ToString() : string.Empty; " is 151.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,ReportDiagnostic,The length of the statement  "            ImmutableDictionary<string' string> properties = ImmutableDictionary.Create<string' string>().SetItem(ExpectedIndentationKey' expectedIndentation); " is 147.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleCastExpression,The length of the statement  "            var speculativeExpression = castExpressionSyntax.Expression.ReplaceNode(castedElementTypeSyntax' castedElementTypeSyntax.WithLiteralSuffix(syntaxKindKeyword)); " is 159.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleCastExpression,The length of the statement  "            var speculativeTypeInfo = context.SemanticModel.GetSpeculativeTypeInfo(castExpressionSyntax.SpanStart' speculativeExpression' SpeculativeBindingOption.BindAsExpression); " is 169.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1142ReferToTupleElementsByName,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1142ReferToTupleElementsByName.cs,CheckFieldName,The length of the statement  "            return fieldSymbol.ContainingType.GetMembers().OfType<IFieldSymbol>().Count(fs => fs.CorrespondingTupleField() == fieldSymbol) > 1; " is 131.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "                var modifiedStatement = statement.ReplaceNode(memberAccessExpression' memberAccessExpression.Name.WithAdditionalAnnotations(annotation)); " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "                if (!context.SemanticModel.TryGetSpeculativeSemanticModel(statement.SpanStart' modifiedStatement' out speculativeModel)) " is 120.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "                var modifiedArrowExpressionClause = arrowExpressionClause.ReplaceNode(memberAccessExpression' memberAccessExpression.Name.WithAdditionalAnnotations(annotation)); " is 161.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "                if (!context.SemanticModel.TryGetSpeculativeSemanticModel(arrowExpressionClause.SpanStart' modifiedArrowExpressionClause' out speculativeModel)) " is 144.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleRequiredSpaceToken,The length of the statement  "            reportDiagnostic(ref context' Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.InsertFollowing' token.Text' string.Empty)); " is 148.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleDisallowedSpaceToken,The length of the statement  "            reportDiagnostic(ref context' Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveFollowing' token.Text' " not")); " is 142.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "                if (nextToken.IsKind(SyntaxKind.CommaToken) || nextToken.IsKind(SyntaxKind.GreaterThanToken) || nextToken.IsKind(SyntaxKind.CloseBracketToken)) " is 143.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemovePrecedingPreserveLayout' " not"' "preceded")); " is 151.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.InsertFollowing' string.Empty' "followed")); " is 143.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveFollowing' " not"' "followed")); " is 137.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1002SemicolonsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1002SemicolonsMustBeSpacedCorrectly.cs,HandleSemicolonToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.InsertFollowing' string.Empty' "followed")); " is 143.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1002SemicolonsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1002SemicolonsMustBeSpacedCorrectly.cs,HandleSemicolonToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveImmediatePreceding' " not"' "preceded")); " is 146.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,The length of the statement  "            var followingTrivia = TriviaHelper.MergeTriviaLists(unaryExpression.OperatorToken.TrailingTrivia' followingToken.LeadingTrivia); " is 128.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorNotFollowedByComment' unaryExpression.OperatorToken.GetLocation()' unaryExpression.OperatorToken.Text)); " is 157.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandleCastExpression,The length of the statement  "            var tokenString = castExpression.OpenParenToken.ToString() + castExpression.Type.ToString() + castExpression.CloseParenToken.ToString(); " is 136.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorPrecededByWhitespace' token.GetLocation()' properties' tokenText)); " is 120.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorNotPrecededByWhitespace' token.GetLocation()' properties' tokenText)); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "                    properties = properties.Add(CodeFixAction' withTrailingWhitespace ? RemoveEndOfLineWithTrailingSpaceTag : RemoveEndOfLineTag); " is 126.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "                if ((followingTriviaList.Count == 0) || !(followingTriviaList.First().IsKind(SyntaxKind.WhitespaceTrivia) || followingTriviaList.First().IsKind(SyntaxKind.EndOfLineTrivia))) " is 173.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorFollowedByWhitespace' token.GetLocation()' properties' tokenText)); " is 120.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(DescriptorNotFollowedByWhitespace' token.GetLocation()' properties' tokenText)); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1006PreprocessorKeywordsMustNotBePrecededBySpace,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1006PreprocessorKeywordsMustNotBePrecededBySpace.cs,HandleHashToken,The length of the statement  "            context.ReportDiagnostic(Diagnostic.Create(Descriptor' targetToken.GetLocation()' TokenSpacingProperties.RemovePreceding' targetToken.Text)); " is 141.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                var partOfCastExpression = prevToken.IsKind(SyntaxKind.CloseParenToken) && prevToken.Parent.IsKind(SyntaxKind.CastExpression); " is 126.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                var consecutiveCast = prevToken.IsKind(SyntaxKind.CloseParenToken) && prevToken.Parent.IsKind(SyntaxKind.CastExpression); " is 121.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                var partOfInterpolation = prevToken.IsKind(SyntaxKind.OpenBraceToken) && prevToken.Parent.IsKind(SyntaxKind.Interpolation); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                var hasLeadingComment = (leadingTriviaList.Count > 0) && leadingTriviaList.Last().IsKind(SyntaxKind.MultiLineCommentTrivia); " is 124.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(DescriptorPreceded' token.GetLocation()' TokenSpacingProperties.InsertPreceding)); " is 125.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                        context.ReportDiagnostic(Diagnostic.Create(DescriptorNotPreceded' token.GetLocation()' TokenSpacingProperties.RemovePreceding)); " is 128.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(DescriptorNotFollowed' token.GetLocation()' TokenSpacingProperties.RemoveFollowingPreserveLayout)); " is 142.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,The length of the statement  "                        && (nextToken.Parent.IsKind(SyntaxKind.ParenthesizedExpression) || nextToken.Parent.IsKind(SyntaxKindEx.TupleExpression))); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemovePreceding' "not be preceded")); " is 136.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveFollowing' "not be followed")); " is 136.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1011ClosingSquareBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1011ClosingSquareBracketsMustBeSpacedCorrectly.cs,HandleCloseBracketToken,The length of the statement  "                    precedesSpecialCharacter = nextToken.Parent.IsKind(SyntaxKind.ConditionalAccessExpression) || nextToken.Parent.IsKind(SyntaxKind.NullableType); " is 143.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1013ClosingBracesMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1013ClosingBracesMustBeSpacedCorrectly.cs,HandleCloseBraceToken,The length of the statement  "                    || (nextToken.IsKind(SyntaxKind.QuestionToken) && nextToken.GetNextToken(includeZeroWidth: true).IsKind(SyntaxKind.DotToken)) " is 125.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1017ClosingAttributeBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1017ClosingAttributeBracketsMustBeSpacedCorrectly.cs,HandleCloseBracketToken,The length of the statement  "            context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveImmediatePreceding)); " is 126.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly.cs,HandleIncrementDecrementToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' properties' symbolName' token.Text' "followed")); " is 125.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly.cs,HandleIncrementDecrementToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' properties' symbolName' token.Text' "preceded")); " is 125.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.InsertPreceding' string.Empty' "preceded")); " is 143.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemovePreceding' " not"' "preceded")); " is 137.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveFollowing' " not"' "followed")); " is 137.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.InsertPreceding' string.Empty' "preceded")); " is 143.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "                    context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemovePreceding' " not"' "preceded")); " is 137.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.RemoveFollowing' " not"' "followed")); " is 137.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' properties' "not appear at the beginning of a line")); " is 130.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' properties' "not appear at the end of a line")); " is 124.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1024ColonsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1024ColonsMustBeSpacedCorrectly.cs,HandleColonToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' properties' requireBefore ? string.Empty : " not"' "preceded"' string.Empty)); " is 154.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1024ColonsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1024ColonsMustBeSpacedCorrectly.cs,HandleColonToken,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' token.GetLocation()' TokenSpacingProperties.InsertFollowing' string.Empty' "followed"' string.Empty)); " is 157.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation.cs,Initialize,The length of the statement  "            context.RegisterSyntaxNodeAction(ImplicitStackAllocArrayCreationExpressionAction' SyntaxKindEx.ImplicitStackAllocArrayCreationExpression); " is 138.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation.cs,HandleImplicitArrayCreationExpression,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' newKeywordToken.GetLocation()' TokenSpacingProperties.RemoveFollowing' "new")); " is 134.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation.cs,HandleImplicitStackAllocArrayCreationExpression,The length of the statement  "                context.ReportDiagnostic(Diagnostic.Create(Descriptor' stackAllocKeywordToken.GetLocation()' TokenSpacingProperties.RemoveFollowing' "stackalloc")); " is 148.
Long Statement,StyleCop.Analyzers.SpecialRules,SA0002InvalidSettingsFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpecialRules\SA0002InvalidSettingsFile.cs,HandleCompilation,The length of the statement  "                SettingsHelper.GetStyleCopSettings(context.Options' DeserializationFailureBehavior.ThrowException' context.CancellationToken); " is 126.
Long Statement,StyleCop.Analyzers.SpecialRules,SA0002InvalidSettingsFile,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpecialRules\SA0002InvalidSettingsFile.cs,HandleCompilation,The length of the statement  "                var completeDescriptor = new DiagnosticDescriptor(DiagnosticId' Title' MessageFormat' AnalyzerCategory.SpecialRules' DiagnosticSeverity.Warning' AnalyzerConstants.EnabledByDefault' completeDescription' HelpLink); " is 212.
Complex Conditional,StyleCop.Analyzers.DocumentationRules,SA1629DocumentationTextMustEndWithAPeriod,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1629DocumentationTextMustEndWithAPeriod.cs,HandleSectionOrBlockXmlElement,The conditional expression  "!textWithoutTrailingWhitespace.EndsWith("."' StringComparison.Ordinal)                                  && !textWithoutTrailingWhitespace.EndsWith(".)"' StringComparison.Ordinal)                                  && (startingWithFinalParagraph || !textWithoutTrailingWhitespace.EndsWith(":"' StringComparison.Ordinal))                                  && !textWithoutTrailingWhitespace.EndsWith("-or-"' StringComparison.Ordinal)"  is complex.
Complex Conditional,StyleCop.Analyzers.Helpers,MemberOrderHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,GetAccessLevelForOrdering,The conditional expression  "(type == SyntaxKind.ConstructorDeclaration && modifiers.Any(SyntaxKind.StaticKeyword))                  || (type == SyntaxKind.MethodDeclaration && ((MethodDeclarationSyntax)member).ExplicitInterfaceSpecifier != null)                  || (type == SyntaxKind.PropertyDeclaration && ((PropertyDeclarationSyntax)member).ExplicitInterfaceSpecifier != null)                  || (type == SyntaxKind.IndexerDeclaration && ((IndexerDeclarationSyntax)member).ExplicitInterfaceSpecifier != null)"  is complex.
Complex Conditional,StyleCop.Analyzers.OrderingRules,SA1205PartialElementsMustDeclareAccess,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1205PartialElementsMustDeclareAccess.cs,HandleTypeDeclaration,The conditional expression  "!typeDeclarationNode.Modifiers.Any(SyntaxKind.PublicKeyword)                      && !typeDeclarationNode.Modifiers.Any(SyntaxKind.InternalKeyword)                      && !typeDeclarationNode.Modifiers.Any(SyntaxKind.ProtectedKeyword)                      && !typeDeclarationNode.Modifiers.Any(SyntaxKind.PrivateKeyword)"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,BracesVisitor,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1513ClosingBraceMustBeFollowedByBlankLine.cs,AnalyzeCloseBrace,The conditional expression  "nextToken.IsKind(SyntaxKind.SemicolonToken) &&                          (IsPartOf<VariableDeclaratorSyntax>(token) ||                           IsPartOf<YieldStatementSyntax>(token) ||                           IsPartOf<ArrowExpressionClauseSyntax>(token) ||                           IsPartOf<EqualsValueClauseSyntax>(token) ||                           IsPartOf<AssignmentExpressionSyntax>(token) ||                           IsPartOf<ReturnStatementSyntax>(token) ||                           IsPartOf<ObjectCreationExpressionSyntax>(token))"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,BracesVisitor,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1513ClosingBraceMustBeFollowedByBlankLine.cs,AnalyzeCloseBrace,The conditional expression  "nextToken.IsKind(SyntaxKind.AddKeyword)                          || nextToken.IsKind(SyntaxKind.RemoveKeyword)                          || nextToken.IsKind(SyntaxKind.GetKeyword)                          || nextToken.IsKind(SyntaxKind.SetKeyword)"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,BracesVisitor,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1513ClosingBraceMustBeFollowedByBlankLine.cs,AnalyzeCloseBrace,The conditional expression  "(nextToken.IsKind(SyntaxKind.PrivateKeyword)                          || nextToken.IsKind(SyntaxKind.ProtectedKeyword)                          || nextToken.IsKind(SyntaxKind.InternalKeyword))                          && (nextToken.Parent is AccessorDeclarationSyntax)"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The conditional expression  "trivia.IsDirective                      && !trivia.IsKind(SyntaxKind.EndIfDirectiveTrivia)                      && !trivia.IsKind(SyntaxKind.RegionDirectiveTrivia)                      && !trivia.IsKind(SyntaxKind.EndRegionDirectiveTrivia)"  is complex.
Complex Conditional,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The conditional expression  "!(node.Expression is BinaryExpressionSyntax)                      && !(node.Expression is AssignmentExpressionSyntax)                      && !(node.Expression is PrefixUnaryExpressionSyntax)                      && !(node.Expression is PostfixUnaryExpressionSyntax)                      && !node.Expression.IsKind(SyntaxKind.CastExpression)                      && !node.Expression.IsKind(SyntaxKind.ConditionalExpression)                      && !node.Expression.IsKind(SyntaxKind.IsExpression)                      && !node.Expression.IsKind(SyntaxKindEx.IsPatternExpression)                      && !node.Expression.IsKind(SyntaxKind.SimpleLambdaExpression)                      && !node.Expression.IsKind(SyntaxKind.ParenthesizedLambdaExpression)                      && !node.Expression.IsKind(SyntaxKind.ArrayCreationExpression)                      && !node.Expression.IsKind(SyntaxKind.CoalesceExpression)                      && !node.Expression.IsKind(SyntaxKind.QueryExpression)                      && !node.Expression.IsKind(SyntaxKind.AwaitExpression)                      && !node.IsKind(SyntaxKind.ConstructorDeclaration)"  is complex.
Complex Conditional,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The conditional expression  "node.Expression.IsKind(SyntaxKind.ConditionalAccessExpression)                          && (node.Parent is ElementAccessExpressionSyntax                          || node.Parent is MemberAccessExpressionSyntax                          || node.Parent is ConditionalAccessExpressionSyntax)"  is complex.
Complex Conditional,StyleCop.Analyzers.MaintainabilityRules,Analyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1401FieldsMustBePrivate.cs,AnalyzeField,The conditional expression  "!IsFieldPrivate(fieldDeclarationSyntax) &&                      !IsStaticReadonly(fieldDeclarationSyntax) &&                      IsParentAClass(fieldDeclarationSyntax) &&                      !fieldDeclarationSyntax.IsConst"  is complex.
Complex Conditional,StyleCop.Analyzers.NamingRules,SA1300ElementMustBeginWithUpperCaseLetter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1300ElementMustBeginWithUpperCaseLetter.cs,CheckElementNameToken,The conditional expression  "allowUnderscoreDigit && (identifier.ValueText.Length > 1) && (identifier.ValueText[0] == '_') && char.IsDigit(identifier.ValueText[1])"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryExpression,The conditional expression  "onSameLine                      && isEnabledSA1104                      && !(parent1 is QueryContinuationSyntax)                      && parent1.SpansMultipleLines()"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryExpression,The conditional expression  "!allOnSameLine && !allOnSeparateLine && !suppressSA1103 && isEnabledSA1103"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleAnonymousMethodExpression,The conditional expression  "anonymousMethod.DelegateKeyword.IsMissing ||                  anonymousMethod.ParameterList == null ||                  anonymousMethod.ParameterList.IsMissing ||                  anonymousMethod.ParameterList.OpenParenToken.IsMissing"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleIndexerDeclaration,The conditional expression  "!indexerDeclaration.ThisKeyword.IsMissing &&                  indexerDeclaration.ParameterList != null &&                  !indexerDeclaration.ParameterList.IsMissing &&                  !indexerDeclaration.ParameterList.OpenBracketToken.IsMissing"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeArgumentList,The conditional expression  "argumentListSyntax == null ||                  argumentListSyntax.OpenParenToken.IsMissing ||                  argumentListSyntax.IsMissing ||                  !argumentListSyntax.Arguments.Any()"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeParametersList,The conditional expression  "parameterListSyntax == null ||                  parameterListSyntax.OpenParenToken.IsMissing ||                  parameterListSyntax.IsMissing ||                  !parameterListSyntax.Parameters.Any()"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,The conditional expression  "precedesStickyCharacter && followedBySpace && (!lastInLine || !allowEndOfLine)"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The conditional expression  "!firstInLine && precededBySpace && !ignorePrecedingSpaceProblem && !IsPartOfIndexInitializer(token)"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,SA1025CodeMustNotContainMultipleWhitespaceInARow,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1025CodeMustNotContainMultipleWhitespaceInARow.cs,HandleWhitespaceTrivia,The conditional expression  "precedingToken.IsKind(SyntaxKind.CommaToken)                  || precedingToken.IsKind(SyntaxKind.SemicolonToken)                  || followingTrivia.IsKind(SyntaxKind.EndOfLineTrivia)                  || followingToken.IsKind(SyntaxKind.EndOfFileToken)"  is complex.
Empty Catch Block,StyleCop.Analyzers,SettingsHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\SettingsHelper.cs,GetStyleCopSettings,The method has an empty catch block.
Empty Catch Block,StyleCop.Analyzers,SettingsHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\SettingsHelper.cs,GetStyleCopSettings,The method has an empty catch block.
Empty Catch Block,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,ExpandIncludeTag,The method has an empty catch block.
Magic Number,StyleCop.Analyzers.DocumentationRules,SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes.cs,HandleSingleLineDocumentationTrivia,The following statement contains a magic number: TextSpan slashes = TextSpan.FromBounds(location.End - 3' location.End);
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: summaryNodes[0] is XText firstTextPartNode                          && summaryNodes[1] is XElement classReferencePart                          && summaryNodes[2] is XText secondTextPartNode
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: summaryNodes.Count >= 3
Magic Number,StyleCop.Analyzers.Helpers,FileHeader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeader.cs,GetLocation,The following statement contains a magic number: return Location.Create(syntaxTree' TextSpan.FromBounds(this.fileHeaderStart' this.fileHeaderStart + 2));
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: switch (trivia.Kind())                  {                  case SyntaxKind.WhitespaceTrivia:                      endOfLineCount = 0;                      break;                  case SyntaxKind.SingleLineCommentTrivia:                      endOfLineCount = 0;                        var commentString = trivia.ToFullString();                        fileHeaderStart = Math.Min(trivia.FullSpan.Start' fileHeaderStart);                      fileHeaderEnd = trivia.FullSpan.End;                        sb.AppendLine(commentString.Substring(2).Trim());                      break;                  case SyntaxKind.MultiLineCommentTrivia:                      // only process a MultiLineCommentTrivia if no SingleLineCommentTrivia have been processed                      if (sb.Length == 0)                      {                          var triviaString = trivia.ToFullString();                            var startIndex = triviaString.IndexOf("/*"' StringComparison.Ordinal) + 2;                          var endIndex = triviaString.LastIndexOf("*/"' StringComparison.Ordinal);                          if (endIndex == -1)                          {                              // While editing' it is possible to have a multiline comment trivia that does not contain the closing '*/' yet.                              return FileHeader.MissingFileHeader;                          }                            var commentContext = triviaString.Substring(startIndex' endIndex - startIndex).Trim();                            var triviaStringParts = commentContext.Replace("\r\n"' "\n").Split('\n');                            foreach (var part in triviaStringParts)                          {                              var trimmedPart = part.TrimStart(' '' '*');                              sb.AppendLine(trimmedPart);                          }                            fileHeaderStart = trivia.FullSpan.Start;                          fileHeaderEnd = trivia.FullSpan.End;                      }                        done = true;                      break;                  case SyntaxKind.EndOfLineTrivia:                      endOfLineCount++;                      done = endOfLineCount > 1;                      break;                  default:                      done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;                      break;                  }
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: switch (trivia.Kind())                  {                  case SyntaxKind.WhitespaceTrivia:                      endOfLineCount = 0;                      break;                  case SyntaxKind.SingleLineCommentTrivia:                      endOfLineCount = 0;                        var commentString = trivia.ToFullString();                        fileHeaderStart = Math.Min(trivia.FullSpan.Start' fileHeaderStart);                      fileHeaderEnd = trivia.FullSpan.End;                        sb.AppendLine(commentString.Substring(2).Trim());                      break;                  case SyntaxKind.MultiLineCommentTrivia:                      // only process a MultiLineCommentTrivia if no SingleLineCommentTrivia have been processed                      if (sb.Length == 0)                      {                          var triviaString = trivia.ToFullString();                            var startIndex = triviaString.IndexOf("/*"' StringComparison.Ordinal) + 2;                          var endIndex = triviaString.LastIndexOf("*/"' StringComparison.Ordinal);                          if (endIndex == -1)                          {                              // While editing' it is possible to have a multiline comment trivia that does not contain the closing '*/' yet.                              return FileHeader.MissingFileHeader;                          }                            var commentContext = triviaString.Substring(startIndex' endIndex - startIndex).Trim();                            var triviaStringParts = commentContext.Replace("\r\n"' "\n").Split('\n');                            foreach (var part in triviaStringParts)                          {                              var trimmedPart = part.TrimStart(' '' '*');                              sb.AppendLine(trimmedPart);                          }                            fileHeaderStart = trivia.FullSpan.Start;                          fileHeaderEnd = trivia.FullSpan.End;                      }                        done = true;                      break;                  case SyntaxKind.EndOfLineTrivia:                      endOfLineCount++;                      done = endOfLineCount > 1;                      break;                  default:                      done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;                      break;                  }
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessSingleLineCommentsHeader,The following statement contains a magic number: switch (trivia.Kind())                  {                  case SyntaxKind.WhitespaceTrivia:                      endOfLineCount = 0;                      break;                    case SyntaxKind.SingleLineCommentTrivia:                      endOfLineCount = 0;                        var commentString = trivia.ToFullString();                        // ignore borders                      if (commentString.StartsWith("//-"' StringComparison.OrdinalIgnoreCase))                      {                          break;                      }                        fileHeaderStart = Math.Min(trivia.FullSpan.Start' fileHeaderStart);                      fileHeaderEnd = trivia.FullSpan.End;                        sb.AppendLine(commentString.Substring(2));                      break;                    case SyntaxKind.EndOfLineTrivia:                      endOfLineCount++;                      done = endOfLineCount > 1;                      break;                    default:                      done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;                      break;                  }
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessMultiLineCommentsHeader,The following statement contains a magic number: var commentText = rawCommentString.Substring(2' rawCommentString.Length - 4);
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessMultiLineCommentsHeader,The following statement contains a magic number: var commentText = rawCommentString.Substring(2' rawCommentString.Length - 4);
Magic Number,StyleCop.Analyzers.Helpers,LiteralExpressionHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\LiteralExpressionHelpers.cs,StripLiteralSuffix,The following statement contains a magic number: bool isBase16 = literalText.Length > 2 && (literalText[1] == 'x' || literalText[1] == 'X');
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: switch (trait)                  {                  case OrderingTrait.Kind:                      // 4 bits are required to store this.                      this.Priority <<= 4;                      this.Priority |= TypeMemberOrder.IndexOf(type) & 0x0F;                      break;                    case OrderingTrait.Accessibility:                      // 3 bits are required to store this.                      this.Priority <<= 3;                      this.Priority |= (int)GetAccessLevelForOrdering(member' modifiers) & 0x07;                      break;                    case OrderingTrait.Constant:                      this.Priority <<= 1;                      if (modifiers.Any(SyntaxKind.ConstKeyword))                      {                          this.Priority |= 1;                      }                        break;                    case OrderingTrait.Static:                      this.Priority <<= 1;                      if (modifiers.Any(SyntaxKind.StaticKeyword))                      {                          this.Priority |= 1;                      }                        break;                    case OrderingTrait.Readonly:                      this.Priority <<= 1;                      if (modifiers.Any(SyntaxKind.ReadOnlyKeyword))                      {                          this.Priority |= 1;                      }                        break;                    default:                      continue;                  }
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: switch (trait)                  {                  case OrderingTrait.Kind:                      // 4 bits are required to store this.                      this.Priority <<= 4;                      this.Priority |= TypeMemberOrder.IndexOf(type) & 0x0F;                      break;                    case OrderingTrait.Accessibility:                      // 3 bits are required to store this.                      this.Priority <<= 3;                      this.Priority |= (int)GetAccessLevelForOrdering(member' modifiers) & 0x07;                      break;                    case OrderingTrait.Constant:                      this.Priority <<= 1;                      if (modifiers.Any(SyntaxKind.ConstKeyword))                      {                          this.Priority |= 1;                      }                        break;                    case OrderingTrait.Static:                      this.Priority <<= 1;                      if (modifiers.Any(SyntaxKind.StaticKeyword))                      {                          this.Priority |= 1;                      }                        break;                    case OrderingTrait.Readonly:                      this.Priority <<= 1;                      if (modifiers.Any(SyntaxKind.ReadOnlyKeyword))                      {                          this.Priority |= 1;                      }                        break;                    default:                      continue;                  }
Magic Number,StyleCop.Analyzers.Helpers,XmlFileHeader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlFileHeader.cs,GetLocation,The following statement contains a magic number: return Location.Create(syntaxTree' TextSpan.FromBounds(this.fileHeaderStart' this.fileHeaderStart + 2));
Magic Number,StyleCop.Analyzers.OrderingRules,SA1212PropertyAccessorsMustFollowOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1212PropertyAccessorsMustFollowOrder.cs,AnalyzeProperty,The following statement contains a magic number: propertyDeclaration.AccessorList.IsMissing ||                  accessors.Count != 2
Magic Number,StyleCop.Analyzers.OrderingRules,SA1213EventAccessorsMustFollowOrder,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1213EventAccessorsMustFollowOrder.cs,HandleEventDeclaration,The following statement contains a magic number: eventDeclaration.AccessorList.IsMissing ||                  accessors.Count != 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1504AllAccessorsMustBeSingleLineOrMultiLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1504AllAccessorsMustBeSingleLineOrMultiLine.cs,HandleAccessorList,The following statement contains a magic number: accessorList.Accessors.Count < 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,AnalyzeOpenBrace,The following statement contains a magic number: (GetLine(nextToken) - GetLine(openBraceToken)) < 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The following statement contains a magic number: blankLineCount < 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1508ClosingBracesMustNotBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1508ClosingBracesMustNotBePrecededByBlankLine.cs,AnalyzeCloseBrace,The following statement contains a magic number: (closeBraceToken.GetLineSpan().StartLinePosition.Line - previousToken.GetLineSpan().EndLinePosition.Line) < 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1509OpeningBracesMustNotBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1509OpeningBracesMustNotBePrecededByBlankLine.cs,AnalyzeOpenBrace,The following statement contains a magic number: eolCount < 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The following statement contains a magic number: var diagnosticSpan = TextSpan.FromBounds(trivia.SpanStart' trivia.SpanStart + 2);
Magic Number,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The following statement contains a magic number: eolCount >= 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,HandleSyntaxTree,The following statement contains a magic number: var diagnosticSpan = TextSpan.FromBounds(trivia.SpanStart' trivia.SpanStart + 2);
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededBySingleLineCommentOrDocumentation,The following statement contains a magic number: (eolCount < 2) && (triviaIndex >= 0)
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededByBlankLine,The following statement contains a magic number: (eolCount < 2) && (index >= 0)
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededByBlankLine,The following statement contains a magic number: return eolCount >= 2;
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleBasePropertyDeclaration,The following statement contains a magic number: accessors.Count == 2
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The following statement contains a magic number: usings.Count < 2
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadHexDigit,The following statement contains a magic number: switch (char.ToUpper(this.scanner.Read()))              {              case '0':                  return 0;                case '1':                  return 1;                case '2':                  return 2;                case '3':                  return 3;                case '4':                  return 4;                case '5':                  return 5;                case '6':                  return 6;                case '7':                  return 7;                case '8':                  return 8;                case '9':                  return 9;                case 'A':                  return 10;                case 'B':                  return 11;                case 'C':                  return 12;                case 'D':                  return 13;                case 'E':                  return 14;                case 'F':                  return 15;                default:                  throw new JsonParseException(                      ErrorType.InvalidOrUnexpectedCharacter'                      errorPosition);              }
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadUnicodeLiteral,The following statement contains a magic number: value += this.ReadHexDigit() * 4096;
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadUnicodeLiteral,The following statement contains a magic number: value += this.ReadHexDigit() * 256;
Magic Number,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadUnicodeLiteral,The following statement contains a magic number: value += this.ReadHexDigit() * 16;
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: positionalPatternClauseMethod = positionalPatternClauseMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<>).MakeGenericType(WrapperHelper.GetWrappedType(typeof(SubpatternSyntaxWrapper)))                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: positionalPatternClauseMethod = positionalPatternClauseMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<>).MakeGenericType(WrapperHelper.GetWrappedType(typeof(SubpatternSyntaxWrapper)))                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: propertyPatternClauseMethod = propertyPatternClauseMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<>).MakeGenericType(WrapperHelper.GetWrappedType(typeof(SubpatternSyntaxWrapper)))                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: propertyPatternClauseMethod = propertyPatternClauseMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<>).MakeGenericType(WrapperHelper.GetWrappedType(typeof(SubpatternSyntaxWrapper)))                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: tupleElementMethod = tupleElementMethods.FirstOrDefault(method => method.GetParameters().Length == 2 && method.GetParameters()[0].ParameterType == typeof(TypeSyntax) && method.GetParameters()[1].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: tupleExpressionMethod = tupleExpressionMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<ArgumentSyntax>)                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: tupleExpressionMethod = tupleExpressionMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<ArgumentSyntax>)                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: tupleTypeMethod = tupleTypeMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<>).MakeGenericType(WrapperHelper.GetWrappedType(typeof(TupleElementSyntaxWrapper)))                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.Lightup,SyntaxFactoryEx,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Lightup\SyntaxFactoryEx.cs,SyntaxFactoryEx,The following statement contains a magic number: tupleTypeMethod = tupleTypeMethods.FirstOrDefault(method => method.GetParameters().Length == 3                  && method.GetParameters()[0].ParameterType == typeof(SyntaxToken)                  && method.GetParameters()[1].ParameterType == typeof(SeparatedSyntaxList<>).MakeGenericType(WrapperHelper.GetWrappedType(typeof(TupleElementSyntaxWrapper)))                  && method.GetParameters()[2].ParameterType == typeof(SyntaxToken));
Magic Number,StyleCop.Analyzers.NamingRules,SA1308VariableNamesMustNotBePrefixed,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1308VariableNamesMustNotBePrefixed.cs,HandleFieldDeclaration,The following statement contains a magic number: string prefix = name.Substring(0' 2);
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,HandleArrayCreationExpression,The following statement contains a magic number: sizes.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,CheckIfCommasAreAtTheSameLineAsThePreviousParameter,The following statement contains a magic number: index % 2 == 0
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,AnalyzeSyntaxList,The following statement contains a magic number: syntaxList.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleIndexerDeclaration,The following statement contains a magic number: arguments.Count > 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArrayCreationExpression,The following statement contains a magic number: sizes.Count < 3
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleAttribute,The following statement contains a magic number: arguments.Count < 3
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArgumentListSyntax,The following statement contains a magic number: arguments.Count > 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleParameterListSyntax,The following statement contains a magic number: parameters.Count > 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleBracketedArgumentListSyntax,The following statement contains a magic number: arguments.Count > 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleMultiLineComment,The following statement contains a magic number: var commentText = nodeText.Substring(2' Math.Max(0' nodeText.Length - 4));
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleMultiLineComment,The following statement contains a magic number: var commentText = nodeText.Substring(2' Math.Max(0' nodeText.Length - 4));
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleSingleLineComment,The following statement contains a magic number: var lastNonWhiteSpace = TriviaHelper.IndexOfTrailingWhitespace(list) - 2;
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleSingleLineComment,The following statement contains a magic number: IsNullOrWhiteSpace(singleLineComment.ToString()' 2)
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1132DoNotCombineFields,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1132DoNotCombineFields.cs,HandleBaseFieldDeclaration,The following statement contains a magic number: variables.Count < 2 || fieldDeclaration.SemicolonToken.IsMissing
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1136EnumValuesShouldBeOnSeparateLines,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1136EnumValuesShouldBeOnSeparateLines.cs,HandleEnumDeclaration,The following statement contains a magic number: enumDeclaration.Members.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBlocks,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckBlocks,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: elements.Count < 2
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1141UseTupleSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1141UseTupleSyntax.cs,HandleInvocationExpression,The following statement contains a magic number: invocationExpression.ArgumentList.Arguments.Count < 2
Magic Number,StyleCop.Analyzers.Settings.ObjectModel,IndentationSettings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\IndentationSettings.cs,IndentationSettings,The following statement contains a magic number: this.indentationSize = 4;
Magic Number,StyleCop.Analyzers.Settings.ObjectModel,IndentationSettings,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\IndentationSettings.cs,IndentationSettings,The following statement contains a magic number: this.tabSize = 4;
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSyntaxTree,The following statement contains a magic number: switch (trivia.Kind())                  {                  case SyntaxKind.SingleLineCommentTrivia:                      HandleSingleLineCommentTrivia(context' trivia' isFirstSingleLineTrivia);                      isFirstSingleLineTrivia = false;                      newLineCount = 0;                      break;                    case SyntaxKind.EndOfLineTrivia:                      newLineCount++;                      if (newLineCount == 2)                      {                          isFirstSingleLineTrivia = true;                          newLineCount = 0;                      }                        break;                    case SyntaxKind.WhitespaceTrivia:                      break;                    default:                      isFirstSingleLineTrivia = true;                      break;                  }
Missing Default,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The following switch statement is missing a default case: switch (accessor.Keyword.Kind())                      {                      case SyntaxKind.GetKeyword:                          getter = accessor;                          break;                        case SyntaxKind.SetKeyword:                          setter = accessor;                          break;                      }
Missing Default,StyleCop.Analyzers.Helpers,AccessLevelHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,GetAccessLevel,The following switch statement is missing a default case: switch (modifier.Kind())                  {                  case SyntaxKind.PublicKeyword:                      return AccessLevel.Public;                  case SyntaxKind.PrivateKeyword:                      if (isProtected)                      {                          return AccessLevel.PrivateProtected;                      }                      else                      {                          isPrivate = true;                      }                        break;                  case SyntaxKind.InternalKeyword:                      if (isProtected)                      {                          return AccessLevel.ProtectedInternal;                      }                      else                      {                          isInternal = true;                      }                        break;                  case SyntaxKind.ProtectedKeyword:                      if (isInternal)                      {                          return AccessLevel.ProtectedInternal;                      }                      else if (isPrivate)                      {                          return AccessLevel.PrivateProtected;                      }                      else                      {                          isProtected = true;                      }                        break;                  }
Missing Default,StyleCop.Analyzers.OrderingRules,ModifierOrderHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\ModifierOrderHelper.cs,GetModifierType,The following switch statement is missing a default case: switch (modifier.Kind())              {              case SyntaxKind.PublicKeyword:              case SyntaxKind.ProtectedKeyword:              case SyntaxKind.InternalKeyword:              case SyntaxKind.PrivateKeyword:                  result = ModifierType.Access;                  break;                case SyntaxKind.StaticKeyword:                  result = ModifierType.Static;                  break;                case SyntaxKind.VirtualKeyword:              case SyntaxKind.AbstractKeyword:              case SyntaxKind.OverrideKeyword:              case SyntaxKind.ExternKeyword:              case SyntaxKind.UnsafeKeyword:              case SyntaxKind.NewKeyword:              case SyntaxKind.SealedKeyword:              case SyntaxKind.ReadOnlyKeyword:              case SyntaxKind.VolatileKeyword:              case SyntaxKind.FixedKeyword:              case SyntaxKind.ConstKeyword:              case SyntaxKind.AsyncKeyword:              case SyntaxKind.PartialKeyword:              case SyntaxKind.RefKeyword:                  result = ModifierType.Other;                  break;              }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleBlock,The following switch statement is missing a default case: switch (block.Parent.Kind())                      {                      case SyntaxKind.AnonymousMethodExpression:                      case SyntaxKind.SimpleLambdaExpression:                      case SyntaxKind.ParenthesizedLambdaExpression:                          var containingExpression = GetContainingExpression(block.Parent);                          if (IsSingleLineExpression(containingExpression))                          {                              // Single line lambda expressions and anonymous method declarations are allowed for single line expressions.                              return;                          }                            break;                      }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The following switch statement is missing a default case: switch (triviaList[triviaIndex].Kind())                          {                          case SyntaxKind.SingleLineCommentTrivia:                          case SyntaxKind.SingleLineDocumentationCommentTrivia:                          case SyntaxKind.MultiLineCommentTrivia:                          case SyntaxKind.MultiLineDocumentationCommentTrivia:                              // ignore a single blank line in between two comments.                              continue;                          }
Missing Default,LightJson.Serialization,JsonReader,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LightJson\Serialization\JsonReader.cs,ReadNumber,The following switch statement is missing a default case: switch (next)                  {                  case '+':                  case '-':                      builder.Append(this.scanner.Read());                      break;                  }
Missing Default,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,IsRelevantType,The following switch statement is missing a default case: switch (node.Kind())              {              case SyntaxKind.ClassDeclaration:                  isRelevant = topLevelTypes.Contains(TopLevelType.Class);                  break;              case SyntaxKind.InterfaceDeclaration:                  isRelevant = topLevelTypes.Contains(TopLevelType.Interface);                  break;              case SyntaxKind.StructDeclaration:                  isRelevant = topLevelTypes.Contains(TopLevelType.Struct);                  break;              case SyntaxKind.EnumDeclaration:                  isRelevant = topLevelTypes.Contains(TopLevelType.Enum);                  break;              case SyntaxKind.DelegateDeclaration:                  isRelevant = topLevelTypes.Contains(TopLevelType.Delegate);                  break;              }
Missing Default,StyleCop.Analyzers.MaintainabilityRules,SA1410RemoveDelegateParenthesisWhenPossible,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1410RemoveDelegateParenthesisWhenPossible.cs,HandleAnonymousMethodExpression,The following switch statement is missing a default case: switch (argumentListSyntax.Parent.Kind())                  {                  case SyntaxKind.ObjectCreationExpression:                  case SyntaxKind.InvocationExpression:                      if (HasAmbiguousOverload(context' syntax' argumentListSyntax.Parent))                      {                          return;                      }                        break;                  }
Missing Default,StyleCop.Analyzers.MaintainabilityRules,SA1414TupleTypesInSignaturesShouldHaveElementNames,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1414TupleTypesInSignaturesShouldHaveElementNames.cs,CheckType,The following switch statement is missing a default case: switch (typeSyntax.Kind())              {              case SyntaxKindEx.TupleType:                  CheckTupleType(context' (TupleTypeSyntaxWrapper)typeSyntax);                  break;                case SyntaxKind.QualifiedName:                  CheckType(context' ((QualifiedNameSyntax)typeSyntax).Right);                  break;                case SyntaxKind.GenericName:                  CheckGenericName(context' (GenericNameSyntax)typeSyntax);                  break;              }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleIdentifierNameImpl,The following switch statement is missing a default case: switch (memberAccessSymbol?.Kind)                      {                      case null:                          break;                        case SymbolKind.Field:                      case SymbolKind.Method:                      case SymbolKind.Property:                          if (memberAccessSymbol.IsStatic && (memberAccessSymbol.ContainingType.Name == symbol.Name))                          {                              return;                          }                            break;                      }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,IsPartOfConstructorInitializer,The following switch statement is missing a default case: switch (node.Kind())                  {                  case SyntaxKind.ThisConstructorInitializer:                  case SyntaxKind.BaseConstructorInitializer:                      return true;                  }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryClause,The following switch statement is missing a default case: switch (queryClause.Kind())              {              case SyntaxKind.FromClause:                  var fromClause = (FromClauseSyntax)queryClause;                  tokensToCheck.Add(fromClause.FromKeyword);                  break;              case SyntaxKind.LetClause:                  var letClause = (LetClauseSyntax)queryClause;                  tokensToCheck.Add(letClause.LetKeyword);                  break;              case SyntaxKind.WhereClause:                  var whereClause = (WhereClauseSyntax)queryClause;                  tokensToCheck.Add(whereClause.WhereKeyword);                  break;              case SyntaxKind.JoinClause:              case SyntaxKind.JoinIntoClause:                  var joinClause = (JoinClauseSyntax)queryClause;                  tokensToCheck.Add(joinClause.JoinKeyword);                  break;              case SyntaxKind.OrderByClause:                  var orderByClause = (OrderByClauseSyntax)queryClause;                  tokensToCheck.Add(orderByClause.OrderByKeyword);                  break;              }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleSelectOrGroup,The following switch statement is missing a default case: switch (selectOrGroup.Kind())              {              case SyntaxKind.SelectClause:                  var selectClause = (SelectClauseSyntax)selectOrGroup;                  if (!selectClause.IsMissing)                  {                      tokensToCheck.Add(selectClause.SelectKeyword);                  }                    break;              case SyntaxKind.GroupClause:                  var groupClause = (GroupClauseSyntax)selectOrGroup;                  tokensToCheck.Add(groupClause.GroupKeyword);                  break;              }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleSyntaxTree,The following switch statement is missing a default case: switch (node.Kind())                  {                  case SyntaxKind.SingleLineCommentTrivia:                      HandleSingleLineComment(context' node);                      break;                    case SyntaxKind.MultiLineCommentTrivia:                      HandleMultiLineComment(context' node);                      break;                  }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,HandleAnonymousMethodExpression,The following switch statement is missing a default case: switch (anonymousMethod.Parent.Kind())              {              case SyntaxKind.Argument:                  reportDiagnostic = HandleMethodInvocation(context.SemanticModel' anonymousMethod' (ArgumentSyntax)anonymousMethod.Parent);                  break;                case SyntaxKind.EqualsValueClause:                  reportDiagnostic = true;                  break;                case SyntaxKind.AddAssignmentExpression:              case SyntaxKind.SubtractAssignmentExpression:                  reportDiagnostic = true;                  break;              }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1135UsingDirectivesMustBeQualified,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1135UsingDirectivesMustBeQualified.cs,CheckUsingDeclaration,The following switch statement is missing a default case: switch (symbol.Kind)                  {                  case SymbolKind.Namespace:                      context.ReportDiagnostic(Diagnostic.Create(DescriptorNamespace' usingDirective.GetLocation()' symbolString));                      break;                    case SymbolKind.NamedType:                      var containingNamespace = ((NamespaceDeclarationSyntax)usingDirective.Parent).Name.ToString();                      if (containingNamespace != symbol.ContainingNamespace.ToString())                      {                          context.ReportDiagnostic(Diagnostic.Create(DescriptorType' usingDirective.GetLocation()' symbolString));                      }                        break;                  }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1141UseTupleSyntax,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1141UseTupleSyntax.cs,CheckType,The following switch statement is missing a default case: switch (typeSyntax.Kind())              {              case SyntaxKindEx.TupleType:                  CheckTupleType(context' (TupleTypeSyntaxWrapper)typeSyntax' reportLocation);                  break;                case SyntaxKind.QualifiedName:                  CheckType(context' ((QualifiedNameSyntax)typeSyntax).Right' reportLocation ?? typeSyntax.GetLocation());                  break;                case SyntaxKind.GenericName:                  CheckGenericName(context' (GenericNameSyntax)typeSyntax' reportLocation);                  break;              }
