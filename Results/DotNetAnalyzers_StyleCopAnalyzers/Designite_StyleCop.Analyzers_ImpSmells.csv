Implementation smell,Namespace,Class,File,Method,Description
Long Method,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The method has 120 lines of code.
Long Method,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The method has 135 lines of code.
Complex Method,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleDeclaration,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,Cyclomatic complexity of the method is 48
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDeclaration,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,GetAccessLevel,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,ToAccessibility,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,GetDeclaredAccessibility,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Helpers,AccessLevelHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,CombineEffectiveAccessibility,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.Helpers,DeclarationModifiersHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DeclarationModifiersHelper.cs,WithModifiers,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,Cyclomatic complexity of the method is 20
Complex Method,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,Cyclomatic complexity of the method is 27
Complex Method,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseXmlFileHeader,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessSingleLineCommentsHeader,Cyclomatic complexity of the method is 20
Complex Method,StyleCop.Analyzers.Helpers,LiteralExpressionHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\LiteralExpressionHelpers.cs,StripLiteralSuffix,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,Cyclomatic complexity of the method is 26
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,IndexOfFirstNonWhitespaceTrivia,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,IndexOfTrailingWhitespace,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,IsPrecededByBlankLines,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutLeadingBlankLines,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,ContainsBlankLines,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutBlankLines,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.Helpers,XmlCommentHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlCommentHelper.cs,IsConsideredEmpty,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.OrderingRules,ModifierOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\ModifierOrderHelper.cs,GetModifierType,Cyclomatic complexity of the method is 24
Complex Method,StyleCop.Analyzers.OrderingRules,SA1200UsingDirectivesMustBePlacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1200UsingDirectivesMustBePlacedCorrectly.cs,HandleCompilationUnit,Cyclomatic complexity of the method is 16
Complex Method,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,Cyclomatic complexity of the method is 22
Complex Method,StyleCop.Analyzers.OrderingRules,SA1202ElementsMustBeOrderedByAccess,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1202ElementsMustBeOrderedByAccess.cs,HandleMemberList,Cyclomatic complexity of the method is 24
Complex Method,StyleCop.Analyzers.OrderingRules,SA1203ConstantsMustAppearBeforeFields,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1203ConstantsMustAppearBeforeFields.cs,HandleTypeDeclaration,Cyclomatic complexity of the method is 23
Complex Method,StyleCop.Analyzers.OrderingRules,SA1204StaticElementsMustAppearBeforeInstanceElements,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1204StaticElementsMustAppearBeforeInstanceElements.cs,HandleMemberList,Cyclomatic complexity of the method is 23
Complex Method,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CompareModifiersType,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,GetModifierTypeText,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.OrderingRules,SA1211UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1211UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName.cs,HandleUsingDirectives,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.OrderingRules,SA1214ReadonlyElementsMustAppearBeforeNonReadonlyElements,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1214ReadonlyElementsMustAppearBeforeNonReadonlyElements.cs,HandleTypeDeclaration,Cyclomatic complexity of the method is 24
Complex Method,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,CheckBraces,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,CheckBraceToken,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleBlock,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleIfStatement,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,AnalyzeOpenBrace,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.LayoutRules,SA1506ElementDocumentationHeadersMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1506ElementDocumentationHeadersMustNotBeFollowedByBlankLine.cs,HandleDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.LayoutRules,SA1508ClosingBracesMustNotBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1508ClosingBracesMustNotBePrecededByBlankLine.cs,AnalyzeCloseBrace,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.LayoutRules,SA1509OpeningBracesMustNotBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1509OpeningBracesMustNotBePrecededByBlankLine.cs,AnalyzeOpenBrace,Cyclomatic complexity of the method is 12
Complex Method,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,IsPartOfFileHeader,Cyclomatic complexity of the method is 13
Complex Method,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,GetTrailingBlankLineCount,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,Cyclomatic complexity of the method is 20
Complex Method,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededBySingleLineCommentOrDocumentation,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededByBlankLine,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededByDirectiveTrivia,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.LayoutRules,SA1517CodeMustNotContainBlankLinesAtStartOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1517CodeMustNotContainBlankLinesAtStartOfFile.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 28
Complex Method,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.MaintainabilityRules,SA1400AccessModifierMustBeDeclared,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1400AccessModifierMustBeDeclared.cs,CheckAccessModifiers,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,IsRelevantType,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.NamingRules,SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.NamingRules,SA1306FieldNamesMustBeginWithLowerCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1306FieldNamesMustBeginWithLowerCaseLetter.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.NamingRules,SA1310FieldNamesMustNotContainUnderscore,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1310FieldNamesMustNotContainUnderscore.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.NamingRules,SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.NamingRules,SA1313ParameterNamesMustBeginWithLowerCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1313ParameterNamesMustBeginWithLowerCaseLetter.cs,NameMatchesAbstraction,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.NamingRules,SX1309FieldNamesMustBeginWithUnderscore,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SX1309FieldNamesMustBeginWithUnderscore.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.NamingRules,SX1309SStaticFieldNamesMustBeginWithUnderscore,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SX1309SStaticFieldNamesMustBeginWithUnderscore.cs,HandleFieldDeclaration,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleSimpleName,Cyclomatic complexity of the method is 16
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleIdentifierNameImpl,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HasThis,Cyclomatic complexity of the method is 22
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryClause,Cyclomatic complexity of the method is 21
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleSelectOrGroup,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,IsValidTrivia,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1125UseShorthandForNullableTypes,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1125UseShorthandForNullableTypes.cs,HandleGenericName,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,AddMemberAndAttributes,Cyclomatic complexity of the method is 37
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleGenericName,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 47
Complex Method,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1002SemicolonsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1002SemicolonsMustBeSpacedCorrectly.cs,HandleSemicolonToken,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1004DocumentationLinesMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1004DocumentationLinesMustBeginWithSingleSpace.cs,HandleDocumentationCommentExteriorTrivia,Cyclomatic complexity of the method is 29
Complex Method,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 16
Complex Method,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSingleLineCommentTrivia,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,Cyclomatic complexity of the method is 94
Complex Method,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,Cyclomatic complexity of the method is 53
Complex Method,StyleCop.Analyzers.SpacingRules,SA1011ClosingSquareBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1011ClosingSquareBracketsMustBeSpacedCorrectly.cs,HandleCloseBracketToken,Cyclomatic complexity of the method is 33
Complex Method,StyleCop.Analyzers.SpacingRules,SA1015ClosingGenericBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1015ClosingGenericBracketsMustBeSpacedCorrectly.cs,HandleGreaterThanToken,Cyclomatic complexity of the method is 30
Complex Method,StyleCop.Analyzers.SpacingRules,SA1019MemberAccessSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1019MemberAccessSymbolsMustBeSpacedCorrectly.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.SpacingRules,SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly.cs,HandleIncrementDecrementToken,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,Cyclomatic complexity of the method is 21
Complex Method,StyleCop.Analyzers.SpacingRules,SA1024ColonsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1024ColonsMustBeSpacedCorrectly.cs,HandleColonToken,Cyclomatic complexity of the method is 22
Complex Method,StyleCop.Analyzers.SpacingRules,SA1027UseTabsCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1027UseTabsCorrectly.cs,ReportIncorrectTabUsage,Cyclomatic complexity of the method is 21
Complex Method,StyleCop.Analyzers.SpacingRules,SA1027UseTabsCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1027UseTabsCorrectly.cs,LocateExcludedSpans,Cyclomatic complexity of the method is 16
Complex Method,StyleCop.Analyzers.SpacingRules,SA1028CodeMustNotContainTrailingWhitespace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1028CodeMustNotContainTrailingWhitespace.cs,HandleSyntaxTree,Cyclomatic complexity of the method is 32
Long Parameter List,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleXmlElement,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The method has 7 parameters.
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1623,The method has 7 parameters.
Long Parameter List,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1624,The method has 6 parameters.
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1604ElementDocumentationMustHaveSummary,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1604ElementDocumentationMustHaveSummary.cs,HandleXmlElement,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1606ElementDocumentationMustHaveSummaryText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1606ElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.OrderingRules,SA1202ElementsMustBeOrderedByAccess,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1202ElementsMustBeOrderedByAccess.cs,HandleMemberList,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The method has 5 parameters.
Long Parameter List,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The method has 6 parameters.
Long Identifier,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the parameter systemUsingDirectivesShouldBeBeforeThisName is 43.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,GetIdentifier,The length of the parameter objectCreationExpressionSyntax is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1122UseStringEmptyForEmptyStrings,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1122UseStringEmptyForEmptyStrings.cs,HasToBeConstant,The length of the parameter localDeclarationStatementSyntax is 31.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,HandleAnonymousObjectCreationExpression,The length of the parameter anonymousObjectCreationExpression is 33.
Long Statement,StyleCop.Analyzers,SettingsHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\SettingsHelper.cs,GetStyleCopSettings,The length of the statement  "	return GetStyleCopSettings (options != null ? options.AdditionalFiles : ImmutableArray.Create<AdditionalText> ()' failureBehavior' cancellationToken); " is 150.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDeclaration,The length of the statement  "	if (this.inheritDocSuppressesWarnings && documentation.Content.GetFirstXmlElement (XmlCommentHelper.InheritdocXmlTag) != null) { " is 128.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDeclaration,The length of the statement  "	IEnumerable<XmlNodeSyntax> matchingXmlElements = string.IsNullOrEmpty (this.matchElementName) ? documentation.Content.Where (x => x is XmlElementSyntax || x is XmlEmptyElementSyntax).Where (x => !string.Equals (x.GetName ().ToString ()' XmlCommentHelper.IncludeXmlTag' StringComparison.Ordinal)) : documentation.Content.GetXmlElements (this.matchElementName); " is 359.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDeclaration,The length of the statement  "			var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationBase.cs,HandleDeclaration,The length of the statement  "			if (this.inheritDocSuppressesWarnings && completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 161.
Long Statement,StyleCop.Analyzers.DocumentationRules,ElementDocumentationSummaryBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\ElementDocumentationSummaryBase.cs,HandleDeclaration,The length of the statement  "			var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (TypeDeclarationAction' SyntaxKind.ClassDeclaration' SyntaxKind.StructDeclaration' SyntaxKind.InterfaceDeclaration); " is 149.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "		rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "		var typeParameterAttributes = completeDocumentation.Nodes ().OfType<XElement> ().Where (element => element.Name == XmlCommentHelper.TypeParamXmlTag).ToImmutableArray (); " is 169.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "		// Check based on the documented type parameters' as we must detect scenarios where there are too many type parameters documented. " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleDeclaration,The length of the statement  "		// Check based on the documented type parameters' as we must detect scenarios where there are too many type parameters documented. " is 130.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The length of the statement  "	var typeParameterName = (index < typeParameterList.Parameters.Count) ? typeParameterList.Parameters [index].Identifier.ValueText : null; " is 136.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The length of the statement  "	var matchingTypeParameter = typeParameterList.Parameters.FirstOrDefault (tp => string.Equals (tp.Identifier.ValueText' documentedParameterName' StringComparison.Ordinal)); " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (SA1620WrongOrderDescriptor' locationToReport' documentedParameterName' typeParameterList.Parameters.IndexOf (matchingTypeParameter) + 1)); " is 183.
Long Statement,StyleCop.Analyzers.DocumentationRules,GenericTypeParameterDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\GenericTypeParameterDocumentationAnalyzer.cs,HandleTypeParamElement,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (SA1620MissingTypeParameterDescriptor' locationToReport' documentedParameterName)); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleDeclaration,The length of the statement  "				rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,HandleDeclaration,The length of the statement  "			if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertyDocumentationBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertyDocumentationBase.cs,HandleDeclaration,The length of the statement  "			var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertyDocumentationBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertyDocumentationBase.cs,HandleDeclaration,The length of the statement  "			if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,HandleXmlElement,The length of the statement  "		AnalyzeSummaryElement (context' syntax' diagnosticLocation' propertyDeclaration' resourceManager.GetString (nameof (DocumentationResources.StartingTextGetsWhether)' culture)' resourceManager.GetString (nameof (DocumentationResources.StartingTextSetsWhether)' culture)' resourceManager.GetString (nameof (DocumentationResources.StartingTextGetsOrSetsWhether)' culture)); " is 369.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,HandleXmlElement,The length of the statement  "		AnalyzeSummaryElement (context' syntax' diagnosticLocation' propertyDeclaration' resourceManager.GetString (nameof (DocumentationResources.StartingTextGets)' culture)' resourceManager.GetString (nameof (DocumentationResources.StartingTextSets)' culture)' resourceManager.GetString (nameof (DocumentationResources.StartingTextGetsOrSets)' culture)); " is 348.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "			var propertyAccessibility = propertyDeclaration.GetEffectiveAccessibility (context.SemanticModel' context.CancellationToken); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "			bool propertyOnlyInternal = propertyAccessibility == Accessibility.Internal || propertyAccessibility == Accessibility.ProtectedAndInternal || propertyAccessibility == Accessibility.Private; " is 189.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "				ReportSA1623 (context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextGetsOrSets' unexpectedStartingText1: startingTextGets' unexpectedStartingText2: startingTextSets); " is 203.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "					ReportSA1624 (context' diagnosticLocation' diagnosticProperties' accessor: "get"' expectedStartingText: startingTextGets' startingTextToRemove: startingTextGetsOrSets); " is 168.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "					ReportSA1623 (context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextGets' unexpectedStartingText1: startingTextSets); " is 154.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "				ReportSA1623 (context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextGets' unexpectedStartingText1: startingTextSets' unexpectedStartingText2: startingTextGetsOrSets); " is 203.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "					ReportSA1624 (context' diagnosticLocation' diagnosticProperties' accessor: "set"' expectedStartingText: startingTextSets' startingTextToRemove: startingTextGetsOrSets); " is 168.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "					ReportSA1623 (context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextSets' unexpectedStartingText1: startingTextGets); " is 154.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The length of the statement  "				ReportSA1623 (context' diagnosticLocation' diagnosticProperties' text' expectedStartingText: startingTextSets' unexpectedStartingText1: startingTextGetsOrSets' unexpectedStartingText2: startingTextGets); " is 203.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1623,The length of the statement  "	} else if ((unexpectedStartingText2 != null) && text.StartsWith (unexpectedStartingText2' StringComparison.OrdinalIgnoreCase)) { " is 128.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1623,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (SA1623Descriptor' diagnosticLocation' diagnosticProperties.ToImmutable ()' expectedStartingText)); " is 143.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,ReportSA1624,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (SA1624Descriptor' diagnosticLocation' diagnosticProperties.ToImmutable ()' accessor' expectedStartingText)); " is 153.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1604ElementDocumentationMustHaveSummary,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1604ElementDocumentationMustHaveSummary.cs,HandleXmlElement,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.SummaryXmlTag)) { " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1604ElementDocumentationMustHaveSummary,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1604ElementDocumentationMustHaveSummary.cs,HandleXmlElement,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1605PartialElementDocumentationMustHaveSummary,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1605PartialElementDocumentationMustHaveSummary.cs,HandleXmlElement,The length of the statement  "		var hasSummaryTag = completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1605PartialElementDocumentationMustHaveSummary,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1605PartialElementDocumentationMustHaveSummary.cs,HandleXmlElement,The length of the statement  "		var hasContentTag = completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.ContentXmlTag); " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1606ElementDocumentationMustHaveSummaryText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1606ElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The length of the statement  "		XElement summaryNode = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 149.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1607PartialElementDocumentationMustHaveSummaryText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1607PartialElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The length of the statement  "		var summaryTag = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 143.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1607PartialElementDocumentationMustHaveSummaryText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1607PartialElementDocumentationMustHaveSummaryText.cs,HandleXmlElement,The length of the statement  "		var contentTag = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.ContentXmlTag); " is 143.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1608ElementDocumentationMustNotHaveDefaultSummary,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1608ElementDocumentationMustNotHaveDefaultSummary.cs,HandleCompleteDocumentation,The length of the statement  "	var includedSummaryElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 155.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1609PropertyDocumentationMustHaveValue,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1609PropertyDocumentationMustHaveValue.cs,HandleXmlElement,The length of the statement  "		var hasValueTag = completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.ValueXmlTag); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1610PropertyDocumentationMustHaveValueText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1610PropertyDocumentationMustHaveValueText.cs,HandleXmlElement,The length of the statement  "		var valueTag = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.ValueXmlTag); " is 139.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,HandleXmlElement,The length of the statement  "	var xmlParameterNames = syntaxList.Select (XmlCommentHelper.GetFirstAttributeOrDefault<XmlNameAttributeSyntax>).Where (x => x != null).Select (x => x.Identifier.Identifier.ValueText); " is 183.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,HandleCompleteDocumentation,The length of the statement  "	var paramElements = completeDocumentation.Nodes ().OfType<XElement> ().Where (e => e.Name == XmlCommentHelper.ParamXmlTag); " is 123.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,HandleCompleteDocumentation,The length of the statement  "	var xmlParameterNames = paramElements.SelectMany (p => p.Attributes ().Where (a => a.Name == "name")).Select (a => a.Value); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,GetParameters,The length of the statement  "	return (node as BaseMethodDeclarationSyntax).ParameterList.Parameters ?? (node as IndexerDeclarationSyntax).ParameterList.Parameters ?? (node as DelegateDeclarationSyntax).ParameterList.Parameters; " is 197.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1611ElementParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1611ElementParametersMustBeDocumented.cs,ReportMissingParameters,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' parameter.Identifier.GetLocation ()' parameter.Identifier.ValueText)); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleXmlElement,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (MissingParameterDescriptor' location ?? identifierLocation' nameAttributeText)); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleXmlElement,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (OrderDescriptor' location ?? identifierLocation' nameAttributeText' parentParameters.IndexOf (parentParameter) + 1)); " is 162.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleCompleteDocumentation,The length of the statement  "	var xmlParamTags = completeDocumentation.Nodes ().OfType<XElement> ().Where (e => e.Name == XmlCommentHelper.ParamXmlTag); " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,HandleCompleteDocumentation,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (OrderDescriptor' identifierLocation' nameAttributeText' parentParameters.IndexOf (parentParameter) + 1)); " is 150.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,GetParameters,The length of the statement  "	return (node as BaseMethodDeclarationSyntax).ParameterList.Parameters ?? (node as IndexerDeclarationSyntax).ParameterList.Parameters ?? (node as DelegateDeclarationSyntax).ParameterList.Parameters; " is 197.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1612ElementParameterDocumentationMustMatchElementParameters,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1612ElementParameterDocumentationMustMatchElementParameters.cs,GetIdentifier,The length of the statement  "	return (node as MethodDeclarationSyntax).Identifier ?? (node as IndexerDeclarationSyntax).ThisKeyword ?? (node as DelegateDeclarationSyntax).Identifier; " is 152.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1613ElementParameterDocumentationMustDeclareParameterName,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1613ElementParameterDocumentationMustDeclareParameterName.cs,HandleCompleteDocumentation,The length of the statement  "	var xmlParamTags = completeDocumentation.Nodes ().OfType<XElement> ().Where (e => e.Name == XmlCommentHelper.ParamXmlTag); " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1614ElementParameterDocumentationMustHaveText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1614ElementParameterDocumentationMustHaveText.cs,HandleCompleteDocumentation,The length of the statement  "	var xmlParamTags = completeDocumentation.Nodes ().OfType<XElement> ().Where (e => e.Name == XmlCommentHelper.ParamXmlTag); " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDeclaration,The length of the statement  "		var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDeclaration,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615ElementReturnValueMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1615ElementReturnValueMustBeDocumented.cs,HandleDeclaration,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.ReturnsXmlTag)) { " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1616ElementReturnValueDocumentationMustHaveText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1616ElementReturnValueDocumentationMustHaveText.cs,HandleCompleteDocumentation,The length of the statement  "	var returnsNodes = completeDocumentation.Nodes ().OfType<XElement> ().Where (n => n.Name == XmlCommentHelper.ReturnsXmlTag); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,The length of the statement  "			rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,The length of the statement  "			if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1617VoidReturnValueMustNotBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1617VoidReturnValueMustNotBeDocumented.cs,HandleMember,The length of the statement  "			var includedReturnsElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.ReturnsXmlTag); " is 155.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "		rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "		var typeParameterAttributes = completeDocumentation.Nodes ().OfType<XElement> ().Where (element => element.Name == XmlCommentHelper.TypeParamXmlTag).Select (element => element.Attribute (XmlCommentHelper.NameArgumentName)).Where (x => x != null); " is 246.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' parameter.Identifier.GetLocation ()' parameter.Identifier.ValueText)); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "		var xmlParameterNames = documentation.Content.GetXmlElements (XmlCommentHelper.TypeParamXmlTag).Select (XmlCommentHelper.GetFirstAttributeOrDefault<XmlNameAttributeSyntax>).Where (x => x != null).ToImmutableArray (); " is 216.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1618GenericTypeParametersMustBeDocumented,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1618GenericTypeParametersMustBeDocumented.cs,HandleMemberDeclaration,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' parameter.Identifier.GetLocation ()' parameter.Identifier.ValueText)); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "		rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "		if (completeDocumentation.Nodes ().OfType<XElement> ().All (element => element.Name != XmlCommentHelper.SummaryXmlTag)) { " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "		var typeParameterAttributes = completeDocumentation.Nodes ().OfType<XElement> ().Where (element => element.Name == XmlCommentHelper.TypeParamXmlTag).Select (element => element.Attribute (XmlCommentHelper.NameArgumentName)).Where (x => x != null); " is 246.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' parameter.Identifier.GetLocation ()' parameter.Identifier.ValueText)); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "		var xmlParameterNames = documentation.Content.GetXmlElements (XmlCommentHelper.TypeParamXmlTag).Select (XmlCommentHelper.GetFirstAttributeOrDefault<XmlNameAttributeSyntax>).Where (x => x != null).ToImmutableArray (); " is 216.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1619GenericTypeParametersMustBeDocumentedPartialClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1619GenericTypeParametersMustBeDocumentedPartialClass.cs,HandleTypeDeclaration,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' parameter.Identifier.GetLocation ()' parameter.Identifier.ValueText)); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1625ElementDocumentationMustNotBeCopiedAndPasted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1625ElementDocumentationMustNotBeCopiedAndPasted.cs,HandleXmlElement,The length of the statement  "		if (ShouldSkipElement (documentation' resourceManager.GetString (nameof (DocumentationResources.ParameterNotUsed)' culture))) { " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1625ElementDocumentationMustNotBeCopiedAndPasted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1625ElementDocumentationMustNotBeCopiedAndPasted.cs,HandleCompleteDocumentation,The length of the statement  "		if (ShouldSkipElement (documentation' resourceManager.GetString (nameof (DocumentationResources.ParameterNotUsed)' culture))) { " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (SingleLineDocumentationTriviaAction' SyntaxKind.SingleLineDocumentationCommentTrivia); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1627DocumentationTextMustNotBeEmpty,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1627DocumentationTextMustNotBeEmpty.cs,HandleIncludedDocumentation,The length of the statement  "	var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1627DocumentationTextMustNotBeEmpty,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1627DocumentationTextMustNotBeEmpty.cs,HandleIncludedDocumentation,The length of the statement  "	if (completeDocumentation.Nodes ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.InheritdocXmlTag)) { " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1627DocumentationTextMustNotBeEmpty,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1627DocumentationTextMustNotBeEmpty.cs,HandleIncludedDocumentation,The length of the statement  "	var emptyElements = completeDocumentation.Nodes ().OfType<XElement> ().Where (element => ElementsToCheck.Contains (element.Name.ToString ())).Where (x => XmlCommentHelper.IsConsideredEmpty (x)); " is 194.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "	var typeKindText = resourceManager.GetString (isStruct ? nameof (DocumentationResources.TypeTextStruct) : nameof (DocumentationResources.TypeTextClass)' culture); " is 162.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "		HandleDeclaration (context' string.Format (resourceManager.GetString (nameof (DocumentationResources.StaticConstructorStandardTextFirstPart)' culture)' typeKindText)' string.Format (resourceManager.GetString (nameof (DocumentationResources.StaticConstructorStandardTextSecondPart)' culture)' typeKindText)' Descriptor); " is 319.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "		var privateConstructorMatch = HandleDeclaration (context' string.Format (resourceManager.GetString (nameof (DocumentationResources.PrivateConstructorStandardTextFirstPart)' culture)' typeKindText)' string.Format (resourceManager.GetString (nameof (DocumentationResources.PrivateConstructorStandardTextSecondPart)' culture)' typeKindText)' null); " is 345.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "		HandleDeclaration (context' string.Format (resourceManager.GetString (nameof (DocumentationResources.NonPrivateConstructorStandardTextFirstPart)' culture)' typeKindText)' string.Format (resourceManager.GetString (nameof (DocumentationResources.NonPrivateConstructorStandardTextSecondPart)' culture)' typeKindText)' Descriptor); " is 327.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642ConstructorSummaryDocumentationMustBeginWithStandardText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1642ConstructorSummaryDocumentationMustBeginWithStandardText.cs,HandleConstructorDeclaration,The length of the statement  "		HandleDeclaration (context' string.Format (resourceManager.GetString (nameof (DocumentationResources.NonPrivateConstructorStandardTextFirstPart)' culture)' typeKindText)' string.Format (resourceManager.GetString (nameof (DocumentationResources.NonPrivateConstructorStandardTextSecondPart)' culture)' typeKindText)' Descriptor); " is 327.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1643DestructorSummaryDocumentationMustBeginWithStandardText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1643DestructorSummaryDocumentationMustBeginWithStandardText.cs,HandleDestructor,The length of the statement  "	HandleDeclaration (context' resourceManager.GetString (nameof (DocumentationResources.DestructorStandardTextFirstPart)' culture)' resourceManager.GetString (nameof (DocumentationResources.DestructorStandardTextSecondPart)' culture)' Descriptor); " is 245.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,The length of the statement  "	var includeElement = documentation.Content.GetFirstXmlElement (XmlCommentHelper.IncludeXmlTag) as XmlEmptyElementSyntax; " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,The length of the statement  "		var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleBaseTypeLikeDeclaration,The length of the statement  "		var inheritDocElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.InheritdocXmlTag); " is 153.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,The length of the statement  "	var includeElement = documentation.Content.GetFirstXmlElement (XmlCommentHelper.IncludeXmlTag) as XmlEmptyElementSyntax; " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,The length of the statement  "		var rawDocumentation = declaredSymbol.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 134.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1648InheritDocMustBeUsedWithInheritingClass,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1648InheritDocMustBeUsedWithInheritingClass.cs,HandleMemberDeclaration,The length of the statement  "		var inheritDocElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.InheritdocXmlTag); " is 153.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1651DoNotUsePlaceholderElements,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1651DoNotUsePlaceholderElements.cs,IncludedDocumentationContainsPlaceHolderTags,The length of the statement  "	var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1651DoNotUsePlaceholderElements,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1651DoNotUsePlaceholderElements.cs,IncludedDocumentationContainsPlaceHolderTags,The length of the statement  "	return completeDocumentation.DescendantNodesAndSelf ().OfType<XElement> ().Any (element => element.Name == XmlCommentHelper.PlaceholderTag); " is 140.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "	var includeElement = documentationStructure.Content.GetFirstXmlElement (XmlCommentHelper.IncludeXmlTag) as XmlEmptyElementSyntax; " is 129.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "		var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "		var summaryElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag); " is 147.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The length of the statement  "		var summaryElement = documentationStructure.Content.GetFirstXmlElement (XmlCommentHelper.SummaryXmlTag) as XmlElementSyntax; " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "	XmlCrefAttributeSyntax crefAttribute = XmlCommentHelper.GetFirstAttributeOrDefault<XmlCrefAttributeSyntax> (classReferencePart); " is 128.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "	INamedTypeSymbol actualSymbol = semanticModel.GetSymbolInfo (crefSyntax' context.CancellationToken).Symbol as INamedTypeSymbol; " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "	INamedTypeSymbol expectedSymbol = semanticModel.GetDeclaredSymbol (constructorDeclarationSyntax.Parent' context.CancellationToken) as INamedTypeSymbol; " is 151.
Long Statement,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,SeeTagIsCorrect,The length of the statement  "	INamedTypeSymbol expectedSymbol = semanticModel.GetDeclaredSymbol (constructorDeclarationSyntax.Parent' context.CancellationToken) as INamedTypeSymbol; " is 151.
Long Statement,StyleCop.Analyzers.Helpers,DiagnosticOptionsHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DiagnosticOptionsHelper.cs,IsAnalyzerSuppressed,The length of the statement  "	return compilationOptions.SpecificDiagnosticOptions.GetValueOrDefault (diagnosticId' ReportDiagnostic.Default) == ReportDiagnostic.Suppress; " is 140.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,ReplaceExteriorTrivia,The length of the statement  "	return node.ReplaceTrivia (node.DescendantTrivia (descendIntoTrivia: true).Where (i => i.IsKind (SyntaxKind.DocumentationCommentExteriorTrivia))' (originalTrivia' rewrittenTrivia) => SelectExteriorTrivia (rewrittenTrivia' trivia' triviaWithSpace)); " is 248.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The length of the statement  "				SyntaxToken newFirstToken = SyntaxFactory.Token (firstTextToken.LeadingTrivia' firstTextToken.Kind ()' trimmed' firstTextToken.ValueText.TrimStart ()' firstTextToken.TrailingTrivia); " is 182.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The length of the statement  "				summaryContent = summaryContent.Replace (firstTextSyntax' firstTextSyntax.ReplaceToken (firstTextToken' newFirstToken)); " is 120.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,AdjustDocumentationCommentNewLineTrivia,The length of the statement  "	let next = token.GetNextToken (includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true) " is 137.
Long Statement,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,AdjustDocumentationCommentNewLineTrivia,The length of the statement  "		replacements [pair.Value] = pair.Value.WithLeadingTrivia (pair.Value.LeadingTrivia.InsertRange (0' pair.Key.TrailingTrivia)); " is 125.
Long Statement,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseXmlFileHeader,The length of the statement  "		xmlString = ProcessSingleLineCommentsHeader (firstToken.LeadingTrivia' firstNonWhitespaceTrivia' out fileHeaderStart' out fileHeaderEnd); " is 137.
Long Statement,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseXmlFileHeader,The length of the statement  "		xmlString = ProcessMultiLineCommentsHeader (firstToken.LeadingTrivia [firstNonWhitespaceTrivia]' out fileHeaderStart' out fileHeaderEnd); " is 137.
Long Statement,StyleCop.Analyzers.Helpers,FileNameHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileNameHelpers.cs,GetStyleCopFileName,The length of the statement  "	var typeParameterList = string.Join ("'"' typeDeclaration.TypeParameterList.Parameters.Select (p => p.Identifier.ValueText)); " is 125.
Long Statement,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,GetAccessLevelForOrdering,The length of the statement  "	if ((type == SyntaxKind.ConstructorDeclaration && modifiers.Any (SyntaxKind.StaticKeyword)) || (type == SyntaxKind.MethodDeclaration && ((MethodDeclarationSyntax)member).ExplicitInterfaceSpecifier != null) || (type == SyntaxKind.PropertyDeclaration && ((PropertyDeclarationSyntax)member).ExplicitInterfaceSpecifier != null) || (type == SyntaxKind.IndexerDeclaration && ((IndexerDeclarationSyntax)member).ExplicitInterfaceSpecifier != null)) { " is 442.
Long Statement,StyleCop.Analyzers.Helpers,NamedTypeHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\NamedTypeHelpers.cs,GetNameOrIdentifierLocation,The length of the statement  "	location = location ?? (member as FieldDeclarationSyntax).Declaration.Variables.FirstOrDefault ().Identifier.GetLocation (); " is 124.
Long Statement,StyleCop.Analyzers.Helpers,NamedTypeHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\NamedTypeHelpers.cs,IsImplementingAnInterfaceMember,The length of the statement  "	return typeSymbol != null && typeSymbol.AllInterfaces.SelectMany (m => m.GetMembers (memberSymbol.Name)).Select (typeSymbol.FindImplementationForInterfaceMember).Any (x => memberSymbol.Equals (x)); " is 197.
Long Statement,StyleCop.Analyzers.Helpers,SyntaxTreeHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SyntaxTreeHelpers.cs,GetOrCreateUsingAliasCache,The length of the statement  "		var replacementCache = Tuple.Create (new WeakReference<Compilation> (compilation)' new ConcurrentDictionary<SyntaxTree' bool> ()); " is 130.
Long Statement,StyleCop.Analyzers.Helpers,SyntaxTreeHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SyntaxTreeHelpers.cs,IsWhitespaceOnly,The length of the statement  "	return firstToken.IsKind (SyntaxKind.EndOfFileToken) && TriviaHelper.IndexOfFirstNonWhitespaceTrivia (firstToken.LeadingTrivia) == -1; " is 134.
Long Statement,StyleCop.Analyzers.Helpers,SyntaxTreeHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\SyntaxTreeHelpers.cs,ContainsUsingAliasNoCache,The length of the statement  "	var nodes = tree.GetRoot ().DescendantNodes (node => node.IsKind (SyntaxKind.CompilationUnit) || node.IsKind (SyntaxKind.NamespaceDeclaration)); " is 144.
Long Statement,StyleCop.Analyzers.Helpers,TokenHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TokenHelper.cs,IsLastInLine,The length of the statement  "	if (tokenLineSpan.EndLinePosition.Line != fullLineSpan.EndLinePosition.Line || token.SyntaxTree.Length == token.FullSpan.End) { " is 127.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutTrailingWhitespace,The length of the statement  "	return (trailingWhitespaceIndex >= 0) ? SyntaxFactory.TriviaList (triviaList.Take (trailingWhitespaceIndex)) : triviaList; " is 122.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutLeadingWhitespace,The length of the statement  "	return (nonWhitespaceIndex >= 0) ? SyntaxFactory.TriviaList (triviaList.Skip (nonWhitespaceIndex)) : SyntaxFactory.TriviaList (); " is 129.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,WithoutLeadingBlankLines,The length of the statement  "	var newLeadingTrivia = SyntaxFactory.TriviaList (triviaList.Take (blankLinesStart).Concat (triviaList.Skip (leadingWhitespaceStart))); " is 134.
Long Statement,StyleCop.Analyzers.Helpers,TriviaHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\TriviaHelper.cs,HasBuiltinEndLine,The length of the statement  "	return trivia.IsDirective || trivia.IsKind (SyntaxKind.SingleLineDocumentationCommentTrivia) || trivia.IsKind (SyntaxKind.EndOfLineTrivia); " is 139.
Long Statement,StyleCop.Analyzers.Helpers,XmlFileHeader,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlFileHeader.cs,GetElementLocation,The length of the statement  "	var headerSourceText = syntaxTree.GetText ().GetSubText (TextSpan.FromBounds (this.fileHeaderStart' this.fileHeaderEnd)).ToString (); " is 133.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,DocumentationComment,The length of the statement  "	return SyntaxFactory.DocumentationCommentTrivia (SyntaxKind.SingleLineDocumentationCommentTrivia' List (content)).WithLeadingTrivia (SyntaxFactory.DocumentationCommentExterior ("/// ")).WithTrailingTrivia (SyntaxFactory.EndOfLine (newLineText)); " is 245.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,MultiLineElement,The length of the statement  "	return SyntaxFactory.XmlElement (SyntaxFactory.XmlElementStartTag (name)' content.Insert (0' NewLine (newLineText)).Add (NewLine (newLineText))' SyntaxFactory.XmlElementEndTag (name)); " is 184.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,Element,The length of the statement  "	return SyntaxFactory.XmlElement (SyntaxFactory.XmlElementStartTag (name)' content' SyntaxFactory.XmlElementEndTag (name)); " is 122.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,TextAttribute,The length of the statement  "	return SyntaxFactory.XmlTextAttribute (name' SyntaxFactory.Token (quoteKind)' textTokens' SyntaxFactory.Token (quoteKind)).WithLeadingTrivia (SyntaxFactory.Whitespace (" ")); " is 174.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,NameAttribute,The length of the statement  "	return SyntaxFactory.XmlNameAttribute (SyntaxFactory.XmlName (XmlCommentHelper.NameArgumentName)' SyntaxFactory.Token (SyntaxKind.DoubleQuoteToken)' parameterName' SyntaxFactory.Token (SyntaxKind.DoubleQuoteToken)).WithLeadingTrivia (SyntaxFactory.Whitespace (" ")); " is 266.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,CrefAttribute,The length of the statement  "	return SyntaxFactory.XmlCrefAttribute (SyntaxFactory.XmlName (XmlCommentHelper.CrefArgumentName)' SyntaxFactory.Token (quoteKind)' cref' SyntaxFactory.Token (quoteKind)).WithLeadingTrivia (SyntaxFactory.Whitespace (" ")); " is 221.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,TextNewLine,The length of the statement  "	SyntaxToken token = SyntaxFactory.XmlTextNewLine (SyntaxFactory.TriviaList ()' text' text' SyntaxFactory.TriviaList ()); " is 120.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ThreadSafetyElement,The length of the statement  "	return EmptyElement ("threadsafety").AddAttributes (TextAttribute ("static"' @static.ToString ().ToLowerInvariant ())' TextAttribute ("instance"' instance.ToString ().ToLowerInvariant ())); " is 189.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "	if (rewrittenToken.IsKind (SyntaxKind.LessThanToken) && string.Equals ("<"' rewrittenToken.Text' StringComparison.Ordinal)) { " is 125.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "		return SyntaxFactory.Token (rewrittenToken.LeadingTrivia' SyntaxKind.LessThanToken' "{"' rewrittenToken.ValueText' rewrittenToken.TrailingTrivia); " is 146.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "	if (rewrittenToken.IsKind (SyntaxKind.GreaterThanToken) && string.Equals (">"' rewrittenToken.Text' StringComparison.Ordinal)) { " is 128.
Long Statement,StyleCop.Analyzers.Helpers,XmlSyntaxFactory,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlSyntaxFactory.cs,ReplaceBraceTokens,The length of the statement  "		return SyntaxFactory.Token (rewrittenToken.LeadingTrivia' SyntaxKind.GreaterThanToken' "}"' rewrittenToken.ValueText' rewrittenToken.TrailingTrivia); " is 149.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "				if (MemberOrderHelper.GetAccessLevelForOrdering (members [i + 1]' members [i + 1].GetModifiers ()) != MemberOrderHelper.GetAccessLevelForOrdering (members [i]' members [i].GetModifiers ())) { " is 191.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "		elementSyntaxKind = elementSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : elementSyntaxKind; " is 124.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "		nextElementSyntaxKind = nextElementSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : nextElementSyntaxKind; " is 136.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1201ElementsMustAppearInTheCorrectOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1201ElementsMustAppearInTheCorrectOrder.cs,HandleMemberList,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' NamedTypeHelpers.GetNameOrIdentifierLocation (members [i + 1])' MemberNames [nextElementSyntaxKind]' MemberNames [elementSyntaxKind])); " is 192.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1202ElementsMustBeOrderedByAccess,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1202ElementsMustBeOrderedByAccess.cs,HandleMemberList,The length of the statement  "		currentSyntaxKind = currentSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : currentSyntaxKind; " is 124.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1202ElementsMustBeOrderedByAccess,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1202ElementsMustBeOrderedByAccess.cs,HandleMemberList,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' NamedTypeHelpers.GetNameOrIdentifierLocation (member)' AccessLevelHelper.GetName (currentAccessLevel)' AccessLevelHelper.GetName (previousAccessLevel))); " is 210.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1204StaticElementsMustAppearBeforeInstanceElements,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1204StaticElementsMustAppearBeforeInstanceElements.cs,HandleMemberList,The length of the statement  "		currentSyntaxKind = currentSyntaxKind == SyntaxKind.EventFieldDeclaration ? SyntaxKind.EventDeclaration : currentSyntaxKind; " is 124.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1204StaticElementsMustAppearBeforeInstanceElements,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1204StaticElementsMustAppearBeforeInstanceElements.cs,HandleMemberList,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' NamedTypeHelpers.GetNameOrIdentifierLocation (member)' AccessLevelHelper.GetName (currentAccessLevel))); " is 161.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1205PartialElementsMustDeclareAccess,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1205PartialElementsMustDeclareAccess.cs,HandleTypeDeclaration,The length of the statement  "		if (!typeDeclarationNode.Modifiers.Any (SyntaxKind.PublicKeyword) && !typeDeclarationNode.Modifiers.Any (SyntaxKind.InternalKeyword) && !typeDeclarationNode.Modifiers.Any (SyntaxKind.ProtectedKeyword) && !typeDeclarationNode.Modifiers.Any (SyntaxKind.PrivateKeyword)) { " is 269.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CheckModifiersOrderAndReportDiagnostics,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' modifier.GetLocation ()' modifier.ValueText' previousModifier.ValueText)); " is 131.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CheckModifiersOrderAndReportDiagnostics,The length of the statement  "		if (AccessOrStaticModifierNotFollowingOtherModifier (currentModifierType' previousModifierType) && otherModifiersAppearEarlier) { " is 129.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,CheckModifiersOrderAndReportDiagnostics,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' modifier.GetLocation ()' modifier.ValueText' previousOtherModifier.ValueText)); " is 136.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "		if (usingDirective.Alias != null || !usingDirective.StaticKeyword.IsKind (SyntaxKind.None) || usingDirective.IsPrecededByPreprocessorDirective ()) { " is 148.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' usingDirective.GetLocation ()' usingDirective.Name.ToNormalizedString ()' systemUsingDirectivesShouldBeBeforeThisName)); " is 177.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "			if (!previousUsing.IsSystemUsingDirective () || previousUsing.HasNamespaceAliasQualifier () || previousUsing.StaticKeyword.Kind () != SyntaxKind.None) { " is 152.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1208SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' usingDirective.GetLocation ()' usingDirective.Name.ToNormalizedString ()' systemUsingDirectivesShouldBeBeforeThisName)); " is 177.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1209UsingAliasDirectivesMustBePlacedAfterOtherUsingDirectives,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1209UsingAliasDirectivesMustBePlacedAfterOtherUsingDirectives.cs,ProcessUsingsAndReportDiagnostic,The length of the statement  "			if (nextUsingDirective.Alias == null && nextUsingDirective.StaticKeyword.IsKind (SyntaxKind.None) && !nextUsingDirective.IsPrecededByPreprocessorDirective ()) { " is 160.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1210UsingDirectivesMustBeOrderedAlphabeticallyByNamespace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1210UsingDirectivesMustBeOrderedAlphabeticallyByNamespace.cs,ProcessUsings,The length of the statement  "		if (usingDirective.HasNamespaceAliasQualifier () || !usingDirective.IsSystemUsingDirective () || !orderingSettings.SystemUsingDirectivesFirst) { " is 144.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1210UsingDirectivesMustBeOrderedAlphabeticallyByNamespace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1210UsingDirectivesMustBeOrderedAlphabeticallyByNamespace.cs,CheckIncorrectlyOrderedUsingsAndReportDiagnostic,The length of the statement  "			if (CultureInfo.InvariantCulture.CompareInfo.Compare (previousUsingDirective.Name.ToNormalizedString ()' directive.Name.ToNormalizedString ()' CompareOptions.IgnoreCase | CompareOptions.IgnoreNonSpace | CompareOptions.IgnoreWidth) > 0) { " is 237.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1211UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1211UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName.cs,HandleUsingDirectives,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' usingDirective.GetLocation ()' currentAliasName' prevAliasName)); " is 122.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1212PropertyAccessorsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1212PropertyAccessorsMustFollowOrder.cs,AnalyzeProperty,The length of the statement  "	if (accessors [0].Kind () == SyntaxKind.SetAccessorDeclaration && accessors [1].Kind () == SyntaxKind.GetAccessorDeclaration) { " is 127.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1213EventAccessorsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1213EventAccessorsMustFollowOrder.cs,HandleEventDeclaration,The length of the statement  "	if (accessors [0].Kind () == SyntaxKind.RemoveAccessorDeclaration && accessors [1].Kind () == SyntaxKind.AddAccessorDeclaration) { " is 130.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1217UsingStaticDirectivesMustBeOrderedAlphabetically,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1217UsingStaticDirectivesMustBeOrderedAlphabetically.cs,CheckUsingDeclarations,The length of the statement  "				if (CultureInfo.InvariantCulture.CompareInfo.Compare (firstName' secondName' CompareOptions.IgnoreCase | CompareOptions.IgnoreNonSpace | CompareOptions.IgnoreWidth) > 0) { " is 171.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500BracesForMultiLineStatementsMustNotShareLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1500BracesForMultiLineStatementsMustNotShareLine.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 121.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((DoStatementSyntax)ctx.Node).Statement)' SyntaxKind.DoStatement); " is 143.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((WhileStatementSyntax)ctx.Node).Statement)' SyntaxKind.WhileStatement); " is 149.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((ForStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForStatement); " is 145.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((ForEachStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForEachStatement); " is 153.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((LockStatementSyntax)ctx.Node).Statement)' SyntaxKind.LockStatement); " is 147.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((UsingStatementSyntax)ctx.Node).Statement)' SyntaxKind.UsingStatement); " is 149.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleCompilationStart,The length of the statement  "		context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ctx.Node' ((FixedStatementSyntax)ctx.Node).Statement)' SyntaxKind.FixedStatement); " is 149.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleBlock,The length of the statement  "	if ((block != null) && !block.OpenBraceToken.IsMissing && !block.CloseBraceToken.IsMissing && IsPartOfStatement (block)) { " is 122.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502ElementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1502ElementMustNotBeOnASingleLine.cs,HandleBasePropertyDeclaration,The length of the statement  "			CheckViolation (context' basePropertyDeclaration.AccessorList.OpenBraceToken' basePropertyDeclaration.AccessorList.CloseBraceToken); " is 132.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((DoStatementSyntax)ctx.Node).Statement)' SyntaxKind.DoStatement); " is 133.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((WhileStatementSyntax)ctx.Node).Statement)' SyntaxKind.WhileStatement); " is 139.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((ForStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForStatement); " is 135.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((ForEachStatementSyntax)ctx.Node).Statement)' SyntaxKind.ForEachStatement); " is 143.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((FixedStatementSyntax)ctx.Node).Statement)' SyntaxKind.FixedStatement); " is 139.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((UsingStatementSyntax)ctx.Node).Statement)' SyntaxKind.UsingStatement); " is 139.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (ctx => CheckChildStatement (ctx' ((LockStatementSyntax)ctx.Node).Statement)' SyntaxKind.LockStatement); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,HandleIfStatement,The length of the statement  "	if (context.SemanticModel.Compilation.Options.SpecificDiagnosticOptions.GetValueOrDefault (SA1520UseBracesConsistently.DiagnosticId' ReportDiagnostic.Default) != ReportDiagnostic.Suppress) { " is 190.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503BracesMustNotBeOmitted,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1503BracesMustNotBeOmitted.cs,CheckChildStatement,The length of the statement  "	if (context.SemanticModel.Compilation.Options.SpecificDiagnosticOptions.GetValueOrDefault (SA1519BracesMustNotBeOmittedFromMultiLineChildStatement.DiagnosticId' ReportDiagnostic.Default) != ReportDiagnostic.Suppress) { " is 218.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 121.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The length of the statement  "		if (triviaBeforeBlankLines.IsKind (SyntaxKind.SingleLineCommentTrivia) || triviaBeforeBlankLines.IsKind (SyntaxKind.MultiLineCommentTrivia)) { " is 142.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The length of the statement  "	TextSpan span = TextSpan.FromBounds (leadingTrivia [blankLineIndex].SpanStart' leadingTrivia [blankLineEndIndex].Span.End); " is 123.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1508ClosingBracesMustNotBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1508ClosingBracesMustNotBePrecededByBlankLine.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 121.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The length of the statement  "	foreach (var trivia in syntaxRoot.DescendantTrivia ().Where (trivia => trivia.IsKind (SyntaxKind.SingleLineCommentTrivia))) { " is 125.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The length of the statement  "			if (specificDiagnosticOptions.GetValueOrDefault (SA1507CodeMustNotContainMultipleBlankLinesInARow.DiagnosticId' ReportDiagnostic.Default) != ReportDiagnostic.Suppress) { " is 169.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The length of the statement  "	var documentationHeaderIndex = context.Node.GetLeadingTrivia ().IndexOf (SyntaxKind.SingleLineDocumentationCommentTrivia); " is 122.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The length of the statement  "		if (trivia.IsDirective && !trivia.IsKind (SyntaxKind.EndIfDirectiveTrivia) && !trivia.IsKind (SyntaxKind.RegionDirectiveTrivia) && !trivia.IsKind (SyntaxKind.EndRegionDirectiveTrivia)) { " is 186.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,GetDiagnosticLocation,The length of the statement  "	return Location.Create (documentationHeaderStructure.SyntaxTree' documentationHeaderStructure.GetLeadingTrivia ().Span); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,HandleSyntaxTree,The length of the statement  "	foreach (var trivia in syntaxRoot.DescendantTrivia ().Where (trivia => trivia.IsKind (SyntaxKind.SingleLineCommentTrivia))) { " is 125.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsAtStartOfScope,The length of the statement  "	return prevToken.IsKind (SyntaxKind.OpenBraceToken) || prevToken.Parent.IsKind (SyntaxKind.CaseSwitchLabel) || prevToken.Parent.IsKind (SyntaxKind.DefaultSwitchLabel); " is 167.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleCompilationUnit,The length of the statement  "			ReportIfThereIsNoBlankLine (context' compilationUnit.Externs [compilationUnit.Externs.Count - 1]' compilationUnit.Usings [0]); " is 126.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleNamespaceDeclaration,The length of the statement  "			ReportIfThereIsNoBlankLine (context' namespaceDeclaration.Externs [namespaceDeclaration.Externs.Count - 1]' namespaceDeclaration.Usings [0]); " is 141.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The length of the statement  "				var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ()); " is 123.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorRequire' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesRequire)); " is 134.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The length of the statement  "			var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ()); " is 123.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorOmit' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesOmit)); " is 128.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleMemberList,The length of the statement  "			if (!members [i].IsKind (SyntaxKind.FieldDeclaration) || !members [i - 1].IsKind (members [i].Kind ()) || IsMultiline ((FieldDeclarationSyntax)members [i - 1])) { " is 162.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,ReportIfThereIsNoBlankLine,The length of the statement  "	var allTrivia = parent.DescendantTrivia (TextSpan.FromBounds (firstNode.Span.End' secondNode.Span.Start)' descendIntoTrivia: true); " is 131.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1517CodeMustNotContainBlankLinesAtStartOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1517CodeMustNotContainBlankLinesAtStartOfFile.cs,HandleSyntaxTree,The length of the statement  "			var textSpan = TextSpan.FromBounds (leadingTrivia [0].Span.Start' leadingTrivia [firstNonBlankLineTriviaIndex].Span.Start); " is 123.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "		var previousToken = endOfFileToken.GetPreviousToken (includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 160.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "			reportedSpan = TextSpan.FromBounds (previousToken.TrailingTrivia [trailingWhitespaceIndex].SpanStart' reportedSpan.End); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "			reportedSpan = TextSpan.FromBounds (previousToken.TrailingTrivia [trailingWhitespaceIndex].SpanStart' reportedSpan.End); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "			var trailingWhitespaceIndex = TriviaHelper.IndexOfTrailingWhitespace (directiveTriviaSyntax.EndOfDirectiveToken.TrailingTrivia); " is 128.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518UseLineEndingsCorrectlyAtEndOfFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1518UseLineEndingsCorrectlyAtEndOfFile.cs,HandleSyntaxTree,The length of the statement  "				reportedSpan = TextSpan.FromBounds (directiveTriviaSyntax.EndOfDirectiveToken.TrailingTrivia [trailingWhitespaceIndex].SpanStart' reportedSpan.End); " is 148.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1520UseBracesConsistently,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1520UseBracesConsistently.cs,CheckChildStatement,The length of the statement  "	if (context.SemanticModel.Compilation.Options.SpecificDiagnosticOptions.GetValueOrDefault (SA1519BracesMustNotBeOmittedFromMultiLineChildStatement.DiagnosticId' ReportDiagnostic.Default) != ReportDiagnostic.Suppress) { " is 218.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleCompilationStart,The length of the statement  "	if (context.Compilation.Options.SpecificDiagnosticOptions.GetValueOrDefault (Descriptor.Id) != Microsoft.CodeAnalysis.ReportDiagnostic.Suppress) { " is 146.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The length of the statement  "		if (!(node.Expression is BinaryExpressionSyntax) && !(node.Expression is AssignmentExpressionSyntax) && !(node.Expression is PrefixUnaryExpressionSyntax) && !(node.Expression is PostfixUnaryExpressionSyntax) && !node.Expression.IsKind (SyntaxKind.CastExpression) && !node.Expression.IsKind (SyntaxKind.ConditionalExpression) && !node.Expression.IsKind (SyntaxKind.IsExpression) && !node.Expression.IsKind (SyntaxKind.SimpleLambdaExpression) && !node.Expression.IsKind (SyntaxKind.ParenthesizedLambdaExpression) && !node.Expression.IsKind (SyntaxKind.ArrayCreationExpression) && !node.Expression.IsKind (SyntaxKind.CoalesceExpression) && !node.Expression.IsKind (SyntaxKind.QueryExpression) && !node.Expression.IsKind (SyntaxKind.AwaitExpression) && !node.IsKind (SyntaxKind.ConstructorDeclaration)) { " is 800.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The length of the statement  "			if (node.Expression.IsKind (SyntaxKind.ConditionalAccessExpression) && (node.Parent is ElementAccessExpressionSyntax || node.Parent is MemberAccessExpressionSyntax || node.Parent is ConditionalAccessExpressionSyntax)) { " is 219.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The length of the statement  "			if (!(node.Parent is ExpressionSyntax) || node.Parent is CheckedExpressionSyntax || node.Parent is MemberAccessExpressionSyntax) { " is 130.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,HandleSyntaxTree,The length of the statement  "	var preferredTypeNode = typeNodes.FirstOrDefault (n => FileNameHelpers.GetConventionalFileName (n' settings.DocumentationRules.FileNamingConvention) == fileName) ?? typeNodes.FirstOrDefault (); " is 193.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,HandleSyntaxTree,The length of the statement  "		if (typeNode == preferredTypeNode || (isPartialType && foundTypeName == NamedTypeHelpers.GetNameOrIdentifier (typeNode))) { " is 123.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,GetTopLevelTypeDeclarations,The length of the statement  "	var allTypeDeclarations = root.DescendantNodes (descendIntoChildren: node => ContainsTopLevelTypeDeclarations (node)).OfType<MemberDeclarationSyntax> ().ToList (); " is 163.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1403FileMayOnlyContainASingleNamespace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1403FileMayOnlyContainASingleNamespace.cs,HandleSyntaxTree,The length of the statement  "	var descentNodes = syntaxRoot.DescendantNodes (descendIntoChildren: node => node != null && !node.IsKind (SyntaxKind.ClassDeclaration)); " is 136.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1407ArithmeticExpressionsMustDeclarePrecedence,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1407ArithmeticExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "	isSameFamily |= (operatorToken1.IsKind (SyntaxKind.PlusToken) || operatorToken1.IsKind (SyntaxKind.MinusToken)) && (operatorToken2.IsKind (SyntaxKind.PlusToken) || operatorToken2.IsKind (SyntaxKind.MinusToken)); " is 211.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1407ArithmeticExpressionsMustDeclarePrecedence,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1407ArithmeticExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "	isSameFamily |= (operatorToken1.IsKind (SyntaxKind.AsteriskToken) || operatorToken1.IsKind (SyntaxKind.SlashToken)) && (operatorToken2.IsKind (SyntaxKind.AsteriskToken) || operatorToken2.IsKind (SyntaxKind.SlashToken)); " is 219.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1407ArithmeticExpressionsMustDeclarePrecedence,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1407ArithmeticExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "	isSameFamily |= (operatorToken1.IsKind (SyntaxKind.LessThanLessThanToken) || operatorToken1.IsKind (SyntaxKind.GreaterThanGreaterThanToken)) && (operatorToken2.IsKind (SyntaxKind.LessThanLessThanToken) || operatorToken2.IsKind (SyntaxKind.GreaterThanGreaterThanToken)); " is 269.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1408ConditionalExpressionsMustDeclarePrecedence,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1408ConditionalExpressionsMustDeclarePrecedence.cs,HandleBinaryExpression,The length of the statement  "		if (left.OperatorToken.IsKind (SyntaxKind.AmpersandAmpersandToken) || left.OperatorToken.IsKind (SyntaxKind.BarBarToken)) { " is 123.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1408ConditionalExpressionsMustDeclarePrecedence,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1408ConditionalExpressionsMustDeclarePrecedence.cs,HandleBinaryExpression,The length of the statement  "		if (right.OperatorToken.IsKind (SyntaxKind.AmpersandAmpersandToken) || right.OperatorToken.IsKind (SyntaxKind.BarBarToken)) { " is 125.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1408ConditionalExpressionsMustDeclarePrecedence,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1408ConditionalExpressionsMustDeclarePrecedence.cs,IsSameFamily,The length of the statement  "	return (operatorToken1.IsKind (SyntaxKind.AmpersandAmpersandToken) && operatorToken2.IsKind (SyntaxKind.AmpersandAmpersandToken)) || (operatorToken1.IsKind (SyntaxKind.BarBarToken) && operatorToken2.IsKind (SyntaxKind.BarBarToken)); " is 232.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412StoreFilesAsUtf8,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1412StoreFilesAsUtf8.cs,HandleSyntaxTree,The length of the statement  "		ImmutableDictionary<string' string> properties = ImmutableDictionary<string' string>.Empty.SetItem (EncodingProperty' context.Tree.Encoding.WebName ?? "<null>"); " is 161.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412StoreFilesAsUtf8,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1412StoreFilesAsUtf8.cs,HandleSyntaxTree,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (context.Tree' TextSpan.FromBounds (0' 0))' properties)); " is 130.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1413UseTrailingCommasInMultiLineInitializers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1413UseTrailingCommasInMultiLineInitializers.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (HandleAnonymousObjectInitializerAction' SyntaxKind.AnonymousObjectCreationExpression); " is 120.
Long Statement,StyleCop.Analyzers.NamingRules,SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,The length of the statement  "	if (!syntax.Modifiers.Any (SyntaxKind.PublicKeyword) && !syntax.Modifiers.Any (SyntaxKind.ProtectedKeyword) && !syntax.Modifiers.Any (SyntaxKind.InternalKeyword)) { " is 164.
Long Statement,StyleCop.Analyzers.NamingRules,SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,The length of the statement  "		if (context.SemanticModel.Compilation.Options.SpecificDiagnosticOptions.GetValueOrDefault (SA1307AccessibleFieldsMustBeginWithUpperCaseLetter.DiagnosticId' ReportDiagnostic.Default) != ReportDiagnostic.Suppress) { " is 213.
Long Statement,StyleCop.Analyzers.NamingRules,SA1307AccessibleFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1307AccessibleFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,The length of the statement  "	// To improve performance we are looking for the field instead of the declarator directly. That way we don't get called for local variables. " is 140.
Long Statement,StyleCop.Analyzers.NamingRules,SA1307AccessibleFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1307AccessibleFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,The length of the statement  "				if (!string.IsNullOrEmpty (name) && char.IsLower (name [0]) && !NamedTypeHelpers.IsContainedInNativeMethodsClass (declaration)) { " is 129.
Long Statement,StyleCop.Analyzers.NamingRules,SA1308VariableNamesMustNotBePrefixed,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1308VariableNamesMustNotBePrefixed.cs,HandleFieldDeclaration,The length of the statement  "		if (!identifier.ValueText.StartsWith ("m_"' StringComparison.Ordinal) && !identifier.ValueText.StartsWith ("s_"' StringComparison.Ordinal) && !identifier.ValueText.StartsWith ("t_"' StringComparison.Ordinal)) { " is 210.
Long Statement,StyleCop.Analyzers.NamingRules,SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter.cs,HandleFieldDeclaration,The length of the statement  "	if (!fieldDeclaration.Modifiers.Any (SyntaxKind.StaticKeyword) || !fieldDeclaration.Modifiers.Any (SyntaxKind.ReadOnlyKeyword)) { " is 129.
Long Statement,StyleCop.Analyzers.NamingRules,SA1313ParameterNamesMustBeginWithLowerCaseLetter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1313ParameterNamesMustBeginWithLowerCaseLetter.cs,IsInLambda,The length of the statement  "	if (syntax.Parent.Parent.IsKind (SyntaxKind.ParenthesizedLambdaExpression) || syntax.Parent.Parent.IsKind (SyntaxKind.AnonymousMethodExpression)) { " is 147.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1100DoNotPrefixCallsWithBaseUnlessLocalImplementationExists,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1100DoNotPrefixCallsWithBaseUnlessLocalImplementationExists.cs,HandleBaseExpression,The length of the statement  "	var speculativeSymbol = context.SemanticModel.GetSpeculativeSymbolInfo (parent.SpanStart' speculativeExpression' SpeculativeBindingOption.BindAsExpression); " is 156.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleSimpleName,The length of the statement  "		if (((AssignmentExpressionSyntax)context.Node.Parent).Left == context.Node && (context.Node.Parent.Parent.IsKind (SyntaxKind.ObjectInitializerExpression) ?? true)) { " is 165.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1107CodeMustNotContainMultipleStatementsOnOneLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1107CodeMustNotContainMultipleStatementsOnOneLine.cs,HandleBlock,The length of the statement  "			if (previousStatementLocation.EndLinePosition.Line == currentStatementLocation.StartLinePosition.Line && !IsLastTokenMissing (previousStatement)) { " is 147.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1108BlockStatementsMustNotContainEmbeddedComments,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1108BlockStatementsMustNotContainEmbeddedComments.cs,IsComment,The length of the statement  "	var isSingleLineComment = syntaxTrivia.IsKind (SyntaxKind.SingleLineCommentTrivia) && !syntaxTrivia.ToFullString ().StartsWith (@"////"' StringComparison.Ordinal); " is 163.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryExpression,The length of the statement  "		if (((location2.StartLinePosition.Line - location1.EndLinePosition.Line) > 1) && isEnabledSA1102 && !token2.LeadingTrivia.Any (trivia => trivia.IsDirective)) { " is 159.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleAnonymousMethodExpression,The length of the statement  "	if (anonymousMethod.DelegateKeyword.IsMissing || anonymousMethod.ParameterList == null || anonymousMethod.ParameterList.IsMissing || anonymousMethod.ParameterList.OpenParenToken.IsMissing) { " is 190.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleAnonymousMethodExpression,The length of the statement  "	CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' anonymousMethod.ParameterList.OpenParenToken' preserveLayout); " is 125.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleDelegateDeclaration,The length of the statement  "	if (!delegateDeclaration.Identifier.IsMissing && delegateDeclaration.ParameterList != null && !delegateDeclaration.ParameterList.OpenParenToken.IsMissing) { " is 156.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleDelegateDeclaration,The length of the statement  "		CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' delegateDeclaration.ParameterList.OpenParenToken' preserveLayout); " is 129.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleAttribute,The length of the statement  "		if (attribute.ArgumentList != null && !attribute.ArgumentList.OpenParenToken.IsMissing && !identifierNameSyntax.Identifier.IsMissing) { " is 135.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleElementAccessExpression,The length of the statement  "	if (elementAccess.Expression == null || elementAccess.ArgumentList.IsMissing || elementAccess.ArgumentList.OpenBracketToken.IsMissing) { " is 136.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleElementAccessExpression,The length of the statement  "	CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' elementAccess.ArgumentList.OpenBracketToken' preserveLayout); " is 124.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleIndexerDeclaration,The length of the statement  "	if (!indexerDeclaration.ThisKeyword.IsMissing && indexerDeclaration.ParameterList != null && !indexerDeclaration.ParameterList.IsMissing && !indexerDeclaration.ParameterList.OpenBracketToken.IsMissing) { " is 203.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleIndexerDeclaration,The length of the statement  "		CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (obj' indexerDeclaration.ParameterList.OpenBracketToken' preserveLayout); " is 126.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleObjectCreationExpression,The length of the statement  "		CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' objectCreation.ArgumentList.OpenParenToken' preserveLayout); " is 123.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleInvocationExpression,The length of the statement  "	var identifierNameSyntax = invocationExpression.Expression as IdentifierNameSyntax ?? invocationExpression.Expression.DescendantNodes ().OfType<IdentifierNameSyntax> ().LastOrDefault (); " is 186.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleInvocationExpression,The length of the statement  "		if (invocationExpression.ArgumentList != null && !invocationExpression.ArgumentList.OpenParenToken.IsMissing && !identifierNameSyntax.Identifier.IsMissing) { " is 157.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleInvocationExpression,The length of the statement  "			CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' invocationExpression.ArgumentList.OpenParenToken' preserveLayout); " is 129.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleConstructorDeclaration,The length of the statement  "	if (constructotDeclarationSyntax.ParameterList != null && !constructotDeclarationSyntax.ParameterList.OpenParenToken.IsMissing && !constructotDeclarationSyntax.Identifier.IsMissing) { " is 183.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleConstructorDeclaration,The length of the statement  "		CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' constructotDeclarationSyntax.ParameterList.OpenParenToken' preserveLayout); " is 138.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleMethodDeclaration,The length of the statement  "	if (methodDeclaration.ParameterList != null && !methodDeclaration.ParameterList.OpenParenToken.IsMissing && !methodDeclaration.Identifier.IsMissing) { " is 150.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleMethodDeclaration,The length of the statement  "		CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame (context' methodDeclaration.ParameterList.OpenParenToken' preserveLayout); " is 127.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame,The length of the statement  "	if (prevTokenLine.IsValid && openParenLine.IsValid && openParenLine.StartLinePosition.Line != prevTokenLine.StartLinePosition.Line) { " is 133.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,CheckIfLocationOfPreviousTokenAndOpenTokenAreTheSame,The length of the statement  "		var properties = preserveLayout ? TokenSpacingProperties.RemovePrecedingPreserveLayout : TokenSpacingProperties.RemovePreceding; " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleArrayCreationExpression,The length of the statement  "			CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastSize' arrayRankSpecifierSyntax.CloseBracketToken); " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleParenthesizedLambdaExpression,The length of the statement  "	if (lambdaExpressionSyntax.ParameterList == null || lambdaExpressionSyntax.ParameterList.IsMissing || !lambdaExpressionSyntax.ParameterList.Parameters.Any ()) { " is 160.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleParenthesizedLambdaExpression,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastParameter' lambdaExpressionSyntax.ParameterList.CloseParenToken); " is 143.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleAnonymousMethodExpression,The length of the statement  "	if (anonymousMethod.ParameterList == null || anonymousMethod.ParameterList.IsMissing || !anonymousMethod.ParameterList.Parameters.Any ()) { " is 139.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleAnonymousMethodExpression,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastParameter' anonymousMethod.ParameterList.CloseParenToken); " is 136.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleAttribute,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastArgument' attribute.ArgumentList.CloseParenToken); " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleDelegateDeclaration,The length of the statement  "	if (delegateDeclaration.ParameterList == null || delegateDeclaration.ParameterList.IsMissing || !delegateDeclaration.ParameterList.Parameters.Any ()) { " is 151.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleDelegateDeclaration,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastParameter' delegateDeclaration.ParameterList.CloseParenToken); " is 140.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleElementAccessExpression,The length of the statement  "	if (elementAccess.ArgumentList == null || elementAccess.ArgumentList.IsMissing || !elementAccess.ArgumentList.Arguments.Any ()) { " is 129.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleElementAccessExpression,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastArgument' elementAccess.ArgumentList.CloseBracketToken); " is 134.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleInvocationExpression,The length of the statement  "	if (invocationExpression.ArgumentList == null || invocationExpression.ArgumentList.IsMissing || !invocationExpression.ArgumentList.Arguments.Any ()) { " is 150.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleInvocationExpression,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastArgument' invocationExpression.ArgumentList.CloseParenToken); " is 139.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleObjectCreationExpression,The length of the statement  "	if (objectCreation.ArgumentList == null || objectCreation.ArgumentList.IsMissing || !objectCreation.ArgumentList.Arguments.Any ()) { " is 132.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleObjectCreationExpression,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastArgument' objectCreation.ArgumentList.CloseParenToken); " is 133.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleIndexerDeclaration,The length of the statement  "	if (indexerDeclaration.ParameterList == null || indexerDeclaration.ParameterList.IsMissing || !indexerDeclaration.ParameterList.Parameters.Any ()) { " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleIndexerDeclaration,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastParameter' indexerDeclaration.ParameterList.CloseBracketToken); " is 141.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleBaseMethodDeclaration,The length of the statement  "	if (baseMethodDeclarationSyntax.ParameterList == null || baseMethodDeclarationSyntax.ParameterList.IsMissing || !baseMethodDeclarationSyntax.ParameterList.Parameters.Any ()) { " is 175.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,HandleBaseMethodDeclaration,The length of the statement  "		CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame (context' lastParameter' baseMethodDeclarationSyntax.ParameterList.CloseParenToken); " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1111ClosingParenthesisMustBeOnLineOfLastParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1111ClosingParenthesisMustBeOnLineOfLastParameter.cs,CheckIfLocationOfLastArgumentOrParameterAndCloseTokenAreTheSame,The length of the statement  "	if (lastParameterLine.IsValid && closeParenLine.IsValid && closeParenLine.StartLinePosition.Line != lastParameterLine.EndLinePosition.Line) { " is 141.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleObjectCreationExpression,The length of the statement  "	if (objectCreation.ArgumentList == null || objectCreation.ArgumentList.IsMissing || objectCreation.ArgumentList.Arguments.Count > 0) { " is 134.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleObjectCreationExpression,The length of the statement  "		CheckIfLocationOfOpenAndCloseTokensAreTheSame (context' objectCreation.ArgumentList.OpenParenToken' objectCreation.ArgumentList.CloseParenToken); " is 145.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleInvocationExpression,The length of the statement  "	if (invocationExpression.ArgumentList == null || invocationExpression.ArgumentList.IsMissing || invocationExpression.ArgumentList.Arguments.Any ()) { " is 149.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleInvocationExpression,The length of the statement  "	if (!invocationExpression.ArgumentList.OpenParenToken.IsMissing && !invocationExpression.ArgumentList.CloseParenToken.IsMissing) { " is 130.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleInvocationExpression,The length of the statement  "		CheckIfLocationOfOpenAndCloseTokensAreTheSame (context' invocationExpression.ArgumentList.OpenParenToken' invocationExpression.ArgumentList.CloseParenToken); " is 157.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,HandleBaseMethodDeclaration,The length of the statement  "			CheckIfLocationOfOpenAndCloseTokensAreTheSame (context' parameterListSyntax.OpenParenToken' parameterListSyntax.CloseParenToken); " is 129.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1112ClosingParenthesisMustBeOnLineOfOpeningParenthesis.cs,CheckIfLocationOfOpenAndCloseTokensAreTheSame,The length of the statement  "	if (closeParenLine.IsValid && openParenLine.IsValid && openParenLine.StartLinePosition.Line != closeParenLine.StartLinePosition.Line) { " is 135.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeRankSpecifiers,The length of the statement  "		if (openBracketLineSpan.EndLinePosition.Line != firstSizeLineSpan.StartLinePosition.Line && openBracketLineSpan.EndLinePosition.Line != (firstSizeLineSpan.StartLinePosition.Line - 1)) { " is 185.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeAttributeList,The length of the statement  "	if (openBracketLineSpan.EndLinePosition.Line != firstAttributeLineSpan.StartLinePosition.Line && openBracketLineSpan.EndLinePosition.Line != (firstAttributeLineSpan.StartLinePosition.Line - 1)) { " is 195.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeArgumentList,The length of the statement  "	if (openBracketLineSpan.EndLinePosition.Line != firstArgumentLineSpan.StartLinePosition.Line && openBracketLineSpan.EndLinePosition.Line != (firstArgumentLineSpan.StartLinePosition.Line - 1)) { " is 193.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeArgumentList,The length of the statement  "	if (argumentListSyntax == null || argumentListSyntax.OpenParenToken.IsMissing || argumentListSyntax.IsMissing || !argumentListSyntax.Arguments.Any ()) { " is 152.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeArgumentList,The length of the statement  "	if (openParenLineSpan.EndLinePosition.Line != firstArgumentLineSpan.StartLinePosition.Line && openParenLineSpan.EndLinePosition.Line != (firstArgumentLineSpan.StartLinePosition.Line - 1)) { " is 189.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeArgumentList,The length of the statement  "	if (openParenLineSpan.EndLinePosition.Line != firstArgumentLineSpan.StartLinePosition.Line && openParenLineSpan.EndLinePosition.Line != (firstArgumentLineSpan.StartLinePosition.Line - 1)) { " is 189.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeBracketParametersList,The length of the statement  "	if (openBracketLineSpan.EndLinePosition.Line != firstParameterLineSpan.StartLinePosition.Line && openBracketLineSpan.EndLinePosition.Line != (firstParameterLineSpan.StartLinePosition.Line - 1)) { " is 195.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeParametersList,The length of the statement  "	if (parameterListSyntax == null || parameterListSyntax.OpenParenToken.IsMissing || parameterListSyntax.IsMissing || !parameterListSyntax.Parameters.Any ()) { " is 157.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1122UseStringEmptyForEmptyStrings,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1122UseStringEmptyForEmptyStrings.cs,HasToBeConstant,The length of the statement  "	if (outermostExpression.Parent.IsKind (SyntaxKind.AttributeArgument) || outermostExpression.Parent.IsKind (SyntaxKind.CaseSwitchLabel)) { " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1122UseStringEmptyForEmptyStrings,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1122UseStringEmptyForEmptyStrings.cs,HasToBeConstant,The length of the statement  "		LocalDeclarationStatementSyntax localDeclarationStatementSyntax = variableDeclarationSyntax.Parent as LocalDeclarationStatementSyntax; " is 134.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1122UseStringEmptyForEmptyStrings,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1122UseStringEmptyForEmptyStrings.cs,HasToBeConstant,The length of the statement  "		if (localDeclarationStatementSyntax != null && localDeclarationStatementSyntax.Modifiers.Any (SyntaxKind.ConstKeyword)) { " is 121.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1125UseShorthandForNullableTypes,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1125UseShorthandForNullableTypes.cs,HandleGenericName,The length of the statement  "	INamedTypeSymbol symbol = semanticModel.GetSymbolInfo (genericNameSyntax' context.CancellationToken).Symbol as INamedTypeSymbol; " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,HandleAnonymousMethodExpression,The length of the statement  "			var lambdaExpression = SyntaxFactory.ParenthesizedLambdaExpression (anonymousMethod.AsyncKeyword' anonymousMethod.ParameterList ?? EmptyParameterList' SyntaxFactory.Token (SyntaxKind.EqualsGreaterThanToken)' anonymousMethod.Body); " is 230.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130UseLambdaSyntax,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1130UseLambdaSyntax.cs,HandleAnonymousMethodExpression,The length of the statement  "			SymbolInfo newSymbolInfo = context.SemanticModel.GetSpeculativeSymbolInfo (location.SourceSpan.Start' invocationExpression' SpeculativeBindingOption.BindAsExpression); " is 167.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134AttributesMustNotShareLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1134AttributesMustNotShareLine.cs,HandleAttributeList,The length of the statement  "		if ((nextTokenLineSpan.EndLinePosition.Line == attributeListLineSpan.EndLinePosition.Line) && !nextToken.Parent.IsKind (SyntaxKind.AttributeList)) { " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134AttributesMustNotShareLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1134AttributesMustNotShareLine.cs,HandleAttributeList,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' attributeList.OpenBracketToken.GetLocation ()' diagnosticProperties.ToImmutable ())); " is 142.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,Initialize,The length of the statement  "	context.RegisterSyntaxNodeAction (AnonymousObjectCreationExpressionAction' SyntaxKind.AnonymousObjectCreationExpression); " is 121.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The length of the statement  "		string indentation = indentationTrivia.IsKind (SyntaxKind.WhitespaceTrivia) ? indentationTrivia.ToString () : string.Empty; " is 123.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The length of the statement  "		ImmutableDictionary<string' string> properties = ImmutableDictionary.Create<string' string> ().SetItem (ExpectedIndentationKey' expectedIndentation); " is 149.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleGenericName,The length of the statement  "		if (unaryExpressionSyntax.Kind () != SyntaxKind.UnaryPlusExpression && unaryExpressionSyntax.Kind () != SyntaxKind.UnaryMinusExpression) { " is 138.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleGenericName,The length of the statement  "	var castedElementTypeSyntax = unaryExpressionSyntax == null ? castExpressionSyntax.Expression as LiteralExpressionSyntax : unaryExpressionSyntax.Operand as LiteralExpressionSyntax; " is 180.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleGenericName,The length of the statement  "	if (!SyntaxKinds.IntegerLiteralKeyword.Contains (syntaxKindKeyword) && !SyntaxKinds.RealLiteralKeyword.Contains (syntaxKindKeyword)) { " is 134.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139UseLiteralSuffixNotationInsteadOfCasting,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1139UseLiteralSuffixNotationInsteadOfCasting.cs,HandleGenericName,The length of the statement  "	if (context.SemanticModel.GetTypeInfo (castedElementTypeSyntax).Type == context.SemanticModel.GetTypeInfo (castExpressionSyntax).Type) { " is 136.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "		var modifiedStatement = statement.ReplaceNode (memberAccessExpression' memberAccessExpression.Name.WithAdditionalAnnotations (annotation)); " is 139.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "		if (!context.SemanticModel.TryGetSpeculativeSemanticModel (statement.SpanStart' modifiedStatement' out speculativeModel)) { " is 123.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "		var modifiedArrowExpressionClause = arrowExpressionClause.ReplaceNode (memberAccessExpression' memberAccessExpression.Name.WithAdditionalAnnotations (annotation)); " is 163.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SX1101DoNotPrefixLocalMembersWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SX1101DoNotPrefixLocalMembersWithThis.cs,HandleThisExpression,The length of the statement  "		if (!context.SemanticModel.TryGetSpeculativeSemanticModel (arrowExpressionClause.SpanStart' modifiedArrowExpressionClause' out speculativeModel)) { " is 147.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleRequiredSpaceToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertFollowing' token.Text' string.Empty)); " is 146.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleDisallowedSpaceToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing' token.Text' " not")); " is 140.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1000KeywordsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1000KeywordsMustBeSpacedCorrectly.cs,HandleDisallowedSpaceToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing' token.Text' " not")); " is 140.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "		if (nextToken.IsKind (SyntaxKind.CommaToken) || nextToken.IsKind (SyntaxKind.GreaterThanToken) || nextToken.IsKind (SyntaxKind.CloseBracketToken)) { " is 148.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemovePrecedingPreserveLayout' " not"' "preceded")); " is 154.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1001CommasMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1001CommasMustBeSpacedCorrectly.cs,HandleCommaToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertFollowing' string.Empty' "followed")); " is 146.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1002SemicolonsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1002SemicolonsMustBeSpacedCorrectly.cs,HandleSemicolonToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertFollowing' string.Empty' "followed")); " is 146.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1002SemicolonsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1002SemicolonsMustBeSpacedCorrectly.cs,HandleSemicolonToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveImmediatePreceding' " not"' "preceded")); " is 149.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,The length of the statement  "	var followingTrivia = TriviaHelper.MergeTriviaLists (unaryExpression.OperatorToken.TrailingTrivia' followingToken.LeadingTrivia); " is 129.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,The length of the statement  "             */var mustHaveLeadingWhitespace = !(unaryExpression.Parent is PrefixUnaryExpressionSyntax) && !(unaryExpression.Parent is CastExpressionSyntax) && !precedingToken.IsKind (SyntaxKind.OpenParenToken) && !precedingToken.IsKind (SyntaxKind.OpenBracketToken) && !(precedingToken.IsKind (SyntaxKind.OpenBraceToken) && (precedingToken.Parent is InterpolationSyntax)); " is 360.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,The length of the statement  "		if (followingTrivia.Any (SyntaxKind.SingleLineCommentTrivia) || followingTrivia.Any (SyntaxKind.MultiLineCommentTrivia)) { " is 122.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePrefixUnaryExpression,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorNotFollowedByComment' unaryExpression.OperatorToken.GetLocation ()' unaryExpression.OperatorToken.Text)); " is 160.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandlePostfixUnaryExpression,The length of the statement  "	var mustHaveTrailingWhitespace = !followingToken.IsKind (SyntaxKind.CloseParenToken) && !followingToken.IsKind (SyntaxKind.CloseBracketToken) && !followingToken.IsKind (SyntaxKind.SemicolonToken) && !followingToken.IsKind (SyntaxKind.CommaToken) && !(followingToken.IsKind (SyntaxKind.CloseBraceToken) && (followingToken.Parent is InterpolationSyntax)); " is 353.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandleCastExpression,The length of the statement  "	var mustHaveLeadingWhitespace = !(castExpression.Parent is PrefixUnaryExpressionSyntax) && !(castExpression.Parent is CastExpressionSyntax) && !precedingToken.IsKind (SyntaxKind.OpenParenToken) && !precedingToken.IsKind (SyntaxKind.OpenBracketToken) && !(precedingToken.IsKind (SyntaxKind.OpenBraceToken) && (precedingToken.Parent is InterpolationSyntax)); " is 356.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,HandleCastExpression,The length of the statement  "	var tokenString = castExpression.OpenParenToken.ToString () + castExpression.Type.ToString () + castExpression.CloseParenToken.ToString (); " is 139.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "		if (!token.IsFirstInLine () && ((precedingTriviaList.Count == 0) || !precedingTriviaList.Last ().IsKind (SyntaxKind.WhitespaceTrivia))) { " is 137.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorPrecededByWhitespace' token.GetLocation ()' properties' tokenText)); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "		if (!token.IsOnlyPrecededByWhitespaceInLine () && ((precedingTriviaList.Count > 0) && precedingTriviaList.Last ().IsKind (SyntaxKind.WhitespaceTrivia))) { " is 154.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorNotPrecededByWhitespace' token.GetLocation ()' properties' tokenText)); " is 126.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "			properties = properties.Add (CodeFixAction' withTrailingWhitespace ? RemoveEndOfLineWithTrailingSpaceTag : RemoveEndOfLineTag); " is 127.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "		if ((followingTriviaList.Count == 0) || !(followingTriviaList.First ().IsKind (SyntaxKind.WhitespaceTrivia) || followingTriviaList.First ().IsKind (SyntaxKind.EndOfLineTrivia))) { " is 179.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorFollowedByWhitespace' token.GetLocation ()' properties' tokenText)); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003SymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1003SymbolsMustBeSpacedCorrectly.cs,CheckToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (DescriptorNotFollowedByWhitespace' token.GetLocation ()' properties' tokenText)); " is 126.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1004DocumentationLinesMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1004DocumentationLinesMustBeginWithSingleSpace.cs,HandleDocumentationCommentExteriorTrivia,The length of the statement  "			if (grandparentKind != SyntaxKind.SingleLineDocumentationCommentTrivia && grandparentKind != SyntaxKind.MultiLineDocumentationCommentTrivia) { " is 142.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1006PreprocessorKeywordsMustNotBePrecededBySpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1006PreprocessorKeywordsMustNotBePrecededBySpace.cs,HandleHashToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' targetToken.GetLocation ()' TokenSpacingProperties.RemovePreceding' targetToken.Text)); " is 144.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1007OperatorKeywordMustBeFollowedBySpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1007OperatorKeywordMustBeFollowedBySpace.cs,HandleRequiredSpaceToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertFollowing)); " is 120.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleSyntaxTree,The length of the statement  "	foreach (var token in root.DescendantTokens (descendIntoTrivia: true).Where (t => t.IsKind (SyntaxKind.OpenParenToken))) { " is 122.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "		var partOfCastExpression = prevToken.IsKind (SyntaxKind.CloseParenToken) && prevToken.Parent.IsKind (SyntaxKind.CastExpression); " is 128.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "		var consecutiveCast = prevToken.IsKind (SyntaxKind.CloseParenToken) && prevToken.Parent.IsKind (SyntaxKind.CastExpression); " is 123.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "		var partOfInterpolation = prevToken.IsKind (SyntaxKind.OpenBraceToken) && prevToken.Parent.IsKind (SyntaxKind.Interpolation); " is 125.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "		var hasLeadingComment = (leadingTriviaList.Count > 0) && leadingTriviaList.Last ().IsKind (SyntaxKind.MultiLineCommentTrivia); " is 126.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (DescriptorPreceded' token.GetLocation ()' TokenSpacingProperties.InsertPreceding)); " is 128.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (DescriptorNotPreceded' token.GetLocation ()' TokenSpacingProperties.RemovePreceding)); " is 131.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1008OpeningParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1008OpeningParenthesisMustBeSpacedCorrectly.cs,HandleOpenParenToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (DescriptorNotFollowed' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing)); " is 131.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,The length of the statement  "		bool requireSpace = nextToken.Parent.IsKind (SyntaxKind.ConditionalExpression) || nextToken.Parent.IsKind (SyntaxKind.BaseConstructorInitializer) || nextToken.Parent.IsKind (SyntaxKind.ThisConstructorInitializer); " is 213.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,The length of the statement  "		var properties = token.IsFirstInLine () ? TokenSpacingProperties.RemovePreceding : TokenSpacingProperties.RemoveImmediatePreceding; " is 131.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemovePreceding' "not be preceded")); " is 139.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing' "not be followed")); " is 139.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,IsPartOfIndexInitializer,The length of the statement  "	return token.Parent.IsKind (SyntaxKind.BracketedArgumentList) && token.Parent.Parent.IsKind (SyntaxKind.ImplicitElementAccess); " is 127.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1013ClosingBracesMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1013ClosingBracesMustBeSpacedCorrectly.cs,HandleCloseBraceToken,The length of the statement  "		precedesSpecialCharacter = nextToken.IsKind (SyntaxKind.CloseParenToken) || nextToken.IsKind (SyntaxKind.CommaToken) || nextToken.IsKind (SyntaxKind.SemicolonToken) || nextToken.IsKind (SyntaxKind.DotToken) || (nextToken.IsKind (SyntaxKind.QuestionToken) && nextToken.GetNextToken (includeZeroWidth: true).IsKind (SyntaxKind.DotToken)) || nextToken.IsKind (SyntaxKind.CloseBracketToken); " is 387.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1016OpeningAttributeBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1016OpeningAttributeBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing)); " is 120.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1017ClosingAttributeBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1017ClosingAttributeBracketsMustBeSpacedCorrectly.cs,HandleCloseBracketToken,The length of the statement  "	context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveImmediatePreceding)); " is 129.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly.cs,HandleIncrementDecrementToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' symbolName' token.Text' "followed")); " is 128.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1020IncrementDecrementSymbolsMustBeSpacedCorrectly.cs,HandleIncrementDecrementToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' symbolName' token.Text' "preceded")); " is 128.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "		followsSpecialCharacter = precedingToken.IsKind (SyntaxKind.OpenBracketToken) || precedingToken.IsKind (SyntaxKind.OpenParenToken) || precedingToken.IsKind (SyntaxKind.CloseParenToken); " is 185.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertPreceding' string.Empty' "preceded")); " is 146.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemovePreceding' " not"' "preceded")); " is 140.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1021NegativeSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1021NegativeSignsMustBeSpacedCorrectly.cs,HandleMinusToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing' " not"' "followed")); " is 140.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "		followsSpecialCharacter = precedingToken.IsKind (SyntaxKind.OpenBracketToken) || precedingToken.IsKind (SyntaxKind.OpenParenToken) || precedingToken.IsKind (SyntaxKind.CloseParenToken); " is 185.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertPreceding' string.Empty' "preceded")); " is 146.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "			context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemovePreceding' " not"' "preceded")); " is 140.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1022PositiveSignsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1022PositiveSignsMustBeSpacedCorrectly.cs,HandlePlusToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.RemoveFollowing' " not"' "followed")); " is 140.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' "not appear at the beginning of a line")); " is 133.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' "not be preceded by a space")); " is 122.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' "not appear at the end of a line")); " is 127.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1023DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly.cs,HandleAsteriskToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' "not be followed by a space")); " is 122.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1024ColonsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1024ColonsMustBeSpacedCorrectly.cs,HandleColonToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' properties' requireBefore ? string.Empty : " not"' "preceded"' string.Empty)); " is 157.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1024ColonsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1024ColonsMustBeSpacedCorrectly.cs,HandleColonToken,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' token.GetLocation ()' TokenSpacingProperties.InsertFollowing' string.Empty' "followed"' string.Empty)); " is 160.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1025CodeMustNotContainMultipleWhitespaceInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1025CodeMustNotContainMultipleWhitespaceInARow.cs,HandleWhitespaceTrivia,The length of the statement  "	if (precedingToken.IsKind (SyntaxKind.CommaToken) || precedingToken.IsKind (SyntaxKind.SemicolonToken) || followingTrivia.IsKind (SyntaxKind.EndOfLineTrivia) || followingToken.IsKind (SyntaxKind.EndOfFileToken)) { " is 213.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation.cs,HandleImplicitArrayCreationExpression,The length of the statement  "		context.ReportDiagnostic (Diagnostic.Create (Descriptor' newKeywordToken.GetLocation ()' TokenSpacingProperties.RemoveFollowing)); " is 130.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1027UseTabsCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1027UseTabsCorrectly.cs,ReportIncorrectTabUsage,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (syntaxTree' TextSpan.FromBounds (startIndex' endIndex))' ConvertToTabsProperties)); " is 157.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1027UseTabsCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1027UseTabsCorrectly.cs,ReportIncorrectTabUsage,The length of the statement  "				context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (syntaxTree' TextSpan.FromBounds (startIndex' endIndex))' ConvertToSpacesProperties)); " is 159.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1028CodeMustNotContainTrailingWhitespace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1028CodeMustNotContainTrailingWhitespace.cs,HandleSyntaxTree,The length of the statement  "				if (token.IsKind (SyntaxKind.XmlTextLiteralNewLineToken) && previousToken.IsKind (SyntaxKind.XmlTextLiteralToken) && previousToken.Span.End == token.SpanStart) { " is 161.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1028CodeMustNotContainTrailingWhitespace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1028CodeMustNotContainTrailingWhitespace.cs,HandleSyntaxTree,The length of the statement  "	if (previousTrivia.IsKind (SyntaxKind.WhitespaceTrivia) && previousTrivia.Span.End == previousTrivia.SyntaxTree.Length) { " is 121.
Long Statement,StyleCop.Analyzers.SpecialRules,SA0002InvalidSettingsFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpecialRules\SA0002InvalidSettingsFile.cs,HandleCompilation,The length of the statement  "		SettingsHelper.GetStyleCopSettings (context.Options' DeserializationFailureBehavior.ThrowException' context.CancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.SpecialRules,SA0002InvalidSettingsFile,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpecialRules\SA0002InvalidSettingsFile.cs,HandleCompilation,The length of the statement  "		var completeDescriptor = new DiagnosticDescriptor (DiagnosticId' Title' MessageFormat' AnalyzerCategory.SpecialRules' DiagnosticSeverity.Warning' AnalyzerConstants.EnabledByDefault' completeDescription' HelpLink); " is 213.
Complex Conditional,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,GetAccessLevelForOrdering,The conditional expression  "(type == SyntaxKind.ConstructorDeclaration && modifiers.Any (SyntaxKind.StaticKeyword)) || (type == SyntaxKind.MethodDeclaration && ((MethodDeclarationSyntax)member).ExplicitInterfaceSpecifier != null) || (type == SyntaxKind.PropertyDeclaration && ((PropertyDeclarationSyntax)member).ExplicitInterfaceSpecifier != null) || (type == SyntaxKind.IndexerDeclaration && ((IndexerDeclarationSyntax)member).ExplicitInterfaceSpecifier != null)"  is complex.
Complex Conditional,StyleCop.Analyzers.OrderingRules,SA1205PartialElementsMustDeclareAccess,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1205PartialElementsMustDeclareAccess.cs,HandleTypeDeclaration,The conditional expression  "!typeDeclarationNode.Modifiers.Any (SyntaxKind.PublicKeyword) && !typeDeclarationNode.Modifiers.Any (SyntaxKind.InternalKeyword) && !typeDeclarationNode.Modifiers.Any (SyntaxKind.ProtectedKeyword) && !typeDeclarationNode.Modifiers.Any (SyntaxKind.PrivateKeyword)"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleBlock,The conditional expression  "(block != null) && !block.OpenBraceToken.IsMissing && !block.CloseBraceToken.IsMissing && IsPartOfStatement (block)"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The conditional expression  "trivia.IsDirective && !trivia.IsKind (SyntaxKind.EndIfDirectiveTrivia) && !trivia.IsKind (SyntaxKind.RegionDirectiveTrivia) && !trivia.IsKind (SyntaxKind.EndRegionDirectiveTrivia)"  is complex.
Complex Conditional,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The conditional expression  "!(node.Expression is BinaryExpressionSyntax) && !(node.Expression is AssignmentExpressionSyntax) && !(node.Expression is PrefixUnaryExpressionSyntax) && !(node.Expression is PostfixUnaryExpressionSyntax) && !node.Expression.IsKind (SyntaxKind.CastExpression) && !node.Expression.IsKind (SyntaxKind.ConditionalExpression) && !node.Expression.IsKind (SyntaxKind.IsExpression) && !node.Expression.IsKind (SyntaxKind.SimpleLambdaExpression) && !node.Expression.IsKind (SyntaxKind.ParenthesizedLambdaExpression) && !node.Expression.IsKind (SyntaxKind.ArrayCreationExpression) && !node.Expression.IsKind (SyntaxKind.CoalesceExpression) && !node.Expression.IsKind (SyntaxKind.QueryExpression) && !node.Expression.IsKind (SyntaxKind.AwaitExpression) && !node.IsKind (SyntaxKind.ConstructorDeclaration)"  is complex.
Complex Conditional,StyleCop.Analyzers.MaintainabilityRules,SA1119StatementMustNotUseUnnecessaryParenthesis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1119StatementMustNotUseUnnecessaryParenthesis.cs,HandleParenthesizedExpression,The conditional expression  "node.Expression.IsKind (SyntaxKind.ConditionalAccessExpression) && (node.Parent is ElementAccessExpressionSyntax || node.Parent is MemberAccessExpressionSyntax || node.Parent is ConditionalAccessExpressionSyntax)"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryExpression,The conditional expression  "onSameLine && isEnabledSA1104 && !(parent1 is QueryContinuationSyntax) && parent1.SpansMultipleLines ()"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryExpression,The conditional expression  "!allOnSameLine && !allOnSeparateLine && !suppressSA1103 && isEnabledSA1103"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleAnonymousMethodExpression,The conditional expression  "anonymousMethod.DelegateKeyword.IsMissing || anonymousMethod.ParameterList == null || anonymousMethod.ParameterList.IsMissing || anonymousMethod.ParameterList.OpenParenToken.IsMissing"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1110OpeningParenthesisMustBeOnDeclarationLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1110OpeningParenthesisMustBeOnDeclarationLine.cs,HandleIndexerDeclaration,The conditional expression  "!indexerDeclaration.ThisKeyword.IsMissing && indexerDeclaration.ParameterList != null && !indexerDeclaration.ParameterList.IsMissing && !indexerDeclaration.ParameterList.OpenBracketToken.IsMissing"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeArgumentList,The conditional expression  "argumentListSyntax == null || argumentListSyntax.OpenParenToken.IsMissing || argumentListSyntax.IsMissing || !argumentListSyntax.Arguments.Any ()"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1114ParameterListMustFollowDeclaration,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1114ParameterListMustFollowDeclaration.cs,AnalyzeParametersList,The conditional expression  "parameterListSyntax == null || parameterListSyntax.OpenParenToken.IsMissing || parameterListSyntax.IsMissing || !parameterListSyntax.Parameters.Any ()"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,SA1009ClosingParenthesisMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1009ClosingParenthesisMustBeSpacedCorrectly.cs,HandleCloseParenToken,The conditional expression  "precedesStickyCharacter && followedBySpace && (!lastInLine || !allowEndOfLine)"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,SA1010OpeningSquareBracketsMustBeSpacedCorrectly,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1010OpeningSquareBracketsMustBeSpacedCorrectly.cs,HandleOpenBracketToken,The conditional expression  "!firstInLine && precededBySpace && !ignorePrecedingSpaceProblem && !IsPartOfIndexInitializer (token)"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,SA1025CodeMustNotContainMultipleWhitespaceInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1025CodeMustNotContainMultipleWhitespaceInARow.cs,HandleWhitespaceTrivia,The conditional expression  "precedingToken.IsKind (SyntaxKind.CommaToken) || precedingToken.IsKind (SyntaxKind.SemicolonToken) || followingTrivia.IsKind (SyntaxKind.EndOfLineTrivia) || followingToken.IsKind (SyntaxKind.EndOfFileToken)"  is complex.
Empty Catch Block,StyleCop.Analyzers,SettingsHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\SettingsHelper.cs,GetStyleCopSettings,The method has an empty catch block.
Empty Catch Block,StyleCop.Analyzers,SettingsHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\SettingsHelper.cs,GetStyleCopSettings,The method has an empty catch block.
Empty Catch Block,StyleCop.Analyzers.DocumentationRules,PartialElementDocumentationSummaryBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PartialElementDocumentationSummaryBase.cs,ExpandIncludeTag,The method has an empty catch block.
Magic Number,StyleCop.Analyzers.DocumentationRules,SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes.cs,HandleSingleLineDocumentationTrivia,The following statement contains a magic number: if (node.Content.All (x => x.IsKind (SyntaxKind.XmlText))) {  	foreach (var trivia in node.DescendantTrivia (descendIntoTrivia: true)) {  		if (!trivia.IsKind (SyntaxKind.DocumentationCommentExteriorTrivia)) {  			continue;  		}  		// Add a diagnostic on '///'  		TextSpan location = trivia.GetLocation ().SourceSpan;  		TextSpan slashes = TextSpan.FromBounds (location.End - 3' location.End);  		context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (trivia.SyntaxTree' slashes)));  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes.cs,HandleSingleLineDocumentationTrivia,The following statement contains a magic number: foreach (var trivia in node.DescendantTrivia (descendIntoTrivia: true)) {  	if (!trivia.IsKind (SyntaxKind.DocumentationCommentExteriorTrivia)) {  		continue;  	}  	// Add a diagnostic on '///'  	TextSpan location = trivia.GetLocation ().SourceSpan;  	TextSpan slashes = TextSpan.FromBounds (location.End - 3' location.End);  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (trivia.SyntaxTree' slashes)));  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (includeElement != null) {  	diagnosticLocation = includeElement.GetLocation ();  	diagnosticProperties = NoCodeFixProperties;  	var declaration = context.SemanticModel.GetDeclaredSymbol (declarationSyntax' context.CancellationToken);  	if (declaration == null) {  		return MatchResult.Unknown;  	}  	var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken);  	var completeDocumentation = XElement.Parse (rawDocumentation' LoadOptions.None);  	var summaryElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag);  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	var summaryNodes = summaryElement.Nodes ().ToList ();  	if (summaryNodes.Count >= 3) {  		var firstTextPartNode = summaryNodes [0] as XText;  		var classReferencePart = summaryNodes [1] as XElement;  		var secondTextPartNode = summaryNodes [2] as XText;  		if (firstTextPartNode != null && classReferencePart != null && secondTextPartNode != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartNode' secondTextPartNode)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  			}  		}  	}  } else {  	var summaryElement = documentationStructure.Content.GetFirstXmlElement (XmlCommentHelper.SummaryXmlTag) as XmlElementSyntax;  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	diagnosticLocation = summaryElement.GetLocation ();  	diagnosticProperties = ImmutableDictionary.Create<string' string> ();  	// Check if the summary content could be a correct standard text  	if (summaryElement.Content.Count >= 3) {  		// Standard text has the form <part1><see><part2>  		var firstTextPartSyntax = summaryElement.Content [0] as XmlTextSyntax;  		var classReferencePart = summaryElement.Content [1] as XmlEmptyElementSyntax;  		var secondTextPartSyntax = summaryElement.Content [2] as XmlTextSyntax;  		if (firstTextPartSyntax != null && classReferencePart != null && secondTextPartSyntax != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartSyntax' secondTextPartSyntax)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  				diagnosticLocation = classReferencePart.GetLocation ();  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (includeElement != null) {  	diagnosticLocation = includeElement.GetLocation ();  	diagnosticProperties = NoCodeFixProperties;  	var declaration = context.SemanticModel.GetDeclaredSymbol (declarationSyntax' context.CancellationToken);  	if (declaration == null) {  		return MatchResult.Unknown;  	}  	var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken);  	var completeDocumentation = XElement.Parse (rawDocumentation' LoadOptions.None);  	var summaryElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag);  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	var summaryNodes = summaryElement.Nodes ().ToList ();  	if (summaryNodes.Count >= 3) {  		var firstTextPartNode = summaryNodes [0] as XText;  		var classReferencePart = summaryNodes [1] as XElement;  		var secondTextPartNode = summaryNodes [2] as XText;  		if (firstTextPartNode != null && classReferencePart != null && secondTextPartNode != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartNode' secondTextPartNode)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  			}  		}  	}  } else {  	var summaryElement = documentationStructure.Content.GetFirstXmlElement (XmlCommentHelper.SummaryXmlTag) as XmlElementSyntax;  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	diagnosticLocation = summaryElement.GetLocation ();  	diagnosticProperties = ImmutableDictionary.Create<string' string> ();  	// Check if the summary content could be a correct standard text  	if (summaryElement.Content.Count >= 3) {  		// Standard text has the form <part1><see><part2>  		var firstTextPartSyntax = summaryElement.Content [0] as XmlTextSyntax;  		var classReferencePart = summaryElement.Content [1] as XmlEmptyElementSyntax;  		var secondTextPartSyntax = summaryElement.Content [2] as XmlTextSyntax;  		if (firstTextPartSyntax != null && classReferencePart != null && secondTextPartSyntax != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartSyntax' secondTextPartSyntax)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  				diagnosticLocation = classReferencePart.GetLocation ();  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (includeElement != null) {  	diagnosticLocation = includeElement.GetLocation ();  	diagnosticProperties = NoCodeFixProperties;  	var declaration = context.SemanticModel.GetDeclaredSymbol (declarationSyntax' context.CancellationToken);  	if (declaration == null) {  		return MatchResult.Unknown;  	}  	var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken);  	var completeDocumentation = XElement.Parse (rawDocumentation' LoadOptions.None);  	var summaryElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag);  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	var summaryNodes = summaryElement.Nodes ().ToList ();  	if (summaryNodes.Count >= 3) {  		var firstTextPartNode = summaryNodes [0] as XText;  		var classReferencePart = summaryNodes [1] as XElement;  		var secondTextPartNode = summaryNodes [2] as XText;  		if (firstTextPartNode != null && classReferencePart != null && secondTextPartNode != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartNode' secondTextPartNode)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  			}  		}  	}  } else {  	var summaryElement = documentationStructure.Content.GetFirstXmlElement (XmlCommentHelper.SummaryXmlTag) as XmlElementSyntax;  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	diagnosticLocation = summaryElement.GetLocation ();  	diagnosticProperties = ImmutableDictionary.Create<string' string> ();  	// Check if the summary content could be a correct standard text  	if (summaryElement.Content.Count >= 3) {  		// Standard text has the form <part1><see><part2>  		var firstTextPartSyntax = summaryElement.Content [0] as XmlTextSyntax;  		var classReferencePart = summaryElement.Content [1] as XmlEmptyElementSyntax;  		var secondTextPartSyntax = summaryElement.Content [2] as XmlTextSyntax;  		if (firstTextPartSyntax != null && classReferencePart != null && secondTextPartSyntax != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartSyntax' secondTextPartSyntax)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  				diagnosticLocation = classReferencePart.GetLocation ();  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (includeElement != null) {  	diagnosticLocation = includeElement.GetLocation ();  	diagnosticProperties = NoCodeFixProperties;  	var declaration = context.SemanticModel.GetDeclaredSymbol (declarationSyntax' context.CancellationToken);  	if (declaration == null) {  		return MatchResult.Unknown;  	}  	var rawDocumentation = declaration.GetDocumentationCommentXml (expandIncludes: true' cancellationToken: context.CancellationToken);  	var completeDocumentation = XElement.Parse (rawDocumentation' LoadOptions.None);  	var summaryElement = completeDocumentation.Nodes ().OfType<XElement> ().FirstOrDefault (element => element.Name == XmlCommentHelper.SummaryXmlTag);  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	var summaryNodes = summaryElement.Nodes ().ToList ();  	if (summaryNodes.Count >= 3) {  		var firstTextPartNode = summaryNodes [0] as XText;  		var classReferencePart = summaryNodes [1] as XElement;  		var secondTextPartNode = summaryNodes [2] as XText;  		if (firstTextPartNode != null && classReferencePart != null && secondTextPartNode != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartNode' secondTextPartNode)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  			}  		}  	}  } else {  	var summaryElement = documentationStructure.Content.GetFirstXmlElement (XmlCommentHelper.SummaryXmlTag) as XmlElementSyntax;  	if (summaryElement == null) {  		return MatchResult.Unknown;  	}  	diagnosticLocation = summaryElement.GetLocation ();  	diagnosticProperties = ImmutableDictionary.Create<string' string> ();  	// Check if the summary content could be a correct standard text  	if (summaryElement.Content.Count >= 3) {  		// Standard text has the form <part1><see><part2>  		var firstTextPartSyntax = summaryElement.Content [0] as XmlTextSyntax;  		var classReferencePart = summaryElement.Content [1] as XmlEmptyElementSyntax;  		var secondTextPartSyntax = summaryElement.Content [2] as XmlTextSyntax;  		if (firstTextPartSyntax != null && classReferencePart != null && secondTextPartSyntax != null) {  			if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartSyntax' secondTextPartSyntax)) {  				if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  					// We found a correct standard text  					return MatchResult.FoundMatch;  				}  				diagnosticLocation = classReferencePart.GetLocation ();  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (summaryNodes.Count >= 3) {  	var firstTextPartNode = summaryNodes [0] as XText;  	var classReferencePart = summaryNodes [1] as XElement;  	var secondTextPartNode = summaryNodes [2] as XText;  	if (firstTextPartNode != null && classReferencePart != null && secondTextPartNode != null) {  		if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartNode' secondTextPartNode)) {  			if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  				// We found a correct standard text  				return MatchResult.FoundMatch;  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (summaryNodes.Count >= 3) {  	var firstTextPartNode = summaryNodes [0] as XText;  	var classReferencePart = summaryNodes [1] as XElement;  	var secondTextPartNode = summaryNodes [2] as XText;  	if (firstTextPartNode != null && classReferencePart != null && secondTextPartNode != null) {  		if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartNode' secondTextPartNode)) {  			if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  				// We found a correct standard text  				return MatchResult.FoundMatch;  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (summaryElement.Content.Count >= 3) {  	// Standard text has the form <part1><see><part2>  	var firstTextPartSyntax = summaryElement.Content [0] as XmlTextSyntax;  	var classReferencePart = summaryElement.Content [1] as XmlEmptyElementSyntax;  	var secondTextPartSyntax = summaryElement.Content [2] as XmlTextSyntax;  	if (firstTextPartSyntax != null && classReferencePart != null && secondTextPartSyntax != null) {  		if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartSyntax' secondTextPartSyntax)) {  			if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  				// We found a correct standard text  				return MatchResult.FoundMatch;  			}  			diagnosticLocation = classReferencePart.GetLocation ();  		}  	}  }  
Magic Number,StyleCop.Analyzers.DocumentationRules,StandardTextDiagnosticBase,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\StandardTextDiagnosticBase.cs,HandleDeclaration,The following statement contains a magic number: if (summaryElement.Content.Count >= 3) {  	// Standard text has the form <part1><see><part2>  	var firstTextPartSyntax = summaryElement.Content [0] as XmlTextSyntax;  	var classReferencePart = summaryElement.Content [1] as XmlEmptyElementSyntax;  	var secondTextPartSyntax = summaryElement.Content [2] as XmlTextSyntax;  	if (firstTextPartSyntax != null && classReferencePart != null && secondTextPartSyntax != null) {  		if (TextPartsMatch (firstTextPart' secondTextPart' firstTextPartSyntax' secondTextPartSyntax)) {  			if (SeeTagIsCorrect (context' classReferencePart' declarationSyntax)) {  				// We found a correct standard text  				return MatchResult.FoundMatch;  			}  			diagnosticLocation = classReferencePart.GetLocation ();  		}  	}  }  
Magic Number,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The following statement contains a magic number: if (IsXmlNewLine (firstSyntaxTokens [0])) {  	removeFromStart = 1;  } else {  	if (!IsXmlWhitespace (firstSyntaxTokens [0])) {  		return summaryContent;  	}  	if (!IsXmlNewLine (firstSyntaxTokens [1])) {  		return summaryContent;  	}  	removeFromStart = 2;  }  
Magic Number,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The following statement contains a magic number: removeFromStart = 2;  
Magic Number,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The following statement contains a magic number: if (IsXmlNewLine (lastSyntaxTokens [lastSyntaxTokens.Count - 1])) {  	removeFromEnd = 1;  } else {  	if (!IsXmlWhitespace (lastSyntaxTokens [lastSyntaxTokens.Count - 1])) {  		return summaryContent;  	}  	if (!IsXmlNewLine (lastSyntaxTokens [lastSyntaxTokens.Count - 2])) {  		return summaryContent;  	}  	removeFromEnd = 2;  }  
Magic Number,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The following statement contains a magic number: if (IsXmlNewLine (lastSyntaxTokens [lastSyntaxTokens.Count - 1])) {  	removeFromEnd = 1;  } else {  	if (!IsXmlWhitespace (lastSyntaxTokens [lastSyntaxTokens.Count - 1])) {  		return summaryContent;  	}  	if (!IsXmlNewLine (lastSyntaxTokens [lastSyntaxTokens.Count - 2])) {  		return summaryContent;  	}  	removeFromEnd = 2;  }  
Magic Number,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The following statement contains a magic number: if (!IsXmlNewLine (lastSyntaxTokens [lastSyntaxTokens.Count - 2])) {  	return summaryContent;  }  
Magic Number,StyleCop.Analyzers.Helpers,DocumentationCommentExtensions,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\DocumentationCommentExtensions.cs,WithoutFirstAndLastNewlines,The following statement contains a magic number: removeFromEnd = 2;  
Magic Number,StyleCop.Analyzers.Helpers,FileHeader,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeader.cs,GetLocation,The following statement contains a magic number: return Location.Create (syntaxTree' TextSpan.FromBounds (this.fileHeaderStart' this.fileHeaderStart + 2));  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: for (var i = firstNonWhitespaceTrivia; !done && (i < firstToken.LeadingTrivia.Count); i++) {  	var trivia = firstToken.LeadingTrivia [i];  	switch (trivia.Kind ()) {  	case SyntaxKind.WhitespaceTrivia:  		endOfLineCount = 0;  		break;  	case SyntaxKind.SingleLineCommentTrivia:  		endOfLineCount = 0;  		var commentString = trivia.ToFullString ();  		fileHeaderStart = Math.Min (trivia.FullSpan.Start' fileHeaderStart);  		fileHeaderEnd = trivia.FullSpan.End;  		sb.AppendLine (commentString.Substring (2).Trim ());  		break;  	case SyntaxKind.MultiLineCommentTrivia:  		// only process a MultiLineCommentTrivia if no SingleLineCommentTrivia have been processed  		if (sb.Length == 0) {  			var triviaString = trivia.ToFullString ();  			var startIndex = triviaString.IndexOf ("/*"' StringComparison.Ordinal) + 2;  			var endIndex = triviaString.LastIndexOf ("*/"' StringComparison.Ordinal);  			var commentContext = triviaString.Substring (startIndex' endIndex - startIndex).Trim ();  			var triviaStringParts = commentContext.Replace ("\r\n"' "\n").Split ('\n');  			foreach (var part in triviaStringParts) {  				var trimmedPart = part.TrimStart (' '' '*');  				sb.AppendLine (trimmedPart);  			}  			fileHeaderStart = trivia.FullSpan.Start;  			fileHeaderEnd = trivia.FullSpan.End;  		}  		done = true;  		break;  	case SyntaxKind.EndOfLineTrivia:  		endOfLineCount++;  		done = endOfLineCount > 1;  		break;  	default:  		done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;  		break;  	}  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: for (var i = firstNonWhitespaceTrivia; !done && (i < firstToken.LeadingTrivia.Count); i++) {  	var trivia = firstToken.LeadingTrivia [i];  	switch (trivia.Kind ()) {  	case SyntaxKind.WhitespaceTrivia:  		endOfLineCount = 0;  		break;  	case SyntaxKind.SingleLineCommentTrivia:  		endOfLineCount = 0;  		var commentString = trivia.ToFullString ();  		fileHeaderStart = Math.Min (trivia.FullSpan.Start' fileHeaderStart);  		fileHeaderEnd = trivia.FullSpan.End;  		sb.AppendLine (commentString.Substring (2).Trim ());  		break;  	case SyntaxKind.MultiLineCommentTrivia:  		// only process a MultiLineCommentTrivia if no SingleLineCommentTrivia have been processed  		if (sb.Length == 0) {  			var triviaString = trivia.ToFullString ();  			var startIndex = triviaString.IndexOf ("/*"' StringComparison.Ordinal) + 2;  			var endIndex = triviaString.LastIndexOf ("*/"' StringComparison.Ordinal);  			var commentContext = triviaString.Substring (startIndex' endIndex - startIndex).Trim ();  			var triviaStringParts = commentContext.Replace ("\r\n"' "\n").Split ('\n');  			foreach (var part in triviaStringParts) {  				var trimmedPart = part.TrimStart (' '' '*');  				sb.AppendLine (trimmedPart);  			}  			fileHeaderStart = trivia.FullSpan.Start;  			fileHeaderEnd = trivia.FullSpan.End;  		}  		done = true;  		break;  	case SyntaxKind.EndOfLineTrivia:  		endOfLineCount++;  		done = endOfLineCount > 1;  		break;  	default:  		done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;  		break;  	}  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: switch (trivia.Kind ()) {  case SyntaxKind.WhitespaceTrivia:  	endOfLineCount = 0;  	break;  case SyntaxKind.SingleLineCommentTrivia:  	endOfLineCount = 0;  	var commentString = trivia.ToFullString ();  	fileHeaderStart = Math.Min (trivia.FullSpan.Start' fileHeaderStart);  	fileHeaderEnd = trivia.FullSpan.End;  	sb.AppendLine (commentString.Substring (2).Trim ());  	break;  case SyntaxKind.MultiLineCommentTrivia:  	// only process a MultiLineCommentTrivia if no SingleLineCommentTrivia have been processed  	if (sb.Length == 0) {  		var triviaString = trivia.ToFullString ();  		var startIndex = triviaString.IndexOf ("/*"' StringComparison.Ordinal) + 2;  		var endIndex = triviaString.LastIndexOf ("*/"' StringComparison.Ordinal);  		var commentContext = triviaString.Substring (startIndex' endIndex - startIndex).Trim ();  		var triviaStringParts = commentContext.Replace ("\r\n"' "\n").Split ('\n');  		foreach (var part in triviaStringParts) {  			var trimmedPart = part.TrimStart (' '' '*');  			sb.AppendLine (trimmedPart);  		}  		fileHeaderStart = trivia.FullSpan.Start;  		fileHeaderEnd = trivia.FullSpan.End;  	}  	done = true;  	break;  case SyntaxKind.EndOfLineTrivia:  	endOfLineCount++;  	done = endOfLineCount > 1;  	break;  default:  	done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;  	break;  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: switch (trivia.Kind ()) {  case SyntaxKind.WhitespaceTrivia:  	endOfLineCount = 0;  	break;  case SyntaxKind.SingleLineCommentTrivia:  	endOfLineCount = 0;  	var commentString = trivia.ToFullString ();  	fileHeaderStart = Math.Min (trivia.FullSpan.Start' fileHeaderStart);  	fileHeaderEnd = trivia.FullSpan.End;  	sb.AppendLine (commentString.Substring (2).Trim ());  	break;  case SyntaxKind.MultiLineCommentTrivia:  	// only process a MultiLineCommentTrivia if no SingleLineCommentTrivia have been processed  	if (sb.Length == 0) {  		var triviaString = trivia.ToFullString ();  		var startIndex = triviaString.IndexOf ("/*"' StringComparison.Ordinal) + 2;  		var endIndex = triviaString.LastIndexOf ("*/"' StringComparison.Ordinal);  		var commentContext = triviaString.Substring (startIndex' endIndex - startIndex).Trim ();  		var triviaStringParts = commentContext.Replace ("\r\n"' "\n").Split ('\n');  		foreach (var part in triviaStringParts) {  			var trimmedPart = part.TrimStart (' '' '*');  			sb.AppendLine (trimmedPart);  		}  		fileHeaderStart = trivia.FullSpan.Start;  		fileHeaderEnd = trivia.FullSpan.End;  	}  	done = true;  	break;  case SyntaxKind.EndOfLineTrivia:  	endOfLineCount++;  	done = endOfLineCount > 1;  	break;  default:  	done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;  	break;  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: sb.AppendLine (commentString.Substring (2).Trim ());  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ParseFileHeader,The following statement contains a magic number: if (sb.Length == 0) {  	var triviaString = trivia.ToFullString ();  	var startIndex = triviaString.IndexOf ("/*"' StringComparison.Ordinal) + 2;  	var endIndex = triviaString.LastIndexOf ("*/"' StringComparison.Ordinal);  	var commentContext = triviaString.Substring (startIndex' endIndex - startIndex).Trim ();  	var triviaStringParts = commentContext.Replace ("\r\n"' "\n").Split ('\n');  	foreach (var part in triviaStringParts) {  		var trimmedPart = part.TrimStart (' '' '*');  		sb.AppendLine (trimmedPart);  	}  	fileHeaderStart = trivia.FullSpan.Start;  	fileHeaderEnd = trivia.FullSpan.End;  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessSingleLineCommentsHeader,The following statement contains a magic number: for (i = startIndex; !done && (i < triviaList.Count); i++) {  	var trivia = triviaList [i];  	switch (trivia.Kind ()) {  	case SyntaxKind.WhitespaceTrivia:  		endOfLineCount = 0;  		break;  	case SyntaxKind.SingleLineCommentTrivia:  		endOfLineCount = 0;  		var commentString = trivia.ToFullString ();  		// ignore borders  		if (commentString.StartsWith ("//-"' StringComparison.OrdinalIgnoreCase)) {  			break;  		}  		fileHeaderStart = Math.Min (trivia.FullSpan.Start' fileHeaderStart);  		fileHeaderEnd = trivia.FullSpan.End;  		sb.AppendLine (commentString.Substring (2));  		break;  	case SyntaxKind.EndOfLineTrivia:  		endOfLineCount++;  		done = endOfLineCount > 1;  		break;  	default:  		done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;  		break;  	}  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessSingleLineCommentsHeader,The following statement contains a magic number: switch (trivia.Kind ()) {  case SyntaxKind.WhitespaceTrivia:  	endOfLineCount = 0;  	break;  case SyntaxKind.SingleLineCommentTrivia:  	endOfLineCount = 0;  	var commentString = trivia.ToFullString ();  	// ignore borders  	if (commentString.StartsWith ("//-"' StringComparison.OrdinalIgnoreCase)) {  		break;  	}  	fileHeaderStart = Math.Min (trivia.FullSpan.Start' fileHeaderStart);  	fileHeaderEnd = trivia.FullSpan.End;  	sb.AppendLine (commentString.Substring (2));  	break;  case SyntaxKind.EndOfLineTrivia:  	endOfLineCount++;  	done = endOfLineCount > 1;  	break;  default:  	done = (fileHeaderStart < fileHeaderEnd) || !trivia.IsDirective;  	break;  }  
Magic Number,StyleCop.Analyzers.Helpers,FileHeaderHelpers,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\FileHeaderHelpers.cs,ProcessSingleLineCommentsHeader,The following statement contains a magic number: sb.AppendLine (commentString.Substring (2));  
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: foreach (OrderingTrait trait in elementOrder) {  	switch (trait) {  	case OrderingTrait.Kind:  		// 4 bits are required to store this.  		this.Priority <<= 4;  		this.Priority |= TypeMemberOrder.IndexOf (type) & 0x0F;  		break;  	case OrderingTrait.Accessibility:  		// 3 bits are required to store this.  		this.Priority <<= 3;  		this.Priority |= (int)GetAccessLevelForOrdering (member' modifiers) & 0x07;  		break;  	case OrderingTrait.Constant:  		this.Priority <<= 1;  		if (modifiers.Any (SyntaxKind.ConstKeyword)) {  			this.Priority |= 1;  		}  		break;  	case OrderingTrait.Static:  		this.Priority <<= 1;  		if (modifiers.Any (SyntaxKind.StaticKeyword)) {  			this.Priority |= 1;  		}  		break;  	case OrderingTrait.Readonly:  		this.Priority <<= 1;  		if (modifiers.Any (SyntaxKind.ReadOnlyKeyword)) {  			this.Priority |= 1;  		}  		break;  	default:  		continue;  	}  }  
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: foreach (OrderingTrait trait in elementOrder) {  	switch (trait) {  	case OrderingTrait.Kind:  		// 4 bits are required to store this.  		this.Priority <<= 4;  		this.Priority |= TypeMemberOrder.IndexOf (type) & 0x0F;  		break;  	case OrderingTrait.Accessibility:  		// 3 bits are required to store this.  		this.Priority <<= 3;  		this.Priority |= (int)GetAccessLevelForOrdering (member' modifiers) & 0x07;  		break;  	case OrderingTrait.Constant:  		this.Priority <<= 1;  		if (modifiers.Any (SyntaxKind.ConstKeyword)) {  			this.Priority |= 1;  		}  		break;  	case OrderingTrait.Static:  		this.Priority <<= 1;  		if (modifiers.Any (SyntaxKind.StaticKeyword)) {  			this.Priority |= 1;  		}  		break;  	case OrderingTrait.Readonly:  		this.Priority <<= 1;  		if (modifiers.Any (SyntaxKind.ReadOnlyKeyword)) {  			this.Priority |= 1;  		}  		break;  	default:  		continue;  	}  }  
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: switch (trait) {  case OrderingTrait.Kind:  	// 4 bits are required to store this.  	this.Priority <<= 4;  	this.Priority |= TypeMemberOrder.IndexOf (type) & 0x0F;  	break;  case OrderingTrait.Accessibility:  	// 3 bits are required to store this.  	this.Priority <<= 3;  	this.Priority |= (int)GetAccessLevelForOrdering (member' modifiers) & 0x07;  	break;  case OrderingTrait.Constant:  	this.Priority <<= 1;  	if (modifiers.Any (SyntaxKind.ConstKeyword)) {  		this.Priority |= 1;  	}  	break;  case OrderingTrait.Static:  	this.Priority <<= 1;  	if (modifiers.Any (SyntaxKind.StaticKeyword)) {  		this.Priority |= 1;  	}  	break;  case OrderingTrait.Readonly:  	this.Priority <<= 1;  	if (modifiers.Any (SyntaxKind.ReadOnlyKeyword)) {  		this.Priority |= 1;  	}  	break;  default:  	continue;  }  
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: switch (trait) {  case OrderingTrait.Kind:  	// 4 bits are required to store this.  	this.Priority <<= 4;  	this.Priority |= TypeMemberOrder.IndexOf (type) & 0x0F;  	break;  case OrderingTrait.Accessibility:  	// 3 bits are required to store this.  	this.Priority <<= 3;  	this.Priority |= (int)GetAccessLevelForOrdering (member' modifiers) & 0x07;  	break;  case OrderingTrait.Constant:  	this.Priority <<= 1;  	if (modifiers.Any (SyntaxKind.ConstKeyword)) {  		this.Priority |= 1;  	}  	break;  case OrderingTrait.Static:  	this.Priority <<= 1;  	if (modifiers.Any (SyntaxKind.StaticKeyword)) {  		this.Priority |= 1;  	}  	break;  case OrderingTrait.Readonly:  	this.Priority <<= 1;  	if (modifiers.Any (SyntaxKind.ReadOnlyKeyword)) {  		this.Priority |= 1;  	}  	break;  default:  	continue;  }  
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: this.Priority <<= 4;  
Magic Number,StyleCop.Analyzers.Helpers,MemberOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\MemberOrderHelper.cs,MemberOrderHelper,The following statement contains a magic number: this.Priority <<= 3;  
Magic Number,StyleCop.Analyzers.Helpers,XmlFileHeader,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\XmlFileHeader.cs,GetLocation,The following statement contains a magic number: return Location.Create (syntaxTree' TextSpan.FromBounds (this.fileHeaderStart' this.fileHeaderStart + 2));  
Magic Number,StyleCop.Analyzers.OrderingRules,SA1212PropertyAccessorsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1212PropertyAccessorsMustFollowOrder.cs,AnalyzeProperty,The following statement contains a magic number: if (propertyDeclaration.AccessorList.IsMissing || accessors.Count != 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.OrderingRules,SA1213EventAccessorsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1213EventAccessorsMustFollowOrder.cs,HandleEventDeclaration,The following statement contains a magic number: if (eventDeclaration.AccessorList.IsMissing || accessors.Count != 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1504AllAccessorsMustBeSingleLineOrMultiLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1504AllAccessorsMustBeSingleLineOrMultiLine.cs,HandleAccessorList,The following statement contains a magic number: if (accessorList.Accessors.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1505OpeningBracesMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1505OpeningBracesMustNotBeFollowedByBlankLine.cs,AnalyzeOpenBrace,The following statement contains a magic number: if ((GetLine (nextToken) - GetLine (openBraceToken)) < 2) {  	// there will be no blank lines when the opening brace and the following token are not at least two lines apart.  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1507CodeMustNotContainMultipleBlankLinesInARow,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1507CodeMustNotContainMultipleBlankLinesInARow.cs,ReportDiagnosticIfNecessary,The following statement contains a magic number: if (blankLineCount < 2) {  	// only care about multiple blank lines in a row  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1508ClosingBracesMustNotBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1508ClosingBracesMustNotBePrecededByBlankLine.cs,AnalyzeCloseBrace,The following statement contains a magic number: if ((closeBraceToken.GetLineSpan ().StartLinePosition.Line - previousToken.GetLineSpan ().EndLinePosition.Line) < 2) {  	// there will be no blank lines when the closing brace and the preceding token are not at least two lines apart.  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1509OpeningBracesMustNotBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1509OpeningBracesMustNotBePrecededByBlankLine.cs,AnalyzeOpenBrace,The following statement contains a magic number: if (eolCount < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The following statement contains a magic number: foreach (var trivia in syntaxRoot.DescendantTrivia ().Where (trivia => trivia.IsKind (SyntaxKind.SingleLineCommentTrivia))) {  	if (trivia.ToString ().StartsWith ("////"' StringComparison.Ordinal)) {  		// ignore commented out code  		continue;  	}  	int triviaIndex;  	// PERF: Explicitly cast to IReadOnlyList so we only box once.  	var triviaList = TriviaHelper.GetContainingTriviaList (trivia' out triviaIndex);  	if (!IsOnOwnLine (triviaList' triviaIndex)) {  		// ignore comments after other code elements.  		continue;  	}  	if (IsPartOfFileHeader (triviaList' triviaIndex)) {  		// ignore comments that are part of the file header.  		continue;  	}  	var trailingBlankLineCount = GetTrailingBlankLineCount (triviaList' ref triviaIndex);  	if (trailingBlankLineCount == 0) {  		// ignore comments that are not followed by a blank line  		continue;  	} else if (trailingBlankLineCount > 1) {  		if (specificDiagnosticOptions.GetValueOrDefault (SA1507CodeMustNotContainMultipleBlankLinesInARow.DiagnosticId' ReportDiagnostic.Default) != ReportDiagnostic.Suppress) {  			// ignore comments that are followed by multiple blank lines -> the multiple blank lines will be reported by SA1507  			continue;  		}  	} else {  		if (triviaIndex < triviaList.Count) {  			switch (triviaList [triviaIndex].Kind ()) {  			case SyntaxKind.SingleLineCommentTrivia:  			case SyntaxKind.SingleLineDocumentationCommentTrivia:  			case SyntaxKind.MultiLineCommentTrivia:  			case SyntaxKind.MultiLineDocumentationCommentTrivia:  				// ignore a single blank line in between two comments.  				continue;  			}  		}  	}  	var diagnosticSpan = TextSpan.FromBounds (trivia.SpanStart' trivia.SpanStart + 2);  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (context.Tree' diagnosticSpan)));  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1514ElementDocumentationHeaderMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1514ElementDocumentationHeaderMustBePrecededByBlankLine.cs,HandleDeclaration,The following statement contains a magic number: if (eolCount >= 2) {  	// there is a blank line available  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,HandleSyntaxTree,The following statement contains a magic number: foreach (var trivia in syntaxRoot.DescendantTrivia ().Where (trivia => trivia.IsKind (SyntaxKind.SingleLineCommentTrivia))) {  	if (trivia.FullSpan.Start == 0) {  		// skip the trivia if it is at the start of the file  		previousCommentNotOnOwnLine = false;  		continue;  	}  	if (trivia.ToString ().StartsWith ("////"' StringComparison.Ordinal)) {  		// ignore commented out code  		previousCommentNotOnOwnLine = false;  		continue;  	}  	int triviaIndex;  	var triviaList = TriviaHelper.GetContainingTriviaList (trivia' out triviaIndex);  	if (!IsOnOwnLine (triviaList' triviaIndex)) {  		// ignore comments after other code elements.  		previousCommentNotOnOwnLine = true;  		continue;  	}  	if (IsPrecededByBlankLine (triviaList' triviaIndex)) {  		// allow properly formatted blank line comments.  		previousCommentNotOnOwnLine = false;  		continue;  	}  	if (!previousCommentNotOnOwnLine && IsPrecededBySingleLineCommentOrDocumentation (triviaList' triviaIndex)) {  		// allow consecutive single line comments.  		previousCommentNotOnOwnLine = false;  		continue;  	}  	previousCommentNotOnOwnLine = false;  	if (IsAtStartOfScope (trivia)) {  		// allow single line comment at scope start.  		continue;  	}  	if (IsPrecededByDirectiveTrivia (triviaList' triviaIndex)) {  		// allow single line comment that is preceded by some directive trivia (if' elif' else)  		continue;  	}  	var diagnosticSpan = TextSpan.FromBounds (trivia.SpanStart' trivia.SpanStart + 2);  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' Location.Create (context.Tree' diagnosticSpan)));  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededBySingleLineCommentOrDocumentation,The following statement contains a magic number: while ((eolCount < 2) && (triviaIndex >= 0)) {  	var currentTrivia = triviaList [triviaIndex];  	switch (currentTrivia.Kind ()) {  	case SyntaxKind.WhitespaceTrivia:  		triviaIndex--;  		break;  	case SyntaxKind.EndOfLineTrivia:  		eolCount++;  		triviaIndex--;  		break;  	case SyntaxKind.SingleLineCommentTrivia:  	case SyntaxKind.SingleLineDocumentationCommentTrivia:  		return true;  	default:  		return false;  	}  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededByBlankLine,The following statement contains a magic number: while ((eolCount < 2) && (index >= 0)) {  	if (triviaList [index].IsDirective) {  		// directive trivia are special' as they have a 'built-in' end-of-line.  		return eolCount > 0;  	}  	switch (triviaList [index].Kind ()) {  	case SyntaxKind.WhitespaceTrivia:  		index--;  		break;  	case SyntaxKind.EndOfLineTrivia:  		eolCount++;  		index--;  		break;  	default:  		return false;  	}  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515SingleLineCommentMustBePrecededByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1515SingleLineCommentMustBePrecededByBlankLine.cs,IsPrecededByBlankLine,The following statement contains a magic number: return eolCount >= 2;  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleBasePropertyDeclaration,The following statement contains a magic number: if (propertyDeclaration.AccessorList.Accessors != null) {  	var accessors = propertyDeclaration.AccessorList.Accessors;  	// We are not interested in properties with only one accessor  	if (accessors.Count == 2) {  		if (accessors [0].Body != null && accessors [1].Body != null) {  			// Don't report a diagnostic if all accessors are single line. Example:  			//// public string Foo  			//// {  			////    get { return "bar"; }  			////    set { }  			//// }  			if (IsMultiline (accessors [0]) || IsMultiline (accessors [1])) {  				ReportIfThereIsNoBlankLine (context' accessors [0]' accessors [1]);  			}  		}  	}  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleBasePropertyDeclaration,The following statement contains a magic number: if (accessors.Count == 2) {  	if (accessors [0].Body != null && accessors [1].Body != null) {  		// Don't report a diagnostic if all accessors are single line. Example:  		//// public string Foo  		//// {  		////    get { return "bar"; }  		////    set { }  		//// }  		if (IsMultiline (accessors [0]) || IsMultiline (accessors [1])) {  			ReportIfThereIsNoBlankLine (context' accessors [0]' accessors [1]);  		}  	}  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The following statement contains a magic number: if (usings.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The following statement contains a magic number: for (var i = 1; i < usings.Count; i++) {  	var currentGroupType = usings [i].GetUsingGroupType (settings);  	var currentLineSpan = usings [i].GetLineSpan ();  	var partOfSameGroup = previousGroupType == currentGroupType;  	var lineDistance = currentLineSpan.StartLinePosition.Line - previousLineSpan.EndLinePosition.Line;  	previousGroupType = currentGroupType;  	previousLineSpan = currentLineSpan;  	if (partOfSameGroup) {  		// if the using statements are part of the same group' there is no need to check.  		continue;  	}  	if (blankLinesBetweenUsingGroups == OptionSetting.Require) {  		if (lineDistance > 1) {  			var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ());  			if (separatingTrivia.ContainsBlankLines (false)) {  				continue;  			}  		}  		context.ReportDiagnostic (Diagnostic.Create (DescriptorRequire' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesRequire));  	} else if (blankLinesBetweenUsingGroups == OptionSetting.Omit) {  		if (lineDistance < 2) {  			// no point in checking the trivia if the using statements are not separated.  			continue;  		}  		var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ());  		if (!separatingTrivia.ContainsBlankLines (false)) {  			continue;  		}  		context.ReportDiagnostic (Diagnostic.Create (DescriptorOmit' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesOmit));  	}  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The following statement contains a magic number: if (blankLinesBetweenUsingGroups == OptionSetting.Require) {  	if (lineDistance > 1) {  		var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ());  		if (separatingTrivia.ContainsBlankLines (false)) {  			continue;  		}  	}  	context.ReportDiagnostic (Diagnostic.Create (DescriptorRequire' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesRequire));  } else if (blankLinesBetweenUsingGroups == OptionSetting.Omit) {  	if (lineDistance < 2) {  		// no point in checking the trivia if the using statements are not separated.  		continue;  	}  	var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ());  	if (!separatingTrivia.ContainsBlankLines (false)) {  		continue;  	}  	context.ReportDiagnostic (Diagnostic.Create (DescriptorOmit' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesOmit));  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The following statement contains a magic number: if (blankLinesBetweenUsingGroups == OptionSetting.Omit) {  	if (lineDistance < 2) {  		// no point in checking the trivia if the using statements are not separated.  		continue;  	}  	var separatingTrivia = TriviaHelper.MergeTriviaLists (usings [i - 1].GetTrailingTrivia ()' usings [i].GetLeadingTrivia ());  	if (!separatingTrivia.ContainsBlankLines (false)) {  		continue;  	}  	context.ReportDiagnostic (Diagnostic.Create (DescriptorOmit' usings [i].UsingKeyword.GetLocation ()' DiagnosticPropertiesOmit));  }  
Magic Number,StyleCop.Analyzers.LayoutRules,SA1516ElementsMustBeSeparatedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1516ElementsMustBeSeparatedByBlankLine.cs,HandleUsings,The following statement contains a magic number: if (lineDistance < 2) {  	// no point in checking the trivia if the using statements are not separated.  	continue;  }  
Magic Number,StyleCop.Analyzers.NamingRules,SA1308VariableNamesMustNotBePrefixed,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\NamingRules\SA1308VariableNamesMustNotBePrefixed.cs,HandleFieldDeclaration,The following statement contains a magic number: foreach (VariableDeclaratorSyntax variableDeclarator in variables.Value) {  	if (variableDeclarator == null) {  		continue;  	}  	var identifier = variableDeclarator.Identifier;  	if (identifier.IsMissing) {  		continue;  	}  	if (!identifier.ValueText.StartsWith ("m_"' StringComparison.Ordinal) && !identifier.ValueText.StartsWith ("s_"' StringComparison.Ordinal) && !identifier.ValueText.StartsWith ("t_"' StringComparison.Ordinal)) {  		continue;  	}  	// Field '{name}' must not begin with the prefix '{prefix}'  	string name = identifier.ValueText;  	string prefix = name.Substring (0' 2);  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' identifier.GetLocation ()' name' prefix));  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,HandleArrayCreationExpression,The following statement contains a magic number: foreach (var arrayRankSpecifierSyntax in arrayCreationExpression.Type.RankSpecifiers) {  	var sizes = arrayRankSpecifierSyntax.Sizes;  	if (sizes.Count < 2) {  		continue;  	}  	if (!arrayRankSpecifierSyntax.CloseBracketToken.IsMissing) {  		CheckIfCommasAreAtTheSameLineAsThePreviousParameter (context' sizes.GetWithSeparators ());  	}  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,HandleArrayCreationExpression,The following statement contains a magic number: if (sizes.Count < 2) {  	continue;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,CheckIfCommasAreAtTheSameLineAsThePreviousParameter,The following statement contains a magic number: for (int index = 0' count = nodeOrTokenList.Count; index < count; ++index) {  	SyntaxNodeOrToken nodeOrToken = nodeOrTokenList [index];  	if (index % 2 == 0) {  		// We expecting node here  		if (nodeOrToken.IsToken) {  			return;  		}  		previousNode = nodeOrToken.AsNode ();  	} else {  		// We expecting token here  		if (nodeOrToken.IsNode) {  			return;  		}  		if (previousNode.GetEndLine () < nodeOrToken.GetLineSpan ().StartLinePosition.Line) {  			var properties = TokenSpacingProperties.RemovePrecedingPreserveLayout;  			context.ReportDiagnostic (Diagnostic.Create (Descriptor' nodeOrToken.GetLocation ()' properties));  		}  	}  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1113CommaMustBeOnSameLineAsPreviousParameter,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1113CommaMustBeOnSameLineAsPreviousParameter.cs,CheckIfCommasAreAtTheSameLineAsThePreviousParameter,The following statement contains a magic number: if (index % 2 == 0) {  	// We expecting node here  	if (nodeOrToken.IsToken) {  		return;  	}  	previousNode = nodeOrToken.AsNode ();  } else {  	// We expecting token here  	if (nodeOrToken.IsNode) {  		return;  	}  	if (previousNode.GetEndLine () < nodeOrToken.GetLineSpan ().StartLinePosition.Line) {  		var properties = TokenSpacingProperties.RemovePrecedingPreserveLayout;  		context.ReportDiagnostic (Diagnostic.Create (Descriptor' nodeOrToken.GetLocation ()' properties));  	}  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1115ParameterMustFollowComma,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1115ParameterMustFollowComma.cs,AnalyzeSyntaxList,The following statement contains a magic number: if (syntaxList.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleIndexerDeclaration,The following statement contains a magic number: if (arguments.Count > 2) {  	Analyze (context' argumentListSyntax.Parameters);  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArrayCreationExpression,The following statement contains a magic number: foreach (var rankSpecifier in arrayCreation.Type.RankSpecifiers) {  	SeparatedSyntaxList<ExpressionSyntax> sizes = rankSpecifier.Sizes;  	if (sizes.Count < 3) {  		continue;  	}  	ExpressionSyntax previousParameter = sizes [1];  	int firstParameterLine = sizes [0].GetLine ();  	int previousLine = previousParameter.GetLine ();  	Func<int' int' bool> lineCondition;  	if (firstParameterLine == previousLine) {  		// arguments must be on same line  		lineCondition = (param1Line' param2Line) => param1Line == param2Line;  	} else {  		// each argument must be on its own line  		lineCondition = (param1Line' param2Line) => param1Line != param2Line;  	}  	for (int i = 2; i < sizes.Count; ++i) {  		ExpressionSyntax currentParameter = sizes [i];  		int currentLine = currentParameter.GetLine ();  		if (lineCondition (previousLine' currentLine)) {  			previousLine = currentLine;  			continue;  		}  		context.ReportDiagnostic (Diagnostic.Create (Descriptor' currentParameter.GetLocation ()));  		return;  	}  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArrayCreationExpression,The following statement contains a magic number: foreach (var rankSpecifier in arrayCreation.Type.RankSpecifiers) {  	SeparatedSyntaxList<ExpressionSyntax> sizes = rankSpecifier.Sizes;  	if (sizes.Count < 3) {  		continue;  	}  	ExpressionSyntax previousParameter = sizes [1];  	int firstParameterLine = sizes [0].GetLine ();  	int previousLine = previousParameter.GetLine ();  	Func<int' int' bool> lineCondition;  	if (firstParameterLine == previousLine) {  		// arguments must be on same line  		lineCondition = (param1Line' param2Line) => param1Line == param2Line;  	} else {  		// each argument must be on its own line  		lineCondition = (param1Line' param2Line) => param1Line != param2Line;  	}  	for (int i = 2; i < sizes.Count; ++i) {  		ExpressionSyntax currentParameter = sizes [i];  		int currentLine = currentParameter.GetLine ();  		if (lineCondition (previousLine' currentLine)) {  			previousLine = currentLine;  			continue;  		}  		context.ReportDiagnostic (Diagnostic.Create (Descriptor' currentParameter.GetLocation ()));  		return;  	}  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArrayCreationExpression,The following statement contains a magic number: if (sizes.Count < 3) {  	continue;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArrayCreationExpression,The following statement contains a magic number: for (int i = 2; i < sizes.Count; ++i) {  	ExpressionSyntax currentParameter = sizes [i];  	int currentLine = currentParameter.GetLine ();  	if (lineCondition (previousLine' currentLine)) {  		previousLine = currentLine;  		continue;  	}  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' currentParameter.GetLocation ()));  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleAttribute,The following statement contains a magic number: if (arguments.Count < 3) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleAttribute,The following statement contains a magic number: for (int i = 2; i < arguments.Count; ++i) {  	AttributeArgumentSyntax currentParameter = arguments [i];  	int currentLine = currentParameter.GetLine ();  	if (lineCondition (previousLine' currentLine)) {  		previousLine = currentLine;  		continue;  	}  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' currentParameter.GetLocation ()));  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleArgumentListSyntax,The following statement contains a magic number: if (arguments.Count > 2) {  	Analyze (context' arguments);  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleParameterListSyntax,The following statement contains a magic number: if (parameters.Count > 2) {  	Analyze (context' parameters);  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,HandleBracketedArgumentListSyntax,The following statement contains a magic number: if (arguments.Count > 2) {  	Analyze (context' arguments);  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,Analyze,The following statement contains a magic number: for (int i = 2; i < parameters.Count; ++i) {  	ParameterSyntax currentParameter = parameters [i];  	int currentLine = currentParameter.GetLine ();  	if (lineCondition (previousLine' currentLine)) {  		previousLine = currentLine;  		continue;  	}  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' currentParameter.GetLocation ()));  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1117ParametersMustBeOnSameLineOrSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1117ParametersMustBeOnSameLineOrSeparateLines.cs,Analyze,The following statement contains a magic number: for (int i = 2; i < arguments.Count; ++i) {  	ArgumentSyntax currentParameter = arguments [i];  	int currentLine = currentParameter.GetLine ();  	if (lineCondition (previousLine' currentLine)) {  		previousLine = currentLine;  		continue;  	}  	context.ReportDiagnostic (Diagnostic.Create (Descriptor' currentParameter.GetLocation ()));  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleSingleLineComment,The following statement contains a magic number: if (!isFirst) {  	// This is -2 because we need to go back past the end of line trivia as well.  	var lastNonWhiteSpace = TriviaHelper.IndexOfTrailingWhitespace (list) - 2;  	if (index != lastNonWhiteSpace) {  		return;  	}  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleSingleLineComment,The following statement contains a magic number: if (IsNullOrWhiteSpace (singleLineComment.ToString ()' 2)) {  	var diagnostic = Diagnostic.Create (Descriptor' singleLineComment.GetLocation ());  	context.ReportDiagnostic (diagnostic);  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1132DoNotCombineFields,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1132DoNotCombineFields.cs,HandleBaseFieldDeclaration,The following statement contains a magic number: if (variables.Count < 2 || fieldDeclaration.SemicolonToken.IsMissing) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1136EnumValuesShouldBeOnSeparateLines,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1136EnumValuesShouldBeOnSeparateLines.cs,HandleEnumDeclaration,The following statement contains a magic number: if (enumDeclaration.Members.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: if (elements.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: if (elements.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: if (elements.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.ReadabilityRules,SA1137ElementsShouldHaveTheSameIndentation,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1137ElementsShouldHaveTheSameIndentation.cs,CheckElements,The following statement contains a magic number: if (elements.Count < 2) {  	return;  }  
Magic Number,StyleCop.Analyzers.Settings.ObjectModel,IndentationSettings,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\IndentationSettings.cs,IndentationSettings,The following statement contains a magic number: this.indentationSize = 4;  
Magic Number,StyleCop.Analyzers.Settings.ObjectModel,IndentationSettings,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Settings\ObjectModel\IndentationSettings.cs,IndentationSettings,The following statement contains a magic number: this.tabSize = 4;  
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSyntaxTree,The following statement contains a magic number: foreach (var trivia in root.DescendantTrivia ()) {  	switch (trivia.Kind ()) {  	case SyntaxKind.SingleLineCommentTrivia:  		HandleSingleLineCommentTrivia (context' trivia' isFirstSingleLineTrivia);  		isFirstSingleLineTrivia = false;  		newLineCount = 0;  		break;  	case SyntaxKind.EndOfLineTrivia:  		newLineCount++;  		if (newLineCount == 2) {  			isFirstSingleLineTrivia = true;  			newLineCount = 0;  		}  		break;  	case SyntaxKind.WhitespaceTrivia:  		break;  	default:  		isFirstSingleLineTrivia = true;  		break;  	}  }  
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSyntaxTree,The following statement contains a magic number: switch (trivia.Kind ()) {  case SyntaxKind.SingleLineCommentTrivia:  	HandleSingleLineCommentTrivia (context' trivia' isFirstSingleLineTrivia);  	isFirstSingleLineTrivia = false;  	newLineCount = 0;  	break;  case SyntaxKind.EndOfLineTrivia:  	newLineCount++;  	if (newLineCount == 2) {  		isFirstSingleLineTrivia = true;  		newLineCount = 0;  	}  	break;  case SyntaxKind.WhitespaceTrivia:  	break;  default:  	isFirstSingleLineTrivia = true;  	break;  }  
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSyntaxTree,The following statement contains a magic number: if (newLineCount == 2) {  	isFirstSingleLineTrivia = true;  	newLineCount = 0;  }  
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005SingleLineCommentsMustBeginWithSingleSpace,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\SpacingRules\SA1005SingleLineCommentsMustBeginWithSingleSpace.cs,HandleSingleLineCommentTrivia,The following statement contains a magic number: for (int i = 2; (i < text.Length) && (text [i] == ' '); i++) {  	spaceCount++;  }  
Missing Default,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationAnalyzer,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\DocumentationRules\PropertySummaryDocumentationAnalyzer.cs,AnalyzeSummaryElement,The following switch statement is missing a default case: switch (accessor.Keyword.Kind ()) {  case SyntaxKind.GetKeyword:  	getter = accessor;  	break;  case SyntaxKind.SetKeyword:  	setter = accessor;  	break;  }  
Missing Default,StyleCop.Analyzers.Helpers,AccessLevelHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\AccessLevelHelper.cs,GetAccessLevel,The following switch statement is missing a default case: switch (modifier.Kind ()) {  case SyntaxKind.PublicKeyword:  	return AccessLevel.Public;  case SyntaxKind.PrivateKeyword:  	return AccessLevel.Private;  case SyntaxKind.InternalKeyword:  	if (isProtected) {  		return AccessLevel.ProtectedInternal;  	} else {  		isInternal = true;  	}  	break;  case SyntaxKind.ProtectedKeyword:  	if (isInternal) {  		return AccessLevel.ProtectedInternal;  	} else {  		isProtected = true;  	}  	break;  }  
Missing Default,StyleCop.Analyzers.OrderingRules,ModifierOrderHelper,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\Helpers\ModifierOrderHelper.cs,GetModifierType,The following switch statement is missing a default case: switch (modifier.Kind ()) {  case SyntaxKind.PublicKeyword:  case SyntaxKind.ProtectedKeyword:  case SyntaxKind.InternalKeyword:  case SyntaxKind.PrivateKeyword:  	result = ModifierType.Access;  	break;  case SyntaxKind.StaticKeyword:  	result = ModifierType.Static;  	break;  case SyntaxKind.VirtualKeyword:  case SyntaxKind.AbstractKeyword:  case SyntaxKind.OverrideKeyword:  case SyntaxKind.ExternKeyword:  case SyntaxKind.UnsafeKeyword:  case SyntaxKind.NewKeyword:  case SyntaxKind.SealedKeyword:  case SyntaxKind.ReadOnlyKeyword:  case SyntaxKind.VolatileKeyword:  case SyntaxKind.FixedKeyword:  case SyntaxKind.ConstKeyword:  case SyntaxKind.AsyncKeyword:  case SyntaxKind.PartialKeyword:  	result = ModifierType.Other;  	break;  }  
Missing Default,StyleCop.Analyzers.OrderingRules,SA1206DeclarationKeywordsMustFollowOrder,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\OrderingRules\SA1206DeclarationKeywordsMustFollowOrder.cs,GetModifierTypeText,The following switch statement is missing a default case: switch (modifierType) {  case ModifierType.Access:  	result = "access modifier";  	break;  case ModifierType.Static:  	result = "static";  	break;  case ModifierType.Other:  	result = "other";  	break;  }  
Missing Default,StyleCop.Analyzers.LayoutRules,SA1501StatementMustNotBeOnASingleLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1501StatementMustNotBeOnASingleLine.cs,HandleBlock,The following switch statement is missing a default case: switch (block.Parent.Kind ()) {  case SyntaxKind.AnonymousMethodExpression:  case SyntaxKind.SimpleLambdaExpression:  case SyntaxKind.ParenthesizedLambdaExpression:  	var containingExpression = GetContainingExpression (block.Parent);  	if (IsSingleLineExpression (containingExpression)) {  		// Single line lambda expressions and anonymous method declarations are allowed for single line expressions.  		return;  	}  	break;  }  
Missing Default,StyleCop.Analyzers.LayoutRules,SA1512SingleLineCommentsMustNotBeFollowedByBlankLine,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\LayoutRules\SA1512SingleLineCommentsMustNotBeFollowedByBlankLine.cs,HandleSyntaxTreeAnalysis,The following switch statement is missing a default case: switch (triviaList [triviaIndex].Kind ()) {  case SyntaxKind.SingleLineCommentTrivia:  case SyntaxKind.SingleLineDocumentationCommentTrivia:  case SyntaxKind.MultiLineCommentTrivia:  case SyntaxKind.MultiLineDocumentationCommentTrivia:  	// ignore a single blank line in between two comments.  	continue;  }  
Missing Default,StyleCop.Analyzers.MaintainabilityRules,SA1402FileMayOnlyContainASingleType,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\MaintainabilityRules\SA1402FileMayOnlyContainASingleType.cs,IsRelevantType,The following switch statement is missing a default case: switch (node.Kind ()) {  case SyntaxKind.ClassDeclaration:  	isRelevant = topLevelTypes.Contains (TopLevelType.Class);  	break;  case SyntaxKind.InterfaceDeclaration:  	isRelevant = topLevelTypes.Contains (TopLevelType.Interface);  	break;  case SyntaxKind.StructDeclaration:  	isRelevant = topLevelTypes.Contains (TopLevelType.Struct);  	break;  case SyntaxKind.EnumDeclaration:  	isRelevant = topLevelTypes.Contains (TopLevelType.Enum);  	break;  case SyntaxKind.DelegateDeclaration:  	isRelevant = topLevelTypes.Contains (TopLevelType.Delegate);  	break;  }  
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1101PrefixLocalCallsWithThis,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1101PrefixLocalCallsWithThis.cs,HandleIdentifierNameImpl,The following switch statement is missing a default case: switch (memberAccessSymbol.Kind) {  case null:  	break;  case SymbolKind.Field:  case SymbolKind.Method:  case SymbolKind.Property:  	if (memberAccessSymbol.IsStatic && (memberAccessSymbol.ContainingType.Name == symbol.Name)) {  		return;  	}  	break;  }  
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleQueryClause,The following switch statement is missing a default case: switch (queryClause.Kind ()) {  case SyntaxKind.FromClause:  	var fromClause = (FromClauseSyntax)queryClause;  	tokensToCheck.Add (fromClause.FromKeyword);  	break;  case SyntaxKind.LetClause:  	var letClause = (LetClauseSyntax)queryClause;  	tokensToCheck.Add (letClause.LetKeyword);  	break;  case SyntaxKind.WhereClause:  	var whereClause = (WhereClauseSyntax)queryClause;  	tokensToCheck.Add (whereClause.WhereKeyword);  	break;  case SyntaxKind.JoinClause:  case SyntaxKind.JoinIntoClause:  	var joinClause = (JoinClauseSyntax)queryClause;  	tokensToCheck.Add (joinClause.JoinKeyword);  	break;  case SyntaxKind.OrderByClause:  	var orderByClause = (OrderByClauseSyntax)queryClause;  	tokensToCheck.Add (orderByClause.OrderByKeyword);  	break;  }  
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA110xQueryClauses,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA110xQueryClauses.cs,HandleSelectOrGroup,The following switch statement is missing a default case: switch (selectOrGroup.Kind ()) {  case SyntaxKind.SelectClause:  	var selectClause = (SelectClauseSyntax)selectOrGroup;  	tokensToCheck.Add (selectClause.SelectKeyword);  	break;  case SyntaxKind.GroupClause:  	var groupClause = (GroupClauseSyntax)selectOrGroup;  	tokensToCheck.Add (groupClause.GroupKeyword);  	break;  }  
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1120CommentsMustContainText,F:\newReposMay17\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers\ReadabilityRules\SA1120CommentsMustContainText.cs,HandleSyntaxTree,The following switch statement is missing a default case: switch (node.Kind ()) {  case SyntaxKind.SingleLineCommentTrivia:  	HandleSingleLineComment (context' node);  	break;  case SyntaxKind.MultiLineCommentTrivia:  	HandleMultiLineComment (context' node);  	break;  }  
