Implementation smell,Namespace,Class,File,Method,Description
Long Method,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceHeader,The method has 109 lines of code.
Long Method,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,TryMergeFixesAsync,The method has 110 lines of code.
Long Method,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,The method has 149 lines of code.
Long Method,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The method has 133 lines of code.
Complex Method,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceHeader,Cyclomatic complexity of the method is 18
Complex Method,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,RegisterCodeFixesAsync,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1609SA1610CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1609SA1610CodeFixProvider.cs,GetTransformedDocumentAsync,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1609SA1610CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1609SA1610CodeFixProvider.cs,TryRemoveSummaryPrefix,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1615SA1616CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1615SA1616CodeFixProvider.cs,GetTransformedDocumentAsync,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,RemoveMalformattedStandardText,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,TryMergeFixesAsync,Cyclomatic complexity of the method is 14
Complex Method,StyleCop.Analyzers.Helpers,RenameHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\RenameHelper.cs,IsValidNewMemberNameAsync,Cyclomatic complexity of the method is 17
Complex Method,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,RegisterCodeFixesAsync,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.LayoutRules,SA1512CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1512CodeFixProvider.cs,FixTriviaList,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.LayoutRules,SA1516CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1516CodeFixProvider.cs,GetRelevantNode,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,GetTransformedDocumentAsync,Cyclomatic complexity of the method is 15
Complex Method,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,StripMultipleBlankLines,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.OrderingRules,SourceMap,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.SourceMap.cs,GetContainingSpan,Cyclomatic complexity of the method is 9
Complex Method,StyleCop.Analyzers.OrderingRules,SourceMap,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.SourceMap.cs,BuildDirectiveTriviaMaps,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.OrderingRules,SourceMap,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.SourceMap.cs,BuildPragmaWarningSpans,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,Cyclomatic complexity of the method is 24
Complex Method,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,QualifyUsingDirective,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,ReplaceWithLambda,Cyclomatic complexity of the method is 10
Complex Method,StyleCop.Analyzers.ReadabilityRules,SA1132CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1132CodeFixProvider.cs,DeclarationSplitter,Cyclomatic complexity of the method is 8
Complex Method,StyleCop.Analyzers.SpacingRules,SA1027CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1027CodeFixProvider.cs,FixDiagnostic,Cyclomatic complexity of the method is 11
Complex Method,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,Cyclomatic complexity of the method is 20
Long Parameter List,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,The method has 5 parameters. Parameters: document' root' settings' commentIndex' header
Long Parameter List,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,WrapInXmlComment,The method has 5 parameters. Parameters: prefixWithLeadingSpaces' copyrightText' fileName' settings' newLineText
Long Parameter List,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForBasePropertyDeclaration,The method has 5 parameters. Parameters: document' root' semanticModel' basePropertyDeclaration' cancellationToken
Long Parameter List,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForMethodDeclaration,The method has 5 parameters. Parameters: document' root' semanticModel' methodDeclaration' cancellationToken
Long Parameter List,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForEventFieldDeclaration,The method has 5 parameters. Parameters: document' root' semanticModel' eventFieldDeclaration' cancellationToken
Long Parameter List,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForIndexerDeclaration,The method has 5 parameters. Parameters: document' root' semanticModel' indexerDeclaration' cancellationToken
Long Parameter List,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetMethodDocumentationTransformedDocumentAsync,The method has 5 parameters. Parameters: document' root' semanticModel' methodDeclaration' cancellationToken
Long Parameter List,StyleCop.Analyzers.Helpers,RenameHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\RenameHelper.cs,RenameSymbolAsync,The method has 5 parameters. Parameters: document' root' declarationToken' newName' cancellationToken
Long Parameter List,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,ReformatElement,The method has 5 parameters. Parameters: syntaxRoot' element' openBraceToken' closeBraceToken' indentationSettings
Long Parameter List,StyleCop.Analyzers.LayoutRules,SA1516CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1516CodeFixProvider.cs,GetTransformedDocumentAsync,The method has 5 parameters. Parameters: document' syntaxRoot' diagnostic' insertBlankLine' cancellationToken
Long Parameter List,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,FixDocumentAsync,The method has 5 parameters. Parameters: solution' documentId' diagnostics' codeActionEquivalenceKey' cancellationToken
Long Parameter List,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,HandleTypeDeclaration,The method has 5 parameters. Parameters: memberOrder' typeDeclarationNode' elementOrder' syntaxRoot' indentationSettings
Long Parameter List,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,HandleCompilationUnitDeclaration,The method has 5 parameters. Parameters: memberOrder' compilationUnitDeclaration' elementOrder' syntaxRoot' indentationSettings
Long Parameter List,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,HandleNamespaceDeclaration,The method has 5 parameters. Parameters: memberOrder' namespaceDeclaration' elementOrder' syntaxRoot' indentationSettings
Long Parameter List,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,OrderMember,The method has 5 parameters. Parameters: memberOrder' members' elementOrder' syntaxRoot' indentationSettings
Long Parameter List,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,The method has 5 parameters. Parameters: usingsGroup' directiveSpan' indentation' triviaToMove' qualifyNames
Long Parameter List,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,The method has 5 parameters. Parameters: usingsGroup' usingsList' indentation' triviaToMove' qualifyNames
Long Identifier,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,GetFixAsync,The length of the parameter documentsAndDiagnosticsToFixMap is 31.
Long Identifier,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,GetFixAsync,The length of the parameter projectsAndDiagnosticsToFixMap is 30.
Long Identifier,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,GetFixAsync,The length of the parameter documentsAndDiagnosticsToFixMap is 31.
Long Identifier,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,GetFixAsync,The length of the parameter projectsAndDiagnosticsToFixMap is 30.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The length of the parameter previousTokenNewTrailingTrivia is 30.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The length of the parameter isMultiDimensionArrayInitializer is 32.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,ReformatElement,The length of the parameter newStartOfContentTokenLeadingTrivia is 35.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,ReformatElement,The length of the parameter newEndOfContentTokenTrailingTrivia is 34.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatBodyAsMultipleLines,The length of the parameter reformattedOpenBraceTrailingTrivia is 34.
Long Identifier,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatBodyAsMultipleLines,The length of the parameter reformattedCloseBraceLeadingTrivia is 34.
Long Identifier,StyleCop.Analyzers.OrderingRules,SA1205CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1205CodeFixProvider.cs,,The length of the parameter ProtectedAccessibilityKeywords is 30.
Long Identifier,StyleCop.Analyzers.OrderingRules,SA1205CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1205CodeFixProvider.cs,,The length of the parameter ProtectedOrInternalAccessibilityKeywords is 40.
Long Identifier,StyleCop.Analyzers.OrderingRules,SA1205CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1205CodeFixProvider.cs,,The length of the parameter UnexpectedAccessibilityKeywords is 31.
Long Identifier,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,,The length of the parameter SystemUsingDirectiveIdentifier is 30.
Long Identifier,StyleCop.Analyzers.ReadabilityRules,SA1136CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1136CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the parameter enumMemberDeclarationFirstToken is 31.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,The length of the statement  "            var copyrightText = GetCopyrightText(commentIndentation + interlinePadding' settings.DocumentationRules.GetCopyrightText(fileName)' newLineText); " is 145.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,The length of the statement  "            var newHeader = WrapInXmlComment(commentIndentation + interlinePadding' copyrightText' document.Name' settings' newLineText); " is 125.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceHeader,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,FirstLineIsComment,The length of the statement  "            if ((trivia.Count > 1) && trivia[0].IsKind(SyntaxKind.WhitespaceTrivia) && trivia[1].IsKind(SyntaxKind.SingleLineCommentTrivia)) " is 128.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,AddHeader,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,CreateNewHeader,The length of the statement  "            var copyrightText = GetCopyrightText(prefixWithLeadingSpaces' settings.DocumentationRules.GetCopyrightText(fileName)' newLineText); " is 131.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,WrapInXmlComment,The length of the statement  "            string encodedCompanyName = new XAttribute("t"' settings.DocumentationRules.CompanyName).ToString().Substring(2).Trim('"'); " is 123.
Long Statement,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,RemoveHeaderDecorationLines,The length of the statement  "                    if (triviaLine.Kind() == SyntaxKind.SingleLineCommentTrivia && triviaLine.ToFullString().Contains(settings.DocumentationRules.HeaderDecoration)) " is 144.
Long Statement,StyleCop.Analyzers.DocumentationRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                    if ((syntaxRoot.FindNode(diagnostic.Location.SourceSpan' findInsideTrivia: true' getInnermostNodeForTie: true) is XmlElementSyntax xmlElement) " is 142.
Long Statement,StyleCop.Analyzers.DocumentationRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var newSyntaxRoot = syntaxRoot.ReplaceNodes(elements' (original' rewritten) => rewritten.WithAdditionalAnnotations(NodeToReplaceAnnotation)); " is 141.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                return GetTransformedDocumentForBasePropertyDeclaration(document' root' semanticModel' (BasePropertyDeclarationSyntax)identifierToken.Parent' cancellationToken); " is 161.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                return GetTransformedDocumentForMethodDeclaration(document' root' semanticModel' (MethodDeclarationSyntax)identifierToken.Parent' cancellationToken); " is 149.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                return GetTransformedDocumentForEventFieldDeclaration(document' root' semanticModel' (EventFieldDeclarationSyntax)identifierToken.Parent.Parent.Parent' cancellationToken); " is 171.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                return GetTransformedDocumentForIndexerDeclaration(document' root' semanticModel' (IndexerDeclarationSyntax)identifierToken.Parent' cancellationToken); " is 151.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForBasePropertyDeclaration,The length of the statement  "            if (basePropertyDeclaration.ExplicitInterfaceSpecifier == null && !basePropertyDeclaration.Modifiers.Any(SyntaxKind.OverrideKeyword)) " is 133.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForMethodDeclaration,The length of the statement  "            if (methodDeclaration.ExplicitInterfaceSpecifier == null && !methodDeclaration.Modifiers.Any(SyntaxKind.OverrideKeyword)) " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,GetTransformedDocumentForIndexerDeclaration,The length of the statement  "            if (indexerDeclaration.ExplicitInterfaceSpecifier == null && !indexerDeclaration.Modifiers.Any(SyntaxKind.OverrideKeyword)) " is 123.
Long Statement,StyleCop.Analyzers.DocumentationRules,InheritdocCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\InheritdocCodeFixProvider.cs,InsertInheritdocComment,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,PropertySummaryDocumentationCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\PropertySummaryDocumentationCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newXmlTextLiteral = SyntaxFactory.XmlTextLiteral(textToken.LeadingTrivia' newText' newText' textToken.TrailingTrivia); " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "            SemanticModel semanticModel = await context.Document.GetSemanticModelAsync(context.CancellationToken).ConfigureAwait(false); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                            cancellationToken => GetConstructorOrDestructorDocumentationTransformedDocumentAsync(context.Document' root' (BaseMethodDeclarationSyntax)identifierToken.Parent' cancellationToken)' " is 181.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                                cancellationToken => GetMethodDocumentationTransformedDocumentAsync(context.Document' root' semanticModel' (MethodDeclarationSyntax)identifierToken.Parent' cancellationToken)' " is 175.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetConstructorOrDestructorDocumentationTransformedDocumentAsync,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetConstructorOrDestructorDocumentationTransformedDocumentAsync,The length of the statement  "            var standardText = SA1642SA1643CodeFixProvider.GenerateStandardText(document' declaration' typeDeclaration' cancellationToken); " is 127.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetConstructorOrDestructorDocumentationTransformedDocumentAsync,The length of the statement  "            var standardTextSyntaxList = SA1642SA1643CodeFixProvider.BuildStandardTextSyntaxList(typeDeclaration' newLineText' standardText[0]' standardText[1]); " is 149.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetConstructorOrDestructorDocumentationTransformedDocumentAsync,The length of the statement  "            // Remove the empty line generated by build standard text' as this is not needed with constructing a new summary element. " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetMethodDocumentationTransformedDocumentAsync,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,GetMethodDocumentationTransformedDocumentAsync,The length of the statement  "            var typeSymbol = semanticModel.GetSymbolInfo(methodDeclaration.ReturnType' cancellationToken).Symbol as INamedTypeSymbol; " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1609SA1610CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1609SA1610CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            DocumentationCommentTriviaSyntax documentationComment = propertyDeclarationSyntax.GetDocumentationCommentTriviaSyntax(); " is 120.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1609SA1610CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1609SA1610CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            if (!(documentationComment.Content.GetFirstXmlElement(XmlCommentHelper.SummaryXmlTag) is XmlElementSyntax summaryElement)) " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1609SA1610CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1609SA1610CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1609SA1610CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1609SA1610CodeFixProvider.cs,TryRemoveSummaryPrefix,The length of the statement  "            SyntaxToken replaced = SyntaxFactory.Token(prefixToken.LeadingTrivia' prefixToken.Kind()' text' valueText' prefixToken.TrailingTrivia); " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615SA1616CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1615SA1616CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                isAsynchronousTestMethod = isTask && IsAsynchronousTestMethod(semanticModel' methodDeclarationSyntax' cancellationToken); " is 121.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615SA1616CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1615SA1616CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                content = content.Add(XmlSyntaxFactory.SeeElement(SyntaxFactory.TypeCref(SyntaxFactory.ParseTypeName("global::System.Threading.Tasks.Task"))).WithAdditionalAnnotations(Simplifier.Annotation)); " is 192.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1615SA1616CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1615SA1616CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,GenerateStandardText,The length of the statement  "                var typeKindText = resourceManager.GetString(isStruct ? nameof(DocumentationResources.TypeTextStruct) : nameof(DocumentationResources.TypeTextClass)' culture); " is 159.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,GenerateStandardText,The length of the statement  "                        string.Format(resourceManager.GetString(nameof(DocumentationResources.StaticConstructorStandardTextFirstPart)' culture)' typeKindText)' " is 135.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,GenerateStandardText,The length of the statement  "                        string.Format(resourceManager.GetString(nameof(DocumentationResources.StaticConstructorStandardTextSecondPart)' culture)' typeKindText)); " is 137.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,GenerateStandardText,The length of the statement  "                        string.Format(resourceManager.GetString(nameof(DocumentationResources.NonPrivateConstructorStandardTextFirstPart)' culture)' typeKindText)' " is 139.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,GenerateStandardText,The length of the statement  "                        string.Format(resourceManager.GetString(nameof(DocumentationResources.NonPrivateConstructorStandardTextSecondPart)' culture)' typeKindText)); " is 141.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1642SA1643CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1642SA1643CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                string newLineText = document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 124.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1649CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1649CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            var newPath = document.FilePath != null ? Path.Combine(Path.GetDirectoryName(document.FilePath)' expectedFileName) : null; " is 122.
Long Statement,StyleCop.Analyzers.DocumentationRules,SA1651CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1651CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                SyntaxNode syntax = documentRoot.FindNode(diagnostic.Location.SourceSpan' findInsideTrivia: true' getInnermostNodeForTie: true); " is 128.
Long Statement,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,GetFixAsync,The length of the statement  "                    fixOperations.Add(this.AddDocumentFixesAsync(document' documentsAndDiagnosticsToFixMap[document]' fixesBag[index].Add' fixAllContext)); " is 135.
Long Statement,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,AddDocumentFixesAsync,The length of the statement  "                            // TODO: Can we share code between similar lambdas that we pass to this API in BatchFixAllProvider.cs' CodeFixService.cs and CodeRefactoringService.cs? " is 151.
Long Statement,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,TryGetMergedFixAsync,The length of the statement  "            var newSolution = await this.TryMergeFixesAsync(solution' batchOfFixes' fixAllContext.CancellationToken).ConfigureAwait(false); " is 127.
Long Statement,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,TryMergeFixesAsync,The length of the statement  "                ImmutableArray<CodeActionOperation> operations = await codeAction.GetPreviewOperationsAsync(cancellationToken).ConfigureAwait(false); " is 133.
Long Statement,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,TryMergeFixesAsync,The length of the statement  "                        var appliedChanges = (await documentsToMerge[0].GetTextChangesAsync(oldDocument' cancellationToken).ConfigureAwait(false)).ToList(); " is 132.
Long Statement,StyleCop.Analyzers.Helpers,CustomBatchFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\CustomBatchFixAllProvider.cs,TryAddDocumentMergeChangesAsync,The length of the statement  "                while (cumulativeChangeIndex < cumulativeChanges.Count && cumulativeChanges[cumulativeChangeIndex].Span.End < change.Span.Start) " is 128.
Long Statement,StyleCop.Analyzers.Helpers,DocumentBasedFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\DocumentBasedFixAllProvider.cs,GetFixAsync,The length of the statement  "                    cancellationToken => this.GetProjectFixesAsync(fixAllContext.WithCancellationToken(cancellationToken)' fixAllContext.Project)' " is 126.
Long Statement,StyleCop.Analyzers.Helpers,DocumentBasedFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\DocumentBasedFixAllProvider.cs,GetDocumentFixesAsync,The length of the statement  "            var documentDiagnosticsToFix = await FixAllContextHelper.GetDocumentDiagnosticsToFixAsync(fixAllContext).ConfigureAwait(false); " is 127.
Long Statement,StyleCop.Analyzers.Helpers,DocumentBasedFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\DocumentBasedFixAllProvider.cs,GetDocumentFixesAsync,The length of the statement  "            var newRoot = await this.FixAllInDocumentAsync(fixAllContext' fixAllContext.Document' diagnostics).ConfigureAwait(false); " is 121.
Long Statement,StyleCop.Analyzers.Helpers,DocumentBasedFixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\DocumentBasedFixAllProvider.cs,GetSolutionFixesAsync,The length of the statement  "            var documentDiagnosticsToFix = await FixAllContextHelper.GetDocumentDiagnosticsToFixAsync(fixAllContext).ConfigureAwait(false); " is 127.
Long Statement,StyleCop.Analyzers.Helpers,FixAllContextHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\FixAllContextHelper.cs,GetDocumentDiagnosticsToFixAsync,The length of the statement  "                allDiagnostics = allDiagnostics.AddRange(diagnostics.SelectMany(i => i.Value.Where(x => fixAllContext.DiagnosticIds.Contains(x.Id)))); " is 134.
Long Statement,StyleCop.Analyzers.Helpers,FixAllContextHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\FixAllContextHelper.cs,GetDocumentDiagnosticsToFixAsync,The length of the statement  "            return await GetDocumentDiagnosticsToFixAsync(allDiagnostics' projectsToFix' fixAllContext.CancellationToken).ConfigureAwait(false); " is 132.
Long Statement,StyleCop.Analyzers.Helpers,FormattingHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\FormattingHelper.cs,GetNewLineTrivia,The length of the statement  "            return SyntaxFactory.SyntaxTrivia(SyntaxKind.EndOfLineTrivia' document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp)); " is 166.
Long Statement,StyleCop.Analyzers.Helpers,QueryIndentationHelpers,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\QueryIndentationHelpers.cs,GetQueryIndentationTrivia,The length of the statement  "            if (!firstTokenOnTextLine.IsKind(SyntaxKind.OpenParenToken) && (firstTokenOnTextLine != queryExpression.FromClause.FromKeyword)) " is 128.
Long Statement,StyleCop.Analyzers.Helpers,RenameHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\RenameHelper.cs,RenameSymbolAsync,The length of the statement  "            var annotatedRoot = root.ReplaceToken(declarationToken' declarationToken.WithAdditionalAnnotations(RenameAnnotation.Create())); " is 127.
Long Statement,StyleCop.Analyzers.Helpers,RenameHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\RenameHelper.cs,RenameSymbolAsync,The length of the statement  "            var newSolution = await Renamer.RenameSymbolAsync(annotatedSolution' symbol' newName' null' cancellationToken).ConfigureAwait(false); " is 133.
Long Statement,StyleCop.Analyzers.Helpers,RenameHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\RenameHelper.cs,IsValidNewMemberNameAsync,The length of the statement  "                    containingNamespaceOrTypeSymbol = semanticModel.Compilation.GetCompilationNamespace((INamespaceSymbol)containingNamespaceOrTypeSymbol); " is 135.
Long Statement,StyleCop.Analyzers.Helpers,TaskHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\TaskHelper.cs,IsTaskType,The length of the statement  "            if (!string.Equals(typeof(Task).Namespace' namedTypeSymbol.ContainingNamespace?.ToDisplayString(SymbolDisplayFormat.FullyQualifiedFormat.WithGlobalNamespaceStyle(SymbolDisplayGlobalNamespaceStyle.Omitted))' StringComparison.Ordinal)) " is 233.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newSyntaxRoot = syntaxRoot.ReplaceTokens(tokenReplacements.Keys' (originalToken' rewrittenToken) => tokenReplacements[originalToken]); " is 138.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The length of the statement  "                        braceReplacementToken = braceReplacementToken.WithLeadingTrivia(IndentationHelper.GenerateWhitespaceTrivia(indentationSettings' indentationSteps)); " is 147.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The length of the statement  "                    var nextTokenLine = nextToken.IsKind(SyntaxKind.None) ? -1 : LocationHelpers.GetLineSpan(nextToken).StartLinePosition.Line; " is 123.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The length of the statement  "                    var isMultiDimensionArrayInitializer = braceToken.IsKind(SyntaxKind.OpenBraceToken) && braceToken.Parent.IsKind(SyntaxKind.ArrayInitializerExpression) && braceToken.Parent.Parent.IsKind(SyntaxKind.ArrayInitializerExpression); " is 225.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The length of the statement  "                            AddReplacement(tokenReplacements' nextToken' nextToken.WithLeadingTrivia(IndentationHelper.GenerateWhitespaceTrivia(indentationSettings' newIndentationSteps))); " is 160.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,IsAccessorWithSingleLineBlock,The length of the statement  "            return LocationHelpers.GetLineSpan(braceToken).StartLinePosition.Line == LocationHelpers.GetLineSpan(token).StartLinePosition.Line; " is 131.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,AddReplacement,The length of the statement  "                tokenReplacements[originalToken] = tokenReplacements[originalToken].WithTrailingTrivia(replacementToken.TrailingTrivia); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceTokens(tokenReplacements.Keys' (originalToken' rewrittenToken) => tokenReplacements[originalToken]); " is 125.
Long Statement,StyleCop.Analyzers.LayoutRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                    // If the parent of the statement contains a conditional directive' stuff will be really hard to fix correctly' so don't offer a code fix. " is 138.
Long Statement,StyleCop.Analyzers.LayoutRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceNodes(nodesNeedingBlocks' (originalNode' rewrittenNode) => SyntaxFactory.Block((StatementSyntax)rewrittenNode)); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var newLine = fixAllContext.Document.Project.Solution.Workspace.Options.GetOption(FormattingOptions.NewLine' LanguageNames.CSharp); " is 131.
Long Statement,StyleCop.Analyzers.LayoutRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                // Using token replacement' because node replacement will do nothing when replacing child nodes from a replaced parent node. " is 124.
Long Statement,StyleCop.Analyzers.LayoutRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                Document updatedDocument = await FixEndOfFileAsync(document' diagnostics[0]' settings.LayoutRules.NewlineAtEndOfFile' fixAllContext.CancellationToken).ConfigureAwait(false); " is 173.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                if (diagnostic.Properties.GetValueOrDefault(SA1501StatementMustNotBeOnASingleLine.SuppressCodeFixKey) == SA1501StatementMustNotBeOnASingleLine.SuppressCodeFixValue) " is 164.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatBlock,The length of the statement  "            var parentIndentationLevel = IndentationHelper.GetIndentationSteps(indentationSettings' GetStatementParent(block.Parent)); " is 122.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatBlock,The length of the statement  "            var statementIndentationString = IndentationHelper.GenerateIndentationString(indentationSettings' parentIndentationLevel + 1); " is 126.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatBlock,The length of the statement  "                addNewLineAfterCloseBrace = (newCloseBraceTrailingTrivia.Count == 0) || !newCloseBraceTrailingTrivia.Last().IsKind(SyntaxKind.EndOfLineTrivia); " is 143.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatBlock,The length of the statement  "            AddToReplaceMap(tokenReplaceMap' block.OpenBraceToken' block.OpenBraceToken.WithLeadingTrivia(newOpenBraceLeadingTrivia).WithTrailingTrivia(newOpenBraceTrailingTrivia)); " is 169.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatBlock,The length of the statement  "            AddToReplaceMap(tokenReplaceMap' block.CloseBraceToken' block.CloseBraceToken.WithLeadingTrivia(newCloseBraceLeadingTrivia).WithTrailingTrivia(newCloseBraceTrailingTrivia)); " is 173.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatStatement,The length of the statement  "            AddToReplaceMap(tokenReplaceMap' statement.GetFirstToken()' statement.GetFirstToken().WithLeadingTrivia(newFirstTokenLeadingTrivia)); " is 133.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatStatement,The length of the statement  "            AddToReplaceMap(tokenReplaceMap' statement.GetLastToken()' statement.GetLastToken().WithTrailingTrivia(newLastTokenTrailingTrivia)); " is 132.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,AddToReplaceMap,The length of the statement  "                reprocessedReplacement = AreTriviaEqual(original.LeadingTrivia' existingReplacement.LeadingTrivia) ? replacement : existingReplacement; " is 135.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,AddToReplaceMap,The length of the statement  "                reprocessedReplacement = reprocessedReplacement.WithTrailingTrivia(AreTriviaEqual(original.TrailingTrivia' existingReplacement.TrailingTrivia) ? replacement.TrailingTrivia : existingReplacement.TrailingTrivia); " is 210.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,CreateCodeFix,The length of the statement  "                newSyntaxRoot = this.RegisterBaseTypeDeclarationCodeFix(syntaxRoot' (BaseTypeDeclarationSyntax)node' indentationSettings); " is 122.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,CreateCodeFix,The length of the statement  "                newSyntaxRoot = this.RegisterPropertyLikeDeclarationCodeFix(syntaxRoot' (BasePropertyDeclarationSyntax)node.Parent' indentationSettings); " is 137.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,CreateCodeFix,The length of the statement  "                    newSyntaxRoot = this.RegisterLocalFunctionStatementCodeFix(syntaxRoot' (LocalFunctionStatementSyntaxWrapper)node.Parent' indentationSettings); " is 142.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,CreateCodeFix,The length of the statement  "                    newSyntaxRoot = this.RegisterMethodLikeDeclarationCodeFix(syntaxRoot' (BaseMethodDeclarationSyntax)node.Parent' indentationSettings); " is 133.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,CreateCodeFix,The length of the statement  "                newSyntaxRoot = this.RegisterNamespaceDeclarationCodeFix(syntaxRoot' (NamespaceDeclarationSyntax)node' indentationSettings); " is 124.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,RegisterPropertyLikeDeclarationCodeFix,The length of the statement  "            return this.ReformatElement(syntaxRoot' node' node.AccessorList.OpenBraceToken' node.AccessorList.CloseBraceToken' indentationSettings); " is 136.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,RegisterMethodLikeDeclarationCodeFix,The length of the statement  "            return this.ReformatElement(syntaxRoot' node' node.Body.OpenBraceToken' node.Body.CloseBraceToken' indentationSettings); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,RegisterLocalFunctionStatementCodeFix,The length of the statement  "            return this.ReformatElement(syntaxRoot' node' node.Body.OpenBraceToken' node.Body.CloseBraceToken' indentationSettings); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,ReformatElement,The length of the statement  "            var contentIndentationString = IndentationHelper.GenerateIndentationString(indentationSettings' parentIndentationLevel + 1); " is 124.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,ReformatElement,The length of the statement  "                tokenSubstitutions.Add(startOfContentToken' startOfContentToken.WithLeadingTrivia(newStartOfContentTokenLeadingTrivia)); " is 120.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,ReformatElement,The length of the statement  "                    tokenSubstitutions[endOfContentToken] = tokenSubstitutions[endOfContentToken].WithTrailingTrivia(newEndOfContentTokenTrailingTrivia); " is 133.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1503CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                // If the parent of the statement contains a conditional directive' stuff will be really hard to fix correctly' so don't offer a code fix. " is 138.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1503CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1503CodeFixProvider.cs,ContainsConditionalDirectiveTrivia,The length of the statement  "            for (var currentDirective = node.GetFirstDirective(); currentDirective != null && node.Contains(currentDirective); currentDirective = currentDirective.GetNextDirective()) " is 170.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatModifiersAsSingleLine,The length of the statement  "            var reformattedModifiers = modifiers.Select(t => t.WithLeadingTrivia(ReformatTriviaListNoLeadingSpace(t.LeadingTrivia)).WithTrailingTrivia(ReformatTriviaList(t.TrailingTrivia))); " is 178.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatBodyAsSingleLine,The length of the statement  "                .WithTrailingTrivia(ReformatTriviaListNoTrailingSpace(body.CloseBraceToken.TrailingTrivia).Add(SyntaxFactory.CarriageReturnLineFeed)); " is 134.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,GetTransformedDocumentForMutipleLinesAsync,The length of the statement  "                    reformattedAccessor = reformattedAccessor.WithTrailingTrivia(reformattedAccessor.GetTrailingTrivia().Add(SyntaxFactory.CarriageReturnLineFeed)); " is 144.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatModifiersAsMultipleLines,The length of the statement  "            var reformattedModifiers = modifiers.Select(t => t.WithLeadingTrivia(ReformatTriviaListNoLeadingSpace(t.LeadingTrivia)).WithTrailingTrivia(ReformatTriviaList(t.TrailingTrivia))).ToArray(); " is 188.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatModifiersAsMultipleLines,The length of the statement  "            reformattedModifiers[0] = reformattedModifiers[0].WithLeadingTrivia(reformattedModifiers[0].LeadingTrivia.Insert(0' indentation)); " is 130.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatKeywordAsMultipleLines,The length of the statement  "            var newTrailingTrivia = ReformatTriviaListNoTrailingSpace(keyword.TrailingTrivia).Add(SyntaxFactory.CarriageReturnLineFeed); " is 124.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatBodyAsMultipleLines,The length of the statement  "                        .WithTrailingTrivia(ReformatTriviaListNoTrailingSpace(statement.GetTrailingTrivia()).Add(SyntaxFactory.CarriageReturnLineFeed)); " is 128.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatBodyAsMultipleLines,The length of the statement  "                var triviaBetweenBraces = TriviaHelper.MergeTriviaLists(body.OpenBraceToken.TrailingTrivia' body.CloseBraceToken.LeadingTrivia); " is 128.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatBodyAsMultipleLines,The length of the statement  "                .WithTrailingTrivia(ReformatTriviaListNoTrailingSpace(body.CloseBraceToken.TrailingTrivia).Add(SyntaxFactory.CarriageReturnLineFeed)); " is 134.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1504CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1504CodeFixProvider.cs,ReformatTriviaListNoTrailingSpace,The length of the statement  "            return SyntaxFactory.TriviaList(triviaList.Where(t => t.IsKind(SyntaxKind.MultiLineCommentTrivia)).SelectMany(ExpandComment)); " is 126.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1514CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1514CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newSyntaxRoot = syntaxRoot.ReplaceToken(documentationHeader.Token' documentationHeader.Token.WithLeadingTrivia(newLeadingTrivia)); " is 134.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1515CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1515CodeFixProvider.cs,FixTriviaList,The length of the statement  "                        triviaList = triviaList.ReplaceRange(triviaList[index]' new[] { triviaList[index]' SyntaxFactory.CarriageReturnLineFeed }); " is 123.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1516CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1516CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                        cancellationToken => GetTransformedDocumentAsync(context.Document' syntaxRoot' diagnostic' insertBlankLine.Value' context.CancellationToken)' " is 141.
Long Statement,StyleCop.Analyzers.LayoutRules,SA1518CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1518CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                        cancellationToken => FixEndOfFileAsync(context.Document' diagnostic' settings.LayoutRules.NewlineAtEndOfFile' cancellationToken)' " is 129.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1119CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1119CodeFixProvider.cs,GetReplacement,The length of the statement  "            var leadingTrivia = SyntaxFactory.TriviaList(oldNode.OpenParenToken.GetAllTrivia().Concat(oldNode.Expression.GetLeadingTrivia())); " is 130.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1119CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1119CodeFixProvider.cs,GetReplacement,The length of the statement  "                if (!previousToken.IsKind(SyntaxKind.OpenParenToken) && (TriviaHelper.IndexOfTrailingWhitespace(previousToken.TrailingTrivia) == -1)) " is 133.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1119CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var nodes = diagnostics.Select(diagnostic => syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true' findInsideTrivia: true)); " is 152.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1119CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceNodes(nodes' (originalNode' rewrittenNode) => GetReplacement((ParenthesizedExpressionSyntax)rewrittenNode)); " is 133.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleEventDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref triviaToken' SyntaxKind.PrivateKeyword); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleEventFieldDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref triviaToken' SyntaxKind.PrivateKeyword); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleMethodDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref type' SyntaxKind.PrivateKeyword); " is 120.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandlePropertyDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref type' SyntaxKind.PrivateKeyword); " is 120.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleFieldDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref declaration' SyntaxKind.PrivateKeyword); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleConversionOperatorDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref triviaToken' SyntaxKind.PublicKeyword); " is 126.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleIndexerDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref type' SyntaxKind.PrivateKeyword); " is 120.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1400CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1400CodeFixProvider.cs,HandleConstructorDeclaration,The length of the statement  "            SyntaxTokenList modifiers = DeclarationModifiersHelper.AddModifier(node.Modifiers' ref triviaToken' SyntaxKind.PrivateKeyword); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1402CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            string extractedDocumentName = FileNameHelpers.GetConventionalFileName(memberDeclarationSyntax' settings.DocumentationRules.FileNamingConvention) + suffix; " is 155.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1402CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            SyntaxNode extractedDocumentNode = root.RemoveNodes(nodesToRemoveFromExtracted' SyntaxRemoveOptions.KeepUnbalancedDirectives); " is 126.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1402CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            Solution updatedSolution = document.Project.Solution.AddDocument(extractedDocumentId' extractedDocumentName' extractedDocumentNode' document.Folders); " is 150.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1402CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "                updatedSolution = updatedSolution.AddDocument(linkedExtractedDocumentId' extractedDocumentName' extractedDocumentNode' document.Folders); " is 137.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1402CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1402CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            updatedSolution = updatedSolution.WithDocumentSyntaxRoot(document.Id' root.RemoveNode(node' SyntaxRemoveOptions.KeepUnbalancedDirectives)); " is 139.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1404CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1404CodeFixProvider.cs,AddJustificationToAttributeAsync,The length of the statement  "            var newArgument = SyntaxFactory.AttributeArgument(SyntaxFactory.NameEquals(attributeName)' null' GetNewAttributeValue()); " is 121.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1410SA1411CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1410SA1411CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newTrailingTrivia = newPreviousToken.TrailingTrivia.AddRange(firstToken.GetAllTrivia()).AddRange(lastToken.GetAllTrivia()); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412CodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            return solutionWithoutDocument.AddDocument(DocumentId.CreateNewId(document.Project.Id)' document.Name' text' document.Folders' document.FilePath); " is 146.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,GetFixAsync,The length of the statement  "            string title = string.Format(MaintainabilityResources.SA1412CodeFix' fixAllContext.CodeActionEquivalenceKey.Substring(fixAllContext.CodeActionEquivalenceKey.IndexOf('.') + 1)); " is 176.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,FixDocumentAsync,The length of the statement  "            string equivalenceKey = nameof(SA1412CodeFixProvider) + "." + diagnostics[0].Properties[SA1412StoreFilesAsUtf8.EncodingProperty]; " is 129.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,GetDocumentFixesAsync,The length of the statement  "            var documentDiagnosticsToFix = await FixAllContextHelper.GetDocumentDiagnosticsToFixAsync(fixAllContext).ConfigureAwait(false); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,GetDocumentFixesAsync,The length of the statement  "            return await FixDocumentAsync(fixAllContext.Document.Project.Solution' fixAllContext.Document.Id' diagnostics' fixAllContext.CodeActionEquivalenceKey' fixAllContext.CancellationToken).ConfigureAwait(false); " is 206.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,GetSolutionFixesAsync,The length of the statement  "            var documentDiagnosticsToFix = await FixAllContextHelper.GetDocumentDiagnosticsToFixAsync(fixAllContext).ConfigureAwait(false); " is 127.
Long Statement,StyleCop.Analyzers.MaintainabilityRules,SA1412FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\MaintainabilityRules\SA1412FixAllProvider.cs,GetSolutionFixesAsync,The length of the statement  "                solution = await FixDocumentAsync(solution' document.Id' diagnostics' fixAllContext.CodeActionEquivalenceKey' fixAllContext.CancellationToken).ConfigureAwait(false); " is 165.
Long Statement,StyleCop.Analyzers.NamingRules,RenameToLowerCaseCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\RenameToLowerCaseCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                while (!await RenameHelper.IsValidNewMemberNameAsync(semanticModel' declaredSymbol' newName' context.CancellationToken).ConfigureAwait(false)) " is 142.
Long Statement,StyleCop.Analyzers.NamingRules,RenameToUpperCaseCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\RenameToUpperCaseCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                        && !await RenameHelper.IsValidNewMemberNameAsync(semanticModel' declaredSymbol' newName' context.CancellationToken).ConfigureAwait(false)) " is 138.
Long Statement,StyleCop.Analyzers.NamingRules,RenameToUpperCaseCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\RenameToUpperCaseCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                    while (!await RenameHelper.IsValidNewMemberNameAsync(semanticModel' declaredSymbol' newName' context.CancellationToken).ConfigureAwait(false)) " is 142.
Long Statement,StyleCop.Analyzers.NamingRules,SA1302CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1302CodeFixProvider.cs,CreateChangedSolutionAsync,The length of the statement  "            while (!await RenameHelper.IsValidNewMemberNameAsync(semanticModel' declaredSymbol' newName' cancellationToken).ConfigureAwait(false)) " is 134.
Long Statement,StyleCop.Analyzers.NamingRules,SA1308CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1308CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                // The prefix is the full variable name. In this case we cannot generate a valid variable name and thus will not offer a code fix. " is 130.
Long Statement,StyleCop.Analyzers.NamingRules,SA1314CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1314CodeFixProvider.cs,CreateChangedSolutionAsync,The length of the statement  "            while (!await RenameHelper.IsValidNewMemberNameAsync(semanticModel' declaredSymbol' newName' cancellationToken).ConfigureAwait(false)) " is 134.
Long Statement,StyleCop.Analyzers.NamingRules,SA1316CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1316CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                if (diagnostic.Properties.TryGetValue(SA1316TupleElementNamesShouldUseCorrectCasing.ExpectedTupleElementNameKey' out string fixedTupleElementName)) " is 147.
Long Statement,StyleCop.Analyzers.NamingRules,SA1316CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1316CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                            cancellationToken => GetTransformedDocumentAsync(context.Document' diagnostic' fixedTupleElementName' cancellationToken)' " is 121.
Long Statement,StyleCop.Analyzers.NamingRules,SA1316CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1316CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newSyntaxRoot = syntaxRoot.ReplaceToken(identifierToken' SyntaxFactory.Identifier(fixedTupleElementName).WithTriviaFrom(identifierToken)); " is 142.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var memberDeclaration = syntaxRoot.FindNode(diagnostic.Location.SourceSpan).FirstAncestorOrSelf<MemberDeclarationSyntax>(); " is 123.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,UpdateSyntaxRoot,The length of the statement  "                return HandleTypeDeclaration(memberToMove' (TypeDeclarationSyntax)parentDeclaration' elementOrder' syntaxRoot' indentationSettings); " is 132.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,UpdateSyntaxRoot,The length of the statement  "                return HandleNamespaceDeclaration(memberToMove' (NamespaceDeclarationSyntax)parentDeclaration' elementOrder' syntaxRoot' indentationSettings); " is 142.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,UpdateSyntaxRoot,The length of the statement  "                return HandleCompilationUnitDeclaration(memberToMove' (CompilationUnitSyntax)parentDeclaration' elementOrder' syntaxRoot' indentationSettings); " is 143.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,OrderMember,The length of the statement  "            return target.Member != null ? MoveMember(syntaxRoot' memberOrder.Member' target.Member' indentationSettings) : syntaxRoot; " is 123.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,MoveMember,The length of the statement  "                memberToMove = memberToMove.WithTrailingTrivia(memberToMove.GetTrailingTrivia().Add(SyntaxFactory.CarriageReturnLineFeed)); " is 123.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,MoveMember,The length of the statement  "                syntaxRoot = syntaxRoot.ReplaceToken(oldFirstToken' oldFirstToken.WithLeadingTrivia(StripFileHeader(oldFirstToken.LeadingTrivia))); " is 131.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,MoveMember,The length of the statement  "                syntaxRoot = syntaxRoot.ReplaceToken(newFirstToken' newFirstToken.WithLeadingTrivia(fileHeader.AddRange(newFirstToken.LeadingTrivia))); " is 135.
Long Statement,StyleCop.Analyzers.OrderingRules,ElementOrderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,HasLeadingBlankLines,The length of the statement  "            var firstTriviaIgnoringWhitespace = node.GetLeadingTrivia().FirstOrDefault(x => !x.IsKind(SyntaxKind.WhitespaceTrivia)); " is 120.
Long Statement,StyleCop.Analyzers.OrderingRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                    var memberDeclaration = syntaxRoot.FindNode(diagnostic.Location.SourceSpan).FirstAncestorOrSelf<MemberDeclarationSyntax>(); " is 123.
Long Statement,StyleCop.Analyzers.OrderingRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                    var memberDeclaration = syntaxRoot.FindNode(diagnostic.Location.SourceSpan).FirstAncestorOrSelf<MemberDeclarationSyntax>(); " is 123.
Long Statement,StyleCop.Analyzers.OrderingRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\ElementOrderCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                Document newDocument = await GetTransformedDocumentAsync(document' syntaxRoot' forcePreserve' fixAllContext.CancellationToken).ConfigureAwait(false); " is 149.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1205CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1205CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var replacementModifiers = DeclarationModifiersHelper.AddModifiers(typeDeclarationNode.Modifiers' ref keywordToken' accessModifierKinds); " is 137.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1206CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1206CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var memberDeclaration = syntaxRoot.FindNode(diagnostic.Location.SourceSpan).FirstAncestorOrSelf<MemberDeclarationSyntax>(); " is 123.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1207CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1207CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newDeclarationNode = originalDeclarationNode.ReplaceTokens(childTokens' (originalToken' rewrittenToken) => ComputeReplacementToken(originalToken' rewrittenToken' hasInternalKeyword)); " is 187.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1207CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1207CodeFixProvider.cs,ComputeReplacementToken,The length of the statement  "                return SyntaxFactory.Token(hasInternalKeyword ? SyntaxKind.InternalKeyword : SyntaxKind.PrivateKeyword).WithTriviaFrom(rewrittenToken); " is 135.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1212SA1213CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1212SA1213CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                var newFirstAccessor = trackedFirstAccessor.WithLeadingTrivia(new[] { SyntaxFactory.CarriageReturnLineFeed }.Concat(firstAccesor.GetFirstToken().WithoutLeadingBlankLines().LeadingTrivia)); " is 188.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1212SA1213CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1212SA1213CodeFixProvider.cs,HasLeadingBlankLines,The length of the statement  "            var firstTriviaIgnoringWhitespace = node.GetLeadingTrivia().FirstOrDefault(x => !x.IsKind(SyntaxKind.WhitespaceTrivia)); " is 120.
Long Statement,StyleCop.Analyzers.OrderingRules,SA1212SA1213CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1212SA1213CodeFixProvider.cs,GetNewAccessor,The length of the statement  "                newLeadingTrivia = SyntaxFactory.TriviaList(TriviaHelper.MergeTriviaLists(newLeadingTrivia' SyntaxTriviaList.Empty.AddRange(leadingWhitespace))); " is 145.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var usingDirectivesPlacement = forcePreservePlacement ? UsingDirectivesPlacement.Preserve : DeterminePlacement(compilationUnit' settings); " is 138.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            // - The strategy is to strip all using directive that are not inside a conditional directive and replace them later with a sorted list at the correct spot " is 155.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            // - No using directives will be stripped when there are multiple namespaces. In that case everything is replaced on the spot. " is 126.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,AddUsingsToNamespace,The length of the statement  "            var groupedUsings = usingsHelper.GenerateGroupedUsings(TreeTextSpan.Empty' usingsIndentation' withTrailingBlankLine' qualifyNames: false); " is 138.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,AddUsingsToCompilationRoot,The length of the statement  "            var withTrailingBlankLine = hasConditionalDirectives || newCompilationUnit.AttributeLists.Any() || newCompilationUnit.Members.Any() || newCompilationUnit.Externs.Any(); " is 168.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,AddUsingsToCompilationRoot,The length of the statement  "            var groupedUsings = usingsHelper.GenerateGroupedUsings(TreeTextSpan.Empty' usingsIndentation' withTrailingBlankLine' qualifyNames: true); " is 137.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,StripMultipleBlankLines,The length of the statement  "                        replaceMap[usingDirective.SemicolonToken] = usingDirective.SemicolonToken.WithTrailingTrivia(trailingTrivia.Take(trailingTrivia.Count - trailingStripCount)); " is 157.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingSyntaxRewriter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.cs,VisitToken,The length of the statement  "                    var newLeadingTrivia = (index == -1) ? SyntaxFactory.TriviaList() : SyntaxFactory.TriviaList(token.LeadingTrivia.Skip(index)); " is 126.
Long Statement,StyleCop.Analyzers.OrderingRules,SourceMap,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.SourceMap.cs,BuildDirectiveTriviaMaps,The length of the statement  "                for (var directiveTrivia = compilationUnit.GetFirstDirective(); directiveTrivia != null; directiveTrivia = directiveTrivia.GetNextDirective()) " is 142.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateGroupedUsings,The length of the statement  "                usingList.AddRange(this.GenerateUsings(this.systemStaticImports' directiveSpan' indentation' triviaToMove' qualifyNames)); " is 122.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateGroupedUsings,The length of the statement  "                    usingList[usingList.Count - 1] = lastUsing.WithTrailingTrivia(lastUsing.GetTrailingTrivia().Add(SyntaxFactory.CarriageReturnLineFeed)); " is 135.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateGroupedUsings,The length of the statement  "                    usingList[usingList.Count - 1] = lastUsing.WithTrailingTrivia(lastUsing.GetTrailingTrivia().Add(SyntaxFactory.CarriageReturnLineFeed)); " is 135.
Long Statement,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,The length of the statement  "                            if (!triviaToMove[m].IsKind(SyntaxKind.RegionDirectiveTrivia) && !triviaToMove[m].IsKind(SyntaxKind.EndRegionDirectiveTrivia)) " is 126.
Long Statement,StyleCop.Analyzers.ReadabilityRules,IndentationCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,TryGetTextChange,The length of the statement  "            if (!diagnostic.Properties.TryGetValue(SA1137ElementsShouldHaveTheSameIndentation.ExpectedIndentationKey' out replacement)) " is 123.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return await document.WithText(text.WithChanges(changes)).GetSyntaxRootAsync(fixAllContext.CancellationToken).ConfigureAwait(false); " is 132.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                SyntaxFactory.MemberAccessExpression(SyntaxKind.SimpleMemberAccessExpression' ThisExpressionSyntax' (SimpleNameSyntax)rewrittenNode.WithoutTrivia().WithoutFormatting()) " is 168.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceNodes(nodesToReplace' (originalNode' rewrittenNode) => ComputeReplacement(semanticModel' originalNode' fixAllContext.CancellationToken)); " is 162.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceNodes(nodes' (originalNode' rewrittenNode) => ReformatConstructorDeclaration((ConstructorDeclarationSyntax)rewrittenNode' settings.Indentation' newLine)); " is 179.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var nodes = diagnostics.Select(diagnostic => syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true)); " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceNodes(nodes' (originalNode' rewrittenNode) => GetReplacementNode(rewrittenNode' semanticModel' fixAllContext.CancellationToken)); " is 154.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                    var node = (AnonymousMethodExpressionSyntax)syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true); " is 126.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var nodes = diagnostics.Select(diagnostic => (BinaryExpressionSyntax)syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true)); " is 152.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var nodes = diagnostics.Select(diagnostic => syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true).FirstAncestorOrSelf<AttributeListSyntax>()); " is 171.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                    newRoot = newRoot.ReplaceNode(newRoot.GetCurrentNode(attributeList)' GetNewAttributeList(attributeList' indentationTrivia)); " is 124.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                SemanticModel semanticModel = await document.GetSemanticModelAsync(fixAllContext.CancellationToken).ConfigureAwait(false); " is 122.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                var nodes = diagnostics.Select(diagnostic => syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true).FirstAncestorOrSelf<UsingDirectiveSyntax>()); " is 172.
Long Statement,StyleCop.Analyzers.ReadabilityRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\IndentationCodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return syntaxRoot.ReplaceNodes(nodes' (originalNode' rewrittenNode) => GetReplacementNode(semanticModel' rewrittenNode' fixAllContext.CancellationToken)); " is 154.
Long Statement,StyleCop.Analyzers.ReadabilityRules,RemoveRegionCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\RemoveRegionCodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                var newSyntaxRoot = syntaxRoot.RemoveNodes(regionDirective.GetRelatedDirectives()' SyntaxRemoveOptions.AddElasticMarker); " is 121.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1101CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1101CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                SyntaxFactory.MemberAccessExpression(SyntaxKind.SimpleMemberAccessExpression' ThisExpressionSyntax' node.WithoutTrivia().WithoutFormatting()) " is 141.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1106CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1106CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            return await RemoveEmptyStatementAsync(document' root' (EmptyStatementSyntax)token.Parent' cancellationToken).ConfigureAwait(false); " is 132.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1107FixAllProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1107FixAllProvider.cs,FixAllInDocumentAsync,The length of the statement  "            DocumentEditor editor = await DocumentEditor.CreateAsync(document' fixAllContext.CancellationToken).ConfigureAwait(false); " is 122.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1116CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1116CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                    SyntaxFactory.Whitespace(lineText.Substring(0' indentLength) + IndentationHelper.GenerateIndentationString(settings.Indentation' 1))); " is 134.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1120CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1120CodeFixProvider.cs,TriviaHasTrailingContentOnLine,The length of the statement  "            return nodeAfterTrivia.GetLine() == commentTrivia.GetEndLine() && !nodeAfterTrivia.GetTrailingTrivia().Contains(commentTrivia); " is 127.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1127CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1127CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var indentationTrivia = SyntaxFactory.Whitespace(parentIndentation + IndentationHelper.GenerateIndentationString(settings.Indentation' 1)); " is 139.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1127CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1127CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                [endToken] = endToken.WithTrailingTrivia(RemoveUnnecessaryWhitespaceTrivia(endToken).Add(SyntaxFactory.CarriageReturnLineFeed))' " is 128.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1129CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1129CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var newSyntaxRoot = syntaxRoot.ReplaceNode(newExpression' GetReplacementNode(newExpression' semanticModel' cancellationToken)); " is 127.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1129CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1129CodeFixProvider.cs,IsType,The length of the statement  "                namedTypeSymbol.ContainingNamespace?.ToDisplayString(SymbolDisplayFormat.FullyQualifiedFormat.WithGlobalNamespaceStyle(SymbolDisplayGlobalNamespaceStyle.Omitted))' " is 163.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,CanFixAsync,The length of the statement  "            var anonymousMethod = (AnonymousMethodExpressionSyntax)syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true); " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,ReplaceWithLambda,The length of the statement  "                lambdaExpression = SyntaxFactory.SimpleLambdaExpression(anonymousMethod.AsyncKeyword' parameterSyntax' arrowToken' anonymousMethod.Body); " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,ReplaceWithLambda,The length of the statement  "                lambdaExpression = SyntaxFactory.ParenthesizedLambdaExpression(anonymousMethod.AsyncKeyword' parameterListSyntax' arrowToken' anonymousMethod.Body); " is 148.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,GetMemberReturnTypeArgumentList,The length of the statement  "            return !(((IMethodSymbol)enclosingSymbol).ReturnType is INamedTypeSymbol returnType) ? ImmutableArray<string>.Empty : returnType.DelegateInvokeMethod.Parameters.Select(ps => ps.Name).ToImmutableArray(); " is 202.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,RemoveType,The length of the statement  "            return parameterList.WithParameters(SyntaxFactory.SeparatedList(parameterList.Parameters.Select(x => RemoveType(x))' parameterList.Parameters.GetSeparators())); " is 160.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,RemoveType,The length of the statement  "                syntax = syntax.WithLeadingTrivia(parameterSyntax.Type.GetLeadingTrivia().Concat(parameterSyntax.Type.GetTrailingTrivia())); " is 124.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,IsValid,The length of the statement  "            // If one of the following conditions is false the code won't compile' but we want to check for it anyway and not make it worse by applying this code fix. " is 154.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var anonymousMethod = (AnonymousMethodExpressionSyntax)syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true); " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1131CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1131CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var binaryExpression = (BinaryExpressionSyntax)syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true); " is 129.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1131CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1131CodeFixProvider.cs,TransformExpression,The length of the statement  "            return binaryExpression.WithLeft(newLeft).WithRight(newRight).WithOperatorToken(GetCorrectOperatorToken(binaryExpression.OperatorToken)); " is 137.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1131CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1131CodeFixProvider.cs,GetCorrectOperatorToken,The length of the statement  "                return SyntaxFactory.Token(operatorToken.LeadingTrivia' SyntaxKind.GreaterThanEqualsToken' operatorToken.TrailingTrivia); " is 121.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1134CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var indentationSteps = (containingType != null) ? IndentationHelper.GetIndentationSteps(settings.Indentation' containingType) + 1 : 0; " is 134.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1134CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                tokensToReplace[prevToken] = prevToken.WithTrailingTrivia(prevToken.TrailingTrivia.WithoutTrailingWhitespace().Add(SyntaxFactory.CarriageReturnLineFeed)); " is 154.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1134CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1134CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                tokensToReplace[token] = token.WithTrailingTrivia(token.TrailingTrivia.WithoutTrailingWhitespace().Add(SyntaxFactory.CarriageReturnLineFeed)); " is 142.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1135CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1135CodeFixProvider.cs,GetReplacementGenericName,The length of the statement  "            TypeArgumentListSyntax newTypeArgumentList = GetReplacementTypeArgumentList(symbolGenericNameSyntax' genericNameSyntax); " is 120.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1135CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1135CodeFixProvider.cs,GetReplacementTypeArgumentList,The length of the statement  "            var newTypeArgumentList = genericNameSyntax.TypeArgumentList.ReplaceNodes(replacements.Keys' (original' maybeRewritten) => replacements[original]); " is 147.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1136CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1136CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            // combine all trivia between the separator and the enum member and place them after the separator' followed by a new line. " is 123.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1136CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1136CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var sharedTrivia = TriviaHelper.MergeTriviaLists(precedingSeparatorToken.TrailingTrivia' enumMemberDeclarationFirstToken.LeadingTrivia); " is 136.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1139CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1139CodeFixProvider.cs,GenerateReplacementNode,The length of the statement  "            var newLeadingTrivia = SyntaxFactory.TriviaList(node.GetLeadingTrivia().Concat(node.CloseParenToken.TrailingTrivia).Concat(node.Expression.GetLeadingTrivia())) " is 159.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1141CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1141CodeFixProvider.cs,TransformGenericNameToTuple,The length of the statement  "            var implementationType = typeof(SeparatedSyntaxListWrapper<>.AutoWrapSeparatedSyntaxList<>).MakeGenericType(typeof(TupleElementSyntaxWrapper)' WrapperHelper.GetWrappedType(typeof(TupleElementSyntaxWrapper))); " is 208.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1141CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1141CodeFixProvider.cs,TransformGenericNameToTuple,The length of the statement  "            var tupleElements = (SeparatedSyntaxListWrapper<TupleElementSyntaxWrapper>)Activator.CreateInstance(implementationType); " is 120.
Long Statement,StyleCop.Analyzers.ReadabilityRules,SA1142CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1142CodeFixProvider.cs,GetReplacementNode,The length of the statement  "            var fieldNameSymbol = fieldSymbol.ContainingType.GetMembers().OfType<IFieldSymbol>().Single(fs => (fs != fieldSymbol) && (fs.CorrespondingTupleField() == fieldSymbol)); " is 168.
Long Statement,StyleCop.Analyzers.Settings,SettingsFileCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Settings\SettingsFileCodeFixProvider.cs,GetTransformedSolutionAsync,The length of the statement  "            var newSolution = solution.AddAdditionalDocument(newDocumentId' SettingsHelper.SettingsFileName' DefaultSettingsFileContent); " is 125.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1003CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                replacements[precedingToken] = precedingToken.WithTrailingTrivia(precedingToken.TrailingTrivia.WithoutTrailingWhitespace()); " is 124.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1003CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                replacements[followingToken] = followingToken.WithLeadingTrivia(followingToken.LeadingTrivia.WithoutLeadingWhitespace()); " is 121.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1003CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                replacements[followingToken] = followingToken.WithLeadingTrivia(followingToken.LeadingTrivia.WithoutLeadingWhitespace()); " is 121.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1003CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                replacements[token] = token.WithTrailingTrivia(token.TrailingTrivia.WithoutTrailingWhitespace().Add(SyntaxFactory.Space)); " is 122.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1003CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1003CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "                replacements[followingToken] = followingToken.WithLeadingTrivia(followingToken.LeadingTrivia.WithoutLeadingWhitespace()); " is 121.
Long Statement,StyleCop.Analyzers.SpacingRules,FixAll,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1004CodeFixProvider.cs,FixAllInDocumentAsync,The length of the statement  "                return await tree.WithChangedText(sourceText.WithChanges(changes)).GetRootAsync(fixAllContext.CancellationToken).ConfigureAwait(false); " is 135.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1018CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1018CodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                if (!(syntaxRoot.FindNode(diagnostic.Location.SourceSpan' getInnermostNodeForTie: true) is NullableTypeSyntax nullableType)) " is 124.
Long Statement,StyleCop.Analyzers.SpacingRules,SA1018CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1018CodeFixProvider.cs,GetTransformedDocumentAsync,The length of the statement  "            var correctedTriviaList = triviaList.Where(t => !t.IsKind(SyntaxKind.WhitespaceTrivia) && !t.IsKind(SyntaxKind.EndOfLineTrivia)); " is 129.
Long Statement,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The length of the statement  "                        SyntaxTriviaList trailingTrivia = triviaList.AddRange(token.TrailingTrivia.WithoutLeadingWhitespace(endOfLineIsWhitespace: false)); " is 131.
Long Statement,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The length of the statement  "                            UpdateReplaceMap(replaceMap' nextToken' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia.WithoutTrailingWhitespace())); " is 131.
Long Statement,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The length of the statement  "                    UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia(t.LeadingTrivia.WithoutTrailingWhitespace(endOfLineIsWhitespace: false))); " is 135.
Long Statement,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The length of the statement  "                        UpdateReplaceMap(replaceMap' prevToken' t => t.WithTrailingTrivia(t.TrailingTrivia.WithoutTrailingWhitespace(endOfLineIsWhitespace: false))); " is 141.
Long Statement,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The length of the statement  "                    UpdateReplaceMap(replaceMap' nextToken' t => t.WithLeadingTrivia(triviaList.WithoutLeadingWhitespace(endOfLineIsWhitespace: !preserveLayout))); " is 143.
Complex Conditional,StyleCop.Analyzers.DocumentationRules,SA1615SA1616CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1615SA1616CodeFixProvider.cs,IsAsynchronousTestMethod,The conditional expression  "string.Equals(methodSymbol.ContainingType.Name' "TestMethodAttribute"' StringComparison.Ordinal)                          || string.Equals(methodSymbol.ContainingType.Name' "FactAttribute"' StringComparison.Ordinal)                          || string.Equals(methodSymbol.ContainingType.Name' "TheoryAttribute"' StringComparison.Ordinal)                          || string.Equals(methodSymbol.ContainingType.Name' "TestAttribute"' StringComparison.Ordinal)"  is complex.
Complex Conditional,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,GenerateBraceFixes,The conditional expression  "(nextTokenLine == braceLine) &&                          (!braceToken.IsKind(SyntaxKind.CloseBraceToken) || !IsValidFollowingToken(nextToken)) &&                          !isMultiDimensionArrayInitializer"  is complex.
Complex Conditional,StyleCop.Analyzers.ReadabilityRules,SA1129CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1129CodeFixProvider.cs,GetReplacementNode,The conditional expression  "IsType<CancellationToken>(namedTypeSymbol)                  || namedTypeSymbol?.SpecialType == SpecialType.System_IntPtr                  || namedTypeSymbol?.SpecialType == SpecialType.System_UIntPtr                  || IsType<Guid>(namedTypeSymbol)"  is complex.
Complex Conditional,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The conditional expression  "(!preserveLayout || !tokenIsFirstInLine)                          && triviaList.All(i => i.IsKind(SyntaxKind.WhitespaceTrivia) || i.IsKind(SyntaxKind.EndOfLineTrivia))"  is complex.
Magic Number,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,The following statement contains a magic number: var startIndex = triviaString.IndexOf("/*"' StringComparison.Ordinal) + 2;
Magic Number,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,ReplaceWellFormedMultiLineCommentHeader,The following statement contains a magic number: (triviaStringParts.Length > 2) &&                  (triviaStringParts[1].Length > minExpectedLength) &&                  string.IsNullOrWhiteSpace(triviaStringParts[1].Substring(0' minExpectedLength))
Magic Number,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,WrapInXmlComment,The following statement contains a magic number: string encodedFilename = new XAttribute("t"' fileName).ToString().Substring(2).Trim('"');
Magic Number,StyleCop.Analyzers.DocumentationRules,FileHeaderCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\FileHeaderCodeFixProvider.cs,WrapInXmlComment,The following statement contains a magic number: string encodedCompanyName = new XAttribute("t"' settings.DocumentationRules.CompanyName).ToString().Substring(2).Trim('"');
Magic Number,StyleCop.Analyzers.Helpers,IndentationHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\IndentationHelper.cs,GetIndentationStepsUnchecked,The following statement contains a magic number: return (indentationCount + (indentationSettings.IndentationSize / 2)) / indentationSettings.IndentationSize;
Magic Number,StyleCop.Analyzers.LayoutRules,SA1512CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1512CodeFixProvider.cs,FixTriviaList,The following statement contains a magic number: switch (triviaList[index].Kind())                      {                      case SyntaxKind.EndOfLineTrivia:                      case SyntaxKind.WhitespaceTrivia:                          index++;                          break;                        default:                            if (triviaList[index - 1].IsKind(SyntaxKind.WhitespaceTrivia))                          {                              index--;                          }                            triviaList = SyntaxTriviaList.Empty.AddRange(triviaList.Take(commentLocation + 2).Concat(triviaList.Skip(index)));                            // We found the trivia so we don't have to loop any longer                          index = -1;                          break;                      }
Magic Number,StyleCop.Analyzers.LayoutRules,SA1512CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1512CodeFixProvider.cs,FixTriviaList,The following statement contains a magic number: triviaList = SyntaxTriviaList.Empty.AddRange(triviaList.Take(commentLocation + 2).Concat(triviaList.Skip(index)));
Magic Number,StyleCop.Analyzers.LayoutRules,SA1515CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1515CodeFixProvider.cs,FixTriviaList,The following statement contains a magic number: switch (triviaList[index].Kind())                      {                      case SyntaxKind.WhitespaceTrivia:                          index--;                          break;                        default:                          triviaList = triviaList.ReplaceRange(triviaList[index]' new[] { triviaList[index]' SyntaxFactory.CarriageReturnLineFeed });                            // We found the trivia so we don't have to loop any longer                          index = -2;                          break;                      }
Magic Number,StyleCop.Analyzers.NamingRules,SA1308CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1308CodeFixProvider.cs,RegisterCodeFixesAsync,The following statement contains a magic number: numberOfCharsToRemove += 2;
Magic Number,StyleCop.Analyzers.NamingRules,SA1308CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1308CodeFixProvider.cs,RegisterCodeFixesAsync,The following statement contains a magic number: string.Compare("m_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0                          || string.Compare("s_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0                          || string.Compare("t_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0
Magic Number,StyleCop.Analyzers.NamingRules,SA1308CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1308CodeFixProvider.cs,RegisterCodeFixesAsync,The following statement contains a magic number: string.Compare("m_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0                          || string.Compare("s_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0                          || string.Compare("t_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0
Magic Number,StyleCop.Analyzers.NamingRules,SA1308CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\NamingRules\SA1308CodeFixProvider.cs,RegisterCodeFixesAsync,The following statement contains a magic number: string.Compare("m_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0                          || string.Compare("s_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0                          || string.Compare("t_"' 0' token.ValueText' i' 2' StringComparison.Ordinal) == 0
Magic Number,StyleCop.Analyzers.OrderingRules,TreeTextSpan,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.TreeTextSpan.cs,GetHashCode,The following statement contains a magic number: return this.Start + (this.End << 16);
Magic Number,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,The following statement contains a magic number: int takeCount = previousIsEndOfLine ? m + 2 : m + 1;
Magic Number,StyleCop.Analyzers.OrderingRules,UsingsSorter,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.UsingsSorter.cs,GenerateUsings,The following statement contains a magic number: triviaToMove.InsertRange(0' leadingTrivia.Take(m + 2));
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1005CodeFixProvider.cs,GetTextChange,The following statement contains a magic number: int i = 2;
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1005CodeFixProvider.cs,GetTextChange,The following statement contains a magic number: return new TextChange(new TextSpan(sourceSpan.Start + 2' i - 2)' " ");
Magic Number,StyleCop.Analyzers.SpacingRules,SA1005CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1005CodeFixProvider.cs,GetTextChange,The following statement contains a magic number: return new TextChange(new TextSpan(sourceSpan.Start + 2' i - 2)' " ");
Missing Default,StyleCop.Analyzers.DocumentationRules,SA1600CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\DocumentationRules\SA1600CodeFixProvider.cs,RegisterCodeFixesAsync,The following switch statement is missing a default case: switch (identifierToken.Parent.Kind())                  {                  case SyntaxKind.ConstructorDeclaration:                  case SyntaxKind.DestructorDeclaration:                      context.RegisterCodeFix(                          CodeAction.Create(                              DocumentationResources.ConstructorDocumentationCodeFix'                              cancellationToken => GetConstructorOrDestructorDocumentationTransformedDocumentAsync(context.Document' root' (BaseMethodDeclarationSyntax)identifierToken.Parent' cancellationToken)'                              nameof(SA1600CodeFixProvider))'                          diagnostic);                      break;                    case SyntaxKind.MethodDeclaration:                      MethodDeclarationSyntax methodDeclaration = (MethodDeclarationSyntax)identifierToken.Parent;                      if (TaskHelper.IsTaskReturningMethod(semanticModel' methodDeclaration' context.CancellationToken) &&                          !IsCoveredByInheritDoc(semanticModel' methodDeclaration' context.CancellationToken))                      {                          context.RegisterCodeFix(                              CodeAction.Create(                                  DocumentationResources.MethodDocumentationCodeFix'                                  cancellationToken => GetMethodDocumentationTransformedDocumentAsync(context.Document' root' semanticModel' (MethodDeclarationSyntax)identifierToken.Parent' cancellationToken)'                                  nameof(SA1600CodeFixProvider))'                              diagnostic);                      }                        break;                  }
Missing Default,StyleCop.Analyzers.Helpers,FixAllContextHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\FixAllContextHelper.cs,GetDocumentDiagnosticsToFixAsync,The following switch statement is missing a default case: switch (fixAllContext.Scope)              {              case FixAllScope.Document:                  if (document != null)                  {                      var documentDiagnostics = await fixAllContext.GetDocumentDiagnosticsAsync(document).ConfigureAwait(false);                      return ImmutableDictionary<Document' ImmutableArray<Diagnostic>>.Empty.SetItem(document' documentDiagnostics);                  }                    break;                case FixAllScope.Project:                  projectsToFix = ImmutableArray.Create(project);                  allDiagnostics = await GetAllDiagnosticsAsync(fixAllContext' project).ConfigureAwait(false);                  break;                case FixAllScope.Solution:                  projectsToFix = project.Solution.Projects                      .Where(p => p.Language == project.Language)                      .ToImmutableArray();                    var diagnostics = new ConcurrentDictionary<ProjectId' ImmutableArray<Diagnostic>>();                  var tasks = new Task[projectsToFix.Length];                  for (int i = 0; i < projectsToFix.Length; i++)                  {                      fixAllContext.CancellationToken.ThrowIfCancellationRequested();                      var projectToFix = projectsToFix[i];                      tasks[i] = Task.Run(                          async () =>                          {                              var projectDiagnostics = await GetAllDiagnosticsAsync(fixAllContext' projectToFix).ConfigureAwait(false);                              diagnostics.TryAdd(projectToFix.Id' projectDiagnostics);                          }' fixAllContext.CancellationToken);                  }                    await Task.WhenAll(tasks).ConfigureAwait(false);                  allDiagnostics = allDiagnostics.AddRange(diagnostics.SelectMany(i => i.Value.Where(x => fixAllContext.DiagnosticIds.Contains(x.Id))));                  break;              }
Missing Default,StyleCop.Analyzers.Helpers,FixAllContextHelper,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\Helpers\FixAllContextHelper.cs,GetProjectDiagnosticsToFixAsync,The following switch statement is missing a default case: switch (fixAllContext.Scope)                  {                  case FixAllScope.Project:                      var diagnostics = await fixAllContext.GetProjectDiagnosticsAsync(project).ConfigureAwait(false);                      return ImmutableDictionary<Project' ImmutableArray<Diagnostic>>.Empty.SetItem(project' diagnostics);                    case FixAllScope.Solution:                      var projectsAndDiagnostics = new ConcurrentDictionary<Project' ImmutableArray<Diagnostic>>();                      var tasks = new List<Task>(project.Solution.ProjectIds.Count);                      Func<Project' Task> projectAction =                          async proj =>                          {                              if (fixAllContext.CancellationToken.IsCancellationRequested)                              {                                  return;                              }                                var projectDiagnostics = await fixAllContext.GetProjectDiagnosticsAsync(proj).ConfigureAwait(false);                              if (projectDiagnostics.Any())                              {                                  projectsAndDiagnostics.TryAdd(proj' projectDiagnostics);                              }                          };                        foreach (var proj in project.Solution.Projects)                      {                          if (fixAllContext.CancellationToken.IsCancellationRequested)                          {                              break;                          }                            tasks.Add(projectAction(proj));                      }                        await Task.WhenAll(tasks).ConfigureAwait(false);                      return projectsAndDiagnostics.ToImmutableDictionary();                  }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,IsAccessorWithSingleLineBlock,The following switch statement is missing a default case: switch (token.Kind())                  {                  case SyntaxKind.CloseBraceToken:                      depth--;                      break;                    case SyntaxKind.OpenBraceToken:                      depth++;                      break;                  }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1500CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1500CodeFixProvider.cs,DetermineIndentationSteps,The following switch statement is missing a default case: switch (token.Kind())                      {                      case SyntaxKind.CloseBraceToken:                          depth++;                          break;                        case SyntaxKind.OpenBraceToken:                          depth--;                          break;                      }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatBlock,The following switch statement is missing a default case: switch (block.Parent.Kind())              {              case SyntaxKind.AnonymousMethodExpression:              case SyntaxKind.SimpleLambdaExpression:              case SyntaxKind.ParenthesizedLambdaExpression:                  parentIndentationLevel++;                  break;              }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1501CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1501CodeFixProvider.cs,ReformatStatement,The following switch statement is missing a default case: switch (statement.Parent.Kind())              {              case SyntaxKind.AnonymousMethodExpression:              case SyntaxKind.SimpleLambdaExpression:              case SyntaxKind.ParenthesizedLambdaExpression:                  indentationLevel++;                  break;              }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1502CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1502CodeFixProvider.cs,CreateCodeFix,The following switch statement is missing a default case: switch (node.Kind())              {              case SyntaxKind.ClassDeclaration:              case SyntaxKind.InterfaceDeclaration:              case SyntaxKind.StructDeclaration:              case SyntaxKind.EnumDeclaration:                  newSyntaxRoot = this.RegisterBaseTypeDeclarationCodeFix(syntaxRoot' (BaseTypeDeclarationSyntax)node' indentationSettings);                  break;                case SyntaxKind.AccessorList:                  newSyntaxRoot = this.RegisterPropertyLikeDeclarationCodeFix(syntaxRoot' (BasePropertyDeclarationSyntax)node.Parent' indentationSettings);                  break;                case SyntaxKind.Block:                  if (node.Parent.IsKind(SyntaxKindEx.LocalFunctionStatement))                  {                      newSyntaxRoot = this.RegisterLocalFunctionStatementCodeFix(syntaxRoot' (LocalFunctionStatementSyntaxWrapper)node.Parent' indentationSettings);                  }                  else                  {                      newSyntaxRoot = this.RegisterMethodLikeDeclarationCodeFix(syntaxRoot' (BaseMethodDeclarationSyntax)node.Parent' indentationSettings);                  }                    break;                case SyntaxKind.NamespaceDeclaration:                  newSyntaxRoot = this.RegisterNamespaceDeclarationCodeFix(syntaxRoot' (NamespaceDeclarationSyntax)node' indentationSettings);                  break;              }
Missing Default,StyleCop.Analyzers.LayoutRules,SA1503CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\LayoutRules\SA1503CodeFixProvider.cs,ContainsConditionalDirectiveTrivia,The following switch statement is missing a default case: switch (currentDirective.Kind())                  {                  case SyntaxKind.IfDirectiveTrivia:                  case SyntaxKind.ElseDirectiveTrivia:                  case SyntaxKind.ElifDirectiveTrivia:                  case SyntaxKind.EndIfDirectiveTrivia:                      return true;                  }
Missing Default,StyleCop.Analyzers.OrderingRules,SA1205CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1205CodeFixProvider.cs,ReplaceModifiers,The following switch statement is missing a default case: switch (node.Kind())              {              case SyntaxKind.ClassDeclaration:                  return ((ClassDeclarationSyntax)node).WithModifiers(modifiers);              case SyntaxKind.InterfaceDeclaration:                  return ((InterfaceDeclarationSyntax)node).WithModifiers(modifiers);              case SyntaxKind.StructDeclaration:                  return ((StructDeclarationSyntax)node).WithModifiers(modifiers);              }
Missing Default,StyleCop.Analyzers.OrderingRules,SA1205CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\SA1205CodeFixProvider.cs,ReplaceKeyword,The following switch statement is missing a default case: switch (node.Kind())              {              case SyntaxKind.ClassDeclaration:                  return ((ClassDeclarationSyntax)node).WithKeyword(keyword);              case SyntaxKind.InterfaceDeclaration:                  return ((InterfaceDeclarationSyntax)node).WithKeyword(keyword);              case SyntaxKind.StructDeclaration:                  return ((StructDeclarationSyntax)node).WithKeyword(keyword);              }
Missing Default,StyleCop.Analyzers.OrderingRules,SourceMap,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\OrderingRules\UsingCodeFixProvider.SourceMap.cs,BuildPragmaWarningSpans,The following switch statement is missing a default case: switch (pragmaWarning.DisableOrRestoreKeyword.Kind())                      {                      case SyntaxKind.DisableKeyword:                          foreach (var errorCode in errorCodes)                          {                              if (!map.ContainsKey(errorCode))                              {                                  // only add it if the warning isn't disabled already                                  map[errorCode] = pragmaWarning;                              }                          }                            break;                        case SyntaxKind.RestoreKeyword:                          foreach (var errorCode in errorCodes)                          {                              PragmaWarningDirectiveTriviaSyntax startOfSpan;                                if (map.TryGetValue(errorCode' out startOfSpan))                              {                                  map.Remove(errorCode);                                    var childSpan = builder.AddChild(startOfSpan.FullSpan.Start);                                  childSpan.SetEnd(pragmaWarning.FullSpan.End);                              }                          }                            break;                      }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1130CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1130CodeFixProvider.cs,ReplaceWithLambda,The following switch statement is missing a default case: switch (anonymousMethod.Parent.Kind())                  {                  case SyntaxKind.Argument:                      argumentList = GetMethodInvocationArgumentList(semanticModel' anonymousMethod);                      break;                    case SyntaxKind.EqualsValueClause:                      argumentList = GetEqualsArgumentList(semanticModel' anonymousMethod);                      break;                    case SyntaxKind.AddAssignmentExpression:                  case SyntaxKind.SubtractAssignmentExpression:                      var list = GetAssignmentArgumentList(semanticModel' anonymousMethod);                        if (list == null)                      {                          return null;                      }                        argumentList = list.Value;                      break;                    case SyntaxKind.ArrowExpressionClause:                  case SyntaxKind.ReturnStatement:                      argumentList = GetMemberReturnTypeArgumentList(semanticModel' anonymousMethod);                      if (argumentList.IsEmpty)                      {                          return null;                      }                        break;                  }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1132CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1132CodeFixProvider.cs,DeclarationSplitter,The following switch statement is missing a default case: switch (triviaList[nonWhitespaceTriviaIndex].Kind())                              {                              case SyntaxKind.SingleLineCommentTrivia:                              case SyntaxKind.MultiLineCommentTrivia:                                  triviaList = triviaList.Insert(0' SyntaxFactory.CarriageReturnLineFeed);                                  break;                              }
Missing Default,StyleCop.Analyzers.ReadabilityRules,SA1141CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\ReadabilityRules\SA1141CodeFixProvider.cs,GetTransformedDocumentAsync,The following switch statement is missing a default case: switch (node.Parent.Kind())              {              case SyntaxKind.MethodDeclaration:              case SyntaxKind.Parameter:              case SyntaxKind.PropertyDeclaration:              case SyntaxKind.IndexerDeclaration:              case SyntaxKind.DelegateDeclaration:                  newNode = newNode.WithTrailingTrivia(SyntaxFactory.Space);                  break;              }
Missing Default,StyleCop.Analyzers.SpacingRules,SA1003CodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\SA1003CodeFixProvider.cs,GetTransformedDocumentAsync,The following switch statement is missing a default case: switch (diagnostic.Properties[SA1003SymbolsMustBeSpacedCorrectly.CodeFixAction])              {              case SA1003SymbolsMustBeSpacedCorrectly.InsertBeforeTag:                  replacements[token] = token.WithLeadingTrivia(token.LeadingTrivia.Add(SyntaxFactory.Space));                  break;                case SA1003SymbolsMustBeSpacedCorrectly.InsertAfterTag:                  replacements[token] = token.WithTrailingTrivia(token.TrailingTrivia.Insert(0' SyntaxFactory.Space));                  break;                case SA1003SymbolsMustBeSpacedCorrectly.RemoveBeforeTag:                  var precedingToken = token.GetPreviousToken();                  replacements[precedingToken] = precedingToken.WithTrailingTrivia(precedingToken.TrailingTrivia.WithoutTrailingWhitespace());                  replacements[token] = token.WithLeadingTrivia(token.LeadingTrivia.WithoutLeadingWhitespace());                  break;                case SA1003SymbolsMustBeSpacedCorrectly.RemoveAfterTag:                  followingToken = token.GetNextToken();                  replacements[token] = token.WithTrailingTrivia(token.TrailingTrivia.WithoutLeadingWhitespace());                  replacements[followingToken] = followingToken.WithLeadingTrivia(followingToken.LeadingTrivia.WithoutLeadingWhitespace());                  break;                case SA1003SymbolsMustBeSpacedCorrectly.RemoveEndOfLineTag:                  followingToken = token.GetNextToken();                  replacements[token] = token.WithTrailingTrivia(token.TrailingTrivia.WithoutTrailingWhitespace());                  replacements[followingToken] = followingToken.WithLeadingTrivia(followingToken.LeadingTrivia.WithoutLeadingWhitespace());                  break;                case SA1003SymbolsMustBeSpacedCorrectly.RemoveEndOfLineWithTrailingSpaceTag:                  followingToken = token.GetNextToken();                  replacements[token] = token.WithTrailingTrivia(token.TrailingTrivia.WithoutTrailingWhitespace().Add(SyntaxFactory.Space));                  replacements[followingToken] = followingToken.WithLeadingTrivia(followingToken.LeadingTrivia.WithoutLeadingWhitespace());                  break;              }
Missing Default,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The following switch statement is missing a default case: switch (location)              {              case TokenSpacingProperties.LocationPreceding:                  var prevToken = token.GetPreviousToken();                  switch (action)                  {                  case TokenSpacingProperties.ActionInsert:                      if (!replaceMap.ContainsKey(prevToken))                      {                          UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia(t.LeadingTrivia.Add(SyntaxFactory.Space)));                      }                        break;                    case TokenSpacingProperties.ActionRemove:                      bool tokenIsFirstInLine = token.IsFirstInLine();                      bool preserveLayout = layout == TokenSpacingProperties.LayoutPreserve;                      triviaList = prevToken.TrailingTrivia.AddRange(token.LeadingTrivia);                      if (triviaList.Any(t => t.IsDirective))                      {                          break;                      }                        UpdateReplaceMap(replaceMap' prevToken' t => t.WithTrailingTrivia());                        if ((!preserveLayout || !tokenIsFirstInLine)                          && triviaList.All(i => i.IsKind(SyntaxKind.WhitespaceTrivia) || i.IsKind(SyntaxKind.EndOfLineTrivia)))                      {                          UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia());                      }                      else if (tokenIsFirstInLine && token.IsLastInLine())                      {                          /* This block covers the case where `token` is the only non-trivia token on its line. However'                           * the line may still contain non-whitespace trivia which we want the removal process to                           * preserve. This code fix only removes the whitespace surrounding `token` if it is the only                           * non-whitespace token on the line.                           */                          int lastNewLineLeading = token.LeadingTrivia.LastIndexOf(SyntaxKind.EndOfLineTrivia);                          int firstNewLineFollowing = token.TrailingTrivia.IndexOf(SyntaxKind.EndOfLineTrivia);                          bool onlyWhitespace = true;                          for (int i = lastNewLineLeading + 1; i < token.LeadingTrivia.Count; i++)                          {                              onlyWhitespace &= token.LeadingTrivia[i].IsKind(SyntaxKind.WhitespaceTrivia);                          }                            firstNewLineFollowing = firstNewLineFollowing == -1 ? token.TrailingTrivia.Count : firstNewLineFollowing;                          for (int i = 0; i < firstNewLineFollowing; i++)                          {                              onlyWhitespace &= token.TrailingTrivia[i].IsKind(SyntaxKind.WhitespaceTrivia);                          }                            if (onlyWhitespace)                          {                              // Move the token' and remove the other tokens from its line. Keep all other surrounding                              // trivia. Keep the last newline that precedes token' but not the first that follows it.                              SyntaxTriviaList trailingTrivia = prevToken.TrailingTrivia;                              if (lastNewLineLeading >= 0)                              {                                  trailingTrivia = trailingTrivia.AddRange(token.LeadingTrivia.Take(lastNewLineLeading + 1));                              }                                // firstNewLineFollowing was adjusted above to account for the missing case.                              trailingTrivia = trailingTrivia.AddRange(token.TrailingTrivia.Take(firstNewLineFollowing));                                UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia));                          }                          else                          {                              // Just move the token and keep all surrounding trivia.                              SyntaxTriviaList trailingTrivia = triviaList.AddRange(token.TrailingTrivia);                              UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia));                          }                      }                      else                      {                          SyntaxTriviaList trailingTrivia = triviaList.AddRange(token.TrailingTrivia.WithoutLeadingWhitespace(endOfLineIsWhitespace: false));                            nextToken = token.GetNextToken();                          if (nextToken.IsKind(SyntaxKind.SemicolonToken))                          {                              // make the semicolon 'sticky'                              UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia());                              UpdateReplaceMap(replaceMap' nextToken' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia.WithoutTrailingWhitespace()));                          }                          else                          {                              UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia));                          }                      }                        break;                    case TokenSpacingProperties.ActionRemoveImmediate:                      UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia(t.LeadingTrivia.WithoutTrailingWhitespace(endOfLineIsWhitespace: false)));                        if (!replaceMap[token].LeadingTrivia.Any())                      {                          UpdateReplaceMap(replaceMap' prevToken' t => t.WithTrailingTrivia(t.TrailingTrivia.WithoutTrailingWhitespace(endOfLineIsWhitespace: false)));                      }                        break;                  }                    break;                case TokenSpacingProperties.LocationFollowing:                  nextToken = token.GetNextToken();                  switch (action)                  {                  case TokenSpacingProperties.ActionInsert:                      if (!replaceMap.ContainsKey(nextToken))                      {                          // If the token is already present in the map and it has trailing trivia' then it has already been                          // processed during an earlier step in the fix all process' so no additional processing is needed.                          if (!replaceMap.ContainsKey(token) || (replaceMap[token].TrailingTrivia.Count == 0))                          {                              UpdateReplaceMap(replaceMap' token' t => t.WithTrailingTrivia(t.TrailingTrivia.Insert(0' SyntaxFactory.Space)));                          }                      }                        break;                    case TokenSpacingProperties.ActionRemove:                      triviaList = token.TrailingTrivia.AddRange(nextToken.LeadingTrivia);                      bool preserveLayout = layout == TokenSpacingProperties.LayoutPreserve;                        UpdateReplaceMap(replaceMap' token' t => t.WithTrailingTrivia());                      UpdateReplaceMap(replaceMap' nextToken' t => t.WithLeadingTrivia(triviaList.WithoutLeadingWhitespace(endOfLineIsWhitespace: !preserveLayout)));                      break;                  }                    break;              }
Missing Default,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The following switch statement is missing a default case: switch (action)                  {                  case TokenSpacingProperties.ActionInsert:                      if (!replaceMap.ContainsKey(prevToken))                      {                          UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia(t.LeadingTrivia.Add(SyntaxFactory.Space)));                      }                        break;                    case TokenSpacingProperties.ActionRemove:                      bool tokenIsFirstInLine = token.IsFirstInLine();                      bool preserveLayout = layout == TokenSpacingProperties.LayoutPreserve;                      triviaList = prevToken.TrailingTrivia.AddRange(token.LeadingTrivia);                      if (triviaList.Any(t => t.IsDirective))                      {                          break;                      }                        UpdateReplaceMap(replaceMap' prevToken' t => t.WithTrailingTrivia());                        if ((!preserveLayout || !tokenIsFirstInLine)                          && triviaList.All(i => i.IsKind(SyntaxKind.WhitespaceTrivia) || i.IsKind(SyntaxKind.EndOfLineTrivia)))                      {                          UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia());                      }                      else if (tokenIsFirstInLine && token.IsLastInLine())                      {                          /* This block covers the case where `token` is the only non-trivia token on its line. However'                           * the line may still contain non-whitespace trivia which we want the removal process to                           * preserve. This code fix only removes the whitespace surrounding `token` if it is the only                           * non-whitespace token on the line.                           */                          int lastNewLineLeading = token.LeadingTrivia.LastIndexOf(SyntaxKind.EndOfLineTrivia);                          int firstNewLineFollowing = token.TrailingTrivia.IndexOf(SyntaxKind.EndOfLineTrivia);                          bool onlyWhitespace = true;                          for (int i = lastNewLineLeading + 1; i < token.LeadingTrivia.Count; i++)                          {                              onlyWhitespace &= token.LeadingTrivia[i].IsKind(SyntaxKind.WhitespaceTrivia);                          }                            firstNewLineFollowing = firstNewLineFollowing == -1 ? token.TrailingTrivia.Count : firstNewLineFollowing;                          for (int i = 0; i < firstNewLineFollowing; i++)                          {                              onlyWhitespace &= token.TrailingTrivia[i].IsKind(SyntaxKind.WhitespaceTrivia);                          }                            if (onlyWhitespace)                          {                              // Move the token' and remove the other tokens from its line. Keep all other surrounding                              // trivia. Keep the last newline that precedes token' but not the first that follows it.                              SyntaxTriviaList trailingTrivia = prevToken.TrailingTrivia;                              if (lastNewLineLeading >= 0)                              {                                  trailingTrivia = trailingTrivia.AddRange(token.LeadingTrivia.Take(lastNewLineLeading + 1));                              }                                // firstNewLineFollowing was adjusted above to account for the missing case.                              trailingTrivia = trailingTrivia.AddRange(token.TrailingTrivia.Take(firstNewLineFollowing));                                UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia));                          }                          else                          {                              // Just move the token and keep all surrounding trivia.                              SyntaxTriviaList trailingTrivia = triviaList.AddRange(token.TrailingTrivia);                              UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia));                          }                      }                      else                      {                          SyntaxTriviaList trailingTrivia = triviaList.AddRange(token.TrailingTrivia.WithoutLeadingWhitespace(endOfLineIsWhitespace: false));                            nextToken = token.GetNextToken();                          if (nextToken.IsKind(SyntaxKind.SemicolonToken))                          {                              // make the semicolon 'sticky'                              UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia());                              UpdateReplaceMap(replaceMap' nextToken' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia.WithoutTrailingWhitespace()));                          }                          else                          {                              UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia().WithTrailingTrivia(trailingTrivia));                          }                      }                        break;                    case TokenSpacingProperties.ActionRemoveImmediate:                      UpdateReplaceMap(replaceMap' token' t => t.WithLeadingTrivia(t.LeadingTrivia.WithoutTrailingWhitespace(endOfLineIsWhitespace: false)));                        if (!replaceMap[token].LeadingTrivia.Any())                      {                          UpdateReplaceMap(replaceMap' prevToken' t => t.WithTrailingTrivia(t.TrailingTrivia.WithoutTrailingWhitespace(endOfLineIsWhitespace: false)));                      }                        break;                  }
Missing Default,StyleCop.Analyzers.SpacingRules,TokenSpacingCodeFixProvider,D:\research\architectureSmells\repos\DotNetAnalyzers_StyleCopAnalyzers\StyleCop.Analyzers\StyleCop.Analyzers.CodeFixes\SpacingRules\TokenSpacingCodeFixProvider.cs,UpdateReplaceMap,The following switch statement is missing a default case: switch (action)                  {                  case TokenSpacingProperties.ActionInsert:                      if (!replaceMap.ContainsKey(nextToken))                      {                          // If the token is already present in the map and it has trailing trivia' then it has already been                          // processed during an earlier step in the fix all process' so no additional processing is needed.                          if (!replaceMap.ContainsKey(token) || (replaceMap[token].TrailingTrivia.Count == 0))                          {                              UpdateReplaceMap(replaceMap' token' t => t.WithTrailingTrivia(t.TrailingTrivia.Insert(0' SyntaxFactory.Space)));                          }                      }                        break;                    case TokenSpacingProperties.ActionRemove:                      triviaList = token.TrailingTrivia.AddRange(nextToken.LeadingTrivia);                      bool preserveLayout = layout == TokenSpacingProperties.LayoutPreserve;                        UpdateReplaceMap(replaceMap' token' t => t.WithTrailingTrivia());                      UpdateReplaceMap(replaceMap' nextToken' t => t.WithLeadingTrivia(triviaList.WithoutLeadingWhitespace(endOfLineIsWhitespace: !preserveLayout)));                      break;                  }
