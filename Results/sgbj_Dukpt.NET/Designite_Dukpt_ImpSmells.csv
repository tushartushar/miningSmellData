Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,Transform,The length of the statement  "                    data = new byte[Math.Max(0' GetNearestWholeMultiple(data.Length' 8) - data.Length)].Concat(message.GetBytes()).ToArray(); " is 121.
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,CreateIpek,The following statement contains a magic number: return Transform("TripleDES"' true' bdk' (ksn & KsnMask) >> 16) << 64                   | Transform("TripleDES"' true' bdk ^ KeyMask' (ksn & KsnMask) >> 16);
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,CreateIpek,The following statement contains a magic number: return Transform("TripleDES"' true' bdk' (ksn & KsnMask) >> 16) << 64                   | Transform("TripleDES"' true' bdk ^ KeyMask' (ksn & KsnMask) >> 16);
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,CreateIpek,The following statement contains a magic number: return Transform("TripleDES"' true' bdk' (ksn & KsnMask) >> 16) << 64                   | Transform("TripleDES"' true' bdk ^ KeyMask' (ksn & KsnMask) >> 16);
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,CreateSessionKeyIdTech,The following statement contains a magic number: return Transform("TripleDES"' true' key' (key & Ms16Mask) >> 64) << 64   				 | Transform("TripleDES"' true' key' (key & Ls16Mask));
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,CreateSessionKeyIdTech,The following statement contains a magic number: return Transform("TripleDES"' true' key' (key & Ms16Mask) >> 64) << 64   				 | Transform("TripleDES"' true' key' (key & Ls16Mask));
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,GenerateKey,The following statement contains a magic number: return EncryptRegister(key ^ KeyMask' ksn) << 64 | EncryptRegister(key' ksn);
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,EncryptRegister,The following statement contains a magic number: return (curKey & Ls16Mask) ^ Transform("DES"' true' (curKey & Ms16Mask) >> 64' (curKey & Ls16Mask ^ reg8));
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,Transform,The following statement contains a magic number: using (var cipher = SymmetricAlgorithm.Create(name))              {                  var k = key.GetBytes();                  // Credit goes to ichoes (https://github.com/ichoes) for fixing this issue (https://github.com/sgbj/Dukpt.NET/issues/5)                  // gets the next multiple of 8                  cipher.Key = new byte[Math.Max(0' GetNearestWholeMultiple(k.Length' 8) - k.Length)].Concat(key.GetBytes()).ToArray();                  cipher.IV = new byte[8];                  cipher.Mode = CipherMode.CBC;                  cipher.Padding = PaddingMode.Zeros;                  using (var crypto = encrypt ? cipher.CreateEncryptor() : cipher.CreateDecryptor())                  {                      var data = message.GetBytes();                      // Added the GetNearestWholeMultiple here.                      data = new byte[Math.Max(0' GetNearestWholeMultiple(data.Length' 8) - data.Length)].Concat(message.GetBytes()).ToArray();                      return BigInt.FromBytes(crypto.TransformFinalBlock(data' 0' data.Length));                  }              }
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,Transform,The following statement contains a magic number: using (var cipher = SymmetricAlgorithm.Create(name))              {                  var k = key.GetBytes();                  // Credit goes to ichoes (https://github.com/ichoes) for fixing this issue (https://github.com/sgbj/Dukpt.NET/issues/5)                  // gets the next multiple of 8                  cipher.Key = new byte[Math.Max(0' GetNearestWholeMultiple(k.Length' 8) - k.Length)].Concat(key.GetBytes()).ToArray();                  cipher.IV = new byte[8];                  cipher.Mode = CipherMode.CBC;                  cipher.Padding = PaddingMode.Zeros;                  using (var crypto = encrypt ? cipher.CreateEncryptor() : cipher.CreateDecryptor())                  {                      var data = message.GetBytes();                      // Added the GetNearestWholeMultiple here.                      data = new byte[Math.Max(0' GetNearestWholeMultiple(data.Length' 8) - data.Length)].Concat(message.GetBytes()).ToArray();                      return BigInt.FromBytes(crypto.TransformFinalBlock(data' 0' data.Length));                  }              }
Magic Number,DukptNet,Dukpt,C:\repos\sgbj_Dukpt.NET\Dukpt\Dukpt.cs,Transform,The following statement contains a magic number: using (var cipher = SymmetricAlgorithm.Create(name))              {                  var k = key.GetBytes();                  // Credit goes to ichoes (https://github.com/ichoes) for fixing this issue (https://github.com/sgbj/Dukpt.NET/issues/5)                  // gets the next multiple of 8                  cipher.Key = new byte[Math.Max(0' GetNearestWholeMultiple(k.Length' 8) - k.Length)].Concat(key.GetBytes()).ToArray();                  cipher.IV = new byte[8];                  cipher.Mode = CipherMode.CBC;                  cipher.Padding = PaddingMode.Zeros;                  using (var crypto = encrypt ? cipher.CreateEncryptor() : cipher.CreateDecryptor())                  {                      var data = message.GetBytes();                      // Added the GetNearestWholeMultiple here.                      data = new byte[Math.Max(0' GetNearestWholeMultiple(data.Length' 8) - data.Length)].Concat(message.GetBytes()).ToArray();                      return BigInt.FromBytes(crypto.TransformFinalBlock(data' 0' data.Length));                  }              }
