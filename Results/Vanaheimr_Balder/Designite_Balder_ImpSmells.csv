Implementation smell,Namespace,Class,File,Method,Description
Complex Method,org.GraphDefined.Vanaheimr.Balder,VertexPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\VertexPipe.cs,MoveNext,Cyclomatic complexity of the method is 9
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraphExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyGraph.cs,AddDoubleEdge,The method has 9 parameters. Parameters: Graph' Vertex1' Label' Vertex2' Label2' EdgeInitializer' EdgeInitializer2' EdgeId1' EdgeId2
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraphExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyGraph.cs,VertexPropertiesToEdges,The method has 7 parameters. Parameters: graph' VertexLabel' PropertyKey' IdCreator' EdgeLabel' Direction' RemoveProperty
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddOutEdge,The method has 5 parameters. Parameters: OutVertex' InVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddOutEdge,The method has 6 parameters. Parameters: OutVertex' Label' InVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddOutEdge,The method has 8 parameters. Parameters: OutVertex' EdgeId' Label' InVertex' EdgeInitializer' OnDuplicateEdge' EdgeIdAlreadyUsed' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddOutEdgeIfNotExists,The method has 5 parameters. Parameters: OutVertex' InVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddOutEdgeIfNotExists,The method has 6 parameters. Parameters: OutVertex' Label' InVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddOutEdgeIfNotExists,The method has 8 parameters. Parameters: OutVertex' EdgeId' Label' InVertex' EdgeInitializer' OnDuplicateEdge' EdgeIdAlreadyUsed' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddInEdge,The method has 5 parameters. Parameters: InVertex' OutVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddInEdge,The method has 6 parameters. Parameters: InVertex' Label' OutVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddInEdge,The method has 8 parameters. Parameters: InVertex' EdgeId' Label' OutVertex' EdgeInitializer' OnDuplicateEdge' EdgeIdAlreadyUsed' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddInEdgeIfNotExists,The method has 5 parameters. Parameters: InVertex' OutVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddInEdgeIfNotExists,The method has 6 parameters. Parameters: InVertex' Label' OutVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AddInEdgeIfNotExists,The method has 8 parameters. Parameters: InVertex' EdgeId' Label' OutVertex' EdgeInitializer' OnDuplicateEdge' EdgeIdAlreadyUsed' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraph,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericPropertyGraph\IGenericPropertyGraph.cs,AddVertex,The method has 6 parameters. Parameters: VertexId' Label' VertexInitializer' OnDuplicateVertex' VertexIdAlreadyUsed' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraph,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericPropertyGraph\IGenericPropertyGraph.cs,AddEdge,The method has 6 parameters. Parameters: OutVertex' Label' InVertex' EdgeInitializer' OnDuplicateEdge' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraph,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericPropertyGraph\IGenericPropertyGraph.cs,AddEdge,The method has 8 parameters. Parameters: EdgeId' OutVertex' Label' InVertex' EdgeInitializer' OnDuplicateEdge' EdgeIdAlreadyUsed' AnywayDo
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraph,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericPropertyGraph\IGenericPropertyGraph.cs,AddMultiEdge,The method has 5 parameters. Parameters: Id' Label' MultiEdgeInitializer' EdgeSelector' Edges
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraph,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericPropertyGraph\IGenericPropertyGraph.cs,AddHyperEdge,The method has 5 parameters. Parameters: Id' Label' HyperEdgeInitializer' VertexSelector' Vertices
Long Parameter List,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraph,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericPropertyGraph\IGenericPropertyGraph.cs,BeginTransaction,The method has 6 parameters. Parameters: Name' Distributed' LongRunning' IsolationLevel' CreationTime' InvalidationTime
Long Parameter List,org.GraphDefined.Vanaheimr.Alviss,IQuadStore,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericQuadStore\IQuadStore.cs,BeginTransaction,The method has 6 parameters. Parameters: Name' Distributed' LongRunning' IsolationLevel' CreationTime' InvalidationTime
Long Parameter List,org.GraphDefined.Vanaheimr.Alviss,IQuadStore,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Interfaces\GenericQuadStore\IQuadStore.cs,Add,The method has 5 parameters. Parameters: Subject' Predicate' Object' Context' Connect
Long Parameter List,org.GraphDefined.Vanaheimr.Balder.Traverser,IPropertyGraphTraverser,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Algorithms\GraphTraversals\IPropertyGraphTraverser.cs,TraverseVertex,The method has 7 parameters. Parameters: IPropertyGraph' StartVertex' TraversalOrder' FollowThisEdge' MatchEvaluator' VertexMatchesAction' StopEvaluator
Long Statement,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyEdgeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyEdge.cs,AsReadOnly,The length of the statement  "            return Edge as IReadOnlyGenericPropertyEdge<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 120.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraphExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyGraph.cs,AsReadOnly,The length of the statement  "            return Graph as IReadOnlyGenericPropertyGraph<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 122.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyGraphExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyGraph.cs,AddDoubleEdge,The length of the statement  "            return new Tuple<IReadOnlyGenericPropertyEdge<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 122.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyHyperEdgeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyHyperEdge.cs,AsReadOnly,The length of the statement  "            return HyperEdge as IReadOnlyGenericPropertyHyperEdge<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 130.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyMultiEdgeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyMultiEdge.cs,AsReadOnly,The length of the statement  "            return MultiEdge as IReadOnlyGenericPropertyMultiEdge<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 130.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IGenericPropertyVertexExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\GenericPropertyGraph\IGenericPropertyVertex.cs,AsReadOnly,The length of the statement  "            return Vertex as IReadOnlyGenericPropertyVertex<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 124.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IReadOnlyGenericPropertyHyperEdgeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\ReadOnlyGenericPropertyGraph\IReadOnlyGenericPropertyHyperEdge.cs,AsMutable,The length of the statement  "            return HyperEdge as IGenericPropertyHyperEdge<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 122.
Long Statement,org.GraphDefined.Vanaheimr.Balder,IReadOnlyGenericPropertyMultiEdgeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\ExtentionMethods\ReadOnlyGenericPropertyGraph\IReadOnlyGenericPropertyMultiEdge.cs,AsMutable,The length of the statement  "            return MultiEdge as IGenericPropertyMultiEdge<TIdVertex'    TRevIdVertex'    TVertexLabel'    TKeyVertex'    TValueVertex' " is 122.
Long Statement,org.GraphDefined.Vanaheimr.Balder,EdgeIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\Filters\EdgeIdFilterPipe.cs,IdIn,The length of the statement  "                                        TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' EdgeId => Ids.Where(id => id.Equals(EdgeId)).Any()); " is 144.
Long Statement,org.GraphDefined.Vanaheimr.Balder,EdgeIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\Filters\EdgeIdFilterPipe.cs,IdNotIn,The length of the statement  "                                        TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' EdgeId => Ids.Where(id => !id.Equals(EdgeId)).Any()); " is 145.
Long Statement,org.GraphDefined.Vanaheimr.Balder,EdgeLabelFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\Filters\EdgeLabelFilterPipe.cs,LabelIn,The length of the statement  "                                           TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' EdgeLabel => Labels.Where(label => label.Equals(EdgeLabel)).Any()); " is 159.
Long Statement,org.GraphDefined.Vanaheimr.Balder,EdgeLabelFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\Filters\EdgeLabelFilterPipe.cs,LabelNotIn,The length of the statement  "                                           TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' EdgeLabel => Labels.Where(label => !label.Equals(EdgeLabel)).Any()); " is 160.
Long Statement,org.GraphDefined.Vanaheimr.Balder,EdgeRevIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\Filters\EdgeRevIdFilterPipe.cs,RevIdIn,The length of the statement  "                                           TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' EdgeRevId => RevIds.Where(revid => revid.Equals(EdgeRevId)).Any()); " is 159.
Long Statement,org.GraphDefined.Vanaheimr.Balder,EdgeRevIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\Filters\EdgeRevIdFilterPipe.cs,RevIdNotIn,The length of the statement  "                                           TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' EdgeRevId => RevIds.Where(revid => !revid.Equals(EdgeRevId)).Any()); " is 160.
Long Statement,org.GraphDefined.Vanaheimr.Balder,VertexIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\Filters\VertexIdFilterPipe.cs,IdIn,The length of the statement  "                                          TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' VertexId => Ids.Where(id => id.Equals(VertexId)).Any()); " is 148.
Long Statement,org.GraphDefined.Vanaheimr.Balder,VertexIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\Filters\VertexIdFilterPipe.cs,IdNotIn,The length of the statement  "                                          TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' VertexId => Ids.Where(id => !id.Equals(VertexId)).Any()); " is 149.
Long Statement,org.GraphDefined.Vanaheimr.Balder,VertexLabelFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\Filters\VertexLabelFilterPipe.cs,LabelNotIn,The length of the statement  "                                             TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' VertexLabel => Labels.Where(label => !label.Equals(VertexLabel)).Any()); " is 164.
Long Statement,org.GraphDefined.Vanaheimr.Balder,VertexRevIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\Filters\VertexRevIdFilterPipe.cs,RevIdIn,The length of the statement  "                                             TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' VertexRevId => RevIds.Where(revid => revid.Equals(VertexRevId)).Any()); " is 163.
Long Statement,org.GraphDefined.Vanaheimr.Balder,VertexRevIdFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\Filters\VertexRevIdFilterPipe.cs,RevIdNotIn,The length of the statement  "                                             TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(SourcePipe' VertexRevId => RevIds.Where(revid => !revid.Equals(VertexRevId)).Any()); " is 164.
Long Statement,org.GraphDefined.Vanaheimr.Balder,GraphElementFilterPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\GraphElements\Filter\GraphElementFilterPipe.cs,GraphElementFilter,The length of the statement  "            return new GraphElementFilterPipe<TId' TRevId' TLabel' TKey' TValue' T' S>(SourceElement' KeySelector' ComparisonFilter); " is 121.
Long Statement,org.GraphDefined.Vanaheimr.Balder,HyperEdgeVerticesPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyHyperEdge\HyperEdgeVerticesPipe.cs,V,The length of the statement  "                                             TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(IEnumerable' HyperEdgeLabels: HyperEdgeLabels); " is 127.
Long Statement,org.GraphDefined.Vanaheimr.Balder,HyperEdgesPipeExtensions,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\HyperEdgesPipe.cs,HE,The length of the statement  "                                      TIdHyperEdge' TRevIdHyperEdge' THyperEdgeLabel' TKeyHyperEdge' TValueHyperEdge>(IEnumerable' HyperEdgeLabels: HyperEdgeLabels); " is 127.
Missing Default,org.GraphDefined.Vanaheimr.Balder,VertexPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\VertexPipe.cs,VertexPipe,The following switch statement is missing a default case: switch (TraversalDirection)              {                  case Balder.TraversalDirection.In:   Edge2VertexDelegate = Edge => (Edge != null) ? Edge.InVertex  : null; break;                  case Balder.TraversalDirection.Out:  Edge2VertexDelegate = Edge => (Edge != null) ? Edge.OutVertex : null; break;                  case Balder.TraversalDirection.Both: Edge2VertexDelegate = Edge2BothVertices;                              break;              }
Missing Default,org.GraphDefined.Vanaheimr.Balder,VertexPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyEdge\VertexPipe.cs,VertexPipe,The following switch statement is missing a default case: switch (TraversalDirection)              {                  case Balder.TraversalDirection.In:   Edge2VertexDelegate = Edge => (Edge != null) ? Edge.InVertex  : null; break;                  case Balder.TraversalDirection.Out:  Edge2VertexDelegate = Edge => (Edge != null) ? Edge.OutVertex : null; break;                  case Balder.TraversalDirection.Both: Edge2VertexDelegate = Edge2BothVertices;                              break;              }
Missing Default,org.GraphDefined.Vanaheimr.Balder,EdgesPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\EdgesPipe.cs,EdgesPipe,The following switch statement is missing a default case: switch (TraversalDirection)              {                    case Balder.TraversalDirection.In:   Vertex2EdgesDelegate = vertex => vertex.InEdges (EdgeLabels).GetEnumerator();  break;                    case Balder.TraversalDirection.Out:  Vertex2EdgesDelegate = vertex => vertex.OutEdges(EdgeLabels).GetEnumerator();  break;                    case Balder.TraversalDirection.Both: Vertex2EdgesDelegate = vertex => vertex.InEdges (EdgeLabels).Concat(                                                                                        vertex.OutEdges(EdgeLabels)).GetEnumerator(); break;                }
Missing Default,org.GraphDefined.Vanaheimr.Balder,EdgesPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\EdgesPipe.cs,EdgesPipe,The following switch statement is missing a default case: switch (TraversalDirection)              {                    case Balder.TraversalDirection.In:   Vertex2EdgesDelegate = vertex => vertex.InEdges (EdgeFilter).GetEnumerator();  break;                    case Balder.TraversalDirection.Out:  Vertex2EdgesDelegate = vertex => vertex.OutEdges(EdgeFilter).GetEnumerator();  break;                    case Balder.TraversalDirection.Both: Vertex2EdgesDelegate = vertex => vertex. InEdges(EdgeFilter).Concat(                                                                                        vertex.OutEdges(EdgeFilter)).GetEnumerator(); break;                }
Missing Default,org.GraphDefined.Vanaheimr.Balder,EdgesVerticesPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\EdgesVerticesPipe.cs,EdgesVerticesPipe,The following switch statement is missing a default case: switch (TraversalDirection)              {                    case Balder.TraversalDirection.In:   Vertex2VerticesDelegate  =  vertex =>  vertex. InEdges(EdgeLabels).Select(Edge => Edge.OutVertex).GetEnumerator();                                                                                   break;                    case Balder.TraversalDirection.Out:  Vertex2VerticesDelegate  =  vertex =>  vertex.OutEdges(EdgeLabels).Select(Edge => Edge. InVertex).GetEnumerator();                                                                                   break;                    case Balder.TraversalDirection.Both: Vertex2VerticesDelegate  =  vertex => (vertex. InEdges(EdgeLabels).Select(Edge => Edge.OutVertex).Concat(                                                                                              vertex.OutEdges(EdgeLabels).Select(Edge => Edge. InVertex))).GetEnumerator();                                                                                   break;                }
Missing Default,org.GraphDefined.Vanaheimr.Balder,EdgesVerticesPipe<TIdVertex;TRevIdVertex;TVertexLabel;TKeyVertex;TValueVertex;TIdEdge;TRevIdEdge;TEdgeLabel;TKeyEdge;TValueEdge;TIdMultiEdge;TRevIdMultiEdge;TMultiEdgeLabel;TKeyMultiEdge;TValueMultiEdge;TIdHyperEdge;TRevIdHyperEdge;THyperEdgeLabel;TKeyHyperEdge;TValueHyperEdge>,D:\research\architectureSmells\repos\Vanaheimr_Balder\Balder\Pipes\IGenericPropertyVertex\EdgesVerticesPipe.cs,EdgesVerticesPipe,The following switch statement is missing a default case: switch (TraversalDirection)              {                    case Balder.TraversalDirection.In:   Vertex2VerticesDelegate  =  vertex =>  vertex. InEdges(IncludeEdges).Select(Edge => Edge.OutVertex).GetEnumerator();                                                                                   break;                    case Balder.TraversalDirection.Out:  Vertex2VerticesDelegate  =  vertex =>  vertex.OutEdges(IncludeEdges).Select(Edge => Edge. InVertex).GetEnumerator();                                                                                   break;                    case Balder.TraversalDirection.Both: Vertex2VerticesDelegate  =  vertex => (vertex. InEdges(IncludeEdges).Select(Edge => Edge.OutVertex).Concat(                                                                                              vertex.OutEdges(IncludeEdges).Select(Edge => Edge. InVertex))).GetEnumerator();                                                                                   break;                }
