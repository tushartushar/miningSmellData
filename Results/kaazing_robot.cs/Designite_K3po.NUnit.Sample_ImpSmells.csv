Implementation smell,Namespace,Class,File,Method,Description
Magic Number,K3po.NUnit.Sample,TcpClientIT,C:\repos\kaazing_robot.cs\Sample\K3poTests\TcpClientIT.cs,ShouldFailIfScriptNotMatch,The following statement contains a magic number: Assert.Throws (typeof(AssertionException)' () =>  {  	// k3po driver to prepare script  	k3po.Prepare ("server.hello.world");  	// start test code  	Task task = AsyncTcpClient ();  	// wait 5 seconds k3po driver to complete the test  	k3po.Finish (5000);  	Assert.AreEqual (k3po.Result.ExpectedScript' k3po.Result.ObservedScript);  });  
Magic Number,K3po.NUnit.Sample,TcpClientIT,C:\repos\kaazing_robot.cs\Sample\K3poTests\TcpClientIT.cs,ShouldFailIfScriptNotMatch,The following statement contains a magic number: k3po.Finish (5000);  
Magic Number,K3po.NUnit.Sample,TcpClientIT,C:\repos\kaazing_robot.cs\Sample\K3poTests\TcpClientIT.cs,AsyncTcpClient,The following statement contains a magic number: using (TcpClient tcpClient = new TcpClient ("localhost"' 8001)) {  	Assert.IsTrue (tcpClient.Connected);  	Console.WriteLine ("Connected");  	// send diferent data to k3po driver  	byte[] sendData = Encoding.UTF8.GetBytes ("hello K3po");  	await tcpClient.GetStream ().WriteAsync (sendData' 0' sendData.Length);  	Console.WriteLine ("Send data");  	byte[] receivedData = new byte[50];  	int len = await tcpClient.GetStream ().ReadAsync (receivedData' 0' receivedData.Length);  	string receivedString = Encoding.UTF8.GetString (receivedData' 0' len);  	Console.WriteLine ("Received data");  	Assert.AreEqual ("hello client"' receivedString);  	tcpClient.Close ();  	Assert.IsFalse (tcpClient.Connected);  }  
Magic Number,K3po.NUnit.Sample,TcpClientIT,C:\repos\kaazing_robot.cs\Sample\K3poTests\TcpClientIT.cs,AsyncTcpClient,The following statement contains a magic number: using (TcpClient tcpClient = new TcpClient ("localhost"' 8001)) {  	Assert.IsTrue (tcpClient.Connected);  	Console.WriteLine ("Connected");  	// send diferent data to k3po driver  	byte[] sendData = Encoding.UTF8.GetBytes ("hello K3po");  	await tcpClient.GetStream ().WriteAsync (sendData' 0' sendData.Length);  	Console.WriteLine ("Send data");  	byte[] receivedData = new byte[50];  	int len = await tcpClient.GetStream ().ReadAsync (receivedData' 0' receivedData.Length);  	string receivedString = Encoding.UTF8.GetString (receivedData' 0' len);  	Console.WriteLine ("Received data");  	Assert.AreEqual ("hello client"' receivedString);  	tcpClient.Close ();  	Assert.IsFalse (tcpClient.Connected);  }  
