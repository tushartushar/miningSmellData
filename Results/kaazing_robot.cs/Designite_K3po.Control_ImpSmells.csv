Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,WriteCommand,Cyclomatic complexity of the method is 20
Complex Method,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadEvent,Cyclomatic complexity of the method is 8
Complex Method,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadPreparedEvent,Cyclomatic complexity of the method is 11
Complex Method,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadErrorEvent,Cyclomatic complexity of the method is 11
Complex Method,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadFinishedEvent,Cyclomatic complexity of the method is 8
Long Statement,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,Read,The length of the statement  "			throw new InvalidOperationException (String.Format ("Could not read all data from network stream. Bytes Read: {0} is less than the expected length: {1}"' bytesRead' length)); " is 174.
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadPreparedEvent,The following statement contains a magic number: do {  	headerLine = ReadLine ();  	Match headerMatch = Regex.Match (headerLine' HEADER_PATTERN);  	if (headerMatch.Success) {  		string headerName = headerMatch.Groups [1].Value;  		string headerValue = headerMatch.Groups [2].Value;  		switch (headerName) {  		case "name":  			break;  		case "content-length":  			length = Int32.Parse (headerValue);  			break;  		case "barrier":  			preparedEvent.Barriers.Add (headerValue);  			break;  		}  	}  }  while (headerLine != String.Empty);  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadPreparedEvent,The following statement contains a magic number: if (headerMatch.Success) {  	string headerName = headerMatch.Groups [1].Value;  	string headerValue = headerMatch.Groups [2].Value;  	switch (headerName) {  	case "name":  		break;  	case "content-length":  		length = Int32.Parse (headerValue);  		break;  	case "barrier":  		preparedEvent.Barriers.Add (headerValue);  		break;  	}  }  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadStartedEvent,The following statement contains a magic number: do {  	headerLine = ReadLine ();  	Match headerMatch = Regex.Match (headerLine' HEADER_PATTERN);  	if (headerMatch.Success) {  		string headerName = headerMatch.Groups [1].Value;  		string headerValue = headerMatch.Groups [2].Value;  		switch (headerName) {  		case "name":  			break;  		}  	}  }  while (headerLine != String.Empty);  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadStartedEvent,The following statement contains a magic number: if (headerMatch.Success) {  	string headerName = headerMatch.Groups [1].Value;  	string headerValue = headerMatch.Groups [2].Value;  	switch (headerName) {  	case "name":  		break;  	}  }  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadDisposedEvent,The following statement contains a magic number: do {  	headerLine = ReadLine ();  	Match headerMatch = Regex.Match (headerLine' HEADER_PATTERN);  	if (headerMatch.Success) {  		string headerName = headerMatch.Groups [1].Value;  		string headerValue = headerMatch.Groups [2].Value;  		switch (headerName) {  		case "name":  			break;  		}  	}  }  while (headerLine != String.Empty);  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadDisposedEvent,The following statement contains a magic number: if (headerMatch.Success) {  	string headerName = headerMatch.Groups [1].Value;  	string headerValue = headerMatch.Groups [2].Value;  	switch (headerName) {  	case "name":  		break;  	}  }  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadErrorEvent,The following statement contains a magic number: do {  	headerLine = ReadLine ();  	Match headerMatch = Regex.Match (headerLine' HEADER_PATTERN);  	if (headerMatch.Success) {  		string headerName = headerMatch.Groups [1].Value;  		string headerValue = headerMatch.Groups [2].Value;  		switch (headerName) {  		case "name":  			break;  		case "content-length":  			length = Int32.Parse (headerValue);  			break;  		case "summary":  			errorEvent.Summary = headerValue;  			break;  		}  	}  }  while (headerLine != String.Empty);  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadErrorEvent,The following statement contains a magic number: if (headerMatch.Success) {  	string headerName = headerMatch.Groups [1].Value;  	string headerValue = headerMatch.Groups [2].Value;  	switch (headerName) {  	case "name":  		break;  	case "content-length":  		length = Int32.Parse (headerValue);  		break;  	case "summary":  		errorEvent.Summary = headerValue;  		break;  	}  }  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadNotifiedEvent,The following statement contains a magic number: do {  	headerLine = ReadLine ();  	Match headerMatch = Regex.Match (headerLine' HEADER_PATTERN);  	if (headerMatch.Success) {  		string headerName = headerMatch.Groups [1].Value;  		string headerValue = headerMatch.Groups [2].Value;  		switch (headerName) {  		case "barrier":  			notifiedEvent.Barrier = headerValue;  			break;  		}  	}  }  while (headerLine != String.Empty);  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadNotifiedEvent,The following statement contains a magic number: if (headerMatch.Success) {  	string headerName = headerMatch.Groups [1].Value;  	string headerValue = headerMatch.Groups [2].Value;  	switch (headerName) {  	case "barrier":  		notifiedEvent.Barrier = headerValue;  		break;  	}  }  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadFinishedEvent,The following statement contains a magic number: do {  	headerLine = ReadLine ();  	Match headerMatch = Regex.Match (headerLine' HEADER_PATTERN);  	if (headerMatch.Success) {  		string headerName = headerMatch.Groups [1].Value;  		string headerValue = headerMatch.Groups [2].Value;  		switch (headerName) {  		case "name":  			break;  		case "content-length":  			length = Int32.Parse (headerValue);  			break;  		}  	}  }  while (headerLine != String.Empty);  
Magic Number,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadFinishedEvent,The following statement contains a magic number: if (headerMatch.Success) {  	string headerName = headerMatch.Groups [1].Value;  	string headerValue = headerMatch.Groups [2].Value;  	switch (headerName) {  	case "name":  		break;  	case "content-length":  		length = Int32.Parse (headerValue);  		break;  	}  }  
Missing Default,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadPreparedEvent,The following switch statement is missing a default case: switch (headerName) {  case "name":  	break;  case "content-length":  	length = Int32.Parse (headerValue);  	break;  case "barrier":  	preparedEvent.Barriers.Add (headerValue);  	break;  }  
Missing Default,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadStartedEvent,The following switch statement is missing a default case: switch (headerName) {  case "name":  	break;  }  
Missing Default,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadDisposedEvent,The following switch statement is missing a default case: switch (headerName) {  case "name":  	break;  }  
Missing Default,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadErrorEvent,The following switch statement is missing a default case: switch (headerName) {  case "name":  	break;  case "content-length":  	length = Int32.Parse (headerValue);  	break;  case "summary":  	errorEvent.Summary = headerValue;  	break;  }  
Missing Default,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadNotifiedEvent,The following switch statement is missing a default case: switch (headerName) {  case "barrier":  	notifiedEvent.Barrier = headerValue;  	break;  }  
Missing Default,Kaazing.K3po.Control,K3poControl,C:\repos\kaazing_robot.cs\K3po.Control\src\K3poControl.cs,ReadFinishedEvent,The following switch statement is missing a default case: switch (headerName) {  case "name":  	break;  case "content-length":  	length = Int32.Parse (headerValue);  	break;  }  
