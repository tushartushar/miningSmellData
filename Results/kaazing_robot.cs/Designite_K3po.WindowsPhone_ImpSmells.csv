Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kaazing.K3po.NUnit,Latch,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\..\..\K3po.NUnit\src\Latch.cs,NotifyFinished,Cyclomatic complexity of the method is 10
Complex Method,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,StartTest,Cyclomatic complexity of the method is 32
Long Statement,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,StartTest,The length of the statement  "					InvalidDataException ex = new InvalidDataException (String.Format ("{0}:{1}"' errorEvent.Summary' errorEvent.Description)); " is 123.
Long Statement,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,AwaitBarrier,The length of the statement  "		throw new ArgumentException (string.Format ("Barrier with {0} is not present in the script and thus can't be waited upon"' barrierName)); " is 137.
Long Statement,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,NotifyBarrier,The length of the statement  "		throw new ArgumentException (string.Format ("Barrier with {0} is not present in the script and thus can't be notified"' barrierName)); " is 134.
Magic Number,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,StartTest,The following statement contains a magic number: try {  	// We are already done if abort before we start  	if (_abortScheduled) {  		return new ScriptPair ();  	}  	_controller.Connect ();  	// Send PREPARE command  	PrepareCommand prepareCommand = new PrepareCommand {  		Names = _names  	};  	_controller.WriteCommand (prepareCommand);  	bool abortWritten = false;  	string expectedScript = null;  	while (true) {  		try {  			CommandEvent controlEvent = _controller.ReadEvent (200);  			switch (controlEvent.EventKind) {  			case CommandEvent.Kind.PREPARED:  				PreparedEvent prepared = controlEvent as PreparedEvent;  				expectedScript = prepared.Script;  				foreach (string barrier in prepared.Barriers) {  					_barriers.Add (barrier' new BarrierStateMachine ());  				}  				_latch.NotifyPrepared ();  				if (_abortScheduled && !abortWritten) {  					SendAbortCommand ();  					abortWritten = true;  				}  				else {  					StartCommand startCommand = new StartCommand ();  					_controller.WriteCommand (startCommand);  				}  				break;  			case CommandEvent.Kind.STARTED:  				_latch.NotifyStartable ();  				break;  			case CommandEvent.Kind.NOTIFIED:  				NotifiedEvent notifiedEvent = controlEvent as NotifiedEvent;  				BarrierStateMachine stateMachine = _barriers [notifiedEvent.Barrier];  				stateMachine.Notified ();  				break;  			case CommandEvent.Kind.ERROR:  				ErrorEvent errorEvent = (ErrorEvent)controlEvent;  				InvalidDataException ex = new InvalidDataException (String.Format ("{0}:{1}"' errorEvent.Summary' errorEvent.Description));  				_latch.NotifyException (ex);  				break;  			case CommandEvent.Kind.FINISHED:  				_latch.NotifyFinished ();  				FinishedEvent finishedEvent = controlEvent as FinishedEvent;  				string observedScript = finishedEvent.Script;  				return new ScriptPair {  					ExpectedScript = expectedScript'  					ObservedScript = observedScript  				};  			default:  				throw new InvalidOperationException ("Unsupported event: " + controlEvent.EventKind.ToString ());  			}  		}  		catch (Exception) {  			if (_abortScheduled && !abortWritten) {  				abortWritten = true;  				SendAbortCommand ();  			}  			else {  				throw;  			}  		}  	}  }  catch (Exception exception) {  	IOException e = new IOException ("Failed to connect. Is the Robot running?  " + exception.Message);  	_latch.NotifyException (e);  }  finally {  	_controller.Disconnect ();  }  
Magic Number,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,StartTest,The following statement contains a magic number: while (true) {  	try {  		CommandEvent controlEvent = _controller.ReadEvent (200);  		switch (controlEvent.EventKind) {  		case CommandEvent.Kind.PREPARED:  			PreparedEvent prepared = controlEvent as PreparedEvent;  			expectedScript = prepared.Script;  			foreach (string barrier in prepared.Barriers) {  				_barriers.Add (barrier' new BarrierStateMachine ());  			}  			_latch.NotifyPrepared ();  			if (_abortScheduled && !abortWritten) {  				SendAbortCommand ();  				abortWritten = true;  			}  			else {  				StartCommand startCommand = new StartCommand ();  				_controller.WriteCommand (startCommand);  			}  			break;  		case CommandEvent.Kind.STARTED:  			_latch.NotifyStartable ();  			break;  		case CommandEvent.Kind.NOTIFIED:  			NotifiedEvent notifiedEvent = controlEvent as NotifiedEvent;  			BarrierStateMachine stateMachine = _barriers [notifiedEvent.Barrier];  			stateMachine.Notified ();  			break;  		case CommandEvent.Kind.ERROR:  			ErrorEvent errorEvent = (ErrorEvent)controlEvent;  			InvalidDataException ex = new InvalidDataException (String.Format ("{0}:{1}"' errorEvent.Summary' errorEvent.Description));  			_latch.NotifyException (ex);  			break;  		case CommandEvent.Kind.FINISHED:  			_latch.NotifyFinished ();  			FinishedEvent finishedEvent = controlEvent as FinishedEvent;  			string observedScript = finishedEvent.Script;  			return new ScriptPair {  				ExpectedScript = expectedScript'  				ObservedScript = observedScript  			};  		default:  			throw new InvalidOperationException ("Unsupported event: " + controlEvent.EventKind.ToString ());  		}  	}  	catch (Exception) {  		if (_abortScheduled && !abortWritten) {  			abortWritten = true;  			SendAbortCommand ();  		}  		else {  			throw;  		}  	}  }  
Magic Number,Kaazing.K3po.NUnit,ScriptRunner,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\src\ScriptRunner.cs,StartTest,The following statement contains a magic number: try {  	CommandEvent controlEvent = _controller.ReadEvent (200);  	switch (controlEvent.EventKind) {  	case CommandEvent.Kind.PREPARED:  		PreparedEvent prepared = controlEvent as PreparedEvent;  		expectedScript = prepared.Script;  		foreach (string barrier in prepared.Barriers) {  			_barriers.Add (barrier' new BarrierStateMachine ());  		}  		_latch.NotifyPrepared ();  		if (_abortScheduled && !abortWritten) {  			SendAbortCommand ();  			abortWritten = true;  		}  		else {  			StartCommand startCommand = new StartCommand ();  			_controller.WriteCommand (startCommand);  		}  		break;  	case CommandEvent.Kind.STARTED:  		_latch.NotifyStartable ();  		break;  	case CommandEvent.Kind.NOTIFIED:  		NotifiedEvent notifiedEvent = controlEvent as NotifiedEvent;  		BarrierStateMachine stateMachine = _barriers [notifiedEvent.Barrier];  		stateMachine.Notified ();  		break;  	case CommandEvent.Kind.ERROR:  		ErrorEvent errorEvent = (ErrorEvent)controlEvent;  		InvalidDataException ex = new InvalidDataException (String.Format ("{0}:{1}"' errorEvent.Summary' errorEvent.Description));  		_latch.NotifyException (ex);  		break;  	case CommandEvent.Kind.FINISHED:  		_latch.NotifyFinished ();  		FinishedEvent finishedEvent = controlEvent as FinishedEvent;  		string observedScript = finishedEvent.Script;  		return new ScriptPair {  			ExpectedScript = expectedScript'  			ObservedScript = observedScript  		};  	default:  		throw new InvalidOperationException ("Unsupported event: " + controlEvent.EventKind.ToString ());  	}  }  catch (Exception) {  	if (_abortScheduled && !abortWritten) {  		abortWritten = true;  		SendAbortCommand ();  	}  	else {  		throw;  	}  }  
Missing Default,Kaazing.K3po.NUnit,Latch,C:\repos\kaazing_robot.cs\WindowsPhone\K3po.WindowsPhone\..\..\K3po.NUnit\src\Latch.cs,NotifyAbort,The following switch statement is missing a default case: switch (_state) {  case State.INIT:  	NotifyPrepared ();  	break;  case State.PREPARED:  	NotifyStartable ();  	break;  }  
