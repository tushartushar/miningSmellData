Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WebApiBook.Security.Facts,CertPinningFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\CertPinningFacts.cs,Twitter_cert_pinning_and_revocation_checking,The length of the statement  "		return errors == SslPolicyErrors.None && caCerts.Any (cert => verisignCerts.Contains (cert.GetCertHashString ())) && chain.ChainPolicy.RevocationMode == X509RevocationMode.Online; " is 179.
Long Statement,WebApiBook.Security.Facts,CertPinningFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\CertPinningFacts.cs,It_is_possible_to_control_revocation_checking,The length of the statement  "	h.SetValidator (info => !info.HasErrors && info.ChainPolicyUsed (X509RevocationFlag.ExcludeRoot) && info.ChainPolicyUsed (X509RevocationMode.Online) && new AtLeastOneThumbprintInCertChain (msftThumbs).Eval (info)); " is 214.
Long Statement,WebApiBook.Security.Facts,ClientTlsAuthnFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\ClientTlsAuthnFacts.cs,SomeFact,The length of the statement  "	config.MessageHandlers.Add (new X509CertificateMessageHandler (X509CertificateValidator.None' IssuerMapper.FromIssuerRegistry (new SimpleIssuerNameRegistry ()))); " is 162.
Long Statement,WebApiBook.Security.Facts,ClientTlsAuthnFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\ClientTlsAuthnFacts.cs,SomeFact,The length of the statement  "		return Task.FromResult (new HttpResponseMessage (identity.Claims.Any (claim => claim.Type == ClaimTypes.Email && claim.Value == "bob@webapibook.net" && claim.Issuer == issuer) ? HttpStatusCode.OK : HttpStatusCode.Unauthorized)); " is 228.
Long Statement,WebApiBook.Security.Facts,JwtFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\JwtFacts.cs,Can_create_and_consume_jwt_tokens,The length of the statement  "	var signingCredentials = new SigningCredentials (new InMemorySymmetricSecurityKey (symmetricKey)' "http://www.w3.org/2001/04/xmldsig-more#hmac-sha256"' "http://www.w3.org/2001/04/xmlenc#sha256"); " is 195.
Long Statement,WebApiBook.Security.Facts,JwtFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\JwtFacts.cs,Can_create_and_consume_jwt_tokens,The length of the statement  "	var token = new JwtSecurityToken (issuer' audience' claims' new Lifetime (now' now.AddMinutes (lifetimeInMinutes))' signingCredentials); " is 136.
Magic Number,WebApiBook.Security.Facts,JwtFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\JwtFacts.cs,GetRandomBytes,The following statement contains a magic number: using (var rng = RandomNumberGenerator.Create ()) {  	var key = new byte[256];  	rng.GetBytes (key);  	return key;  }  
Magic Number,WebApiBook.Security.Facts,JwtFacts,D:\newReposJune17\webapibook_WebApiBook.Security\src\WebApiBook.Security.Facts\JwtFacts.cs,Can_create_and_consume_jwt_tokens,The following statement contains a magic number: Assert.Equal (3' parts.Length);  
