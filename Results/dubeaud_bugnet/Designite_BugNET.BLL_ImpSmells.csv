Implementation smell,Namespace,Class,File,Method,Description
Long Method,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,The method has 101 lines of code.
Complex Method,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,Cyclomatic complexity of the method is 15
Complex Method,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,SaveOrUpdate,Cyclomatic complexity of the method is 9
Complex Method,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,Cyclomatic complexity of the method is 17
Complex Method,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,LocalizeUnassigned,Cyclomatic complexity of the method is 11
Complex Method,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SendNewIssueCommentNotification,Cyclomatic complexity of the method is 8
Complex Method,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,SaveOrUpdate,Cyclomatic complexity of the method is 8
Long Parameter List,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetDefaultIssueByProjectId,The method has 6 parameters. Parameters: projectId' title' description' issueTypeId' assignedName' ownerName
Long Parameter List,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CreateTag,The method has 5 parameters. Parameters: projectId' tagName' comment' userName' password
Long Statement,BugNET.BLL,CategoryManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CategoryManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save category' the project id is invalid")); " is 121.
Long Statement,BugNET.BLL,UserCustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UserCustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "            sb.AppendFormat("IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[{0}]') AND OBJECTPROPERTY(id' N'IsView') = 1) {1}"' viewName' Environment.NewLine); " is 164.
Long Statement,BugNET.BLL,UserCustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UserCustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "                sb.AppendFormat("'ISNULL(p.[{0}]' '''') AS [{2}{0}]{1} "' customField.Name.Replace("'"' "''")' Environment.NewLine' Globals.PROJECT_CUSTOM_FIELDS_PREFIX); " is 154.
Long Statement,BugNET.BLL,UserCustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UserCustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "                sb.AppendFormat("INNER JOIN BugNet_UserCustomFieldValues ucfv ON ucf.CustomFieldId = ucfv.CustomFieldId{0} "' Environment.NewLine); " is 131.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save custom field' the project id is invalid")); " is 125.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "            sb.AppendFormat("IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[{0}]') AND OBJECTPROPERTY(id' N'IsView') = 1) {1}"' viewName' Environment.NewLine); " is 164.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "                sb.AppendFormat("'ISNULL(p.[{0}]' '''') AS [{2}{0}]{1} "' customField.Name.Replace("'"' "''")' Environment.NewLine' Globals.PROJECT_CUSTOM_FIELDS_PREFIX); " is 154.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "                sb.AppendFormat("SELECT pcf.ProjectId' pcfv.IssueId' pcf.CustomFieldName' pcfv.CustomFieldValue{0}"' Environment.NewLine); " is 122.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,UpdateCustomFieldView,The length of the statement  "                sb.AppendFormat("INNER JOIN BugNet_ProjectCustomFieldValues pcfv ON pcf.CustomFieldId = pcfv.CustomFieldId{0} "' Environment.NewLine); " is 134.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,GetCustomFieldChanges,The length of the statement  "                    var history = new IssueHistory { CreatedUserName = Security.GetUserName()' IssueId = issueId' DateChanged = DateTime.Now }; " is 123.
Long Statement,BugNET.BLL,CustomFieldManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\CustomFieldManager.cs,GetCustomFieldChanges,The length of the statement  "                    var history = new IssueHistory { CreatedUserName = Security.GetUserName()' IssueId = issueId' DateChanged = DateTime.Now }; " is 123.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.IssueId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save issue attachment' the issue id is invalid")); " is 125.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,The length of the statement  "            if (String.IsNullOrEmpty(entity.FileName)) throw (new ArgumentException("The attachment file name cannot be empty or null")); " is 125.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,The length of the statement  "                            throw new ApplicationException(String.Format(LoggingManager.GetErrorMessageResource("UploadPathNotDefined")' project.Name)); " is 124.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,The length of the statement  "                        entity.FileName = String.Format("{0}.{1}{2}"' Path.GetFileNameWithoutExtension(entity.FileName)' attachmentGuid' Path.GetExtension(entity.FileName)); " is 149.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,SaveOrUpdate,The length of the statement  "                            uploadedFilePath = string.Format(@"{0}\{1}"' string.Format("{0}{1}"' HostSettingManager.Get(HostSettingNames.AttachmentUploadPath)' projectPath)' entity.FileName); " is 163.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,Delete,The length of the statement  "                        var filePath = String.Format(@"{2}{0}\{1}"' project.UploadPath' att.FileName' HostSettingManager.Get(HostSettingNames.AttachmentUploadPath)); " is 141.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,Delete,The length of the statement  "                            Log.Error(String.Format("Error Deleting IssueAttachment - {0}"' String.Format("{0}\\{1}"' project.UploadPath' att.FileName))' ex); " is 130.
Long Statement,BugNET.BLL,IssueAttachmentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueAttachmentManager.cs,IsValidFile,The length of the statement  "                if (allowedFileTypes.Select(fileType => fileType.Substring(fileType.LastIndexOf("."))).Any(newfileType => newfileType.CompareTo(fileExt) == 0)) " is 143.
Long Statement,BugNET.BLL,IssueCommentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueCommentManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.IssueId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save issue comment' the issue id is invalid")); " is 122.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                var history = new IssueHistory { CreatedUserName = issueToCompare.CreatorUserName' IssueId = originalIssue.Id' DateChanged = DateTime.Now }; " is 140.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    issueChanges.Add(GetNewIssueHistory(history' "Affected Milestone"' originalIssue.AffectedMilestoneName' issueToCompare.AffectedMilestoneName)); " is 143.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    issueChanges.Add(GetNewIssueHistory(history' "Resolution"' originalIssue.ResolutionName' issueToCompare.ResolutionName)); " is 121.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                var newAssignedUserName = String.IsNullOrEmpty(issueToCompare.AssignedUserName) ? unassignedLiteral : issueToCompare.AssignedUserName; " is 134.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    var newAssignedDisplayName = (newAssignedUserName == unassignedLiteral) ? newAssignedUserName : UserManager.GetUserDisplayName(newAssignedUserName); " is 148.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    issueChanges.Add(GetNewIssueHistory(history' "Assigned to"' originalIssue.AssignedDisplayName' newAssignedDisplayName)); " is 120.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                var newOwnerUserName = String.IsNullOrEmpty(issueToCompare.OwnerUserName) ? unassignedLiteral : issueToCompare.OwnerUserName; " is 125.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    var newOwnerDisplayName = (newOwnerUserName == unassignedLiteral) ? newOwnerUserName : UserManager.GetUserDisplayName(issueToCompare.OwnerUserName); " is 148.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    issueChanges.Add(GetNewIssueHistory(history' "Estimation"' Utilities.EstimationToString(originalIssue.Estimation)' Utilities.EstimationToString(issueToCompare.Estimation))); " is 173.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    issueChanges.Add(GetNewIssueHistory(history' "Visibility"' Utilities.GetBooleanAsString(originalIssue.Visibility.ToBool())' Utilities.GetBooleanAsString(issueToCompare.Visibility.ToBool()))); " is 191.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    var originalDate = originalIssue.DueDate == DateTime.MinValue ? string.Empty : originalIssue.DueDate.ToShortDateString(); " is 121.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The length of the statement  "                    issueChanges.Add(GetNewIssueHistory(history' "Progress"' oldProgress.ToString("P"' nfi)' newProgress.ToString("P"' nfi))); " is 122.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetMonitoredIssuesByUserName,The length of the statement  "            var list = DataProviderManager.Provider.GetMonitoredIssuesByUserName(userId' sortFields' projects' excludeClosedStatus); " is 120.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,LocalizeUnassigned,The length of the statement  "                LocalizeUnassigned(issue' ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Unassigned"' "Unassigned")); " is 122.
Long Statement,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,CanViewIssue,The length of the statement  "            if (issue.Visibility == IssueVisibility.Private.To<int>() && !UserManager.IsInRole(issue.ProjectId' Globals.ProjectAdminRole)) " is 126.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SaveOrUpdate,The length of the statement  "            if (notification.IssueId <= Globals.NEW_ID) throw (new ArgumentOutOfRangeException("notification"' "The issue id for the notification is not valid")); " is 150.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SaveOrUpdate,The length of the statement  "            if (string.IsNullOrEmpty(notification.NotificationUsername)) throw (new ArgumentOutOfRangeException("notification"' "The user name for the notification cannot be null or empty")); " is 179.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,Delete,The length of the statement  "            if (notification.IssueId <= Globals.NEW_ID) throw (new ArgumentOutOfRangeException("notification"' "The issue id for the notification is not valid")); " is 150.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,Delete,The length of the statement  "            if (string.IsNullOrEmpty(notification.NotificationUsername)) throw (new ArgumentOutOfRangeException("notification"' "The user name for the notification cannot be null or empty")); " is 179.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SendIssueNotifications,The length of the statement  "            foreach (var culture in from culture in distinctCultures let notificationContent = templateCache.FirstOrDefault(p => p.CultureString == culture) where notificationContent == null select culture) " is 194.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SendIssueAddNotifications,The length of the statement  "            foreach (var culture in from culture in distinctCultures let notificationContent = templateCache.FirstOrDefault(p => p.CultureString == culture) where notificationContent == null select culture) " is 194.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SendIssueNotifications,The length of the statement  "            foreach (var culture in from culture in distinctCultures let notificationContent = templateCache.FirstOrDefault(p => p.CultureString == culture) where notificationContent == null select culture) " is 194.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SendNewAssigneeNotification,The length of the statement  "            if (notification.IssueId <= Globals.NEW_ID) throw (new ArgumentOutOfRangeException("notification"' "The issue id is not valid for this notification")); " is 151.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,SendNewIssueCommentNotification,The length of the statement  "            foreach (var culture in from culture in distinctCultures let notificationContent = templateCache.FirstOrDefault(p => p.CultureString == culture) where notificationContent == null select culture) " is 194.
Long Statement,BugNET.BLL,IssueNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueNotificationManager.cs,ProcessException,The length of the statement  "            if (HttpContext.Current != null && HttpContext.Current.User != null && HttpContext.Current.User.Identity.IsAuthenticated) " is 121.
Long Statement,BugNET.BLL,IssueTypeManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueTypeManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save issue type' the project id is invalid")); " is 123.
Long Statement,BugNET.BLL,IssueTypeManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueTypeManager.cs,Delete,The length of the statement  "            cannotDeleteMessage = string.Format(cannotDeleteMessage' entity.Name'  ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "IssueType"' "issue type").ToLower()); " is 176.
Long Statement,BugNET.BLL,IssueVoteManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueVoteManager.cs,SaveOrUpdate,The length of the statement  "            if (string.IsNullOrEmpty(entity.VoteUsername)) throw (new ArgumentException("Cannot save issue vote' the voters user name is null or empty")); " is 142.
Long Statement,BugNET.BLL,IssueWorkReportManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueWorkReportManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.IssueId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save issue work report' the issue id is invalid")); " is 126.
Long Statement,BugNET.BLL,LoggingManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\LoggingManager.cs,ConfigureEmailLoggingAppender,The length of the statement  "                appender.Username = String.Format("{0}\\{1}"' HostSettingManager.Get(HostSettingNames.SMTPDomain' string.Empty)' HostSettingManager.Get(HostSettingNames.SMTPUsername' string.Empty)); " is 182.
Long Statement,BugNET.BLL,LoggingManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\LoggingManager.cs,ConfigureEmailLoggingAppender,The length of the statement  "                log4net.Layout.PatternLayout("%newline%date [%thread] %-5level %logger [%property{NDC}] - %message%newline%newline%newline"); " is 125.
Long Statement,BugNET.BLL,MilestoneManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\MilestoneManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save milestone' the project id is invalid")); " is 122.
Long Statement,BugNET.BLL,MilestoneManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\MilestoneManager.cs,Delete,The length of the statement  "            cannotDeleteMessage = string.Format(cannotDeleteMessage' milestone.Name' ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Milestone"' "milestone").ToLower()); " is 177.
Long Statement,BugNET.BLL,PriorityManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\PriorityManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save priority' the project id is invalid")); " is 121.
Long Statement,BugNET.BLL,PriorityManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\PriorityManager.cs,Delete,The length of the statement  "            cannotDeleteMessage = string.Format(cannotDeleteMessage' entity.Name' ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Priority"' "priority").ToLower()); " is 172.
Long Statement,BugNET.BLL,ProjectMailboxManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectMailboxManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save milestone' the project id is invalid")); " is 122.
Long Statement,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,Delete,The length of the statement  "                    Log.Error(string.Format(LoggingManager.GetErrorMessageResource("DeleteProjectUploadFolderError")' uploadpath' projectId)' ex); " is 126.
Long Statement,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,DeleteProjectCustomView,The length of the statement  "                var sql = string.Concat("IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'"' viewName' "') AND OBJECTPROPERTY(id' N'IsView') = 1) DROP VIEW "' viewName); " is 168.
Long Statement,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,CloneProject,The length of the statement  "                    if (newProject.AllowAttachments && HostSettingManager.Get(HostSettingNames.AttachmentStorageType' 0) == (int)IssueAttachmentStorageTypes.FileSystem) " is 148.
Long Statement,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,CloneProject,The length of the statement  "                        Log.Error(string.Format(LoggingManager.GetErrorMessageResource("CreateProjectUploadFolderError")' newProject.UploadPath' projectId)' ex); " is 137.
Long Statement,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,Update,The length of the statement  "            //            Log.Error(string.Format(LoggingManager.GetErrorMessageResource("CouldNotCreateUploadDirectory")' newFullPath)); " is 125.
Long Statement,BugNET.BLL,ProjectManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectManager.cs,Update,The length of the statement  "            //            Log.Error(string.Format(LoggingManager.GetErrorMessageResource("CouldNotCreateUploadDirectory")' newFullPath)' ex); " is 129.
Long Statement,BugNET.BLL,ProjectNotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ProjectNotificationManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save notification' the project id is invalid")); " is 125.
Long Statement,BugNET.BLL,QueryManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\QueryManager.cs,SaveOrUpdate,The length of the statement  "                DataProviderManager.Provider.UpdateQuery(entity.Id' userName' projectId' entity.Name' entity.IsPublic' entity.Clauses) : " is 120.
Long Statement,BugNET.BLL,ResolutionManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ResolutionManager.cs,SaveOrUpdate,The length of the statement  "            if (entity.ProjectId <= Globals.NEW_ID) throw (new ArgumentException("Cannot save resolution' the project id is invalid")); " is 123.
Long Statement,BugNET.BLL,ResolutionManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\ResolutionManager.cs,Delete,The length of the statement  "            cannotDeleteMessage = string.Format(cannotDeleteMessage' entity.Name' ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Resolution"' "resolution").ToLower()); " is 176.
Long Statement,BugNET.BLL,StatusManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\StatusManager.cs,Delete,The length of the statement  "            cannotDeleteMessage = string.Format(cannotDeleteMessage' entity.Name' ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Status"' "status").ToLower()); " is 168.
Long Statement,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CreateRepository,The length of the statement  "                sb.AppendLine(RunCommand("svn"' "propset -R bugtraq:logregex \"\\[?([A-Za-z]{3}-\\d+)\\]?.+\" \"" + repoCheckoutPath + "\"")); " is 126.
Long Statement,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CreateRepository,The length of the statement  "                sb.AppendLine(RunCommand("svn"' "propset -R bugtraq:url \"" + url + "Issues/IssueDetail.aspx?id=%BUGID%\" \"" + repoCheckoutPath + "\"")); " is 138.
Long Statement,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CreateRepository,The length of the statement  "                //sb.AppendLine(RunCommand("svn"' "propset -R bugtraq:message \"Issue Tracker Id: %BUGID%\" \"" + repoCheckoutPath + "\"")); " is 124.
Long Statement,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CreateRepository,The length of the statement  "                sb.AppendLine(RunCommand("svn"' "commit -m \"Added Issue Tracker properties to the repository\" \"" + repoCheckoutPath + "\"")); " is 128.
Long Statement,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CreateTag,The length of the statement  "                    ? string.Format("--non-interactive copy \"{0}trunk\" \"{0}tags/{1}\" --username {2} --password {3} -m \"{4}\""' repoUrl' tagName' userName' password' comment)  " is 158.
Long Statement,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,CommandProcessErrorDataReceived,The length of the statement  "            // RC: Sometimes an error occurres in hear. I think the process is ending while we are getting the data' but Im not sure. " is 121.
Long Statement,BugNET.BLL,UpgradeManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UpgradeManager.cs,GetUpgradeStatus,The length of the statement  "            if (HttpContext.Current != null && HttpContext.Current.User != null && HttpContext.Current.User.Identity.IsAuthenticated && (HttpContext.Current.User.Identity.AuthenticationType != "NTLM" || HttpContext.Current.User.Identity.AuthenticationType != "Negotiate")) " is 260.
Long Statement,BugNET.BLL,UpgradeManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UpgradeManager.cs,GetUpgradeStatus,The length of the statement  "            return DataProviderManager.Provider.GetDatabaseVersion() != GetCurrentVersion() ? UpgradeStatus.Upgrade : UpgradeStatus.None; " is 125.
Long Statement,BugNET.BLL.Notifications,NotificationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\Notifications\NotificationManager.cs,GenerateNotificationContent,The length of the statement  "                    foreach (var de in HostSettingManager.GetHostSettings().Cast<DictionaryEntry>().Where(de => !de.Key.ToString().ToLower().Equals("welcomemessage"))) " is 147.
Long Statement,BugNET.BLL.Notifications,SmtpMailDeliveryService,C:\repos\dubeaud_bugnet\src\BugNET.BLL\Notifications\SmtpMailDeliveryService.cs,Send,The length of the statement  "                message.From = new MailAddress(HostSettingManager.HostEmailAddress.Insert(at' issueCode)' HostSettingManager.ApplicationTitle); " is 127.
Complex Conditional,BugNET.BLL,UpgradeManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UpgradeManager.cs,GetUpgradeStatus,The conditional expression  "HttpContext.Current != null && HttpContext.Current.User != null && HttpContext.Current.User.Identity.IsAuthenticated && (HttpContext.Current.User.Identity.AuthenticationType != "NTLM" || HttpContext.Current.User.Identity.AuthenticationType != "Negotiate")"  is complex.
Magic Number,BugNET.BLL,IssueCommentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueCommentManager.cs,GetShortTextComment,The following statement contains a magic number: int tmpint = tmplen / 2;
Magic Number,BugNET.BLL,IssueCommentManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueCommentManager.cs,GetShortTextComment,The following statement contains a magic number: if (tmpint > howmuch)              {                  // Longer than the string                  tmpcomment = tmpcomment.Substring(tmpint - (howmuch / 2)' howmuch);              }
Magic Number,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The following statement contains a magic number: if (originalIssue != null && issueToCompare != null)              {                  var history = new IssueHistory { CreatedUserName = issueToCompare.CreatorUserName' IssueId = originalIssue.Id' DateChanged = DateTime.Now };                    if (originalIssue.Title.ToLower() != issueToCompare.Title.ToLower())                      issueChanges.Add(GetNewIssueHistory(history' "Title"' originalIssue.Title' issueToCompare.Title));                    if (originalIssue.Description.ToLower() != issueToCompare.Description.ToLower())                      issueChanges.Add(GetNewIssueHistory(history' "Description"' originalIssue.Description' issueToCompare.Description));                    if (originalIssue.CategoryId != issueToCompare.CategoryId)                      issueChanges.Add(GetNewIssueHistory(history' "Category"' originalIssue.CategoryName' issueToCompare.CategoryName));                    if (originalIssue.PriorityId != issueToCompare.PriorityId)                      issueChanges.Add(GetNewIssueHistory(history' "Priority"' originalIssue.PriorityName' issueToCompare.PriorityName));                    if (originalIssue.StatusId != issueToCompare.StatusId)                      issueChanges.Add(GetNewIssueHistory(history' "Status"' originalIssue.StatusName' issueToCompare.StatusName));                    if (originalIssue.MilestoneId != issueToCompare.MilestoneId)                      issueChanges.Add(GetNewIssueHistory(history' "Milestone"' originalIssue.MilestoneName' issueToCompare.MilestoneName));                    if (originalIssue.AffectedMilestoneId != issueToCompare.AffectedMilestoneId)                      issueChanges.Add(GetNewIssueHistory(history' "Affected Milestone"' originalIssue.AffectedMilestoneName' issueToCompare.AffectedMilestoneName));                    if (originalIssue.IssueTypeId != issueToCompare.IssueTypeId)                      issueChanges.Add(GetNewIssueHistory(history' "Issue Type"' originalIssue.IssueTypeName' issueToCompare.IssueTypeName));                    if (originalIssue.ResolutionId != issueToCompare.ResolutionId)                      issueChanges.Add(GetNewIssueHistory(history' "Resolution"' originalIssue.ResolutionName' issueToCompare.ResolutionName));                    var unassignedLiteral = ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Unassigned"' "Unassigned");                    var newAssignedUserName = String.IsNullOrEmpty(issueToCompare.AssignedUserName) ? unassignedLiteral : issueToCompare.AssignedUserName;                    if (originalIssue.AssignedUserName != newAssignedUserName)                  {                      // if the new assigned user is the unassigned user then don't trigger the new assignee notification                      issueToCompare.SendNewAssigneeNotification = (newAssignedUserName != unassignedLiteral);                      issueToCompare.NewAssignee = true;                      var newAssignedDisplayName = (newAssignedUserName == unassignedLiteral) ? newAssignedUserName : UserManager.GetUserDisplayName(newAssignedUserName);                      issueChanges.Add(GetNewIssueHistory(history' "Assigned to"' originalIssue.AssignedDisplayName' newAssignedDisplayName));                  }                    var newOwnerUserName = String.IsNullOrEmpty(issueToCompare.OwnerUserName) ? unassignedLiteral : issueToCompare.OwnerUserName;                    if (originalIssue.OwnerUserName != newOwnerUserName)                  {                      var newOwnerDisplayName = (newOwnerUserName == unassignedLiteral) ? newOwnerUserName : UserManager.GetUserDisplayName(issueToCompare.OwnerUserName);                      issueChanges.Add(GetNewIssueHistory(history' "Owner"' originalIssue.OwnerDisplayName' newOwnerDisplayName));                  }                      if (originalIssue.Estimation != issueToCompare.Estimation)                      issueChanges.Add(GetNewIssueHistory(history' "Estimation"' Utilities.EstimationToString(originalIssue.Estimation)' Utilities.EstimationToString(issueToCompare.Estimation)));                    if (originalIssue.Visibility != issueToCompare.Visibility)                      issueChanges.Add(GetNewIssueHistory(history' "Visibility"' Utilities.GetBooleanAsString(originalIssue.Visibility.ToBool())' Utilities.GetBooleanAsString(issueToCompare.Visibility.ToBool())));                    if (originalIssue.DueDate != issueToCompare.DueDate)                  {                      var originalDate = originalIssue.DueDate == DateTime.MinValue ? string.Empty : originalIssue.DueDate.ToShortDateString();                      var newDate = issueToCompare.DueDate == DateTime.MinValue ? string.Empty : issueToCompare.DueDate.ToShortDateString();                        issueChanges.Add(GetNewIssueHistory(history' "Due Date"' originalDate' newDate));                  }                    if (originalIssue.Progress != issueToCompare.Progress)                  {                      var nfi = new NumberFormatInfo { PercentDecimalDigits = 0 };                        var oldProgress = originalIssue.Progress.Equals(0) ? 0 : (originalIssue.Progress.To<double>() / 100);                      var newProgress = issueToCompare.Progress.Equals(0) ? 0 : (issueToCompare.Progress.To<double>() / 100);                        issueChanges.Add(GetNewIssueHistory(history' "Progress"' oldProgress.ToString("P"' nfi)' newProgress.ToString("P"' nfi)));                  }              }              else              {                  throw new Exception("Unable to retrieve original issue data");              }
Magic Number,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,GetIssueChanges,The following statement contains a magic number: if (originalIssue != null && issueToCompare != null)              {                  var history = new IssueHistory { CreatedUserName = issueToCompare.CreatorUserName' IssueId = originalIssue.Id' DateChanged = DateTime.Now };                    if (originalIssue.Title.ToLower() != issueToCompare.Title.ToLower())                      issueChanges.Add(GetNewIssueHistory(history' "Title"' originalIssue.Title' issueToCompare.Title));                    if (originalIssue.Description.ToLower() != issueToCompare.Description.ToLower())                      issueChanges.Add(GetNewIssueHistory(history' "Description"' originalIssue.Description' issueToCompare.Description));                    if (originalIssue.CategoryId != issueToCompare.CategoryId)                      issueChanges.Add(GetNewIssueHistory(history' "Category"' originalIssue.CategoryName' issueToCompare.CategoryName));                    if (originalIssue.PriorityId != issueToCompare.PriorityId)                      issueChanges.Add(GetNewIssueHistory(history' "Priority"' originalIssue.PriorityName' issueToCompare.PriorityName));                    if (originalIssue.StatusId != issueToCompare.StatusId)                      issueChanges.Add(GetNewIssueHistory(history' "Status"' originalIssue.StatusName' issueToCompare.StatusName));                    if (originalIssue.MilestoneId != issueToCompare.MilestoneId)                      issueChanges.Add(GetNewIssueHistory(history' "Milestone"' originalIssue.MilestoneName' issueToCompare.MilestoneName));                    if (originalIssue.AffectedMilestoneId != issueToCompare.AffectedMilestoneId)                      issueChanges.Add(GetNewIssueHistory(history' "Affected Milestone"' originalIssue.AffectedMilestoneName' issueToCompare.AffectedMilestoneName));                    if (originalIssue.IssueTypeId != issueToCompare.IssueTypeId)                      issueChanges.Add(GetNewIssueHistory(history' "Issue Type"' originalIssue.IssueTypeName' issueToCompare.IssueTypeName));                    if (originalIssue.ResolutionId != issueToCompare.ResolutionId)                      issueChanges.Add(GetNewIssueHistory(history' "Resolution"' originalIssue.ResolutionName' issueToCompare.ResolutionName));                    var unassignedLiteral = ResourceStrings.GetGlobalResource(GlobalResources.SharedResources' "Unassigned"' "Unassigned");                    var newAssignedUserName = String.IsNullOrEmpty(issueToCompare.AssignedUserName) ? unassignedLiteral : issueToCompare.AssignedUserName;                    if (originalIssue.AssignedUserName != newAssignedUserName)                  {                      // if the new assigned user is the unassigned user then don't trigger the new assignee notification                      issueToCompare.SendNewAssigneeNotification = (newAssignedUserName != unassignedLiteral);                      issueToCompare.NewAssignee = true;                      var newAssignedDisplayName = (newAssignedUserName == unassignedLiteral) ? newAssignedUserName : UserManager.GetUserDisplayName(newAssignedUserName);                      issueChanges.Add(GetNewIssueHistory(history' "Assigned to"' originalIssue.AssignedDisplayName' newAssignedDisplayName));                  }                    var newOwnerUserName = String.IsNullOrEmpty(issueToCompare.OwnerUserName) ? unassignedLiteral : issueToCompare.OwnerUserName;                    if (originalIssue.OwnerUserName != newOwnerUserName)                  {                      var newOwnerDisplayName = (newOwnerUserName == unassignedLiteral) ? newOwnerUserName : UserManager.GetUserDisplayName(issueToCompare.OwnerUserName);                      issueChanges.Add(GetNewIssueHistory(history' "Owner"' originalIssue.OwnerDisplayName' newOwnerDisplayName));                  }                      if (originalIssue.Estimation != issueToCompare.Estimation)                      issueChanges.Add(GetNewIssueHistory(history' "Estimation"' Utilities.EstimationToString(originalIssue.Estimation)' Utilities.EstimationToString(issueToCompare.Estimation)));                    if (originalIssue.Visibility != issueToCompare.Visibility)                      issueChanges.Add(GetNewIssueHistory(history' "Visibility"' Utilities.GetBooleanAsString(originalIssue.Visibility.ToBool())' Utilities.GetBooleanAsString(issueToCompare.Visibility.ToBool())));                    if (originalIssue.DueDate != issueToCompare.DueDate)                  {                      var originalDate = originalIssue.DueDate == DateTime.MinValue ? string.Empty : originalIssue.DueDate.ToShortDateString();                      var newDate = issueToCompare.DueDate == DateTime.MinValue ? string.Empty : issueToCompare.DueDate.ToShortDateString();                        issueChanges.Add(GetNewIssueHistory(history' "Due Date"' originalDate' newDate));                  }                    if (originalIssue.Progress != issueToCompare.Progress)                  {                      var nfi = new NumberFormatInfo { PercentDecimalDigits = 0 };                        var oldProgress = originalIssue.Progress.Equals(0) ? 0 : (originalIssue.Progress.To<double>() / 100);                      var newProgress = issueToCompare.Progress.Equals(0) ? 0 : (issueToCompare.Progress.To<double>() / 100);                        issueChanges.Add(GetNewIssueHistory(history' "Progress"' oldProgress.ToString("P"' nfi)' newProgress.ToString("P"' nfi)));                  }              }              else              {                  throw new Exception("Unable to retrieve original issue data");              }
Magic Number,BugNET.BLL,IssueManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\IssueManager.cs,CalculateIssueCountListPercentage,The following statement contains a magic number: foreach (var issueCount in issueCountList)              {                  var count = (decimal)issueCount.Count;                    if (count == 0)                  {                      issueCount.Percentage = 0;                  }                  else                  {                      var value = (count / issueSum) * 100;                      value = Math.Round(value' MidpointRounding.ToEven); // might help make the percentages closer to 100% on UI                      issueCount.Percentage = issueSum != 0 ? value : 0;                  }              }
Magic Number,BugNET.BLL,SourceIntegrationManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\SourceIntegrationManager.cs,RunCommand,The following statement contains a magic number: try              {                  var startInfo = new ProcessStartInfo(command' args)                      {                          CreateNoWindow = true'                          WindowStyle = ProcessWindowStyle.Hidden'                          UseShellExecute = false'                          RedirectStandardOutput = true'                          RedirectStandardError = true                      };                    proc = new Process {StartInfo = startInfo};                  proc.ErrorDataReceived += CommandProcessErrorDataReceived;                  proc.Start();                    proc.BeginErrorReadLine();                    var retVal = proc.StandardOutput.ReadToEnd();                    if (!proc.WaitForExit(killAfterSeconds * 1000))                      proc.Kill();                    if (Errors.ContainsKey(proc.Id))                      retVal += Environment.NewLine + "Error: " + Environment.NewLine + Errors[proc.Id];                    // hide password from being displayed                  var regexObj = new Regex("--password\\s+\\S+\\s"' RegexOptions.IgnoreCase);                  args = regexObj.Replace(args' "--password **** ");                    return command + " " + args + Environment.NewLine + retVal;                                }              finally              {                  if (proc != null)                  {                      if (Errors.ContainsKey(proc.Id))                          Errors.Remove(proc.Id);                        proc.Dispose();                  }              }
Magic Number,BugNET.BLL,UserManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\UserManager.cs,GetProfilePageSize,The following statement contains a magic number: return HttpContext.Current.User.Identity.IsAuthenticated ?                   WebProfile.Current.IssuesPageSize :                   10;
Missing Default,BugNET.BLL,ApplicationLogComparer,C:\repos\dubeaud_bugnet\src\BugNET.BLL\Comparers\ApplicationLogComparer.cs,Compare,The following switch statement is missing a default case: switch (_sortColumn)             {              case "Id":                  retVal = (x.Id - y.Id);                  break;              case "Logger":                  retVal = String.Compare(x.Logger' y.Logger' StringComparison.InvariantCultureIgnoreCase);                  break;              case "Message":                retVal = String.Compare(x.Message' y.Message' StringComparison.InvariantCultureIgnoreCase);                break;              case "User":                retVal = String.Compare(x.User' y.User' StringComparison.InvariantCultureIgnoreCase);                break;              case "Level":                retVal = String.Compare(x.Level' y.Level ' StringComparison.InvariantCultureIgnoreCase);                break;              case "Date":                retVal = DateTime.Compare(x.Date' y.Date);                break;            }
Missing Default,BugNET.BLL,ProjectComparer,C:\repos\dubeaud_bugnet\src\BugNET.BLL\Comparers\ProjectComparer.cs,Compare,The following switch statement is missing a default case: switch (_sortColumn) {                case "Created":                retVal = DateTime.Compare(x.DateCreated' y.DateCreated);                break;              case "Description":                retVal = String.Compare(x.Description' y.Description' StringComparison.InvariantCultureIgnoreCase);                break;              case "Creator":                retVal = String.Compare(x.CreatorUserName' y.CreatorUserName' StringComparison.InvariantCultureIgnoreCase);                break;              case "Name":                retVal = String.Compare(x.Name' y.Name' StringComparison.InvariantCultureIgnoreCase);                break;              case "Manager":                retVal = String.Compare(x.ManagerUserName' y.ManagerUserName ' StringComparison.InvariantCultureIgnoreCase);                break;              case "Id":                retVal = (x.Id - y.Id);                break;              case "Active":                retVal = (x.Disabled.CompareTo(y.Disabled));                break;            }
Missing Default,BugNET.BLL,RoleManager,C:\repos\dubeaud_bugnet\src\BugNET.BLL\RoleManager.cs,CreateDefaultProjectRoles,The following switch statement is missing a default case: switch (role)                  {                      case "Project Administrators":                          permissions = Globals.AdministratorPermissions;                          break;                      case "Read Only":                          permissions = Globals.ReadOnlyPermissions;                          break;                      case "Reporter":                          permissions = Globals.ReporterPermissions;                          break;                      case "Developer":                          permissions = Globals.DeveloperPermissions;                          break;                      case "Quality Assurance":                          permissions = Globals.QualityAssurancePermissions;                          break;                  }
