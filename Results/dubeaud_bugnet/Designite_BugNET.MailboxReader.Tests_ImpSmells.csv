Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BugNET.MailboxReader.Tests,Helpers,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\Helpers.cs,GetEmailTemplateContent,The length of the statement  "            using (var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.NewMailboxIssue.xslt"))  " is 129.
Long Statement,BugNET.MailboxReader.Tests,Helpers,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\Helpers.cs,GetBugNetConfig,The length of the statement  "                ProcessInlineAttachedPictures = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3InlineAttachedPictures' false)' " is 121.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_image_attachment_has_one_image_attachment,The length of the statement  "            var result = Mail_Message.ParseFromStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.html_email_with_image_attachment.txt")); " is 168.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_image_attachment_has_one_image_attachment,The length of the statement  "            Assert.AreEqual("image"' mimeEntity.ContentType.Type' "email has attachment type {0} we expected {1}"' mimeEntity.ContentType.Type' "image"); " is 141.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_bad_header_has_one_image_attachment,The length of the statement  "            // with the bad header for some reason this email inline attachments are missing GetAttachments process via the body boundaries " is 127.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_bad_header_has_one_image_attachment,The length of the statement  "            var result = Mail_Message.ParseFromStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.html_email_with_bad_header.txt")); " is 162.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_bad_header_has_one_image_attachment,The length of the statement  "            Assert.AreEqual("image"' mimeEntity.ContentType.Type' "email has attachment type {0} we expected {1}"' mimeEntity.ContentType.Type' "image"); " is 141.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_body_image_has_one_image_attachment,The length of the statement  "            var result = Mail_Message.ParseFromStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.html_email_with_body_image.txt")); " is 162.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_body_image_has_one_image_attachment,The length of the statement  "            Assert.AreEqual("image"' mimeEntity.ContentType.Type' "email has attachment type {0} we expected {1}"' mimeEntity.ContentType.Type' "image"); " is 141.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_message_attachment_has_one_message_attachment,The length of the statement  "            var result = Mail_Message.ParseFromStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.html_email_with_message_attachment.txt")); " is 170.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,html_email_with_message_attachment_has_one_message_attachment,The length of the statement  "            Assert.AreEqual("message"' mimeEntity.ContentType.Type' "email has attachment type {0} we expected {1}"' mimeEntity.ContentType.Type' "message"); " is 145.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,rtf_email_with_image_attachment_has_one_attachment,The length of the statement  "            var result = Mail_Message.ParseFromStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.rtf_email_with_image_attachment.txt")); " is 167.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,rtf_email_with_image_attachment_has_one_attachment,The length of the statement  "            Assert.AreEqual("image"' mimeEntity.ContentType.Type' "email has attachment type {0} we expected {1}"' mimeEntity.ContentType.Type' "image"); " is 141.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,rtf_email_with_message_attachment_has_one_message_attachment,The length of the statement  "            var result = Mail_Message.ParseFromStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("BugNET.MailboxReader.Tests.rtf_email_with_message_attachment.txt")); " is 169.
Long Statement,BugNET.MailboxReader.Tests,MailboxReaderTests,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\MailboxReaderTests.cs,rtf_email_with_message_attachment_has_one_message_attachment,The length of the statement  "            Assert.AreEqual("message"' mimeEntity.ContentType.Type' "email has attachment type {0} we expected {1}"' mimeEntity.ContentType.Type' "message"); " is 145.
Magic Number,BugNET.MailboxReader.Tests,Helpers,D:\research\architectureSmells\repos\dubeaud_bugnet\src\BugNET.MailboxReader.Tests\Helpers.cs,GetBugNetConfig,The following statement contains a magic number: var mailBoxConfig = new MailboxReaderConfig              {                  Server = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Server' string.Empty)'                  Port = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Port' 110)'                  UseSsl = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3UseSSL' false)'                  Username = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Username' string.Empty)'                  Password = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Password' string.Empty)'                  ProcessInlineAttachedPictures = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3InlineAttachedPictures' false)'                  DeleteAllMessages = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3DeleteAllMessages' false)'                  ReportingUserName = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3ReportingUsername' string.Empty)'                  ProcessAttachments = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3ProcessAttachments' true)'                  UploadsFolderPath = state.UploadsFolderPath'                  EmailFormatType = emailFormat'                  BodyTemplate = GetEmailTemplateContent()              };
