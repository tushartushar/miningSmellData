Implementation smell,Namespace,Class,File,Method,Description
Long Method,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,The method has 102 lines of code.
Complex Method,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,Cyclomatic complexity of the method is 13
Long Statement,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,Init,The length of the statement  "                Log.Warn(string.Format("MailboxReaderModule: [Pop3Interval] was too small. Using minimum threshold of {0} milliseconds"' MIN_INTERVAL)); " is 136.
Long Statement,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,The length of the statement  "                var pop3TemplatePath = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3BodyTemplate' "templates/NewMailboxIssue.xslt"); " is 129.
Long Statement,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,The length of the statement  "                    ProcessInlineAttachedPictures = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3InlineAttachedPictures' false)' " is 121.
Long Statement,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,The length of the statement  "                    UploadsFolderPath = (state == null) ? Path.Combine(HostSettingManager.Get(HostSettingNames.AttachmentUploadPath)' path) : state.UploadsFolderPath' " is 146.
Long Statement,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,The length of the statement  "            Log.Error(string.Format("MailboxReaderModule: The Mailbox reader has thrown [{0}] consecutive errors and will be disabled"' _readerErrors)); " is 140.
Magic Number,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,Init,The following statement contains a magic number: _timer = new Timer(ScheduledWorkCallback' state' 15' _interval);
Magic Number,BugNET.HttpModules,MailboxReaderModule,D:\research\architectureSmells\repos\dubeaud_bugnet\src\Library\HttpModules\MailBoxReader\MailboxReaderModule.cs,ScheduledWorkCallback,The following statement contains a magic number: var mailBoxConfig = new MailboxReaderConfig                  {                      Server = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Server' string.Empty)'                      Port = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Port' 110)'                      UseSsl = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3UseSSL' false)'                      Username = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Username' string.Empty)'                      Password = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3Password' string.Empty)'                      ProcessInlineAttachedPictures = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3InlineAttachedPictures' false)'                      DeleteAllMessages = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3DeleteAllMessages' true)'                      ReportingUserName = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3ReportingUsername' string.Empty)'                      ProcessAttachments = HostSettingManager.Get(hostSettings' HostSettingNames.Pop3ProcessAttachments' true)'                      UploadsFolderPath = (state == null) ? Path.Combine(HostSettingManager.Get(HostSettingNames.AttachmentUploadPath)' path) : state.UploadsFolderPath'                      AllowedFileExtensions = HostSettingManager.Get(hostSettings' HostSettingNames.AllowedFileExtensions' ".")'                      FileSizeLimit = HostSettingManager.Get(hostSettings' HostSettingNames.FileSizeLimit' 0)'                      EmailFormatType = emailFormat                  };
