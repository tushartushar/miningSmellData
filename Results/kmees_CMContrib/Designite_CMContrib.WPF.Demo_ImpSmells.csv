Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Caliburn.Micro.Contrib.Demo.ViewModels.Samples,ComplexBindingViewModel,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\ViewModels\Samples\ComplexBindingViewModel.cs,Execute,The method has 6 parameters. Parameters: dataContext' title' eventArgs' binding' content' b
Long Statement,Caliburn.Micro.Contrib.Demo,ShellView,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\ShellView.xaml.cs,DragMoveWindow,The length of the statement  "            if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed) " is 136.
Long Statement,Caliburn.Micro.Contrib.Demo,App,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\App.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Caliburn.Micro.Contrib.WPF.Demo;component/app.xaml"' System.UriKind.Relative); " is 124.
Long Statement,Caliburn.Micro.Contrib.Demo,AppBootstrapper,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\AppBootstrapper.cs,Configure,The length of the statement  "            FrameworkExtensions.Message.Attach.AllowExtraSyntax(MessageSyntaxes.SpecialValueProperty | MessageSyntaxes.XamlBinding); " is 120.
Long Statement,Caliburn.Micro.Contrib.Demo.ViewModels.Samples,QuestionDialogViewModel,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\ViewModels\Samples\QuestionDialogViewModel.cs,Execute,The length of the statement  "                // .CancelOnResponse(Answer.No) When two or more responses are given' the last response is per default the cancel response " is 122.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,Caliburn.Micro.Contrib.Demo,ShellView,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\ShellView.xaml.cs,DragMoveWindow,The following statement contains a magic number: if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed)              {                  if (WindowState == WindowState.Maximized)                  {                      // Calcualting correct left coordinate for multi-screen system.                      double mouseX = PointToScreen(Mouse.GetPosition(this)).X;                      double width = RestoreBounds.Width;                      double left = mouseX - width / 2;                        // Aligning window's position to fit the screen.                      double virtualScreenWidth = SystemParameters.VirtualScreenWidth;                      left = left < 0 ? 0 : left;                      left = left + width > virtualScreenWidth ? virtualScreenWidth - width : left;                        Top = 0;                      Left = left;                        // Restore window to normal state.                      WindowState = WindowState.Normal;                    }                    DragMove();              }
Magic Number,Caliburn.Micro.Contrib.Demo,ShellView,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\ShellView.xaml.cs,DragMoveWindow,The following statement contains a magic number: if (e.ClickCount != 2)                  return;
Magic Number,Caliburn.Micro.Contrib.Demo.ViewModels.Samples,WorkerThreadExtensionViewModel,C:\repos\kmees_CMContrib\demos\CMContrib.WPF.Demo\ViewModels\Samples\WorkerThreadExtensionViewModel.cs,Execute,The following statement contains a magic number: yield return new DelegateResult(() => Thread.Sleep(SleepTime))                  .OnWorkerThread(string.Format("Sleeping for {0} seconds"' SleepTime/1000));
