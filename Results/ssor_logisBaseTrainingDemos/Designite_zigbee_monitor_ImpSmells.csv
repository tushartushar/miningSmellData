Implementation smell,Namespace,Class,File,Method,Description
Complex Method,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,toolSave_Click,Cyclomatic complexity of the method is 8
Long Parameter List,zigbee_controler,frmControler,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmControler.cs,HandletxtLog,The method has 8 parameters.
Long Parameter List,zigbee_controler,ZigbeeNode,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\ZigbeeNode.cs,ZigbeeNode,The method has 6 parameters.
Long Parameter List,zigbee_controler,zigbeeInfo,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeInfo.cs,zigbeeInfo,The method has 6 parameters.
Long Statement,zigbee_controler,frmControler,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmControler.cs,HandletxtLog,The length of the statement  "		Debug.WriteLine (string.Format ("node => {0}    humi =>  {1}    temp => {2}"' _nodeID.ToString ()' _humi.ToString ()' _temp.ToString ())); " is 138.
Long Statement,zigbee_controler,frmControler,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmControler.cs,setLED,The length of the statement  "	//LedInfo c = new LedInfo(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")' DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")' "192.168.0.98"); " is 134.
Long Statement,zigbee_controler,frmControler,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmControler.cs,gettts,The length of the statement  "	//LedInfo c = new LedInfo(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")' DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")' "192.168.0.98"); " is 134.
Long Statement,zigbee_controler,frmwareHouseBD,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmwareHouseBD.cs,button1_Click,The length of the statement  "	//ZigbeeNode wH = new ZigbeeNode(textBox3.Text 'textBox2.Text 'getEPC 'textBox4.Text 'textBox5.Text 'textBox7.Text 'textBox8.Text ); " is 132.
Long Statement,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,updateUserInfo,The length of the statement  "	//wareHouse U1 = new wareHouse(textBox2.Text.ToString()' this.dgvProductInfo.CurrentRow.Cells[1].Value.ToString()' textBox1.Text' textBox4.Text' textBox5.Text' textBox7.Text' textBox8.Text); " is 190.
Long Statement,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,loadZigbeeNode,The length of the statement  "	//LedInfo c = new LedInfo(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")' DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")' "192.168.0.98"); " is 134.
Long Statement,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,addWarehouseInfo,The length of the statement  "	//wareHouse wH = new wareHouse(textBox3.Text' textBox2.Text' textBox1.Text' textBox4.Text' textBox5.Text' textBox7.Text' textBox8.Text); " is 136.
Long Statement,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,button1_Click,The length of the statement  "	ZigbeeNode zn = new ZigbeeNode (this.txtNodeID.Text' this.txtLocation.Text' this.txtMaxTemp.Value.ToString ()' this.txtMinTemp.Value.ToString ()' this.txtMaxHumunity.Value.ToString ()' this.txtMinHumunity.Value.ToString ()); " is 224.
Long Statement,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The length of the statement  "			Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ())); " is 188.
Long Statement,httpHelper,HttpWebConnect,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\HttpDownloader.cs,TryRequest,The length of the statement  "		IAsyncResult result = (IAsyncResult)myHttpWebRequest.BeginGetResponse (new AsyncCallback (RespCallback)' myRequestState); " is 121.
Long Statement,httpHelper,HttpWebConnect,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\HttpDownloader.cs,RespCallback,The length of the statement  "		IAsyncResult asynchronousInputRead = responseStream.BeginRead (_myRequestState.BufferRead' 0' BUFFER_SIZE' new AsyncCallback (ReadCallBack)' _myRequestState); " is 158.
Long Statement,httpHelper,HttpWebConnect,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\HttpDownloader.cs,ReadCallBack,The length of the statement  "			IAsyncResult asynchronousResult = responseStream.BeginRead (_myRequestState.BufferRead' 0' BUFFER_SIZE' new AsyncCallback (ReadCallBack)' _myRequestState); " is 155.
Long Statement,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The length of the statement  "		PointF pt1 = new PointF (m_InnerRadius * (float)Math.Cos (ConvertDegreesToRadians (angle))' m_InnerRadius * (float)Math.Sin (ConvertDegreesToRadians (angle))); " is 159.
Long Statement,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The length of the statement  "		PointF pt2 = new PointF (m_OuterRadius * (float)Math.Cos (ConvertDegreesToRadians (angle))' m_OuterRadius * (float)Math.Sin (ConvertDegreesToRadians (angle))); " is 159.
Long Statement,UDPHelper,UDPServer,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\UDPServer.cs,startUDPListening,The length of the statement  "			serverSocket.BeginReceiveFrom (byteData' 0' byteData.Length' SocketFlags.None' ref epSender' new AsyncCallback (OnReceive)' epSender); " is 134.
Long Statement,UDPHelper,UDPServer,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\UDPServer.cs,OnReceive,The length of the statement  "		serverSocket.BeginReceiveFrom (byteData' 0' byteData.Length' SocketFlags.None' ref epSender' new AsyncCallback (OnReceive)' epSender); " is 134.
Empty Catch Block,zigbee_controler,frmControler,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmControler.cs,helper_RequestCompleted_getZigbeeNode,The method has an empty catch block.
Magic Number,zigbee_controler,frmControler,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmControler.cs,btnStartMonitoring_Click,The following statement contains a magic number: this.comport.BaudRate = 19200;  
Magic Number,zigbee_controler,frmSysConfig,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\frmSysConfig.cs,button1_Click,The following statement contains a magic number: UDPHelper.UDPServer.startUDPListening (12306);  
Magic Number,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,toolAmend_Click,The following statement contains a magic number: G_Int_status = 2;  
Magic Number,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,toolAmend_Click,The following statement contains a magic number: loadZigbeeNode (dgvZigbeeNodes.CurrentRow.Cells [2].Value.ToString ());  
Magic Number,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,dgvProductInfo_MouseDoubleClick,The following statement contains a magic number: loadZigbeeNode (dgvZigbeeNodes.CurrentRow.Cells [2].Value.ToString ());  
Magic Number,zigbee_controler,NodManagement,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\NodManagement.cs,toolSave_Click,The following statement contains a magic number: switch (G_Int_status) {  case 1:  	//下面是要执行的SQL语句  	addWarehouseInfo ();  	break;  case 2:  	updateUserInfo ();  	break;  default:  	break;  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: try {  	this.data_to_dispose += BytesToHexStringWithNospace (value);  	MatchCollection mc = Regex.Matches (data_to_dispose' @"[0-9a-fA-F]{44}FFFF");  	//依次添加到列表中  	foreach (Match m in mc) {  		string strCmd = m.ToString ();  		string strID = strCmd.Substring (0' 4);  		int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  		//使用节点的地址作为唯一标识  		string strNodeID = strCmd.Substring (4' 16);  		string strHumidity = strCmd.Substring (24' 4);  		int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  		string strTemp = strCmd.Substring (28' 4);  		int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  		Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  		if (this.eventZigInfo != null) {  			this.eventZigInfo (id' strNodeID' Humidity' temperature);  		}  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("zigbeeHelper Parse Exception -> {0}"' ex.Message));  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,zigbee_controler,ZigbeeHelper,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\zigbeeHelper.cs,Parse,The following statement contains a magic number: foreach (Match m in mc) {  	string strCmd = m.ToString ();  	string strID = strCmd.Substring (0' 4);  	int id = Int32.Parse (strID' NumberStyles.AllowHexSpecifier);  	//使用节点的地址作为唯一标识  	string strNodeID = strCmd.Substring (4' 16);  	string strHumidity = strCmd.Substring (24' 4);  	int Humidity = Int32.Parse (strHumidity' NumberStyles.AllowHexSpecifier);  	string strTemp = strCmd.Substring (28' 4);  	int temperature = Int32.Parse (strTemp' NumberStyles.AllowHexSpecifier);  	Debug.WriteLine (string.Format ("zigbeeHelper Parse -> id = {0}'nodeID = {1} Humidity = {2} temperature = {3} "' id.ToString ()' strNodeID' Humidity.ToString ()' temperature.ToString ()));  	if (this.eventZigInfo != null) {  		this.eventZigInfo (id' strNodeID' Humidity' temperature);  	}  }  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,MatrixCircularProgressControl,The following statement contains a magic number: this.StartAngle = 270;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,MatrixCircularProgressControl,The following statement contains a magic number: m_SpokesCount = 12;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,MatrixCircularProgressControl,The following statement contains a magic number: m_AlphaLowerLimit = 15;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The following statement contains a magic number: m_AngleIncrement = (360 / (float)m_SpokesCount);  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The following statement contains a magic number: m_AlphaChange = (int)((255 - m_AlphaLowerLimit) / m_SpokesCount);  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The following statement contains a magic number: m_CentrePt = new PointF (this.Width / 2' this.Height / 2);  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The following statement contains a magic number: m_CentrePt = new PointF (this.Width / 2' this.Height / 2);  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,CalculateSpokesPoints,The following statement contains a magic number: m_Pen.Width = (int)(width / 15);  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnTimerElapsed,The following statement contains a magic number: if (Rotation == Direction.CLOCKWISE) {  	m_StartAngle += m_AngleIncrement;  	if (m_StartAngle >= 360)  		m_StartAngle = 0;  }  else if (Rotation == Direction.ANTICLOCKWISE) {  	m_StartAngle -= m_AngleIncrement;  	if (m_StartAngle <= -360)  		m_StartAngle = 0;  }  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnTimerElapsed,The following statement contains a magic number: if (Rotation == Direction.CLOCKWISE) {  	m_StartAngle += m_AngleIncrement;  	if (m_StartAngle >= 360)  		m_StartAngle = 0;  }  else if (Rotation == Direction.ANTICLOCKWISE) {  	m_StartAngle -= m_AngleIncrement;  	if (m_StartAngle <= -360)  		m_StartAngle = 0;  }  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnTimerElapsed,The following statement contains a magic number: if (m_StartAngle >= 360)  	m_StartAngle = 0;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnTimerElapsed,The following statement contains a magic number: if (Rotation == Direction.ANTICLOCKWISE) {  	m_StartAngle -= m_AngleIncrement;  	if (m_StartAngle <= -360)  		m_StartAngle = 0;  }  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnTimerElapsed,The following statement contains a magic number: if (m_StartAngle <= -360)  	m_StartAngle = 0;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnPaint,The following statement contains a magic number: for (int i = 0; i < m_SpokesCount; i++) {  	m_Pen.Color = Color.FromArgb (alpha' this.TickColor);  	e.Graphics.DrawLine (m_Pen' m_Spokes [i].StartPoint' m_Spokes [i].EndPoint);  	alpha -= m_AlphaChange;  	if (alpha < m_AlphaLowerLimit)  		alpha = 255 - m_AlphaChange;  }  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnPaint,The following statement contains a magic number: if (alpha < m_AlphaLowerLimit)  	alpha = 255 - m_AlphaChange;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,OnPaint,The following statement contains a magic number: alpha = 255 - m_AlphaChange;  
Magic Number,LogisTechBase,MatrixCircularProgressControl,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\MatrixCircularProgressControl.cs,ConvertDegreesToRadians,The following statement contains a magic number: return ((Math.PI / (double)180) * degrees);  
Magic Number,UDPHelper,UDPServer,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\UDPServer.cs,startUDPListening,The following statement contains a magic number: try {  	if (serverSocket == null) {  		IPHostEntry ipHostInfo = Dns.GetHostEntry (Dns.GetHostName ());  		for (int i = 0; i < ipHostInfo.AddressList.Length; i++) {  			ipAddress = ipHostInfo.AddressList [i];  			if (ipAddress.AddressFamily == AddressFamily.InterNetwork) {  				break;  			}  			else {  				ipAddress = null;  			}  		}  		if (null == ipAddress) {  			return;  		}  		IPEndPoint ipEndPoint = new IPEndPoint (ipAddress' servPort);  		//We are using UDP sockets  		serverSocket = new Socket (AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);  		//IPAddress ip = IPAddress.Parse(servIP);  		//IPEndPoint ipEndPoint = new IPEndPoint(ip' servPort);  		//                IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Any' port);  		//Bind this address to the server  		serverSocket.Bind (ipEndPoint);  		//防止客户端强行中断造成的异常  		long IOC_IN = 0x80000000;  		long IOC_VENDOR = 0x18000000;  		long SIO_UDP_CONNRESET = IOC_IN | IOC_VENDOR | 12;  		byte[] optionInValue =  {  			Convert.ToByte (false)  		};  		byte[] optionOutValue = new byte[4];  		serverSocket.IOControl ((int)SIO_UDP_CONNRESET' optionInValue' optionOutValue);  		IPEndPoint ipeSender = new IPEndPoint (IPAddress.Any' 0);  		//The epSender identifies the incoming clients  		EndPoint epSender = (EndPoint)ipeSender;  		//Start receiving data  		serverSocket.BeginReceiveFrom (byteData' 0' byteData.Length' SocketFlags.None' ref epSender' new AsyncCallback (OnReceive)' epSender);  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("UDPServer.startUDPListening  -> error = {0}"' ex.Message));  }  
Magic Number,UDPHelper,UDPServer,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\UDPServer.cs,startUDPListening,The following statement contains a magic number: try {  	if (serverSocket == null) {  		IPHostEntry ipHostInfo = Dns.GetHostEntry (Dns.GetHostName ());  		for (int i = 0; i < ipHostInfo.AddressList.Length; i++) {  			ipAddress = ipHostInfo.AddressList [i];  			if (ipAddress.AddressFamily == AddressFamily.InterNetwork) {  				break;  			}  			else {  				ipAddress = null;  			}  		}  		if (null == ipAddress) {  			return;  		}  		IPEndPoint ipEndPoint = new IPEndPoint (ipAddress' servPort);  		//We are using UDP sockets  		serverSocket = new Socket (AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);  		//IPAddress ip = IPAddress.Parse(servIP);  		//IPEndPoint ipEndPoint = new IPEndPoint(ip' servPort);  		//                IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Any' port);  		//Bind this address to the server  		serverSocket.Bind (ipEndPoint);  		//防止客户端强行中断造成的异常  		long IOC_IN = 0x80000000;  		long IOC_VENDOR = 0x18000000;  		long SIO_UDP_CONNRESET = IOC_IN | IOC_VENDOR | 12;  		byte[] optionInValue =  {  			Convert.ToByte (false)  		};  		byte[] optionOutValue = new byte[4];  		serverSocket.IOControl ((int)SIO_UDP_CONNRESET' optionInValue' optionOutValue);  		IPEndPoint ipeSender = new IPEndPoint (IPAddress.Any' 0);  		//The epSender identifies the incoming clients  		EndPoint epSender = (EndPoint)ipeSender;  		//Start receiving data  		serverSocket.BeginReceiveFrom (byteData' 0' byteData.Length' SocketFlags.None' ref epSender' new AsyncCallback (OnReceive)' epSender);  	}  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("UDPServer.startUDPListening  -> error = {0}"' ex.Message));  }  
Magic Number,UDPHelper,UDPServer,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\UDPServer.cs,startUDPListening,The following statement contains a magic number: if (serverSocket == null) {  	IPHostEntry ipHostInfo = Dns.GetHostEntry (Dns.GetHostName ());  	for (int i = 0; i < ipHostInfo.AddressList.Length; i++) {  		ipAddress = ipHostInfo.AddressList [i];  		if (ipAddress.AddressFamily == AddressFamily.InterNetwork) {  			break;  		}  		else {  			ipAddress = null;  		}  	}  	if (null == ipAddress) {  		return;  	}  	IPEndPoint ipEndPoint = new IPEndPoint (ipAddress' servPort);  	//We are using UDP sockets  	serverSocket = new Socket (AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);  	//IPAddress ip = IPAddress.Parse(servIP);  	//IPEndPoint ipEndPoint = new IPEndPoint(ip' servPort);  	//                IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Any' port);  	//Bind this address to the server  	serverSocket.Bind (ipEndPoint);  	//防止客户端强行中断造成的异常  	long IOC_IN = 0x80000000;  	long IOC_VENDOR = 0x18000000;  	long SIO_UDP_CONNRESET = IOC_IN | IOC_VENDOR | 12;  	byte[] optionInValue =  {  		Convert.ToByte (false)  	};  	byte[] optionOutValue = new byte[4];  	serverSocket.IOControl ((int)SIO_UDP_CONNRESET' optionInValue' optionOutValue);  	IPEndPoint ipeSender = new IPEndPoint (IPAddress.Any' 0);  	//The epSender identifies the incoming clients  	EndPoint epSender = (EndPoint)ipeSender;  	//Start receiving data  	serverSocket.BeginReceiveFrom (byteData' 0' byteData.Length' SocketFlags.None' ref epSender' new AsyncCallback (OnReceive)' epSender);  }  
Magic Number,UDPHelper,UDPServer,C:\repos\ssor_logisBaseTrainingDemos\仓库监控系统\zigbee_controler\UDPServer.cs,startUDPListening,The following statement contains a magic number: if (serverSocket == null) {  	IPHostEntry ipHostInfo = Dns.GetHostEntry (Dns.GetHostName ());  	for (int i = 0; i < ipHostInfo.AddressList.Length; i++) {  		ipAddress = ipHostInfo.AddressList [i];  		if (ipAddress.AddressFamily == AddressFamily.InterNetwork) {  			break;  		}  		else {  			ipAddress = null;  		}  	}  	if (null == ipAddress) {  		return;  	}  	IPEndPoint ipEndPoint = new IPEndPoint (ipAddress' servPort);  	//We are using UDP sockets  	serverSocket = new Socket (AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);  	//IPAddress ip = IPAddress.Parse(servIP);  	//IPEndPoint ipEndPoint = new IPEndPoint(ip' servPort);  	//                IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Any' port);  	//Bind this address to the server  	serverSocket.Bind (ipEndPoint);  	//防止客户端强行中断造成的异常  	long IOC_IN = 0x80000000;  	long IOC_VENDOR = 0x18000000;  	long SIO_UDP_CONNRESET = IOC_IN | IOC_VENDOR | 12;  	byte[] optionInValue =  {  		Convert.ToByte (false)  	};  	byte[] optionOutValue = new byte[4];  	serverSocket.IOControl ((int)SIO_UDP_CONNRESET' optionInValue' optionOutValue);  	IPEndPoint ipeSender = new IPEndPoint (IPAddress.Any' 0);  	//The epSender identifies the incoming clients  	EndPoint epSender = (EndPoint)ipeSender;  	//Start receiving data  	serverSocket.BeginReceiveFrom (byteData' 0' byteData.Length' SocketFlags.None' ref epSender' new AsyncCallback (OnReceive)' epSender);  }  
