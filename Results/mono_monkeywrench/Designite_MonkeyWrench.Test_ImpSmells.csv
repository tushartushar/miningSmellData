Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonkeyWrench.Test,Runner,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Runner.cs,Run,The method has 111 lines of code.
Complex Method,MonkeyWrench.Test,Runner,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Runner.cs,Run,Cyclomatic complexity of the method is 16
Long Parameter List,MonkeyWrench.Test,GitTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\GitTest.cs,Commit,The method has 5 parameters. Parameters: filename' contents' commit_msg' author' email
Long Parameter List,MonkeyWrench.Test,TestBase,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Helpers.cs,Execute,The method has 6 parameters. Parameters: workingdir' process' timeout' stdout' stderr' arguments
Long Parameter List,MonkeyWrench.Test,TestBase,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Helpers.cs,Execute,The method has 6 parameters. Parameters: workingdir' process' timeout' stdout' stderr' arguments
Long Parameter List,MonkeyWrench.Test,SvnTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\SvnTest.cs,Commit,The method has 5 parameters. Parameters: filename' contents' commit_msg' author' email
Long Parameter List,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,Commit,The method has 5 parameters. Parameters: filename' contents' commit_msg' author' email
Long Statement,MonkeyWrench.Test,Check,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Attributes.cs,AreEqual,The length of the statement  "					Runner.Assertions.Add (new AssertException ("Expected {0}'{1}'{0} (length {3})' got {0}'{2}'{0} (length {4}). Diff index: {5} (Expected: '{6}'' got: '{7}')"'  " is 157.
Long Statement,MonkeyWrench.Test,Check,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Attributes.cs,AreEqual,The length of the statement  "						Environment.NewLine' expected' actual' e_len' a_len' diff_idx' e_len >= diff_idx ? ((int) expected [diff_idx]).ToString () : "N/A"' a_len >= diff_idx ? ((int) actual [diff_idx]).ToString () : "N/A")); " is 200.
Long Statement,MonkeyWrench.Test,Check,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Attributes.cs,AreNotEqual,The length of the statement  "				Runner.Assertions.Add (new AssertException ("Got equal values' expected different values ('{0}' vs '{1}'' or {3} ticks vs {4} ticks): {2}"' a' b' message' a.Ticks' b.Ticks)); " is 174.
Long Statement,MonkeyWrench.Test,Database,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Database.cs,Create,The length of the statement  "			TestBase.Execute (Runner.TemporaryTestDirectory' Path.Combine (Runner.SourceDirectory' Path.Combine ("scripts"' "dbcontrol.sh"))' TimeSpan.FromMinutes (5)' stdout' stderr' "create"); " is 182.
Long Statement,MonkeyWrench.Test,Database,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Database.cs,Stop,The length of the statement  "			TestBase.Execute (Runner.TemporaryTestDirectory' Path.Combine (Runner.SourceDirectory' Path.Combine ("scripts"' "dbcontrol.sh"))' "stop"); " is 138.
Long Statement,MonkeyWrench.Test,GitTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\GitTest.cs,CommitInternalWithMessageFile,The length of the statement  "			Execute (GetTestRepositoryPath' "git"' "commit"' "-F"' commit_msg_filename' "--author=" + author + " <" + email + ">" ' "--quiet"' "--cleanup=verbatim"); " is 153.
Long Statement,MonkeyWrench.Test,Runner,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Runner.cs,StartXsp,The length of the statement  "					p.StartInfo.Arguments = string.Format ("--port 8123 --root {0} --applications /WebServices:{0}/MonkeyWrench.Web.WebService/'/:{0}/MonkeyWrench.Web.UI --nonstop"' Runner.SourceDirectory); " is 186.
Long Statement,MonkeyWrench.Test,Runner,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Runner.cs,Main,The length of the statement  "</MonkeyWrench>"' TEST_DATABASE_PORT' TEST_DATA_DIR' TEST_DATABASE_DIR' Path.Combine (TemporaryTestDirectory' "MonkeyWrench.Test.log"))); " is 137.
Long Statement,MonkeyWrench.Test,Runner,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Runner.cs,Run,The length of the statement  "				if (!string.IsNullOrEmpty (filter_to_class) && !string.Equals (type.Name' filter_to_class) && !string.Equals (type.FullName' filter_to_class)) { " is 144.
Long Statement,MonkeyWrench.Test,SvnTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\SvnTest.cs,Commit,The length of the statement  "			// yay for platform independence' Directory.Delete throws an UnauthorizedException because some directories are read-only " is 121.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "INSERT INTO Lane (lane' source_control' repository' min_revision' max_revision) VALUES ('scheduler-test'' '{1}'' 'file://{0}'' ''' ''); " is 135.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "INSERT INTO HostLane (host_id' lane_id' enabled) VALUES ((SELECT id FROM Host WHERE host = 'test')' (SELECT id FROM Lane WHERE lane = 'scheduler-test')' true); " is 159.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "INSERT INTO Command (lane_id' command' sequence) VALUES ((SELECT id FROM Lane WHERE lane = 'scheduler-test')' 'test.sh'' 0); " is 124.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "				cmd.CommandText = "SELECT * FROM RevisionWork INNER JOIN Revision ON Revision.id = RevisionWork.revision_id ORDER BY Revision.date;"; " is 133.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "				cmd.CommandText = "SELECT * FROM Work INNER JOIN RevisionWork ON RevisionWork.id = Work.revisionwork_id INNER JOIN Revision ON Revision.id = RevisionWork.revision_id ORDER BY Revision.date;"; " is 191.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "					Check.AreNotEqual ((DateTime) revision.Rows [i] ["date"]' (DateTime) revision.Rows [j] ["date"]' "Rows" + i.ToString () + "/" + j.ToString ()); " is 143.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "				CheckFileContents ((int?) revision.Rows [i] ["log_file_id"]' "Commit message #" + i.ToString ()' Commits [i].Message' true /* I couldn't find a way to make git return the exact same log message as what was committed' it does whitespace transformations on it */); " is 262.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "				Check.AreEqual (false' (bool) revisionwork.Rows [i] ["completed"]' "RevisionWork.Rows[" + i.ToString () + "].completed"); " is 121.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "				Check.AreEqual (new DateTime (2000' 1' 1)' (DateTime) revisionwork.Rows [i] ["lock_expires"]' "RevisionWork.Rows[" + i.ToString () + "].lock_expires"); " is 151.
Long Statement,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The length of the statement  "				Check.AreEqual (new DateTime (2000' 1' 1)' (DateTime) revisionwork.Rows [i] ["endtime"]' "RevisionWork.Rows[" + i.ToString () + "].endtime"); " is 141.
Magic Number,MonkeyWrench.Test,Database,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Database.cs,Create,The following statement contains a magic number: TestBase.Execute (Runner.TemporaryTestDirectory' Path.Combine (Runner.SourceDirectory' Path.Combine ("scripts"' "dbcontrol.sh"))' TimeSpan.FromMinutes (5)' stdout' stderr' "create");
Magic Number,MonkeyWrench.Test,Runner,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\Runner.cs,Main,The following statement contains a magic number: return 2;
Magic Number,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The following statement contains a magic number: Check.AreEqual (new DateTime (2000' 1' 1)' (DateTime) revisionwork.Rows [i] ["lock_expires"]' "RevisionWork.Rows[" + i.ToString () + "].lock_expires");
Magic Number,MonkeyWrench.Test,VCTest,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench.Test\VCTest.cs,SchedulerTest,The following statement contains a magic number: Check.AreEqual (new DateTime (2000' 1' 1)' (DateTime) revisionwork.Rows [i] ["endtime"]' "RevisionWork.Rows[" + i.ToString () + "].endtime");
