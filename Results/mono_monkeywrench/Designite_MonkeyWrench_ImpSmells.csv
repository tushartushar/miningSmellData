Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The method has 143 lines of code.
Complex Method,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,Cyclomatic complexity of the method is 9
Complex Method,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GlobToRegExp,Cyclomatic complexity of the method is 10
Complex Method,MonkeyWrench,Lock,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Lock.cs,Create,Cyclomatic complexity of the method is 10
Complex Method,MonkeyWrench,IProcessHelper,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelper.cs,GetChildrenImplPS,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,Option,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,WriteOptionDescriptions,Cyclomatic complexity of the method is 10
Long Parameter List,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,ShowHelp,The length of the statement  "			Console.WriteLine ("{0} usage is: {0} [options]"' Path.GetFileName (System.Reflection.Assembly.GetEntryAssembly ().Location));" is 126.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				ForceFullUpdate = Boolean.Parse (xml.SelectSingleNode ("/MonkeyWrench/Configuration/ForceFullUpdate").GetNodeValue (ForceFullUpdate.ToString ()));" is 146.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				WebServicePassword = xml.SelectSingleNode ("/MonkeyWrench/Configuration/WebServicePassword").GetNodeValue (WebServicePassword);" is 127.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				DatabasePort = Int32.Parse(xml.SelectSingleNode ("/MonkeyWrench/Configuration/DatabasePort").GetNodeValue (DatabasePort.ToString ()));" is 134.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				DatabasePassword = xml.SelectSingleNode ("/MonkeyWrench/Configuration/DatabasePassword").GetNodeValue (DatabasePassword);" is 121.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				StoreFilesInDB = Boolean.Parse (xml.SelectSingleNode ("MonkeyWrench/Configuration/StoreFilesInDb").GetNodeValue (StoreFilesInDB.ToString ()));" is 142.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				ConnectionRetryDuration = int.Parse (xml.SelectSingleNode ("MonkeyWrench/Configuration/ConnectionRetryDuration").GetNodeValue (ConnectionRetryDuration.ToString ()));" is 165.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				LockingAlgorithm = xml.SelectSingleNode ("MonkeyWrench/Configuration/LockingAlgorithm").GetNodeValue (LockingAlgorithm);" is 120.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				SchedulerAccount = xml.SelectSingleNode ("MonkeyWrench/Configuration/SchedulerAccount").GetNodeValue (SchedulerAccount);" is 120.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				SchedulerPassword = xml.SelectSingleNode ("MonkeyWrench/Configuration/SchedulerPassword").GetNodeValue (SchedulerPassword);" is 123.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				ChildProcessAlgorithm = xml.SelectSingleNode ("MonkeyWrench/Configuration/ChildProcessAlgorithm").GetNodeValue (ChildProcessAlgorithm);" is 135.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				AllowedCommitReporterIPs = xml.SelectSingleNode ("MonkeyWrench/Configuration/AllowedCommitReporterIPs").GetNodeValue (AllowedCommitReporterIPs);" is 144.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				UploadPort = int.Parse (xml.SelectSingleNode ("MonkeyWrench/Configuration/UploadPort").GetNodeValue (UploadPort.ToString ()));" is 126.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				AllowAnonymousAccess = bool.Parse(xml.SelectSingleNode("MonkeyWrench/Configuration/AllowAnonymousAccess").GetNodeValue(AllowAnonymousAccess.ToString()));" is 153.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				AutomaticScheduler = Boolean.Parse (xml.SelectSingleNode ("MonkeyWrench/Configuration/AutomaticScheduler").GetNodeValue (AutomaticScheduler.ToString ()));" is 154.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				AutomaticSchedulerInterval = int.Parse (xml.SelectSingleNode ("MonkeyWrench/Configuration/AutomaticSchedulerInterval").GetNodeValue (AutomaticSchedulerInterval.ToString ()));" is 174.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				AllowPasswordLogin = bool.Parse (xml.SelectSingleNode ("MonkeyWrench/Configuration/AllowPasswordLogin").GetNodeValue (AllowPasswordLogin.ToString ()));" is 151.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				ProtectedMessage = xml.SelectSingleNode ("MonkeyWrench/Configuration/ProtectedMessage").GetNodeValue (ProtectedMessage);" is 120.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				OauthClientSecret = xml.SelectSingleNode ("MonkeyWrench/Configuration/OauthClientSecret").GetNodeValue (OauthClientSecret);" is 123.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				GitHubOauthClientId = xml.SelectSingleNode("MonkeyWrench/Configuration/GitHubOauthClientId").GetNodeValue(GitHubOauthClientId);" is 127.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				GitHubOauthClientSecret = xml.SelectSingleNode("MonkeyWrench/Configuration/GitHubOauthClientSecret").GetNodeValue(GitHubOauthClientSecret);" is 139.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "				GitHubOauthRedirect = xml.SelectSingleNode("MonkeyWrench/Configuration/GitHubOauthRedirect").GetNodeValue(GitHubOauthRedirect);" is 127.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "						if (!LoadConfiguration (arguments' Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments)' "MonkeyWrench.xml"))) {" is 139.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,LoadConfiguration,The length of the statement  "						if (!LoadConfiguration (arguments' Path.Combine (Environment.GetEnvironmentVariable ("HOME")' Path.Combine (Path.Combine (".config"' "MonkeyWrench")' "MonkeyWrench.xml")))) {" is 174.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,GetDataRevisionDir,The length of the statement  "			return Path.Combine (Path.Combine (RevDataDirectory' lane_id.ToString ())' revision.Length > 8 ? revision.Substring (0' 8) : revision);" is 135.
Long Statement,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,GetSchedulerRepositoryCacheDirectory,The length of the statement  "			return Path.Combine (Path.Combine (DataDirectory' "SchedulerCache")' repository.Replace (':'' '_').Replace ('/'' '_').Replace ('\\'' '_'));" is 139.
Long Statement,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GZCompressGZ,The length of the statement  "				Console.WriteLine ("GZCompress There was an exception while trying to compress the file '{0}': {1}\n{2}"' filename' ex.Message' ex.StackTrace);" is 143.
Long Statement,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,TryDeleteDirectoryRecursive,The length of the statement  "				log.ErrorFormat ("TryDeleteDirectoryRecursive ({0}): Could not delete directory recursively: {1}"' directory' ex.Message);" is 122.
Long Statement,MonkeyWrench,JobWindows,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\JobWindows.cs,Start,The length of the statement  "			string mutex_name = @"Local\MonkeyWrench-suspended-mutex-" + Process.GetCurrentProcess ().Id.ToString () + "-" + Interlocked.Increment (ref mutex_counter).ToString (); " is 167.
Long Statement,MonkeyWrench,Lock,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Lock.cs,Create,The length of the statement  "					result.file = File.Open (Path.Combine (Path.GetTempPath ()' name + ".lock")' FileMode.Create' FileAccess.ReadWrite' FileShare.Read);" is 132.
Long Statement,MonkeyWrench,IProcessHelper,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelper.cs,GetChildrenImplPgrep,The length of the statement  "					foreach (string line in children.Split (new char [] { '\n'' '\r'' ' '' '\t' }' StringSplitOptions.RemoveEmptyEntries)) {" is 120.
Long Statement,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,RenderStackTraceWithGdb,The length of the statement  "			log.WriteLine (string.Format ("\n * Fetching stack trace for process {0} (name '{1}') * \n"' pid' GetProcessName (pid)));" is 121.
Long Statement,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,RenderStackTraceWithGdb,The length of the statement  "				gdb.StartInfo.Arguments = string.Format ("-ex attach {0} --ex \"info target\" --ex \"info threads\" --ex \"thread apply all bt\" --batch"' pid);" is 144.
Long Statement,MonkeyWrench,ProcessHelperMac,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperMac.cs,RenderStackTraceWithGdb,The length of the statement  "			log.WriteLine (string.Format ("\n * Fetching stack trace for process {0} (name '{1}') * \n"' pid' GetProcessName (pid)));" is 121.
Long Statement,MonkeyWrench,ProcessHelperMac,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperMac.cs,RenderStackTraceWithGdb,The length of the statement  "							throw new ApplicationException (string.Format ("The 'gdb' process didn't exit in 30 seconds."' dbg.StartInfo.FileName));" is 120.
Long Statement,MonkeyWrench,ProcessReader,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessReader.cs,Setup,The length of the statement  "						if (timestamp && !line.StartsWith("@MonkeyWrench:") && !line.StartsWith("@Moonbuilder:")) { line = "[" + DateTime.Now.ToString("h:mm:ss") + "] " + line; }" is 154.
Long Statement,MonkeyWrench,ProcessReader,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessReader.cs,Setup,The length of the statement  "						if (timestamp && !line.StartsWith("@MonkeyWrench:") && !line.StartsWith("@Moonbuilder:")) { line = "[" + DateTime.Now.ToString("h:mm:ss") + "] " + line; }" is 154.
Complex Conditional,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') && 					this.options.TryGetValue (n.Substring (0' n.Length-1)' out p)"  is complex.
Empty Catch Block,MonkeyWrench,Async,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Async.cs,Execute,The method has an empty catch block.
Empty Catch Block,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,TryDeleteFile,The method has an empty catch block.
Empty Catch Block,MonkeyWrench,ProcessHelperMac,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperMac.cs,RenderStackTraceWithGdb,The method has an empty catch block.
Magic Number,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,ExecuteSuspendedProcessHack,The following statement contains a magic number: arguments.Length < 3 || arguments [0] != "/respawn"
Magic Number,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,ExecuteSuspendedProcessHack,The following statement contains a magic number: string respawn_filename = arguments [2];
Magic Number,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,ExecuteSuspendedProcessHack,The following statement contains a magic number: i > 3
Magic Number,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,GetDataRevisionDir,The following statement contains a magic number: return Path.Combine (Path.Combine (RevDataDirectory' lane_id.ToString ())' revision.Length > 8 ? revision.Substring (0' 8) : revision);
Magic Number,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,GetDataRevisionDir,The following statement contains a magic number: return Path.Combine (Path.Combine (RevDataDirectory' lane_id.ToString ())' revision.Length > 8 ? revision.Substring (0' 8) : revision);
Magic Number,MonkeyWrench,Configuration,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Configuration.cs,GetPlatform,The following statement contains a magic number: switch (Environment.OSVersion.Platform) { 				case PlatformID.Win32NT: 				case PlatformID.Win32S: 				case PlatformID.Win32Windows: 				case PlatformID.WinCE: 					return MonkeyWrench.Platform.Windows; 				case PlatformID.MacOSX: 					return MonkeyWrench.Platform.Mac; 				case PlatformID.Unix: 				case (PlatformID) 128: 				default: 					// from here: http://stackoverflow.com/q/10138040/183422 					// Well' there are chances MacOSX is reported as Unix instead of MacOSX. 					// Instead of platform check' we'll do a feature checks (Mac specific root folders) 					if (Directory.Exists("/Applications") 					    & Directory.Exists("/System") 					    & Directory.Exists("/Users") 					    & Directory.Exists("/Volumes")) 						return MonkeyWrench.Platform.Mac; 					else 						return MonkeyWrench.Platform.Linux; 				}
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GZCompressGZ,The following statement contains a magic number: !p.WaitForExit (1000 * 60 /* 1 minute*/)
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GZCompressGZ,The following statement contains a magic number: !p.WaitForExit (1000 * 60 /* 1 minute*/)
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GZUncompress,The following statement contains a magic number: byte [] buffer = new byte [1024];
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GZCompressManaged,The following statement contains a magic number: byte [] buffer = new byte [1024];
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,GlobToRegExp,The following statement contains a magic number: switch (carr [pos]) { 				case '?': 					sb.Append ('.'); 					break; 				case '*': 					sb.Append (".*"); 					break; 				case '#': 					if (bDigit) { 						sb.Append (@"\d{1}"); 					} else { 						sb.Append (@"^\d{1}"); 						bDigit = true; 					} 					break; 				case '[': 					StringBuilder gsb = ConvertGroupSubexpression (carr' ref pos); 					if (gsb.Length > 2) { 						sb.Append (gsb); 					} 					break; 				case '.': 					sb.Append ("[.]"); 					break; 				default: 					sb.Append (carr [pos]); 					break; 				}
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,CreateFilename,The following statement contains a magic number: path = Path.Combine (path' md5.Substring (0' 2));
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,CreateFilename,The following statement contains a magic number: path = Path.Combine (path' md5.Substring (2' 2));
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,CreateFilename,The following statement contains a magic number: path = Path.Combine (path' md5.Substring (2' 2));
Magic Number,MonkeyWrench,FileUtilities,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\FileUtilities.cs,MD5BytesToString,The following statement contains a magic number: StringBuilder result = new StringBuilder (16);
Magic Number,MonkeyWrench,IProcessHelper,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelper.cs,GetChildrenImplPS,The following statement contains a magic number: !ps.WaitForExit (1000)
Magic Number,MonkeyWrench,IProcessHelper,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelper.cs,GetChildrenImplPgrep,The following statement contains a magic number: !pgrep.WaitForExit (1000)
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,PrintProcessesImplPS,The following statement contains a magic number: !ps.WaitForExit (1000 * 30 /* 30 seconds */)
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,PrintProcessesImplPS,The following statement contains a magic number: !ps.WaitForExit (1000 * 30 /* 30 seconds */)
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,RenderStackTraceWithGdb,The following statement contains a magic number: !gdb.WaitForExit (1000 * 30 /* 30 seconds */)
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,RenderStackTraceWithGdb,The following statement contains a magic number: !gdb.WaitForExit (1000 * 30 /* 30 seconds */)
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,KillImpl,The following statement contains a magic number: log.WriteLine (string.Format ("\n * Killing the processes {0} * "' kill.StartInfo.Arguments.Substring (3)));
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,KillImpl,The following statement contains a magic number: !kill.WaitForExit (1000 * 15 /* 15 seconds */)
Magic Number,MonkeyWrench,ProcessHelperLinux,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperLinux.cs,KillImpl,The following statement contains a magic number: !kill.WaitForExit (1000 * 15 /* 15 seconds */)
Magic Number,MonkeyWrench,ProcessHelperMac,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperMac.cs,RenderStackTraceWithGdb,The following statement contains a magic number: !dbg.WaitForExit (1000 * 30 /* 30 seconds */)
Magic Number,MonkeyWrench,ProcessHelperMac,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessHelperMac.cs,RenderStackTraceWithGdb,The following statement contains a magic number: !dbg.WaitForExit (1000 * 30 /* 30 seconds */)
Magic Number,MonkeyWrench,ProcessReader,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessReader.cs,Join,The following statement contains a magic number: !stdout_thread.Join (TimeSpan.FromSeconds (15))
Magic Number,MonkeyWrench,ProcessReader,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\ProcessReader.cs,Join,The following statement contains a magic number: !stderr_thread.Join (TimeSpan.FromSeconds (15))
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2' (v) => action (v [0]' v [1]));
Missing Default,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_monkeywrench\MonkeyWrench\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) { 					case OptionValueType.None: 						c.OptionValues.Add (n); 						c.Option.Invoke (c); 						break; 					case OptionValueType.Optional: 					case OptionValueType.Required:  						ParseValue (v' c); 						break; 				}
