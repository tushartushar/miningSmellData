Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_namespace_and_assembly,The length of the statement  "            var events = this.sut.Query(new QueryCriteria { AssemblyNames = { "B" }' Namespaces = { "AnotherNamespace" } }).ToList(); " is 121.
Long Statement,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_namespace_and_assembly2,The length of the statement  "            var events = this.sut.Query(new QueryCriteria { AssemblyNames = { "A" }' Namespaces = { "AnotherNamespace" } }).ToList(); " is 121.
Long Statement,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_full_names,The length of the statement  "            var events = this.sut.Query(new QueryCriteria { FullNames = { "Namespace.EventA"' "AnotherNamespace.EventC" } }).ToList(); " is 122.
Long Statement,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_type_names_and_assembly,The length of the statement  "            var events = this.sut.Query(new QueryCriteria { AssemblyNames = { "B" }' TypeNames = { "EventB"' "EventC" } }).ToList(); " is 120.
Long Statement,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_source_ids,The length of the statement  "            var events = this.sut.Query(new QueryCriteria { SourceIds = { eventA.SourceId.ToString()' eventC.SourceId.ToString() } }).ToList(); " is 131.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_event_then_calls_handler,The length of the statement  "            var processor = new EventProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 133.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_event_then_calls_handler,The length of the statement  "            var bus = new EventBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 125.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_event_then_calls_handler_with_envelope,The length of the statement  "            var processor = new EventProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 133.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_event_then_calls_handler_with_envelope,The length of the statement  "            var bus = new EventBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 125.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_event_published_with_message_and_correlation_ids_then_calls_handler_with_envelope,The length of the statement  "            var processor = new EventProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 133.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_event_published_with_message_and_correlation_ids_then_calls_handler_with_envelope,The length of the statement  "            var bus = new EventBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 125.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_not_registered_event_then_ignores,The length of the statement  "            var bus = new EventBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 125.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_sending_multiple_events_then_calls_all_handlers,The length of the statement  "            var processor = new EventProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 133.
Long Statement,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_sending_multiple_events_then_calls_all_handlers,The length of the statement  "            var bus = new EventBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 125.
Long Statement,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_getting_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_get_all_events_for_partition_as_pending,The length of the statement  "            Assert.InRange(DateTime.Parse(pending[0].CreationDate' null' DateTimeStyles.RoundtripKind)' DateTime.UtcNow.AddSeconds(-10)' DateTime.UtcNow); " is 142.
Long Statement,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_processing_throws_then_sends_message_to_dead_letter,The length of the statement  "                .Setup("ProcessMessage"' ItExpr.IsAny<string>()' ItExpr.IsAny<object>()' ItExpr.IsAny<string>()' ItExpr.IsAny<string>()) " is 120.
Long Statement,Infrastructure.Azure,BusSettingsExtensions,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessagingSettingsExtensions.cs,CreateMessageReceiver,The length of the statement  "            var serviceUri = ServiceBusEnvironment.CreateServiceUri(settings.ServiceUriScheme' settings.ServiceNamespace' settings.ServicePath); " is 132.
Long Statement,Infrastructure.Azure,BusSettingsExtensions,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessagingSettingsExtensions.cs,CreateSubscriptionClient,The length of the statement  "            var serviceUri = ServiceBusEnvironment.CreateServiceUri(settings.ServiceUriScheme' settings.ServiceNamespace' settings.ServicePath); " is 132.
Long Statement,Infrastructure.Azure,BusSettingsExtensions,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessagingSettingsExtensions.cs,CreateTopicClient,The length of the statement  "            var serviceUri = ServiceBusEnvironment.CreateServiceUri(settings.ServiceUriScheme' settings.ServiceNamespace' settings.ServicePath); " is 132.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_receiving_command_then_calls_handler,The length of the statement  "            var processor = new CommandProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 135.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_receiving_command_then_calls_handler,The length of the statement  "            var bus = new CommandBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 127.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_same_handler_handles_multiple_commands_then_gets_called_for_all,The length of the statement  "            var processor = new CommandProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 135.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_same_handler_handles_multiple_commands_then_gets_called_for_all,The length of the statement  "            var bus = new CommandBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 127.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_receiving_not_registered_command_then_ignores,The length of the statement  "            var bus = new CommandBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 127.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_sending_multiple_commands_then_calls_all_handlers,The length of the statement  "            var processor = new CommandProcessor(new SubscriptionReceiver(this.Settings' this.Topic' this.Subscription)' new JsonTextSerializer()); " is 135.
Long Statement,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_sending_multiple_commands_then_calls_all_handlers,The length of the statement  "            var bus = new CommandBus(new TopicSender(this.Settings' this.Topic)' new StandardMetadataProvider()' new JsonTextSerializer()); " is 127.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_initialized_then_creates_subscriptions_with_filters,The length of the statement  "                        Description = this.retryPolicy.ExecuteAction(() => this.namespaceManager.GetSubscription(tuple.Topic.Path' tuple.Subscription.Name))' " is 133.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_initialized_then_creates_subscriptions_with_filters,The length of the statement  "                        Rule = this.retryPolicy.ExecuteAction(() => this.namespaceManager.GetRules(tuple.Topic.Path' tuple.Subscription.Name).FirstOrDefault(x => x.Name == "Custom")) " is 158.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_initialized_then_creates_subscriptions_with_filters,The length of the statement  "                || (!string.IsNullOrWhiteSpace(tuple.Subscription.SqlFilter) && ((SqlFilter)tuple.Rule.Filter).SqlExpression == tuple.Subscription.SqlFilter))); " is 144.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_initialized_then_subscriptions_updates_existing_filters,The length of the statement  "            var rule = this.retryPolicy.ExecuteAction(() => this.namespaceManager.GetRules(topic.Path' subscription.Name).Single()); " is 120.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_creating_processor_with_uninitialized_config_then_throws,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => this.sut.CreateEventProcessor("all"' Mock.Of<IEventHandler>()' Mock.Of<ITextSerializer>())); " is 139.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_creating_processor_but_no_event_bus_topic_then_throws,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => this.sut.CreateEventProcessor("all"' Mock.Of<IEventHandler>()' Mock.Of<ITextSerializer>())); " is 141.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_creating_processor_for_unconfigured_subscription_then_throws,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => this.sut.CreateEventProcessor("a"' Mock.Of<IEventHandler>()' Mock.Of<ITextSerializer>())); " is 139.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_creating_processor_then_receives_from_specified_subscription,The length of the statement  "            var sender = new TopicSender(this.settings' this.settings.Topics.First(t => t.Path.StartsWith("conference/events")).Path); " is 122.
Long Statement,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,runs_migration_support_actions,The length of the statement  "            var rule = this.retryPolicy.ExecuteAction(() => this.namespaceManager.GetRules(topic.Path' subscription.Name).Single()); " is 120.
Long Statement,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_batch_async_then_succeeds,The length of the statement  "            sut.SendAsync(new Func<BrokeredMessage>[] { () => new BrokeredMessage(payload1)' () => new BrokeredMessage(payload2) }); " is 120.
Empty Catch Block,Infrastructure.Azure,BusSettingsExtensions,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessagingSettingsExtensions.cs,TryDeleteSubscription,The method has an empty catch block.
Empty Catch Block,Infrastructure.Azure,BusSettingsExtensions,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessagingSettingsExtensions.cs,TryDeleteTopic,The method has an empty catch block.
Empty Catch Block,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,Infrastructure.Azure.IntegrationTests.Storage.BlobStorageFixture,given_blob_storage,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BlobStorage\CloudBlobStorageFixture.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Infrastructure.Azure.IntegrationTests.Storage.BlobStorageFixture,given_blob_storage_with_existing_root_container,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BlobStorage\CloudBlobStorageFixture.cs,Dispose,The method has an empty catch block.
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: this.startEnqueueTime = new DateTime(2012' 06' 30' 23' 59' 0' DateTimeKind.Utc);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: this.startEnqueueTime = new DateTime(2012' 06' 30' 23' 59' 0' DateTimeKind.Utc);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: this.startEnqueueTime = new DateTime(2012' 06' 30' 23' 59' 0' DateTimeKind.Utc);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: this.startEnqueueTime = new DateTime(2012' 06' 30' 23' 59' 0' DateTimeKind.Utc);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: this.startEnqueueTime = new DateTime(2012' 06' 30' 23' 59' 0' DateTimeKind.Utc);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: Save(eventB' startEnqueueTime.AddMinutes(5));
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,given_an_empty_event_log,The following statement contains a magic number: Save(eventC' startEnqueueTime.AddMinutes(6));
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_read_all,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_multiple_assemblies,The following statement contains a magic number: Assert.Equal(3' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_namespace,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_namespaces,The following statement contains a magic number: Assert.Equal(3' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_full_names,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_type_names,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_type_names_and_assembly,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_source_ids,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_source_types,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_end_date,The following statement contains a magic number: var events = this.sut.Query(new QueryCriteria { EndDate = startEnqueueTime.AddMinutes(5.5) }).ToList();
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_filter_by_end_date,The following statement contains a magic number: Assert.Equal(2' events.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.AzureEventLogFixture,given_an_empty_event_log,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\AzureEventLogFixture.cs,then_can_use_fluent_criteria_builder,The following statement contains a magic number: var events = this.sut.Query()                  .FromAssembly("A")                  .FromAssembly("B")                  .FromNamespace("Namespace")                  .FromSource("SourceB")                  .WithTypeName("EventB")                  .WithFullName("Namespace.EventB")                  .Until(this.startEnqueueTime.AddMinutes(5))                  .ToList();
Magic Number,Infrastructure.Azure.IntegrationTests,given_a_topic_and_subscription,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BaseMessagingIntegration.cs,given_a_topic_and_subscription,The following statement contains a magic number: var retryStrategy = new Incremental(3' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(1));
Magic Number,Infrastructure.Azure.IntegrationTests,given_a_topic_and_subscription,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BaseMessagingIntegration.cs,given_a_topic_and_subscription,The following statement contains a magic number: var retryStrategy = new Incremental(3' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(1));
Magic Number,Infrastructure.Azure.IntegrationTests,BrokeredMessageExtensionsFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BrokeredMessageExtensionsFixture.cs,when_failing_transiently_then_retries,The following statement contains a magic number: BrokeredMessageExtensions                  .SafeMessagingActionAsync(                     c => c(Mock.Of<IAsyncResult>())'                     ar => { if (++endCounts < 2) throw new TimeoutException(); }'                     new BrokeredMessage()'                     s => success = s'                     "error: '{0}' '{1}' '{2}' '{3}' '{4}' '{5}' '{6}'"'                     "message id"'                     "sub"'                     5000'                     1000'                     stopwatch);
Magic Number,Infrastructure.Azure.IntegrationTests,BrokeredMessageExtensionsFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BrokeredMessageExtensionsFixture.cs,when_failing_transiently_then_retries,The following statement contains a magic number: BrokeredMessageExtensions                  .SafeMessagingActionAsync(                     c => c(Mock.Of<IAsyncResult>())'                     ar => { if (++endCounts < 2) throw new TimeoutException(); }'                     new BrokeredMessage()'                     s => success = s'                     "error: '{0}' '{1}' '{2}' '{3}' '{4}' '{5}' '{6}'"'                     "message id"'                     "sub"'                     5000'                     1000'                     stopwatch);
Magic Number,Infrastructure.Azure.IntegrationTests,BrokeredMessageExtensionsFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BrokeredMessageExtensionsFixture.cs,when_failing_transiently_then_retries,The following statement contains a magic number: BrokeredMessageExtensions                  .SafeMessagingActionAsync(                     c => c(Mock.Of<IAsyncResult>())'                     ar => { if (++endCounts < 2) throw new TimeoutException(); }'                     new BrokeredMessage()'                     s => success = s'                     "error: '{0}' '{1}' '{2}' '{3}' '{4}' '{5}' '{6}'"'                     "message id"'                     "sub"'                     5000'                     1000'                     stopwatch);
Magic Number,Infrastructure.Azure.IntegrationTests,BrokeredMessageExtensionsFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BrokeredMessageExtensionsFixture.cs,when_failing_transiently_then_retries,The following statement contains a magic number: Assert.Equal(2' endCounts);
Magic Number,Infrastructure.Azure.IntegrationTests,BrokeredMessageExtensionsFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BrokeredMessageExtensionsFixture.cs,when_failing_transiently_then_retries_until_maximum_retries,The following statement contains a magic number: BrokeredMessageExtensions                  .SafeMessagingActionAsync(                     c => c(Mock.Of<IAsyncResult>())'                     ar => { throw new TimeoutException(); }'                     new BrokeredMessage()'                     s => success = s'                     "error: '{0}' '{1}' '{2}' '{3}' '{4}' '{5}' '{6}'"'                     "message id"'                     "sub"'                     5000'                     100'                     stopwatch);
Magic Number,Infrastructure.Azure.IntegrationTests,BrokeredMessageExtensionsFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\BrokeredMessageExtensionsFixture.cs,when_failing_transiently_then_retries_until_maximum_retries,The following statement contains a magic number: BrokeredMessageExtensions                  .SafeMessagingActionAsync(                     c => c(Mock.Of<IAsyncResult>())'                     ar => { throw new TimeoutException(); }'                     new BrokeredMessage()'                     s => success = s'                     "error: '{0}' '{1}' '{2}' '{3}' '{4}' '{5}' '{6}'"'                     "message id"'                     "sub"'                     5000'                     100'                     stopwatch);
Magic Number,Infrastructure.Azure.IntegrationTests.EventBusIntegration,given_an_azure_event_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventProcessingIntegration.cs,when_receiving_not_registered_event_then_ignores,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,given_empty_store,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,given_empty_store,The following statement contains a magic number: this.events = new[]                               {                                   new EventData { Version = 1' SourceId = sourceId' SourceType = "Source"' TypeName = "Test1"' Payload = "Payload1"' CorrelationId = "correlation1" }'                                   new EventData { Version = 2' SourceId = sourceId' SourceType = "Source"' TypeName = "Test2"' Payload = "Payload2"' CorrelationId = "correlation2"  }'                                   new EventData { Version = 3' SourceId = sourceId' SourceType = "Source"' TypeName = "Test3"' Payload = "Payload3"' CorrelationId = "correlation3"  }'                               };
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,given_empty_store,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,given_empty_store,The following statement contains a magic number: this.events = new[]                               {                                   new EventData { Version = 1' SourceId = sourceId' SourceType = "Source"' TypeName = "Test1"' Payload = "Payload1"' CorrelationId = "correlation1" }'                                   new EventData { Version = 2' SourceId = sourceId' SourceType = "Source"' TypeName = "Test2"' Payload = "Payload2"' CorrelationId = "correlation2"  }'                                   new EventData { Version = 3' SourceId = sourceId' SourceType = "Source"' TypeName = "Test3"' Payload = "Payload3"' CorrelationId = "correlation3"  }'                               };
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(3' stored.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(2' stored[1].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(3' stored[2].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(3' stored[2].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal("Payload3"' stored[2].Payload);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal("correlation3"' stored[2].CorrelationId);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: sut.Save(this.partitionKey' new[] { events[2] });
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(3' stored.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(2' stored[1].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(3' stored[2].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal(3' stored[2].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal("Payload3"' stored[2].Payload);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,when_adding_multiple_items_at_different_times_then_can_load_them_in_order,The following statement contains a magic number: Assert.Equal("correlation3"' stored[2].CorrelationId);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_load_events_since_specified_version,The following statement contains a magic number: var stored = sut.Load(this.partitionKey' 2).ToList();
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_load_events_since_specified_version,The following statement contains a magic number: Assert.Equal(2' stored.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_load_events_since_specified_version,The following statement contains a magic number: Assert.Equal(2' stored[0].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_adding_items,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_load_events_since_specified_version,The following statement contains a magic number: Assert.Equal(3' stored[1].Version);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_getting_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_get_all_events_for_partition_as_pending,The following statement contains a magic number: Assert.Equal(2' pending.Count);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_getting_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,can_get_all_events_for_partition_as_pending,The following statement contains a magic number: Assert.InRange(DateTime.Parse(pending[0].CreationDate' null' DateTimeStyles.RoundtripKind)' DateTime.UtcNow.AddSeconds(-10)' DateTime.UtcNow);
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_getting_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,DeletePendingAsyncAndWait,The following statement contains a magic number: Assert.True(resetEvent.WaitOne(5000));
Magic Number,Infrastructure.Azure.IntegrationTests.EventSourcing.EventStoreFixture,when_getting_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\EventSourcing\EventStoreFixture.cs,GetPendingAsyncAndWait,The following statement contains a magic number: Assert.True(resetEvent.WaitOne(6000));
Magic Number,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_message_received_then_calls_process_message,The following statement contains a magic number: waiter.Wait(5000);
Magic Number,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_processing_throws_then_sends_message_to_dead_letter,The following statement contains a magic number: processor.Protected()                  .Setup("ProcessMessage"' ItExpr.IsAny<string>()' ItExpr.IsAny<object>()' ItExpr.IsAny<string>()' ItExpr.IsAny<string>())                  .Callback(() =>                  {                      failCount++;                      if (failCount == 5)                          waiter.Set();                        throw new ArgumentException();                  });
Magic Number,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_processing_throws_then_sends_message_to_dead_letter,The following statement contains a magic number: waiter.Wait(5000);
Magic Number,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_processing_throws_then_sends_message_to_dead_letter,The following statement contains a magic number: var deadMessage = deadReceiver.Receive(TimeSpan.FromSeconds(5));
Magic Number,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_message_fails_to_deserialize_then_dead_letters_message,The following statement contains a magic number: waiter.Wait(5000);
Magic Number,Infrastructure.Azure.IntegrationTests.MessageProcessorIntegration,given_a_processor,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\MessageProcessorIntegration.cs,when_message_fails_to_deserialize_then_dead_letters_message,The following statement contains a magic number: var deadMessage = deadReceiver.Receive(TimeSpan.FromSeconds(5));
Magic Number,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_receiving_not_registered_command_then_ignores,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_sending_command_with_delay_then_sets_message_enqueue_time,The following statement contains a magic number: bus.Send(new Envelope<ICommand>(new FooCommand()) { Delay = TimeSpan.FromMinutes(5) });
Magic Number,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_sending_command_with_delay_then_sets_message_enqueue_time,The following statement contains a magic number: Assert.True(message.ScheduledEnqueueTimeUtc > DateTime.UtcNow.Add(TimeSpan.FromMinutes(4)));
Magic Number,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_sending_multiple_commands_with_delay_then_sets_message_enqueue_time,The following statement contains a magic number: sender.Setup(x => x.Send(It.IsAny<Func<BrokeredMessage>>()))                  .Callback<Func<BrokeredMessage>>(mf =>                  {                      var m = mf();                      if (m.ScheduledEnqueueTimeUtc > DateTime.UtcNow.Add(TimeSpan.FromMinutes(4))) message = m;                  });
Magic Number,Infrastructure.Azure.IntegrationTests.CommandProcessingIntegration,given_an_azure_command_bus,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\CommandProcessingIntegration.cs,when_sending_multiple_commands_with_delay_then_sets_message_enqueue_time,The following statement contains a magic number: bus.Send(new[]               {                  new Envelope<ICommand>(new FooCommand()) { Delay = TimeSpan.FromMinutes(5) }'                   new Envelope<ICommand>(new BarCommand())              });
Magic Number,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,given_service_bus_config,The following statement contains a magic number: var retryStrategy = new Incremental(3' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(1));
Magic Number,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,given_service_bus_config,The following statement contains a magic number: var retryStrategy = new Incremental(3' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(1));
Magic Number,Infrastructure.Azure.IntegrationTests.ServiceBusConfigFixture,given_service_bus_config,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\ServiceBusConfigFixture.cs,when_creating_processor_then_receives_from_specified_subscription,The following statement contains a magic number: waiter.Wait(5000);
Magic Number,Infrastructure.Azure.IntegrationTests.SessionSubscriptionReceiverIntegration,given_a_receiver,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\SessionSubscriptionReceiverIntegration.cs,when_sending_message_with_session_then_session_receiver_gets_both_messages_fast,The following statement contains a magic number: Assert.InRange(stopWatch.Elapsed' TimeSpan.Zero' TimeSpan.FromSeconds(2));
Magic Number,Infrastructure.Azure.IntegrationTests.SessionSubscriptionReceiverIntegration,given_a_receiver,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\SessionSubscriptionReceiverIntegration.cs,when_sending_message_with_same_session_at_different_times_then_session_receiver_gets_all,The following statement contains a magic number: Assert.InRange(stopWatch.Elapsed' TimeSpan.Zero' TimeSpan.FromSeconds(10));
Magic Number,Infrastructure.Azure.IntegrationTests.SessionSubscriptionReceiverIntegration,given_a_receiver,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\SessionSubscriptionReceiverIntegration.cs,when_sending_message_to_different_sessions_then_processes_concurrently,The following statement contains a magic number: Assert.True(message1received.WaitOne(10000));
Magic Number,Infrastructure.Azure.IntegrationTests.SessionSubscriptionReceiverIntegration,given_a_receiver,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\SessionSubscriptionReceiverIntegration.cs,when_sending_message_to_different_sessions_then_processes_concurrently,The following statement contains a magic number: Assert.True(message2received.WaitOne(10000));
Magic Number,Infrastructure.Azure.IntegrationTests.SessionSubscriptionReceiverIntegration,given_a_receiver,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\SessionSubscriptionReceiverIntegration.cs,when_sending_message_to_different_sessions_then_processes_concurrently,The following statement contains a magic number: Assert.InRange(stopWatch.Elapsed' TimeSpan.Zero' TimeSpan.FromSeconds(10));
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_async_then_succeeds,The following statement contains a magic number: var message = subscriptionClient.Receive(TimeSpan.FromSeconds(5));
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_batch_async_then_succeeds,The following statement contains a magic number: var messages = new List<string>                                 {                                     this.subscriptionClient.Receive(TimeSpan.FromSeconds(5)).GetBody<string>()'                                     this.subscriptionClient.Receive(TimeSpan.FromSeconds(2)).GetBody<string>()                                 };
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_batch_async_then_succeeds,The following statement contains a magic number: var messages = new List<string>                                 {                                     this.subscriptionClient.Receive(TimeSpan.FromSeconds(5)).GetBody<string>()'                                     this.subscriptionClient.Receive(TimeSpan.FromSeconds(2)).GetBody<string>()                                 };
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_fails_transiently_once_then_retries,The following statement contains a magic number: var message = subscriptionClient.Receive(TimeSpan.FromSeconds(5));
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_fails_transiently_once_then_retries,The following statement contains a magic number: Assert.True(signal.WaitOne(TimeSpan.FromSeconds(5))' "Test timed out");
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_fails_transiently_once_then_retries,The following statement contains a magic number: Assert.Equal(2' attempt);
Magic Number,Infrastructure.Azure.IntegrationTests.TopicSenderIntegration,given_a_topic_sender,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.IntegrationTests\TopicSenderIntegration.cs,when_sending_message_fails_transiently_multiple_times_then_fails,The following statement contains a magic number: var message = subscriptionClient.Receive(TimeSpan.FromSeconds(5));
