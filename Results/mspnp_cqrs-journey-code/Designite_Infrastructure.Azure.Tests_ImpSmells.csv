Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Infrastructure.Azure.Tests,given_a_messaging_settings_file,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\InfrastructureSettingsFixture.cs,when_reading_topic_settings_then_sets_default_value_from_schema,The length of the statement  "            var schema = XmlSchema.Read(typeof(InfrastructureSettings).Assembly.GetManifestResourceStream("Infrastructure.Azure.Settings.xsd")' null); " is 138.
Long Statement,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,when_calling_publish,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,then_deletes_message_after_publishing,The length of the statement  "            queue.Verify(q => q.DeletePendingAsync(partitionKey' testEvent.RowKey' It.IsAny<Action<bool>>()' It.IsAny<Action<Exception>>())); " is 129.
Long Statement,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,when_starting_with_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,then_deletes_message_after_publishing,The length of the statement  "                queue.Verify(q => q.DeletePendingAsync(pendingKeys[i]' rowKey' It.IsAny<Action<bool>>()' It.IsAny<Action<Exception>>())); " is 121.
Long Statement,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The length of the statement  "            var sut = new AzureEventSourcedRepository<TestEntity>(eventStore.Object' Mock.Of<IEventStoreBusPublisher>()' new JsonTextSerializer()' new StandardMetadataProvider()' null); " is 173.
Long Statement,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_cached_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The length of the statement  "            cache.Add("TestOriginatorEntity_" + id.ToString()' new Tuple<IMemento' DateTime?>(this.memento' null)' DateTimeOffset.UtcNow.AddMinutes(10)); " is 141.
Long Statement,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_cached_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The length of the statement  "            var sut = new AzureEventSourcedRepository<TestOriginatorEntity>(eventStore.Object' Mock.Of<IEventStoreBusPublisher>()' new JsonTextSerializer()' new StandardMetadataProvider()' cache); " is 184.
Long Statement,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_delay_then_sets_in_message,The length of the statement  "            Assert.InRange(sender.Sent.Single().ScheduledEnqueueTimeUtc' DateTime.UtcNow.AddMinutes(14.9)' DateTime.UtcNow.AddMinutes(15.1)); " is 129.
Magic Number,Infrastructure.Azure.Tests,DynamicThrottlingFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\DynamicThrottlingFixture.cs,starts_low,The following statement contains a magic number: Assert.Equal(10' sut.AvailableDegreesOfParallelism);
Magic Number,Infrastructure.Azure.Tests,DynamicThrottlingFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\DynamicThrottlingFixture.cs,continually_increases_on_completed_work,The following statement contains a magic number: i < 10
Magic Number,Infrastructure.Azure.Tests,DynamicThrottlingFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\DynamicThrottlingFixture.cs,IncreaseDegreesOfParallelism,The following statement contains a magic number: i < 10
Magic Number,Infrastructure.Azure.Tests,given_a_messaging_settings_file,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\InfrastructureSettingsFixture.cs,when_reading_service_bus_from_file_then_succeeds,The following statement contains a magic number: Assert.Equal(4' settings.Topics.Count);
Magic Number,Infrastructure.Azure.Tests,given_a_messaging_settings_file,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\InfrastructureSettingsFixture.cs,when_reading_service_bus_from_file_then_succeeds,The following statement contains a magic number: Assert.Equal(3' settings.Topics[0].Subscriptions.Count);
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,when_calling_publish,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_calling_publish,The following statement contains a magic number: Assert.True(sender.SendSignal.WaitOne(3000));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,when_starting_with_pending_events,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_starting_with_pending_events,The following statement contains a magic number: Assert.True(sender.SendSignal.WaitOne(5000));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,given_event_store_with_events_after_it_is_started,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,given_event_store_with_events_after_it_is_started,The following statement contains a magic number: this.partitionKeys = Enumerable.Range(0' 200).Select(i => "Key" + i).ToArray();
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,given_event_store_with_events_after_it_is_started,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_sending_multiple_partitions_immediately_then_publishes_all_events,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(20);
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,given_event_store_with_events_after_it_is_started,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_sending_multiple_partitions_immediately_then_publishes_all_events,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,given_event_store_with_events_after_it_is_started,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_send_takes_time_then_still_publishes_events_concurrently_with_throttling,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,given_event_store_with_events_after_it_is_started,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_send_takes_time_then_still_publishes_events_concurrently_with_throttling,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Infrastructure.Azure.Tests.EventSourcing.EventStoreBusPublisherFixture,given_event_store_with_events_after_it_is_started,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\EventStoreBusPublisherFixture.cs,when_send_takes_time_then_still_publishes_events_concurrently_with_throttling,The following statement contains a magic number: sender.Sent.Count < partitionKeys.Length && stopwatch.Elapsed < TimeSpan.FromSeconds(20)
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_saving_entity,The following statement contains a magic number: var entity = new TestEntity              {                  Id = id'                  Events =                      {                          new TestEvent { SourceId = id' Version = 1' Foo = "Bar" }'                          new TestEvent { SourceId = id' Version = 2' Foo = "Baz" }                      }              };
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,then_stores_in_event_store,The following statement contains a magic number: eventStore.Verify(                  s => s.Save(                      It.IsAny<string>()'                      It.Is<IEnumerable<EventData>>(                          x =>                              x.Count() == 2                              && x.First().Version == 1                              && x.First().SourceId == id.ToString()                              && x.First().SourceType == "TestEntity"                              && x.First().TypeName == "TestEvent"                              && x.First().Payload.Contains("Bar")                              && x.First().CorrelationId == "correlation"                              && x.Last().Version == 2                              && x.Last().SourceId == id.ToString()                              && x.Last().SourceType == "TestEntity"                              && x.Last().Payload.Contains("Baz")                              && x.Last().CorrelationId == "correlation")));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,then_stores_in_event_store,The following statement contains a magic number: eventStore.Verify(                  s => s.Save(                      It.IsAny<string>()'                      It.Is<IEnumerable<EventData>>(                          x =>                              x.Count() == 2                              && x.First().Version == 1                              && x.First().SourceId == id.ToString()                              && x.First().SourceType == "TestEntity"                              && x.First().TypeName == "TestEvent"                              && x.First().Payload.Contains("Bar")                              && x.First().CorrelationId == "correlation"                              && x.Last().Version == 2                              && x.Last().SourceId == id.ToString()                              && x.Last().SourceType == "TestEntity"                              && x.Last().Payload.Contains("Baz")                              && x.Last().CorrelationId == "correlation")));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,then_notifies_publisher_about_the_pending_partition_key,The following statement contains a magic number: publisher.Verify(s => s.SendAsync("TestEntity_" + id.ToString()' 2));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_saving_memento_originator_entity,The following statement contains a magic number: var entity = new TestOriginatorEntity              {                  Id = id'                  Events =                      {                          new TestEvent { SourceId = id' Version = 1' Foo = "Bar" }'                          new TestEvent { SourceId = id' Version = 2' Foo = "Baz" }                      }'                  Memento = memento'              };
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,then_stores_in_event_store,The following statement contains a magic number: eventStore.Verify(                  s => s.Save(                      It.IsAny<string>()'                      It.Is<IEnumerable<EventData>>(                          x =>                              x.Count() == 2                              && x.First().Version == 1                              && x.First().SourceId == id.ToString()                              && x.First().SourceType == "TestOriginatorEntity"                              && x.First().TypeName == "TestEvent"                              && x.First().Payload.Contains("Bar")                              && x.First().CorrelationId == "correlation"                              && x.Last().Version == 2                              && x.Last().SourceId == id.ToString()                              && x.Last().SourceType == "TestOriginatorEntity"                              && x.Last().Payload.Contains("Baz")                              && x.Last().CorrelationId == "correlation")));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,then_stores_in_event_store,The following statement contains a magic number: eventStore.Verify(                  s => s.Save(                      It.IsAny<string>()'                      It.Is<IEnumerable<EventData>>(                          x =>                              x.Count() == 2                              && x.First().Version == 1                              && x.First().SourceId == id.ToString()                              && x.First().SourceType == "TestOriginatorEntity"                              && x.First().TypeName == "TestEvent"                              && x.First().Payload.Contains("Bar")                              && x.First().CorrelationId == "correlation"                              && x.Last().Version == 2                              && x.Last().SourceId == id.ToString()                              && x.Last().SourceType == "TestOriginatorEntity"                              && x.Last().Payload.Contains("Baz")                              && x.Last().CorrelationId == "correlation")));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_saving_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,then_notifies_publisher_about_the_pending_partition_key,The following statement contains a magic number: publisher.Verify(s => s.SendAsync("TestOriginatorEntity_" + id.ToString()' 2));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The following statement contains a magic number: var events = new IVersionedEvent[]                               {                                   new TestEvent { SourceId = id' Version = 1' Foo = "Bar" }'                                   new TestEvent { SourceId = id' Version = 2' Foo = "Baz" }                                                             };
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_cached_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The following statement contains a magic number: var newEvents = new IVersionedEvent[]                               {                                   new TestEvent { SourceId = id' Version = 2' Foo = "Baz" }                                                             };
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_cached_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The following statement contains a magic number: cache.Add("TestOriginatorEntity_" + id.ToString()' new Tuple<IMemento' DateTime?>(this.memento' null)' DateTimeOffset.UtcNow.AddMinutes(10));
Magic Number,Infrastructure.Azure.Tests.EventSourcing.AzureEventSourcedRepositoryFixture,when_reading_cached_memento_originator_entity,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\EventSourcing\AzureEventSourcedRepositoryFixture.cs,when_reading_entity_then_rehydrates,The following statement contains a magic number: eventStore.Setup(x => x.Load(It.IsAny<string>()' 2)).Returns(serialized);
Magic Number,Infrastructure.Azure.Tests.Messaging.SynchronousCommandBusDecoratorFixture.given_command_bus_with_registered_handlers,when_sending_multiple_commands_for_registered_and_non_registered_handlers,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\SynchronousCommandBusDecoratorFixture.cs,then_all_commands_up_to_the_first_command_with_no_handler_are_executed_synchronously,The following statement contains a magic number: Assert.Equal(this.allCommands.Take(2)' this.synchronous);
Magic Number,Infrastructure.Azure.Tests.Messaging.SynchronousCommandBusDecoratorFixture.given_command_bus_with_registered_handlers,when_sending_multiple_commands_for_registered_and_non_registered_handlers,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\SynchronousCommandBusDecoratorFixture.cs,then_all_commands_starting_with_the_first_command_with_no_handler_are_forwarded_to_the_bus,The following statement contains a magic number: Assert.Equal(this.allCommands.Skip(2)' this.forwarded);
Magic Number,Infrastructure.Azure.Tests.Messaging.SynchronousCommandBusDecoratorFixture.given_command_bus_with_registered_handlers,when_sending_multiple_commands_with_a_handling_failure,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\SynchronousCommandBusDecoratorFixture.cs,then_all_commands_up_to_the_first_command_with_no_handler_are_executed_synchronously,The following statement contains a magic number: Assert.Equal(this.allCommands.Take(2)' this.synchronous);
Magic Number,Infrastructure.Azure.Tests.Messaging.SynchronousCommandBusDecoratorFixture.given_command_bus_with_registered_handlers,when_sending_multiple_commands_with_a_handling_failure,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\SynchronousCommandBusDecoratorFixture.cs,then_all_commands_starting_with_the_first_command_with_no_handler_are_forwarded_to_the_bus,The following statement contains a magic number: Assert.Equal(this.allCommands.Skip(2)' this.forwarded);
Magic Number,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_time_to_live_then_sets_in_message,The following statement contains a magic number: var command = new Envelope<ICommand>(new FooCommand { Id = Guid.NewGuid() })              {                  TimeToLive = TimeSpan.FromMinutes(15)              };
Magic Number,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_time_to_live_then_sets_in_message,The following statement contains a magic number: Assert.InRange(sender.Sent.Single().TimeToLive' TimeSpan.FromMinutes(14.9)' TimeSpan.FromMinutes(15.1));
Magic Number,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_time_to_live_then_sets_in_message,The following statement contains a magic number: Assert.InRange(sender.Sent.Single().TimeToLive' TimeSpan.FromMinutes(14.9)' TimeSpan.FromMinutes(15.1));
Magic Number,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_delay_then_sets_in_message,The following statement contains a magic number: var command = new Envelope<ICommand>(new FooCommand { Id = Guid.NewGuid() })              {                  Delay = TimeSpan.FromMinutes(15)              };
Magic Number,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_delay_then_sets_in_message,The following statement contains a magic number: Assert.InRange(sender.Sent.Single().ScheduledEnqueueTimeUtc' DateTime.UtcNow.AddMinutes(14.9)' DateTime.UtcNow.AddMinutes(15.1));
Magic Number,Infrastructure.Azure.Tests.Messaging,CommandBusFixture,C:\research\architectureSmells\repos\mspnp_cqrs-journey-code\source\Infrastructure\Azure\Infrastructure.Azure.Tests\Messaging\CommandBusFixture.cs,when_specifying_delay_then_sets_in_message,The following statement contains a magic number: Assert.InRange(sender.Sent.Single().ScheduledEnqueueTimeUtc' DateTime.UtcNow.AddMinutes(14.9)' DateTime.UtcNow.AddMinutes(15.1));
