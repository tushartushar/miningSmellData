Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AE.Net.Mail,SearchCondition,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Imap\SearchCondition.cs,ToString,Cyclomatic complexity of the method is 13
Complex Method,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ParseImapHeader,Cyclomatic complexity of the method is 11
Complex Method,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,Cyclomatic complexity of the method is 11
Complex Method,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,Cyclomatic complexity of the method is 8
Complex Method,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeWords,Cyclomatic complexity of the method is 10
Complex Method,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,Cyclomatic complexity of the method is 9
Complex Method,AE.Net.Mail,MailMessage,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\MailMessage.cs,Load,Cyclomatic complexity of the method is 13
Complex Method,AE.Net.Mail,MailMessage,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\MailMessage.cs,ParseMime,Cyclomatic complexity of the method is 12
Complex Method,AE.Net.Mail,MailMessage,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\MailMessage.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Examine,Cyclomatic complexity of the method is 8
Complex Method,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,Cyclomatic complexity of the method is 23
Complex Method,AE.Net.Mail.Imap,ModifiedUtf7Encoding,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Imap\ModifiedUtf7Encoding.cs,Encode,Cyclomatic complexity of the method is 8
Long Parameter List,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ParseCharsetToEncoding,The method has 6 parameters.
Long Parameter List,AE.Net.Mail,MailMessage,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\MailMessage.cs,ParseMime,The method has 6 parameters.
Long Parameter List,AE.Net.Mail,MailMessage,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\MailMessage.cs,Save,The method has 8 parameters.
Long Parameter List,AE.Net.Mail,TextClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\TextClient.cs,Connect,The method has 8 parameters.
Long Parameter List,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,ImapClient,The method has 7 parameters.
Long Parameter List,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,DownloadMessage,The method has 6 parameters.
Long Parameter List,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,DownloadMessage,The method has 6 parameters.
Long Parameter List,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetMessages,The method has 8 parameters.
Long Parameter List,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetMessages,The method has 6 parameters.
Long Parameter List,AE.Net.Mail,Pop3Client,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Pop3Client.cs,Pop3Client,The method has 6 parameters.
Long Statement,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,NormalizeDate,The length of the statement  "	value = rxTimeZoneColon.Replace (value' match => " " + match.Groups [1].Value + match.Groups [2].Value.PadLeft (2' '0') + match.Groups [3].Value); " is 146.
Long Statement,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ParseCharsetToEncoding,The length of the statement  "		return Encoding.GetEncodings ().Where (x => x.CodePage == codepageNumber).Select (x => x.GetEncoding ()).FirstOrDefault () ?? @default ?? Encoding.Default; " is 155.
Long Statement,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ParseCharsetToEncoding,The length of the statement  "	return Encoding.GetEncodings ().Where (x => x.Name.Is (characterSet)).Select (x => x.GetEncoding ()).FirstOrDefault () ?? @default ?? System.Text.Encoding.Default; " is 163.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetMessages,The length of the statement  "	string command = tag + (uid ? "UID " : null) + "FETCH " + start + ":" + end + " (" + _FetchHeaders + "UID FLAGS BODY" + (setseen ? null : ".PEEK") + "[" + (headersonly ? "HEADER" : null) + "])"; " is 194.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The length of the statement  "			quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ())); " is 151.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,The length of the statement  "	// // _Reader = new System.IO.StreamReader(new System.IO.Compression.DeflateStream(_Stream0' System.IO.Compression.CompressionMode.Decompress' true)' System.Text.Encoding.Default); " is 180.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,The length of the statement  "	// // _Stream = new System.IO.Compression.DeflateStream(_Stream0' System.IO.Compression.CompressionMode.Compress' true); " is 120.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetMessageCount,The length of the statement  "	string command = GetTag () + "STATUS " + Utilities.QuoteString (ModifiedUtf7Encoding.Encode (mailbox) ?? _SelectedMailbox) + " (MESSAGES)"; " is 139.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,SearchMessages,The length of the statement  "	return Search (criteria' true).Select (x => new Lazy<MailMessage> (() => GetMessage (x' headersonly' setseen))).ToArray (); " is 123.
Long Statement,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Store,The length of the statement  "	string command = string.Concat (GetTag ()' prefix' "STORE "' messageset' " "' replace ? "" : "+"' "FLAGS.SILENT (" + flags + ")"); " is 130.
Long Statement,AE.Net.Mail.Imap,ModifiedUtf7Encoding,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Imap\ModifiedUtf7Encoding.cs,Decode,The length of the statement  "	for (int indexOfAmpersand = result.IndexOf ('&'); indexOfAmpersand != -1; indexOfAmpersand = result.IndexOf ('&'' indexOfAmpersand + 1)) { " is 138.
Complex Conditional,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The conditional expression  "maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar"  is complex.
Empty Catch Block,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,TryDispose,The method has an empty catch block.
Empty Catch Block,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The method has an empty catch block.
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: if (stream.CanTimeout)  	stream.ReadTimeout = 10000;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: stream.ReadTimeout = 10000;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: using (var mem = new MemoryStream ()) {  	while (true) {  		b0 = b;  		i = stream.ReadByte ();  		if (i == -1)  			break;  		else  			read = true;  		b = (byte)i;  		if (maxLengthSpecified)  			maxLength--;  		if (maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar) {  			maxLength++;  			continue;  		}  		if (b == 10 || b == 13) {  			if (mem.Length == 0 && b == 10) {  				continue;  			}  			else  				break;  		}  		mem.WriteByte (b);  		if (maxLengthSpecified && maxLength == 0)  			break;  	}  	if (mem.Length == 0 && !read)  		return null;  	return encoding.GetString (mem.ToArray ());  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: using (var mem = new MemoryStream ()) {  	while (true) {  		b0 = b;  		i = stream.ReadByte ();  		if (i == -1)  			break;  		else  			read = true;  		b = (byte)i;  		if (maxLengthSpecified)  			maxLength--;  		if (maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar) {  			maxLength++;  			continue;  		}  		if (b == 10 || b == 13) {  			if (mem.Length == 0 && b == 10) {  				continue;  			}  			else  				break;  		}  		mem.WriteByte (b);  		if (maxLengthSpecified && maxLength == 0)  			break;  	}  	if (mem.Length == 0 && !read)  		return null;  	return encoding.GetString (mem.ToArray ());  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: using (var mem = new MemoryStream ()) {  	while (true) {  		b0 = b;  		i = stream.ReadByte ();  		if (i == -1)  			break;  		else  			read = true;  		b = (byte)i;  		if (maxLengthSpecified)  			maxLength--;  		if (maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar) {  			maxLength++;  			continue;  		}  		if (b == 10 || b == 13) {  			if (mem.Length == 0 && b == 10) {  				continue;  			}  			else  				break;  		}  		mem.WriteByte (b);  		if (maxLengthSpecified && maxLength == 0)  			break;  	}  	if (mem.Length == 0 && !read)  		return null;  	return encoding.GetString (mem.ToArray ());  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: while (true) {  	b0 = b;  	i = stream.ReadByte ();  	if (i == -1)  		break;  	else  		read = true;  	b = (byte)i;  	if (maxLengthSpecified)  		maxLength--;  	if (maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar) {  		maxLength++;  		continue;  	}  	if (b == 10 || b == 13) {  		if (mem.Length == 0 && b == 10) {  			continue;  		}  		else  			break;  	}  	mem.WriteByte (b);  	if (maxLengthSpecified && maxLength == 0)  		break;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: while (true) {  	b0 = b;  	i = stream.ReadByte ();  	if (i == -1)  		break;  	else  		read = true;  	b = (byte)i;  	if (maxLengthSpecified)  		maxLength--;  	if (maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar) {  		maxLength++;  		continue;  	}  	if (b == 10 || b == 13) {  		if (mem.Length == 0 && b == 10) {  			continue;  		}  		else  			break;  	}  	mem.WriteByte (b);  	if (maxLengthSpecified && maxLength == 0)  		break;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: while (true) {  	b0 = b;  	i = stream.ReadByte ();  	if (i == -1)  		break;  	else  		read = true;  	b = (byte)i;  	if (maxLengthSpecified)  		maxLength--;  	if (maxLengthSpecified && mem.Length == 1 && b == termChar && b0 == termChar) {  		maxLength++;  		continue;  	}  	if (b == 10 || b == 13) {  		if (mem.Length == 0 && b == 10) {  			continue;  		}  		else  			break;  	}  	mem.WriteByte (b);  	if (maxLengthSpecified && maxLength == 0)  		break;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: if (b == 10 || b == 13) {  	if (mem.Length == 0 && b == 10) {  		continue;  	}  	else  		break;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: if (b == 10 || b == 13) {  	if (mem.Length == 0 && b == 10) {  		continue;  	}  	else  		break;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: if (b == 10 || b == 13) {  	if (mem.Length == 0 && b == 10) {  		continue;  	}  	else  		break;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadLine,The following statement contains a magic number: if (mem.Length == 0 && b == 10) {  	continue;  }  else  	break;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadToEnd,The following statement contains a magic number: if (stream.CanTimeout)  	stream.ReadTimeout = 10000;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,ReadToEnd,The following statement contains a magic number: stream.ReadTimeout = 10000;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,NormalizeDate,The following statement contains a magic number: value = rxTimeZoneColon.Replace (value' match => " " + match.Groups [1].Value + match.Groups [2].Value.PadLeft (2' '0') + match.Groups [3].Value);  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,NormalizeDate,The following statement contains a magic number: value = rxTimeZoneColon.Replace (value' match => " " + match.Groups [1].Value + match.Groups [2].Value.PadLeft (2' '0') + match.Groups [3].Value);  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,NormalizeDate,The following statement contains a magic number: value = rxTimeZoneColon.Replace (value' match => " " + match.Groups [1].Value + match.Groups [2].Value.PadLeft (2' '0') + match.Groups [3].Value);  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,NormalizeDate,The following statement contains a magic number: if (minutes.Groups [2].Value.ToInt () > 60) {  	//even if there's no match' the value = 0  	value = value.Substring (0' minutes.Index) + minutes.Groups [1].Value + "00";  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,NormalizeDate,The following statement contains a magic number: if (minutes.Groups [2].Value.ToInt () > 60) {  	//even if there's no match' the value = 0  	value = value.Substring (0' minutes.Index) + minutes.Groups [1].Value + "00";  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	var b = data [i];  	if ((b == eq) && ((i + 2) < data.Length)) {  		byte b1 = data [i + 1]' b2 = data [i + 2];  		if (b1 == 10 || b1 == 13) {  			i++;  			if (b2 == 10 || b2 == 13) {  				i++;  			}  			continue;  		}  		if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  			data [n] = (byte)b;  			n++;  			i += 2;  		}  		else {  			data [i] = eq;  			n++;  		}  	}  	else {  		data [n] = b;  		n++;  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if ((b == eq) && ((i + 2) < data.Length)) {  	byte b1 = data [i + 1]' b2 = data [i + 2];  	if (b1 == 10 || b1 == 13) {  		i++;  		if (b2 == 10 || b2 == 13) {  			i++;  		}  		continue;  	}  	if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  		data [n] = (byte)b;  		n++;  		i += 2;  	}  	else {  		data [i] = eq;  		n++;  	}  }  else {  	data [n] = b;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (b1 == 10 || b1 == 13) {  	i++;  	if (b2 == 10 || b2 == 13) {  		i++;  	}  	continue;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (b1 == 10 || b1 == 13) {  	i++;  	if (b2 == 10 || b2 == 13) {  		i++;  	}  	continue;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (b1 == 10 || b1 == 13) {  	i++;  	if (b2 == 10 || b2 == 13) {  		i++;  	}  	continue;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (b1 == 10 || b1 == 13) {  	i++;  	if (b2 == 10 || b2 == 13) {  		i++;  	}  	continue;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (b2 == 10 || b2 == 13) {  	i++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (b2 == 10 || b2 == 13) {  	i++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  	data [n] = (byte)b;  	n++;  	i += 2;  }  else {  	data [i] = eq;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: if (byte.TryParse (value.Substring (i + 1' 2)' NumberStyles.HexNumber' null' out b)) {  	data [n] = (byte)b;  	n++;  	i += 2;  }  else {  	data [i] = eq;  	n++;  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,DecodeQuotedPrintable,The following statement contains a magic number: i += 2;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (missingPaddingLength != 0) {  	// Base64 string length should be multiple of 4  	if (strictPadding) {  		return false;  	}  	else {  		//add the minimum necessary padding  		if (missingPaddingLength > 2)  			missingPaddingLength = missingPaddingLength % 2;  		param += new string (Base64Padding' missingPaddingLength);  		lengthWPadding += missingPaddingLength;  		System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (missingPaddingLength != 0) {  	// Base64 string length should be multiple of 4  	if (strictPadding) {  		return false;  	}  	else {  		//add the minimum necessary padding  		if (missingPaddingLength > 2)  			missingPaddingLength = missingPaddingLength % 2;  		param += new string (Base64Padding' missingPaddingLength);  		lengthWPadding += missingPaddingLength;  		System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (missingPaddingLength != 0) {  	// Base64 string length should be multiple of 4  	if (strictPadding) {  		return false;  	}  	else {  		//add the minimum necessary padding  		if (missingPaddingLength > 2)  			missingPaddingLength = missingPaddingLength % 2;  		param += new string (Base64Padding' missingPaddingLength);  		lengthWPadding += missingPaddingLength;  		System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  	}  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (strictPadding) {  	return false;  }  else {  	//add the minimum necessary padding  	if (missingPaddingLength > 2)  		missingPaddingLength = missingPaddingLength % 2;  	param += new string (Base64Padding' missingPaddingLength);  	lengthWPadding += missingPaddingLength;  	System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (strictPadding) {  	return false;  }  else {  	//add the minimum necessary padding  	if (missingPaddingLength > 2)  		missingPaddingLength = missingPaddingLength % 2;  	param += new string (Base64Padding' missingPaddingLength);  	lengthWPadding += missingPaddingLength;  	System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (strictPadding) {  	return false;  }  else {  	//add the minimum necessary padding  	if (missingPaddingLength > 2)  		missingPaddingLength = missingPaddingLength % 2;  	param += new string (Base64Padding' missingPaddingLength);  	lengthWPadding += missingPaddingLength;  	System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  }  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (missingPaddingLength > 2)  	missingPaddingLength = missingPaddingLength % 2;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if (missingPaddingLength > 2)  	missingPaddingLength = missingPaddingLength % 2;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: missingPaddingLength = missingPaddingLength % 2;  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: System.Diagnostics.Debug.Assert (lengthWPadding % 4 == 0);  
Magic Number,AE.Net.Mail,Utilities,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Utilities.cs,IsValidBase64String,The following statement contains a magic number: if ((lengthWPadding - lengthWOPadding) > 2) {  	// there should be no more than 2 pad characters  	return false;  }  
Magic Number,AE.Net.Mail,TextClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\TextClient.cs,TextClient,The following statement contains a magic number: Encoding = System.Text.Encoding.GetEncoding (1252);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,IdlePause,The following statement contains a magic number: if (!_IdleEvents.Join (2000))  	_IdleEvents.Abort ();  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,IdleStop,The following statement contains a magic number: if (_IdleEvents != null) {  	_IdleARE.Close ();  	if (!_IdleEvents.Join (2000))  		_IdleEvents.Abort ();  	_IdleEvents = null;  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,IdleStop,The following statement contains a magic number: if (!_IdleEvents.Join (2000))  	_IdleEvents.Abort ();  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: try {  	string last = null' resp;  	while (true) {  		if (!TryGetResponse (out resp' idleTimeout)) {  			//send NOOP every 20 minutes  			Noop (false);  			//call noop without aborting this Idle thread  			continue;  		}  		if (resp.Contains ("OK IDLE"))  			return;  		var data = resp.Split (' ');  		if (data [0] == "*" && data.Length >= 3) {  			var e = new MessageEventArgs {  				Client = this'  				MessageCount = int.Parse (data [1])  			};  			if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  				ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  				//Fire the event on a separate thread  			}  			else if (data [2].Is ("EXPUNGE")) {  				_MessageDeleted.Fire (this' e);  			}  			last = data [2];  		}  	}  }  catch (Exception) {  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: try {  	string last = null' resp;  	while (true) {  		if (!TryGetResponse (out resp' idleTimeout)) {  			//send NOOP every 20 minutes  			Noop (false);  			//call noop without aborting this Idle thread  			continue;  		}  		if (resp.Contains ("OK IDLE"))  			return;  		var data = resp.Split (' ');  		if (data [0] == "*" && data.Length >= 3) {  			var e = new MessageEventArgs {  				Client = this'  				MessageCount = int.Parse (data [1])  			};  			if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  				ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  				//Fire the event on a separate thread  			}  			else if (data [2].Is ("EXPUNGE")) {  				_MessageDeleted.Fire (this' e);  			}  			last = data [2];  		}  	}  }  catch (Exception) {  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: try {  	string last = null' resp;  	while (true) {  		if (!TryGetResponse (out resp' idleTimeout)) {  			//send NOOP every 20 minutes  			Noop (false);  			//call noop without aborting this Idle thread  			continue;  		}  		if (resp.Contains ("OK IDLE"))  			return;  		var data = resp.Split (' ');  		if (data [0] == "*" && data.Length >= 3) {  			var e = new MessageEventArgs {  				Client = this'  				MessageCount = int.Parse (data [1])  			};  			if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  				ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  				//Fire the event on a separate thread  			}  			else if (data [2].Is ("EXPUNGE")) {  				_MessageDeleted.Fire (this' e);  			}  			last = data [2];  		}  	}  }  catch (Exception) {  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: try {  	string last = null' resp;  	while (true) {  		if (!TryGetResponse (out resp' idleTimeout)) {  			//send NOOP every 20 minutes  			Noop (false);  			//call noop without aborting this Idle thread  			continue;  		}  		if (resp.Contains ("OK IDLE"))  			return;  		var data = resp.Split (' ');  		if (data [0] == "*" && data.Length >= 3) {  			var e = new MessageEventArgs {  				Client = this'  				MessageCount = int.Parse (data [1])  			};  			if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  				ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  				//Fire the event on a separate thread  			}  			else if (data [2].Is ("EXPUNGE")) {  				_MessageDeleted.Fire (this' e);  			}  			last = data [2];  		}  	}  }  catch (Exception) {  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: while (true) {  	if (!TryGetResponse (out resp' idleTimeout)) {  		//send NOOP every 20 minutes  		Noop (false);  		//call noop without aborting this Idle thread  		continue;  	}  	if (resp.Contains ("OK IDLE"))  		return;  	var data = resp.Split (' ');  	if (data [0] == "*" && data.Length >= 3) {  		var e = new MessageEventArgs {  			Client = this'  			MessageCount = int.Parse (data [1])  		};  		if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  			ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  			//Fire the event on a separate thread  		}  		else if (data [2].Is ("EXPUNGE")) {  			_MessageDeleted.Fire (this' e);  		}  		last = data [2];  	}  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: while (true) {  	if (!TryGetResponse (out resp' idleTimeout)) {  		//send NOOP every 20 minutes  		Noop (false);  		//call noop without aborting this Idle thread  		continue;  	}  	if (resp.Contains ("OK IDLE"))  		return;  	var data = resp.Split (' ');  	if (data [0] == "*" && data.Length >= 3) {  		var e = new MessageEventArgs {  			Client = this'  			MessageCount = int.Parse (data [1])  		};  		if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  			ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  			//Fire the event on a separate thread  		}  		else if (data [2].Is ("EXPUNGE")) {  			_MessageDeleted.Fire (this' e);  		}  		last = data [2];  	}  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: while (true) {  	if (!TryGetResponse (out resp' idleTimeout)) {  		//send NOOP every 20 minutes  		Noop (false);  		//call noop without aborting this Idle thread  		continue;  	}  	if (resp.Contains ("OK IDLE"))  		return;  	var data = resp.Split (' ');  	if (data [0] == "*" && data.Length >= 3) {  		var e = new MessageEventArgs {  			Client = this'  			MessageCount = int.Parse (data [1])  		};  		if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  			ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  			//Fire the event on a separate thread  		}  		else if (data [2].Is ("EXPUNGE")) {  			_MessageDeleted.Fire (this' e);  		}  		last = data [2];  	}  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: while (true) {  	if (!TryGetResponse (out resp' idleTimeout)) {  		//send NOOP every 20 minutes  		Noop (false);  		//call noop without aborting this Idle thread  		continue;  	}  	if (resp.Contains ("OK IDLE"))  		return;  	var data = resp.Split (' ');  	if (data [0] == "*" && data.Length >= 3) {  		var e = new MessageEventArgs {  			Client = this'  			MessageCount = int.Parse (data [1])  		};  		if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  			ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  			//Fire the event on a separate thread  		}  		else if (data [2].Is ("EXPUNGE")) {  			_MessageDeleted.Fire (this' e);  		}  		last = data [2];  	}  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [0] == "*" && data.Length >= 3) {  	var e = new MessageEventArgs {  		Client = this'  		MessageCount = int.Parse (data [1])  	};  	if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  		ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  		//Fire the event on a separate thread  	}  	else if (data [2].Is ("EXPUNGE")) {  		_MessageDeleted.Fire (this' e);  	}  	last = data [2];  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [0] == "*" && data.Length >= 3) {  	var e = new MessageEventArgs {  		Client = this'  		MessageCount = int.Parse (data [1])  	};  	if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  		ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  		//Fire the event on a separate thread  	}  	else if (data [2].Is ("EXPUNGE")) {  		_MessageDeleted.Fire (this' e);  	}  	last = data [2];  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [0] == "*" && data.Length >= 3) {  	var e = new MessageEventArgs {  		Client = this'  		MessageCount = int.Parse (data [1])  	};  	if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  		ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  		//Fire the event on a separate thread  	}  	else if (data [2].Is ("EXPUNGE")) {  		_MessageDeleted.Fire (this' e);  	}  	last = data [2];  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [0] == "*" && data.Length >= 3) {  	var e = new MessageEventArgs {  		Client = this'  		MessageCount = int.Parse (data [1])  	};  	if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  		ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  		//Fire the event on a separate thread  	}  	else if (data [2].Is ("EXPUNGE")) {  		_MessageDeleted.Fire (this' e);  	}  	last = data [2];  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  	ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  	//Fire the event on a separate thread  }  else if (data [2].Is ("EXPUNGE")) {  	_MessageDeleted.Fire (this' e);  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [2].Is ("EXISTS") && !last.Is ("EXPUNGE") && e.MessageCount > 0) {  	ThreadPool.QueueUserWorkItem (callback => _NewMessage.Fire (this' e));  	//Fire the event on a separate thread  }  else if (data [2].Is ("EXPUNGE")) {  	_MessageDeleted.Fire (this' e);  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: if (data [2].Is ("EXPUNGE")) {  	_MessageDeleted.Fire (this' e);  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,WatchIdleQueue,The following statement contains a magic number: last = data [2];  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Capability,The following statement contains a magic number: if (response.StartsWith ("* CAPABILITY "))  	response = response.Substring (13);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Capability,The following statement contains a magic number: response = response.Substring (13);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Copy,The following statement contains a magic number: if (messageset.StartsWith ("UID "' StringComparison.OrdinalIgnoreCase)) {  	messageset = messageset.Substring (4);  	prefix = "UID ";  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Copy,The following statement contains a magic number: messageset = messageset.Substring (4);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: while (response.StartsWith ("*")) {  	Match m = Regex.Match (response' reg);  	if (m.Groups.Count > 1) {  		quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  		break;  	}  	response = GetResponse ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: while (response.StartsWith ("*")) {  	Match m = Regex.Match (response' reg);  	if (m.Groups.Count > 1) {  		quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  		break;  	}  	response = GetResponse ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: while (response.StartsWith ("*")) {  	Match m = Regex.Match (response' reg);  	if (m.Groups.Count > 1) {  		quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  		break;  	}  	response = GetResponse ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: if (m.Groups.Count > 1) {  	quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  	break;  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: if (m.Groups.Count > 1) {  	quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  	break;  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: if (m.Groups.Count > 1) {  	quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  	break;  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,GetQuota,The following statement contains a magic number: quota = new Quota (m.Groups [1].ToString ()' m.Groups [2].ToString ()' Int32.Parse (m.Groups [3].ToString ())' Int32.Parse (m.Groups [4].ToString ()));  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,ListMailboxes,The following statement contains a magic number: while (m.Groups.Count > 1) {  	Mailbox mailbox = new Mailbox (m.Groups [3].ToString ());  	mailbox.SetFlags (m.Groups [1].ToString ());  	x.Add (mailbox);  	response = GetResponse ();  	m = Regex.Match (response' reg);  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,ListSuscribesMailboxes,The following statement contains a magic number: while (m.Groups.Count > 1) {  	Mailbox mailbox = new Mailbox (m.Groups [3].ToString ());  	x.Add (mailbox);  	response = GetResponse ();  	m = Regex.Match (response' reg);  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,The following statement contains a magic number: if (result.StartsWith ("* CAPABILITY ")) {  	_Capability = result.Substring (13).Trim ().Split (' ');  	result = GetResponse ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,The following statement contains a magic number: _Capability = result.Substring (13).Trim ().Split (' ');  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,The following statement contains a magic number: if (!result.StartsWith (tag + "OK")) {  	if (result.StartsWith ("+ ") && result.EndsWith ("==")) {  		string jsonErr = Utilities.DecodeBase64 (result.Substring (2)' System.Text.Encoding.UTF7);  		throw new Exception (jsonErr);  	}  	else  		throw new Exception (result);  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,OnLogin,The following statement contains a magic number: if (result.StartsWith ("+ ") && result.EndsWith ("==")) {  	string jsonErr = Utilities.DecodeBase64 (result.Substring (2)' System.Text.Encoding.UTF7);  	throw new Exception (jsonErr);  }  else  	throw new Exception (result);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: response = response.Substring (12);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: if (m.Groups.Count != 4)  	throw new Exception ("En error occure' this command is not fully supported !");  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: while (m2.Groups.Count > 1) {  	n.ServerNamespace.Add (new Namespace (m2.Groups [1].Value' m2.Groups [2].Value));  	m2 = m2.NextMatch ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: n.ServerNamespace.Add (new Namespace (m2.Groups [1].Value' m2.Groups [2].Value));  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: m2 = Regex.Match (m.Groups [2].ToString ()' reg2);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: while (m2.Groups.Count > 1) {  	n.UserNamespace.Add (new Namespace (m2.Groups [1].Value' m2.Groups [2].Value));  	m2 = m2.NextMatch ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: n.UserNamespace.Add (new Namespace (m2.Groups [1].Value' m2.Groups [2].Value));  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: m2 = Regex.Match (m.Groups [3].ToString ()' reg2);  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: while (m2.Groups.Count > 1) {  	n.SharedNamespace.Add (new Namespace (m2.Groups [1].Value' m2.Groups [2].Value));  	m2 = m2.NextMatch ();  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Namespace,The following statement contains a magic number: n.SharedNamespace.Add (new Namespace (m2.Groups [1].Value' m2.Groups [2].Value));  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Store,The following statement contains a magic number: if (messageset.StartsWith ("UID "' StringComparison.OrdinalIgnoreCase)) {  	messageset = messageset.Substring (4);  	prefix = "UID ";  }  
Magic Number,AE.Net.Mail,ImapClient,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\ImapClient.cs,Store,The following statement contains a magic number: messageset = messageset.Substring (4);  
Missing Default,AE.Net.Mail,SearchCondition,C:\repos\xy2041_GmailNotifierClone\aenetmail-master\Imap\SearchCondition.cs,ToString,The following switch statement is missing a default case: switch (Field) {  case Fields.BCC:  case Fields.Body:  case Fields.From:  case Fields.Subject:  case Fields.Text:  case Fields.To:  	value = Convert.ToString (value).QuoteString ();  	break;  }  
