Implementation smell,Namespace,Class,File,Method,Description
Long Method,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The method has 77 lines of code.
Complex Method,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,Cyclomatic complexity of the method is 34
Long Statement,RealtimeFilterDemo,CameraStreamSource,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CameraStreamSource.cs,OpenMediaAsync,The length of the statement  "	mediaSourceAttributes [MediaSourceAttributesKeys.Duration] = TimeSpan.FromSeconds (0).Ticks.ToString (CultureInfo.InvariantCulture); " is 132.
Long Statement,RealtimeFilterDemo,CameraStreamSource,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CameraStreamSource.cs,GetSampleAsync,The length of the statement  "			var sample = new MediaStreamSample (_videoStreamDescription' _frameStream' _frameStreamOffset' _frameBufferSize' _currentTime' _emptyAttributes); " is 145.
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: sourcePixelRegion.ForEachRow ((index' width' position) => {  	for (int x = 0; x < width; ++x' ++index) {  		// the only supported color format is ColorFormat.Bgra8888  		uint pixel = sourcePixels [index];  		uint blue = pixel & 0x000000ff;  		// blue color component  		uint green = (pixel & 0x0000ff00) >> 8;  		// green color component  		uint red = (pixel & 0x00ff0000) >> 16;  		// red color component  		uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  		// weighted average component  		uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  		// use average for each color component  		targetPixels [index] = ~grayscale;  		// use inverse grayscale  	}  });  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,CustomEffect,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CustomEffect.cs,OnProcess,The following statement contains a magic number: for (int x = 0; x < width; ++x' ++index) {  	// the only supported color format is ColorFormat.Bgra8888  	uint pixel = sourcePixels [index];  	uint blue = pixel & 0x000000ff;  	// blue color component  	uint green = (pixel & 0x0000ff00) >> 8;  	// green color component  	uint red = (pixel & 0x00ff0000) >> 16;  	// red color component  	uint average = (uint)(0.0722 * blue + 0.7152 * green + 0.2126 * red);  	// weighted average component  	uint grayscale = 0xff000000 | average | (average << 8) | (average << 16);  	// use average for each color component  	targetPixels [index] = ~grayscale;  	// use inverse grayscale  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,GetNewFrameAndApplyEffect,The following statement contains a magic number: if (_semaphore.WaitOne (500)) {  	_cameraPreviewImageSource.InvalidateLoad ();  	var scanlineByteSize = (uint)frameSize.Width * 4;  	// 4 bytes per pixel in BGRA888 mode  	var bitmap = new Bitmap (frameSize' ColorMode.Bgra8888' scanlineByteSize' frameBuffer);  	if (_filterEffect != null) {  		var renderer = new BitmapRenderer (_filterEffect' bitmap);  		await renderer.RenderAsync ();  	} else if (_customEffect != null) {  		var renderer = new BitmapRenderer (_customEffect' bitmap);  		await renderer.RenderAsync ();  	} else {  		var renderer = new BitmapRenderer (_cameraPreviewImageSource' bitmap);  		await renderer.RenderAsync ();  	}  	_semaphore.Release ();  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,GetNewFrameAndApplyEffect,The following statement contains a magic number: if (_semaphore.WaitOne (500)) {  	_cameraPreviewImageSource.InvalidateLoad ();  	var scanlineByteSize = (uint)frameSize.Width * 4;  	// 4 bytes per pixel in BGRA888 mode  	var bitmap = new Bitmap (frameSize' ColorMode.Bgra8888' scanlineByteSize' frameBuffer);  	if (_filterEffect != null) {  		var renderer = new BitmapRenderer (_filterEffect' bitmap);  		await renderer.RenderAsync ();  	} else if (_customEffect != null) {  		var renderer = new BitmapRenderer (_customEffect' bitmap);  		await renderer.RenderAsync ();  	} else {  		var renderer = new BitmapRenderer (_cameraPreviewImageSource' bitmap);  		await renderer.RenderAsync ();  	}  	_semaphore.Release ();  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,NextEffect,The following statement contains a magic number: if (_semaphore.WaitOne (500)) {  	Uninitialize ();  	_effectIndex++;  	if (_effectIndex >= _effectCount) {  		_effectIndex = 0;  	}  	Initialize ();  	_semaphore.Release ();  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,PreviousEffect,The following statement contains a magic number: if (_semaphore.WaitOne (500)) {  	Uninitialize ();  	_effectIndex--;  	if (_effectIndex < 0) {  		_effectIndex = _effectCount - 1;  	}  	Initialize ();  	_semaphore.Release ();  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: filters.Add (new StampFilter (4' 0.3));  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: filters.Add (new StampFilter (4' 0.3));  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: filters.Add (new SharpnessFilter (7));  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  
Magic Number,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following statement contains a magic number: EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  
Magic Number,RealtimeFilterDemo,CameraStreamSource,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\CameraStreamSource.cs,OpenMediaAsync,The following statement contains a magic number: _frameBufferSize = (int)_frameSize.Width * (int)_frameSize.Height * 4;  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (App.Camera != null) {  	double canvasAngle;  	if (Orientation.HasFlag (PageOrientation.LandscapeLeft)) {  		canvasAngle = App.Camera.SensorRotationInDegrees - 90;  	} else if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  		canvasAngle = App.Camera.SensorRotationInDegrees + 90;  	} else// PageOrientation.PortraitUp  	 {  		canvasAngle = App.Camera.SensorRotationInDegrees;  	}  	BackgroundVideoBrush.RelativeTransform = new RotateTransform () {  		CenterX = 0.5'  		CenterY = 0.5'  		Angle = canvasAngle  	};  	App.Camera.SetProperty (KnownCameraGeneralProperties.EncodeWithOrientation' canvasAngle);  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (App.Camera != null) {  	double canvasAngle;  	if (Orientation.HasFlag (PageOrientation.LandscapeLeft)) {  		canvasAngle = App.Camera.SensorRotationInDegrees - 90;  	} else if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  		canvasAngle = App.Camera.SensorRotationInDegrees + 90;  	} else// PageOrientation.PortraitUp  	 {  		canvasAngle = App.Camera.SensorRotationInDegrees;  	}  	BackgroundVideoBrush.RelativeTransform = new RotateTransform () {  		CenterX = 0.5'  		CenterY = 0.5'  		Angle = canvasAngle  	};  	App.Camera.SetProperty (KnownCameraGeneralProperties.EncodeWithOrientation' canvasAngle);  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (App.Camera != null) {  	double canvasAngle;  	if (Orientation.HasFlag (PageOrientation.LandscapeLeft)) {  		canvasAngle = App.Camera.SensorRotationInDegrees - 90;  	} else if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  		canvasAngle = App.Camera.SensorRotationInDegrees + 90;  	} else// PageOrientation.PortraitUp  	 {  		canvasAngle = App.Camera.SensorRotationInDegrees;  	}  	BackgroundVideoBrush.RelativeTransform = new RotateTransform () {  		CenterX = 0.5'  		CenterY = 0.5'  		Angle = canvasAngle  	};  	App.Camera.SetProperty (KnownCameraGeneralProperties.EncodeWithOrientation' canvasAngle);  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (App.Camera != null) {  	double canvasAngle;  	if (Orientation.HasFlag (PageOrientation.LandscapeLeft)) {  		canvasAngle = App.Camera.SensorRotationInDegrees - 90;  	} else if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  		canvasAngle = App.Camera.SensorRotationInDegrees + 90;  	} else// PageOrientation.PortraitUp  	 {  		canvasAngle = App.Camera.SensorRotationInDegrees;  	}  	BackgroundVideoBrush.RelativeTransform = new RotateTransform () {  		CenterX = 0.5'  		CenterY = 0.5'  		Angle = canvasAngle  	};  	App.Camera.SetProperty (KnownCameraGeneralProperties.EncodeWithOrientation' canvasAngle);  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (Orientation.HasFlag (PageOrientation.LandscapeLeft)) {  	canvasAngle = App.Camera.SensorRotationInDegrees - 90;  } else if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  	canvasAngle = App.Camera.SensorRotationInDegrees + 90;  } else// PageOrientation.PortraitUp   {  	canvasAngle = App.Camera.SensorRotationInDegrees;  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (Orientation.HasFlag (PageOrientation.LandscapeLeft)) {  	canvasAngle = App.Camera.SensorRotationInDegrees - 90;  } else if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  	canvasAngle = App.Camera.SensorRotationInDegrees + 90;  } else// PageOrientation.PortraitUp   {  	canvasAngle = App.Camera.SensorRotationInDegrees;  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: canvasAngle = App.Camera.SensorRotationInDegrees - 90;  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: if (Orientation.HasFlag (PageOrientation.LandscapeRight)) {  	canvasAngle = App.Camera.SensorRotationInDegrees + 90;  } else// PageOrientation.PortraitUp   {  	canvasAngle = App.Camera.SensorRotationInDegrees;  }  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: canvasAngle = App.Camera.SensorRotationInDegrees + 90;  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: BackgroundVideoBrush.RelativeTransform = new RotateTransform () {  	CenterX = 0.5'  	CenterY = 0.5'  	Angle = canvasAngle  };  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,OnOrientationChanged,The following statement contains a magic number: BackgroundVideoBrush.RelativeTransform = new RotateTransform () {  	CenterX = 0.5'  	CenterY = 0.5'  	Angle = canvasAngle  };  
Magic Number,RealtimeFilterDemo,MainPage,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\MainPage.xaml.cs,LayoutRoot_Tap,The following statement contains a magic number: if (_cameraSemaphore.WaitOne (100)) {  	await App.Camera.FocusAsync ();  	_cameraSemaphore.Release ();  }  
Missing Default,RealtimeFilterDemo,Effects,D:\newReposJune17\nokia-developer_real-time-filter-demo\RealtimeFilterDemoWP\RealtimeFilterDemo\Effects.cs,Initialize,The following switch statement is missing a default case: switch (_effectIndex) {  case 0:  	{  		EffectName = String.Format (nameFormat' 1' AppResources.Filter_Lomo);  		filters.Add (new LomoFilter (0.5' 0.5' LomoVignetting.High' LomoStyle.Yellow));  	}  	break;  case 1:  	{  		EffectName = String.Format (nameFormat' 2' AppResources.Filter_MagicPen);  		filters.Add (new MagicPenFilter ());  	}  	break;  case 2:  	{  		EffectName = String.Format (nameFormat' 3' AppResources.Filter_Grayscale);  		filters.Add (new GrayscaleFilter ());  	}  	break;  case 3:  	{  		EffectName = String.Format (nameFormat' 4' AppResources.Filter_Antique);  		filters.Add (new AntiqueFilter ());  	}  	break;  case 4:  	{  		EffectName = String.Format (nameFormat' 5' AppResources.Filter_Stamp);  		filters.Add (new StampFilter (4' 0.3));  	}  	break;  case 5:  	{  		EffectName = String.Format (nameFormat' 6' AppResources.Filter_Cartoon);  		filters.Add (new CartoonFilter (false));  	}  	break;  case 6:  	{  		EffectName = String.Format (nameFormat' 7' AppResources.Filter_Sepia);  		filters.Add (new SepiaFilter ());  	}  	break;  case 7:  	{  		EffectName = String.Format (nameFormat' 8' AppResources.Filter_Sharpness);  		filters.Add (new SharpnessFilter (7));  	}  	break;  case 8:  	{  		EffectName = String.Format (nameFormat' 9' AppResources.Filter_AutoEnhance);  		filters.Add (new AutoEnhanceFilter ());  	}  	break;  case 9:  	{  		EffectName = String.Format (nameFormat' 10' AppResources.Filter_None);  	}  	break;  case 10:  	{  		EffectName = String.Format (nameFormat' 11' AppResources.Filter_Custom);  		_customEffect = new CustomEffect (_cameraPreviewImageSource);  	}  	break;  }  
