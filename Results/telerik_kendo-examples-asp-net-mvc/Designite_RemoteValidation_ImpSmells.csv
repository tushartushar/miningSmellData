Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RemoteValidation,WebApiConfig,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\App_Start\WebApiConfig.cs,Register,The length of the statement  "            // Uncomment the following line of code to enable query support for actions with an IQueryable or IQueryable<T> return type. " is 124.
Long Statement,RemoteValidation,WebApiConfig,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\App_Start\WebApiConfig.cs,Register,The length of the statement  "            // To avoid processing unexpected or malicious queries' use the validation settings on QueryableAttribute to validate incoming queries. " is 135.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,Disassociate,The length of the statement  "                using (var scope = new TransactionScope(TransactionScopeOption.Required' new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })) " is 146.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,Manage,The length of the statement  "                        ModelState.AddModelError(""' String.Format("Unable to create local account. An account with the name \"{0}\" may already exist."' User.Identity.Name)); " is 151.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,ExternalLoginCallback,The length of the statement  "            AuthenticationResult result = OAuthWebSecurity.VerifyAuthentication(Url.Action("ExternalLoginCallback"' new { ReturnUrl = returnUrl })); " is 136.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,ExternalLoginCallback,The length of the statement  "                return View("ExternalLoginConfirmation"' new RegisterExternalLoginModel { UserName = result.UserName' ExternalLoginData = loginData }); " is 135.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,ExternalLoginConfirmation,The length of the statement  "            if (User.Identity.IsAuthenticated || !OAuthWebSecurity.TryDeserializeProviderUserId(model.ExternalLoginData' out provider' out providerUserId)) " is 143.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,RemoveExternalLogins,The length of the statement  "            ViewBag.ShowRemoveButton = externalLogins.Count > 1 || OAuthWebSecurity.HasLocalAccount(WebSecurity.GetUserId(User.Identity.Name)); " is 131.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,ErrorCodeToString,The length of the statement  "                    return "The authentication provider returned an error. Please verify your entry and try again. If the problem persists' please contact your system administrator."; " is 163.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,ErrorCodeToString,The length of the statement  "                    return "The user creation request has been canceled. Please verify your entry and try again. If the problem persists' please contact your system administrator."; " is 161.
Long Statement,RemoteValidation.Controllers,AccountController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\AccountController.cs,ErrorCodeToString,The length of the statement  "                    return "An unknown error occurred. Please verify your entry and try again. If the problem persists' please contact your system administrator."; " is 143.
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: if (field == "userId")              {                  if (value == "123" || value == "132")                  {                      return Json(new { Success = true }' JsonRequestBehavior.AllowGet);                  }                  else                  {                      return new HttpStatusCodeResult(400' "Failed validation for userId");                  }              }
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: if (field == "qty")              {                  value = value != "" ? value: "-1";                  int val = int.Parse(value);                  if (val > 0 && val < 10)                  {                      return Json(new { Success = true }' JsonRequestBehavior.AllowGet);                  }                  else                  {                      return new HttpStatusCodeResult(400' "Failed validation for qty");                  }              }
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: if (field == "qty")              {                  value = value != "" ? value: "-1";                  int val = int.Parse(value);                  if (val > 0 && val < 10)                  {                      return Json(new { Success = true }' JsonRequestBehavior.AllowGet);                  }                  else                  {                      return new HttpStatusCodeResult(400' "Failed validation for qty");                  }              }
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: if (field == "price")              {                  value = value != "" ? value : "-1";                  int val = int.Parse(value);                  if (val > 100 && val < 1000)                  {                      return Json(new { Success = true }' JsonRequestBehavior.AllowGet);                  }                  else                  {                      return new HttpStatusCodeResult(400' "Failed validation for price");                  }              }
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: if (field == "price")              {                  value = value != "" ? value : "-1";                  int val = int.Parse(value);                  if (val > 100 && val < 1000)                  {                      return Json(new { Success = true }' JsonRequestBehavior.AllowGet);                  }                  else                  {                      return new HttpStatusCodeResult(400' "Failed validation for price");                  }              }
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: if (field == "price")              {                  value = value != "" ? value : "-1";                  int val = int.Parse(value);                  if (val > 100 && val < 1000)                  {                      return Json(new { Success = true }' JsonRequestBehavior.AllowGet);                  }                  else                  {                      return new HttpStatusCodeResult(400' "Failed validation for price");                  }              }
Magic Number,RemoteValidation.Controllers,HomeController,C:\repos\telerik_kendo-examples-asp-net-mvc\validator-remotevalidation\RemoteValidation\Controllers\HomeController.cs,Validate,The following statement contains a magic number: return new HttpStatusCodeResult(400' "Validation failed");
