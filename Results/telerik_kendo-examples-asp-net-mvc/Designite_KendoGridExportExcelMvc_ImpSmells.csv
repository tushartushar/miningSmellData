Implementation smell,Namespace,Class,File,Method,Description
Long Method,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The method has 119 lines of code.
Complex Method,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,Cyclomatic complexity of the method is 14
Long Parameter List,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetColumnHeadingValue,The method has 6 parameters. Parameters: spreadsheet' worksheet' columnIndex' stringValue' useSharedString' save
Long Parameter List,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The method has 7 parameters. Parameters: spreadsheet' worksheet' columnIndex' rowIndex' stringValue' useSharedString' save
Long Parameter List,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The method has 7 parameters. Parameters: spreadsheet' worksheet' columnIndex' rowIndex' datetimeValue' styleIndex' save
Long Parameter List,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The method has 7 parameters. Parameters: spreadsheet' worksheet' columnIndex' rowIndex' doubleValue' styleIndex' save
Long Parameter List,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The method has 7 parameters. Parameters: spreadsheet' worksheet' columnIndex' rowIndex' boolValue' styleIndex' save
Long Parameter List,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The method has 8 parameters. Parameters: spreadsheet' worksheet' columnIndex' rowIndex' valueType' value' styleIndex' save
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,CreateWorkbook,The length of the statement  "                spreadSheet = DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(fileName' DocumentFormat.OpenXml.SpreadsheetDocumentType.Workbook' false); " is 148.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,CreateWorkbook,The length of the statement  "                // System.Windows.MessageBox.Show(exception.Message' "Excel OpenXML basics"' System.Windows.MessageBoxButton.OK' System.Windows.MessageBoxImage.Hand); " is 150.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddWorksheet,The length of the statement  "            DocumentFormat.OpenXml.Spreadsheet.Sheets sheets = spreadsheet.WorkbookPart.Workbook.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.Sheets>(); " is 144.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddWorksheet,The length of the statement  "            worksheetPart.Worksheet = new DocumentFormat.OpenXml.Spreadsheet.Worksheet(new DocumentFormat.OpenXml.Spreadsheet.SheetData()); " is 127.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.NumberingFormats>(new DocumentFormat.OpenXml.Spreadsheet.NumberingFormats()' 0); " is 135.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.NumberingFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.NumberingFormat>( " is 141.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.Borders>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.Border>( " is 123.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellStyleFormats>(new DocumentFormat.OpenXml.Spreadsheet.CellStyleFormats()' 4); " is 135.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellStyleFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>( " is 136.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormats>(new DocumentFormat.OpenXml.Spreadsheet.CellFormats()' 5); " is 125.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>( " is 131.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>( " is 131.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>( " is 131.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>( " is 131.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddSharedString,The length of the statement  "            DocumentFormat.OpenXml.Spreadsheet.SharedStringTable sharedStringTable = spreadsheet.WorkbookPart.SharedStringTablePart.SharedStringTable; " is 138.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,IndexOfSharedString,The length of the statement  "            DocumentFormat.OpenXml.Spreadsheet.SharedStringTable sharedStringTable = spreadsheet.WorkbookPart.SharedStringTablePart.SharedStringTable; " is 138.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,IndexOfSharedString,The length of the statement  "            foreach (DocumentFormat.OpenXml.Spreadsheet.SharedStringItem sharedString in sharedStringTable.Elements<DocumentFormat.OpenXml.Spreadsheet.SharedStringItem>()) " is 159.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "            return SetCellValue(spreadsheet' worksheet' columnIndex' rowIndex' DocumentFormat.OpenXml.Spreadsheet.CellValues.Date' columnValue' styleIndex' save); " is 150.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "            return SetCellValue(spreadsheet' worksheet' columnIndex' rowIndex' DocumentFormat.OpenXml.Spreadsheet.CellValues.Number' columnValue' styleIndex' save); " is 152.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "            return SetCellValue(spreadsheet' worksheet' columnIndex' rowIndex' DocumentFormat.OpenXml.Spreadsheet.CellValues.Boolean' columnValue' styleIndex' save); " is 153.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetColumnWidth,The length of the statement  "            column = columns.Elements<DocumentFormat.OpenXml.Spreadsheet.Column>().Where(item => item.Min == columnIndex).FirstOrDefault(); " is 127.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "            DocumentFormat.OpenXml.Spreadsheet.SheetData sheetData = worksheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.SheetData>(); " is 129.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "                    previousRow = sheetData.Elements<DocumentFormat.OpenXml.Spreadsheet.Row>().Where(item => item.RowIndex == counter).FirstOrDefault(); " is 132.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "            if (row.Elements<DocumentFormat.OpenXml.Spreadsheet.Cell>().Where(item => item.CellReference.Value == cellAddress).Count() > 0) " is 127.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "                cell = row.Elements<DocumentFormat.OpenXml.Spreadsheet.Cell>().Where(item => item.CellReference.Value == cellAddress).First(); " is 126.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "                    previousCell = row.Elements<DocumentFormat.OpenXml.Spreadsheet.Cell>().Where(item => item.CellReference.Value == Excel.ColumnNameFromIndex(counter) + rowIndex).FirstOrDefault(); " is 177.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The length of the statement  "                    previousColumn = columns.Elements<DocumentFormat.OpenXml.Spreadsheet.Column>().Where(item => item.Min == counter).FirstOrDefault(); " is 131.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,CreateWorkbook,The length of the statement  "            spreadSheet = DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(stream' DocumentFormat.OpenXml.SpreadsheetDocumentType.Workbook' false); " is 146.
Long Statement,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddAdditionalStyles,The length of the statement  "            stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>( " is 131.
Magic Number,KendoGridExportExcelMvc.Controllers,HomeController,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Controllers\HomeController.cs,ExportToExcel,The following statement contains a magic number: Excel.SetColumnWidth(worksheet' mdx + 1' modelObject[mdx].width != null                          ? Convert.ToInt32(modelObject[mdx].width.ToString()) / 4                          : 25);
Magic Number,KendoGridExportExcelMvc.Controllers,HomeController,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Controllers\HomeController.cs,ExportToExcel,The following statement contains a magic number: Excel.SetColumnWidth(worksheet' mdx + 1' modelObject[mdx].width != null                          ? Convert.ToInt32(modelObject[mdx].width.ToString()) / 4                          : 25);
Magic Number,KendoGridExportExcelMvc.Controllers,HomeController,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Controllers\HomeController.cs,ExportToExcel,The following statement contains a magic number: Excel.SetCellValue(spreadsheet' worksheet' Convert.ToUInt32(mdx + 1)' Convert.ToUInt32(idx + 2)'                              dataObject[idx][modelObject[mdx].field.ToString()].ToString()'                              false' false);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.NumberingFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.NumberingFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.NumberingFormat()                 {                     NumberFormatId = 164'                     FormatCode = "#'##0.00"                     + "\\ \"" + System.Globalization.CultureInfo.CurrentUICulture.NumberFormat.CurrencySymbol + "\""                 }' 0);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.Fonts>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.Font>(                 new DocumentFormat.OpenXml.Spreadsheet.Font()                 {                     FontSize = new DocumentFormat.OpenXml.Spreadsheet.FontSize()                     {                         Val = 11                     }'                     FontName = new DocumentFormat.OpenXml.Spreadsheet.FontName()                     {                         Val = "Calibri"                     }                 }' 0);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.Fills>(new DocumentFormat.OpenXml.Spreadsheet.Fills()' 2);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.Borders>(new DocumentFormat.OpenXml.Spreadsheet.Borders()' 3);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellStyleFormats>(new DocumentFormat.OpenXml.Spreadsheet.CellStyleFormats()' 4);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormats>(new DocumentFormat.OpenXml.Spreadsheet.CellFormats()' 5);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     ApplyNumberFormat = true'                     FormatId = 0'                     NumberFormatId = 22'                     FontId = 0'                     FillId = 0'                     BorderId = 0                 }'                    1);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     ApplyNumberFormat = true'                     FormatId = 0'                     NumberFormatId = 164'                     FontId = 0'                     FillId = 0'                     BorderId = 0                 }'                    2);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     ApplyNumberFormat = true'                     FormatId = 0'                     NumberFormatId = 164'                     FontId = 0'                     FillId = 0'                     BorderId = 0                 }'                    2);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     ApplyNumberFormat = true'                     FormatId = 0'                     NumberFormatId = 10'                     FontId = 0'                     FillId = 0'                     BorderId = 0                 }'                    3);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddBasicStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     ApplyNumberFormat = true'                     FormatId = 0'                     NumberFormatId = 10'                     FontId = 0'                     FillId = 0'                     BorderId = 0                 }'                    3);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,ColumnNameFromIndex,The following statement contains a magic number: remainder = (columnIndex - 1) % 26;
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,ColumnNameFromIndex,The following statement contains a magic number: columnName = System.Convert.ToChar(65 + remainder).ToString() + columnName;
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,ColumnNameFromIndex,The following statement contains a magic number: columnIndex = (uint)((columnIndex - remainder) / 26);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetColumnHeadingValue,The following statement contains a magic number: return SetCellValue(spreadsheet' worksheet' columnIndex' 1' cellValueType' columnValue' 4' save);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,SetCellValue,The following statement contains a magic number: columns.InsertAfter(                     new DocumentFormat.OpenXml.Spreadsheet.Column()                     {                         Min = columnIndex'                         Max = columnIndex'                         CustomWidth = true'                         Width = 9                     }' previousColumn);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddAdditionalStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.Fonts>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.Font>(                 new DocumentFormat.OpenXml.Spreadsheet.Font()                 {                     FontSize = new DocumentFormat.OpenXml.Spreadsheet.FontSize()                     {                         Val = 12                     }'                     FontName = new DocumentFormat.OpenXml.Spreadsheet.FontName()                     {                         Val = "Calibri"                     }'                     Bold = new DocumentFormat.OpenXml.Spreadsheet.Bold()                     {                         Val = true                     }                 }' 1);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddAdditionalStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.Fills>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.Fill>(                 new DocumentFormat.OpenXml.Spreadsheet.Fill()                 {                     PatternFill = new DocumentFormat.OpenXml.Spreadsheet.PatternFill()                     {                         PatternType = new DocumentFormat.OpenXml.EnumValue<DocumentFormat.OpenXml.Spreadsheet.PatternValues>()                         {                             Value = DocumentFormat.OpenXml.Spreadsheet.PatternValues.Solid                         }'                         BackgroundColor = new DocumentFormat.OpenXml.Spreadsheet.BackgroundColor                         {                             Indexed = 64U                         }'                         ForegroundColor = new DocumentFormat.OpenXml.Spreadsheet.ForegroundColor                         {                             Rgb = "F2F2F2"                         }                     }                 }' 2);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddAdditionalStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.Fills>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.Fill>(                 new DocumentFormat.OpenXml.Spreadsheet.Fill()                 {                     PatternFill = new DocumentFormat.OpenXml.Spreadsheet.PatternFill()                     {                         PatternType = new DocumentFormat.OpenXml.EnumValue<DocumentFormat.OpenXml.Spreadsheet.PatternValues>()                         {                             Value = DocumentFormat.OpenXml.Spreadsheet.PatternValues.Solid                         }'                         BackgroundColor = new DocumentFormat.OpenXml.Spreadsheet.BackgroundColor                         {                             Indexed = 64U                         }'                         ForegroundColor = new DocumentFormat.OpenXml.Spreadsheet.ForegroundColor                         {                             Rgb = "F2F2F2"                         }                     }                 }' 2);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddAdditionalStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     FormatId = 0'                     NumberFormatId = 0'                     FontId = 1'                     FillId = 2'                     ApplyFill = true'                     ApplyFont = true                 }' 4);
Magic Number,KendoGridExportExcelMvc.Utilities,Excel,D:\research\architectureSmells\repos1\telerik_kendo-examples-asp-net-mvc\grid-export-to-excel\KendoGridExportExcelMvc\Utilities\Excel.cs,AddAdditionalStyles,The following statement contains a magic number: stylesheet.GetFirstChild<DocumentFormat.OpenXml.Spreadsheet.CellFormats>().InsertAt<DocumentFormat.OpenXml.Spreadsheet.CellFormat>(                 new DocumentFormat.OpenXml.Spreadsheet.CellFormat()                 {                     FormatId = 0'                     NumberFormatId = 0'                     FontId = 1'                     FillId = 2'                     ApplyFill = true'                     ApplyFont = true                 }' 4);
