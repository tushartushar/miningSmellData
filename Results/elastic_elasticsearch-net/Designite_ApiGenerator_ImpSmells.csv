Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ApiGenerator.Domain,ApiEndpoint,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\ApiEndpoint.cs,PatchMethod,Cyclomatic complexity of the method is 19
Complex Method,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,RequestConstructors,Cyclomatic complexity of the method is 10
Complex Method,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,Cyclomatic complexity of the method is 10
Complex Method,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,GetFluentRouteSetters,Cyclomatic complexity of the method is 9
Long Identifier,ApiGenerator,Extensions,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Extensions.cs,,The length of the parameter RemovePunctuationExceptFirstUnderScore is 38.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,Generate,The length of the statement  "			using (var pbar = new ProgressBar(actions.Count' "Generating code"' new ProgressBarOptions { BackgroundColor = ConsoleColor.DarkGray })) " is 136.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,CreateRestApiSpecModel,The length of the statement  "			using (var pbar = new ProgressBar(directories.Count' $"Listing {directories.Count} directories"' new ProgressBarOptions { BackgroundColor = ConsoleColor.DarkGray })) " is 165.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,CreateRestApiSpecModel,The length of the statement  "					using (var fileProgress = pbar.Spawn(jsonFiles.Count' $"Listing {jsonFiles.Count} files"' new ProgressBarOptions { ProgressCharacter = 'â”€'' BackgroundColor = ConsoleColor.DarkGray })) " is 183.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,CreateApiEndpoint,The length of the statement  "			var replaceFile = Path.Combine(Path.GetDirectoryName(jsonFile)' Path.GetFileNameWithoutExtension(jsonFile)) + ".replace.json"; " is 126.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateClientInterface,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"IElasticLowLevelClient.Generated.cshtml")' model).ToString(); " is 144.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateRawDispatch,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"_LowLevelDispatch.Generated.cshtml")' model).ToString(); " is 139.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateRawClient,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"ElasticLowLevelClient.Generated.cshtml")' model).ToString(); " is 143.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateDescriptors,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"_Descriptors.Generated.cshtml")' model).ToString(); " is 134.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateRequests,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"_Requests.Generated.cshtml")' model).ToString(); " is 131.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateRequestParameters,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"RequestParameters.Generated.cshtml")' model).ToString(); " is 139.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateRequestParametersExtensions,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"_RequestParametersExtensions.Generated.cshtml")' model).ToString(); " is 150.
Long Statement,ApiGenerator,ApiGenerator,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\ApiGenerator.cs,GenerateEnums,The length of the statement  "			var source = RazorHelper.Execute(File.ReadAllText(CodeConfiguration.ViewFolder + @"Enums.Generated.cshtml")' model).ToString(); " is 127.
Long Statement,ApiGenerator,RestSpecDownloader,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\RestSpecDownloader.cs,FindJsonFilesOnListing,The length of the statement  "			if (!Directory.Exists(CodeConfiguration.RestSpecificationFolder)) Directory.CreateDirectory(CodeConfiguration.RestSpecificationFolder); " is 135.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,RequestConstructors,The length of the statement  "					doc += "\r\n" + string.Join("\t\t\r\n"' urlRouteParameters.Select(p => $"///<param name=\"{p.Key}\">{(p.Value.Required ? "this parameter is required" : "Optional' accepts null")}</param>")); " is 190.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,RequestConstructors,The length of the statement  "				doc += "\r\n\t\t\r\n" + $"///<param name=\"document\"> describes an elasticsearch document of type <typeparamref name=\"{documentPathGeneric}\"/> from which the index' type and id can be inferred</param>"; " is 205.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,RequestConstructors,The length of the statement  "				var documentRoute = "r=>r.Required(\"index\"' index ?? document.Self.Index).Required(\"type\"' type ?? document.Self.Type).Required(\"id\"' id ?? document.Self.Id)"; " is 165.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,RequestConstructors,The length of the statement  "				var constructor = $"DocumentPath<{documentPathGeneric}> document' IndexName index = null' TypeName type = null' Id id = null"; " is 126.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,RequestConstructors,The length of the statement  "				var c = new Constructor { AdditionalCode = documentFromPath' Generated = $"public {m}({constructor}) : base({documentRoute}){{ this.DocumentFromPath(document.Document); }}"' Description = doc' }; " is 195.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,ParameterlessIndicesTypesConstructor,The length of the statement  "				doc = $"///<summary>{this.Url.Path}<para><typeparamref name=\"{generic}\"/> describes an elasticsearch document type from which the index' type and id can be inferred</para></summary>"; " is 185.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,ParameterlessIndicesTypesConstructor,The length of the statement  "				c = new Constructor { Generated = $"public {m}() : this(typeof({generic})' typeof({generic})) {{}}"' Description = doc' }; " is 122.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The length of the statement  "					doc += "\r\n" + string.Join("\t\t\r\n"' requiredUrlRouteParameters.Select(p => $"///<param name=\"{p.Key}\"> this parameter is required</param>")); " is 147.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The length of the statement  "				if ((m == "DeleteByQueryDescriptor" || m == "UpdateByQueryDescriptor") && requiredUrlRouteParameters.Count() == 1 && !string.IsNullOrEmpty(this.RequestTypeGeneric)) " is 164.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The length of the statement  "					generated = $"public {m}({par}) : base({routing}){{ Self.Indices = typeof({generic}); Self.Types = typeof({generic}); }}"; " is 122.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The length of the statement  "				doc += "\r\n\t\t\r\n" + $"///<param name=\"document\"> describes an elasticsearch document of type <typeparamref name=\"{documentPathGeneric}\"/> from which the index' type and id can be inferred</param>"; " is 205.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The length of the statement  "				var documentRoute = "r=>r.Required(\"index\"' document.Self.Index).Required(\"type\"' document.Self.Type).Required(\"id\"' document.Self.Id)"; " is 142.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The length of the statement  "				var c = new Constructor { AdditionalCode = documentFromPath' Generated = $"public {m}(DocumentPath<{documentPathGeneric}> document) : base({documentRoute}){{ this.DocumentFromPath(document.Document); }}"' Description = doc }; " is 225.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,AddParameterlessIndicesTypesConstructor,The length of the statement  "			var documentRoute = $"r=> r.Required(\"index\"' (Indices)typeof({generic})).Required(\"type\"' (Types)typeof({generic}))"; " is 122.
Long Statement,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,GetFluentRouteSetters,The length of the statement  "				var code = $"public {returnType} {p.InterfaceName}({ClrParamType(p.ClrTypeName)} {paramName}) => Assign(a=>a.RouteValues.{routeSetter}(\"{p.Name}\"' {routeValue}));"; " is 166.
Complex Conditional,ApiGenerator.Domain,CsharpMethod,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\CsharpMethod.cs,DescriptorConstructors,The conditional expression  "(m == "DeleteByQueryDescriptor" || m == "UpdateByQueryDescriptor") && requiredUrlRouteParameters.Count() == 1 && !string.IsNullOrEmpty(this.RequestTypeGeneric)"  is complex.
Empty Catch Block,ApiGenerator.Domain,ApiEndpoint,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\ApiEndpoint.cs,PatchMethod,The method has an empty catch block.
Magic Number,ApiGenerator.Domain,ApiEndpoint,C:\repos\elastic_elasticsearch-net\src\CodeGeneration\ApiGenerator\Domain\ApiEndpoint.cs,OptionallyAppendHttpMethod,The following statement contains a magic number: if (availableMethods.Count() == 2 && availableMethods.Contains("GET"))  			{  				//if on operation has two endpoints and one of them is GET always favor the other as default  				return currentHttpMethod == "GET" ? "Get" : string.Empty;  			}
