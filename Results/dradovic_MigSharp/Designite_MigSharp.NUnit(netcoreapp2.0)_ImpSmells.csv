Implementation smell,Namespace,Class,File,Method,Description
Long Method,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The method has 241 lines of code.
Long Method,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The method has 102 lines of code.
Complex Method,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,Cyclomatic complexity of the method is 9
Complex Method,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,Cyclomatic complexity of the method is 13
Complex Method,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,GetTestValue,Cyclomatic complexity of the method is 9
Long Parameter List,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,VerifyMigrationReportProps,The method has 5 parameters. Parameters: database' expectedDataTypes' expectedPrimaryKeyDataTypes' expectedIdentityDataTypes' expectedLongestName
Long Parameter List,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,Validate,The method has 5 parameters. Parameters: providerInfos' options' report' errors' warnings
Long Parameter List,MigSharp.NUnit.Process,ProviderStub,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,AddForeignKey,The method has 5 parameters. Parameters: tableName' referencedTableName' columnNames' constraintName' cascadeOnDelete
Long Identifier,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,,The length of the parameter _duplicateProviderTestAssembly is 30.
Long Identifier,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,,The length of the parameter TimestampModuleTestAssemblySource is 33.
Long Identifier,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,,The length of the parameter DuplicateTimestampProviderAssemblySource is 40.
Long Identifier,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the parameter exclusiveIntegrationTestMigration is 33.
Long Identifier,MigSharp.NUnit.Process,PersistedVersioningTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\PersistedVersioningTests.cs,,The length of the parameter ExistingTimestampForDefaultModule is 33.
Long Identifier,MigSharp.NUnit.Process,PersistedVersioningTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\PersistedVersioningTests.cs,,The length of the parameter ExistingTimestampForTestModule is 30.
Long Identifier,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,CheckProviderValidation,The length of the parameter expectedTotalNumberOfSupportedProviders is 39.
Long Identifier,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,CheckProviderValidation,The length of the parameter totalNumberOfSupportedProviders is 31.
Long Identifier,MigSharp.NUnit.Process,ProviderStub,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,,The length of the parameter NotSupportedMessageForAddColumn is 31.
Long Statement,MigSharp.NUnit,DbSchemaTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\DbSchemaTests.cs,TestSelectingNonExistingProvider,The length of the statement  "            Assert.That(() => new DbSchema("..."' new DbPlatform(Platform.SqlServer' 8))' Throws.TypeOf<NotSupportedException>().With.Message.EqualTo("Could not find a provider for 'SqlServer' Version: 8' Driver: AdoNet'.")); " is 213.
Long Statement,MigSharp.NUnit,DbSchemaTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\DbSchemaTests.cs,TestSelectingNonExistingOdbcProvider,The length of the statement  "            Assert.That(() => new DbSchema("..."' new DbPlatform(Platform.SqlServer' 8' Driver.Odbc))' Throws.TypeOf<NotSupportedException>().With.Message.EqualTo("Could not find a provider for 'SqlServer' Version: 8' Driver: Odbc'.")); " is 224.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,TestCases,The length of the statement  "                CollectionAssert.AreEqual(expectedSteps[i].Migrations.Select(GetMigrationDescription).ToArray()' batch.Steps[i].Migrations.Select(GetMigrationDescription).ToArray()' "Unexpected migrations in step {0}."' i); " is 207.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(Enumerable.Empty<IMigrationMetadata>()' Enumerable.Empty<IAggregateMigrationMetadata>()' Enumerable.Empty<IMigrationMetadata>()' Enumerable.Empty<IMigrationStepMetadata>()).SetName("Empty"); " is 212.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' Enumerable.Empty<IAggregateMigrationMetadata>()' Enumerable.Empty<IMigrationMetadata>()' new[] { step1' step2' step3 }).SetName("Executed none"); " is 189.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' Enumerable.Empty<IAggregateMigrationMetadata>()' new[] { m1' m2 }' new[] { step3 }).SetName("Latest missing"); " is 154.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' Enumerable.Empty<IAggregateMigrationMetadata>()' new[] { m1' m3 }' new[] { step2 }).SetName("Historic missing"); " is 156.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' Enumerable.Empty<IAggregateMigrationMetadata>()' new[] { m1' m2' m3 }' Enumerable.Empty<IMigrationStepMetadata>()).SetName("All up-to-date"); " is 185.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' new[] { a3 }' Enumerable.Empty<IMigrationMetadata>()' new[] { stepAll }).SetName("Aggregate all"); " is 142.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' new[] { a2 }' Enumerable.Empty<IMigrationMetadata>()' new[] { stepTo2' step3 }).SetName("Aggregate intermediate migrations"); " is 169.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3 }' new[] { a2' a3 }' Enumerable.Empty<IMigrationMetadata>()' new[] { stepAll }).SetName("Aggregate maximally"); " is 152.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3' x1 }' Enumerable.Empty<IAggregateMigrationMetadata>()' Enumerable.Empty<IMigrationMetadata>()' new[] { step1' stepX1' step2' step3 }).SetName("Migration from another module"); " is 217.
Long Statement,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The length of the statement  "            yield return new Case(new[] { m1' m2' m3' x1 }' new[] { a2 }' Enumerable.Empty<IMigrationMetadata>()' new[] { stepX1' stepTo2' step3 }).SetName("Aggregate intermediate migrations excluding migration from another module"); " is 221.
Long Statement,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,MigratorUsesModuleSpecificTimestampProvider,The length of the statement  "            A.CallTo(() => versioning.ExecutedMigrations).Returns(Enumerable.Empty<IMigrationMetadata>()); // pretend no migrations ran so far " is 130.
Long Statement,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,MigratorThrowsErrorIfDuplicateTimestampProvidersFoundForModule,The length of the statement  "            Assert.That(() => migrator.MigrateTo(_duplicateProviderTestAssembly' 1)' Throws.ArgumentException.With.Message.EqualTo("Cannot have more than one timestamp provider responsible for module: 'TimestampProviderDuplicateTest'.")); " is 226.
Long Statement,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,Compile,The length of the statement  "                MetadataReference.CreateFromFile(Assembly.Load("netstandard' Version=2.0.0.0").Location) // see: https://stackoverflow.com/questions/46421686/how-to-write-a-roslyn-analyzer-that-references-a-dotnet-standard-2-0-project " is 218.
Long Statement,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,Compile,The length of the statement  "            CSharpCompilation compilation = CSharpCompilation.Create(assemblyName' new[] { syntaxTree }' references' new CSharpCompilationOptions(OutputKind.DynamicallyLinkedLibrary)); " is 172.
Long Statement,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,Compile,The length of the statement  "                CollectionAssert.IsEmpty(compilationErrors' "Could not compile sources."); // this nicely outputs the compilation errors at the top of the output " is 145.
Long Statement,MigSharp.NUnit,AttributeMigrationTimestampProvider,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,GetTimestamp,The length of the statement  "                var timestampAttr = (MigrationTimestampAttribute)migration.GetCustomAttributes(typeof(MigrationTimestampAttribute)' false).FirstOrDefault(); " is 140.
Long Statement,MigSharp.NUnit,AttributeMigrationTimestampProvider,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,GetTimestamp,The length of the statement  "                Assert.IsNotNull(timestampAttr' string.Format(CultureInfo.CurrentCulture' "Could find timestamp attribute on migration ({0}). Types implementing migrations using the AttributeMigrationTimestampProvider must have a MigrationTimestamp attribute."' migration.Name)); " is 263.
Long Statement,MigSharp.NUnit,InterfaceMigrationTimestampProvider,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,GetTimestamp,The length of the statement  "                Assert.IsNotNull(instance' string.Format(CultureInfo.CurrentCulture' "Could find timestamp interface on migration ({0}). Types implementing migrations using the InterfaceMigrationTimestampProvider must implement the IMigrationTimestamp interface."' migration.Name)); " is 266.
Long Statement,MigSharp.NUnit,SupportedPlatformsTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\SupportedPlatformsTests.cs,TestAddOrReplace,The length of the statement  "            CollectionAssert.AreEquivalent(new[] { "SqlServer' Version: 11' Driver: AdoNet" }' supportedPlatforms.Select(n => n.ToString()).ToArray()); " is 139.
Long Statement,MigSharp.NUnit,SupportedPlatformsTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\SupportedPlatformsTests.cs,TestAddOrReplace,The length of the statement  "            supportedPlatforms.AddOrReplaceMinimumRequirement(DbPlatform.SqlServer2012); // re-adding does not throw and does not add duplicate " is 131.
Long Statement,MigSharp.NUnit,SupportedPlatformsTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\SupportedPlatformsTests.cs,TestAddOrReplace,The length of the statement  "            CollectionAssert.AreEquivalent(new[] { "SqlServer' Version: 11' Driver: AdoNet" }' supportedPlatforms.Select(n => n.ToString()).ToArray()); " is 139.
Long Statement,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The length of the statement  "                new[] { new DataType(DbType.Int32)' new DataType(DbType.String)' new DataType(DbType.AnsiString)' new DataType(DbType.String' 128)' new DataType(DbType.Decimal' 10' 2)' new DataType(DbType.StringFixedLength' 128)' new DataType(DbType.Int64) }' " is 243.
Long Statement,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The length of the statement  "                new[] { new DataType(DbType.Int32)' new DataType(DbType.Int64)' new DataType(DbType.String' 100)' new DataType(DbType.DateTime) }' " is 130.
Long Statement,MigSharp.NUnit.Integration,ExpectedTable,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\ExpectedTable.cs,Add,The length of the statement  "            if (values.Length != Columns.Count) throw new ArgumentException("The provided number of values does not match number of columns."); " is 131.
Long Statement,MigSharp.NUnit.Integration,ExclusiveIntegrationTestMigrationExtensions,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IExclusiveIntegrationTestMigration.cs,IsFeatureSupported,The length of the statement  "            IVersionConstrainedExclusiveIntegrationTestMigration constrainedMigration = migration as IVersionConstrainedExclusiveIntegrationTestMigration; " is 142.
Long Statement,MigSharp.NUnit.Integration,ExclusiveIntegrationTestMigrationExtensions,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IExclusiveIntegrationTestMigration.cs,IsFeatureSupported,The length of the statement  "                return db.Context.ProviderMetadata.MajorVersion >= constrainedMigration.MinimumVersionSupportingFeatureUnderTest(db.Context.ProviderMetadata.Platform).MajorVersion; " is 164.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestOnlyFetchingMigrationsDoesNotCreateVersioningTable,The length of the statement  "            Assert.IsNull(versioningTable' "Migrator.IsUpToDate should not have any side-effects. In particualar' it should *not* create a versioning table. This allows for being able to check the up-to-dateness of a db without having the privilege to create tables."); " is 257.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,CheckResultsOfMigration1,The length of the statement  "            Assert.IsNotNull(versioningTable' string.Format(CultureInfo.CurrentCulture' "The '{0}' table was not created."' _options.VersioningTableName)); " is 143.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,CheckResultsOfMigration1,The length of the statement  "            Assert.IsNotNull(customerTable' string.Format(CultureInfo.CurrentCulture' "The '{0}' table was not created."' migration1.Tables[0].FullName)); " is 142.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,CheckResultsOfMigration1,The length of the statement  "            Assert.AreEqual(MigrationExportAttribute.DefaultModuleName' versioningTable.Rows[0][1]' "The module of Migration1 is wrong."); " is 126.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestScriptingAndExecutingMigration1,The length of the statement  "            FileInfo[] scriptFiles = targetDirectory.GetFiles(string.Format(CultureInfo.InvariantCulture' "Migration." + MigrationExportAttribute.DefaultModuleName + ".1.sql")); " is 165.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestScriptingAllMigrations,The length of the statement  "                .OrderBy(f => int.Parse(Regex.Match(f.Name' @"Migration\..*\.(\d+)\.sql").Groups[1].Value' CultureInfo.InvariantCulture)) " is 121.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestScriptingAllMigrations,The length of the statement  "            Assert.IsNull(versioningTable' string.Format(CultureInfo.CurrentCulture' "The '{0}' table was created altough ScriptingMode was ScriptOnly."' _options.VersioningTableName)); " is 173.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestScriptingAllMigrations,The length of the statement  "            Assert.IsNull(customerTable' string.Format(CultureInfo.CurrentCulture' "The '{0}' table was created altough ScriptingMode was ScriptOnly."' migration1.Tables[0].FullName)); " is 172.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestScriptingAllMigrations,The length of the statement  "            var info = new ConnectionInfo(ConnectionString' metadata.InvariantName' metadata.SupportsTransactions' metadata.EnableAnsiQuotesCommand); " is 137.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestScriptingAllMigrations,The length of the statement  "                    Trace.WriteLine(Environment.NewLine + string.Format(CultureInfo.CurrentCulture' "Executing script '{0}':"' scriptFile.FullName)); " is 129.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                if (exclusiveIntegrationTestMigration != null && exclusiveIntegrationTestMigration.PlatformsNotSupportingFeatureUnderTest.Contains(DbPlatform.Platform)) " is 152.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                IVersionConstrainedExclusiveIntegrationTestMigration constrainedMigration = migration as IVersionConstrainedExclusiveIntegrationTestMigration; " is 142.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                if (constrainedMigration != null && DbPlatform.MajorVersion < constrainedMigration.MinimumVersionSupportingFeatureUnderTest(DbPlatform.Platform).MajorVersion) " is 158.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                    Assert.IsNotNull(table' string.Format(CultureInfo.CurrentCulture' "The table '{0}' was not created."' expectedTable.FullName)); " is 127.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                    Assert.AreEqual(expectedTable.Columns.Count' table.Columns.Count' "The actual number of columns of the table '{0}' is wrong."' table.TableName); " is 144.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                    Assert.AreEqual(expectedTable.Count' table.Rows.Count' "The actual number of rows of the table '{0}' is wrong."' table.TableName); " is 130.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                                Assert.IsTrue(evalValue(actualValue)' string.Format(CultureInfo.CurrentCulture' "In '{0}'' the actual value of cell {1}/{2} of table '{3}' is wrong (the custom handler returned false)."' " is 186.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                                Assert.AreEqual(expectedValue' actualValue' string.Format(CultureInfo.CurrentCulture' "In '{0}'' the actual value of cell {1}/{2} of table '{3}' is wrong."' " is 156.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The length of the statement  "                Assert.AreEqual(Timestamps[i]' versioningRows[i][0]' string.Format(CultureInfo.CurrentCulture' "The timestamp of Migration{0} is wrong."' i + 1)); " is 146.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestUndoingMigration2,The length of the statement  "            Assert.AreEqual(MigrationExportAttribute.DefaultModuleName' versioningTable.Rows[0][1]' "The module of Migration1 is wrong."); " is 126.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestCustomBootstrapping,The length of the statement  "                A.CallTo(() => bootstrapper.IsContained(A<IMigrationMetadata>.That.Matches(m => m.Timestamp == timestamp))).Returns(true); " is 122.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestCustomBootstrapping,The length of the statement  "            A.CallTo(() => bootstrapper.BeginBootstrapping(A<IDbConnection>._' A<IDbTransaction>._)).MustHaveHappened(Repeated.Exactly.Once); " is 129.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestCustomBootstrapping,The length of the statement  "            A.CallTo(() => bootstrapper.EndBootstrapping(A<IDbConnection>._' A<IDbTransaction>._)).MustHaveHappened(Repeated.Exactly.Once); " is 127.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestDbSchemaAltering,The length of the statement  "            Assert.IsNotNull(bypassTable' string.Format(CultureInfo.CurrentCulture' "The '{0}' table was not created."' tableName)); " is 120.
Long Statement,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,GetEnvironmentVariable,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "No environment variable called '{0}' is defined."' variable)); " is 141.
Long Statement,MigSharp.NUnit.Integration,Migration2,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration02_Module_Tag_and_Reversing.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" VALUES ({1})"' Tables[0].Name' Tables[0].Value(0' 0))); " is 131.
Long Statement,MigSharp.NUnit.Integration,Migration3,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration03_Execute.cs,Up,The length of the statement  "                    command.CommandText = string.Format(CultureInfo.InvariantCulture' @"UPDATE ""{0}"" SET ""{1}"" = 'Stage 2' WHERE ""{1}"" = 'Stage 1'"' " is 134.
Long Statement,MigSharp.NUnit.Integration,Migration4,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration04_Identity.cs,Up,The length of the statement  "                    db.Context.ProviderMetadata.Platform != Platform.MySql) // MySql and SQLite do not support identity on non-primary key columns " is 126.
Long Statement,MigSharp.NUnit.Integration,Migration4,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration04_Identity.cs,CreateTableWithOneRecord,The length of the statement  "            var expectedTable = new ExpectedTable(string.Format(CultureInfo.InvariantCulture' "Mig4 {0}Identity {1}"' onPrimaryKey ? "PK-" : string.Empty' support.DbType)' " is 159.
Long Statement,MigSharp.NUnit.Integration,Migration4,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration04_Identity.cs,CreateTableWithOneRecord,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' expectedTable.Name' "Content"' expectedContent)); " is 153.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First""' ""Second""' ""Third"") VALUES ('{1}'' '{2}'' '{3}')"' Tables[0].Name' Tables[0].Value(0' 1)' Tables[0].Value(0' 2)' Tables[0].Value(0' 3))); " is 229.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].Columns[Tables[0].Columns[1]].AlterToNotNullable(DbType.String).OfSize(2000); // changing the type from AnsiString to String should be possible without further problems (required by migration 7 of the Security Component) " is 246.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].Columns[Tables[0].Columns[2]].AlterToNullable(DbType.String).OfSize(2000); // changing the nullability but keeping the current datatype " is 161.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNullable(DbType.String).OfSize(2000); // changing the nullability *and* the datatype at the same time " is 164.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(1' 1))); // try to execute without second description and third description as they should allow null now " is 243.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"UPDATE ""{0}"" SET ""{1}""='{2}' WHERE ""{1}"" IS NULL"' Tables[0].Name' Tables[0].Columns[3]' Tables[0].Value(1' 3))); " is 176.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNotNullable(DbType.String).OfSize(2000).HavingDefault(Default3); " is 127.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(2' 1))); // try again to execute without third description as it should have a default now " is 228.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNotNullable(DbType.String).OfSize(2000).HavingDefault(SecondDefault3); // change the default " is 155.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(3' 1))); // try again to execute without third description as it should have another default now " is 234.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNullable(DbType.String).OfSize(2000); // remove the Default3 default value again " is 143.
Long Statement,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(4' 1))); // try again to execute without third description' and this time it should be NULL " is 229.
Long Statement,MigSharp.NUnit.Integration,Migration6,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration06_CurrentDateTimeDefault.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Value(0' 0))); " is 166.
Long Statement,MigSharp.NUnit.Integration,Migration7,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration07_Adding_and_Dropping_Indexes.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""'""{2}""'""{3}"") VALUES ({4}''{5}''{6})"' " is 127.
Long Statement,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The length of the statement  "                                                                        .OrderByDescending(s => s.MaximumSize)) // make sure the first column is not a LOB column as Teradata automatically adds an index to the first column and then would crash with: 'Cannot create index on LOB columns.' " is 214.
Long Statement,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The length of the statement  "                if (support.DbType == DbType.AnsiStringFixedLength || // skip fixed length character types as the table would grow too large " is 124.
Long Statement,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The length of the statement  "                    support.DbType == DbType.Int64 || // skip Int64 as the ODBC driver does not support DbParameters for this data type --> note that Int64 is implicitly tested as MigSharp uses this data type for its timestamp column " is 213.
Long Statement,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The length of the statement  "                                                        string.Join("' "' command.Parameters.Cast<IDbDataParameter>().Select(p => context.ProviderMetadata.GetParameterSpecifier(p)).ToArray())); " is 137.
Long Statement,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The length of the statement  "                        maximumSize = 767/3; // utf8 chars can take up to three bytes per char (see: https://dev.mysql.com/doc/refman/5.0/en/column-count-limit.html) " is 141.
Long Statement,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""'""{2}""'""{3}"") VALUES ({4}''{5}''{6})"' " is 127.
Long Statement,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(100).HavingTemporaryDefault(DefaultString); " is 134.
Long Statement,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The length of the statement  "            db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime).HavingTemporaryDefault(DefaultDate); " is 122.
Long Statement,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,GetInsertStatement,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' Tables[0].Value(row' 1)); " is 162.
Long Statement,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The length of the statement  "            db.Execute(GetInsertStatement((decimal)Tables[0].Value(0' 2) + 0.003m)); // the extra precision should be cut off silently " is 122.
Long Statement,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,GetInsertStatement,The length of the statement  "                                 @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES ({3}' {4})"' Tables[0].Name' Tables[0].Columns[1]' Tables[0].Columns[2]' Tables[0].Value(0' 1)' value2); " is 152.
Long Statement,MigSharp.NUnit.Integration,Migration12,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration12_Maximum_Size_Strings.cs,Up,The length of the statement  "                    command.CommandText = string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES ({3}' {4})"' " is 126.
Long Statement,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Other' otherName' "Not Referenced")); " is 141.
Long Statement,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The length of the statement  "            db.Execute(GetDeleteStatementForOther()); // removing the row from Other should not be a problem since it is not referenced " is 123.
Long Statement,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Other' otherName' "Referenced")); " is 137.
Long Statement,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The length of the statement  "            // testing to see that if we drop an index rename the table create a copy of the table with the same old fk it should work (TD issue in security) " is 145.
Long Statement,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' Tables[0].Value(0' 1))); " is 166.
Long Statement,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The length of the statement  "            if (db.Context.ProviderMetadata.Platform != Platform.SQLite) // Mig# does not support SQLite foreign keys (see comments in SQLiteProvider.AddForeignKey) " is 152.
Long Statement,MigSharp.NUnit.Integration,Migration14,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration14_Drop_Identity.cs,Up,The length of the statement  "            // Note: the following statement does *not* the identity constraint. Doing so is very difficult. For example' see: http://stackoverflow.com/questions/702745/sql-server-how-to-drop-identity-from-a-column " is 202.
Long Statement,MigSharp.NUnit.Integration,Migration14,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration14_Drop_Identity.cs,GetInsertStatement,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES ({3}' '{4}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Columns[1]' id' name); " is 184.
Long Statement,MigSharp.NUnit.Integration,Migration14,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration14_Drop_Identity.cs,GetInsertStatement,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' name); " is 144.
Long Statement,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Value(0' 0))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The length of the statement  "            // add a new column with the same name like the previously renamed one to make sure that any associated db object were renamed' too " is 131.
Long Statement,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Value(1' 0))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' Tables[1].Value(0' 1))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' Tables[1].Value(1' 1))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' NewTableName' Tables[1].Columns[1]' Tables[1].Value(2' 1))); " is 163.
Long Statement,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' Tables[0].Value(0' 1))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' Tables[0].Value(1' 1))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration18,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration18_Clearing_Default_Values_Adding_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Value(0' 0))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration18,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration18_Clearing_Default_Values_Adding_Journey.cs,Up,The length of the statement  "            // add a new column with the same name like the previously dropped one to make sure that any associated db object were dropped' too " is 131.
Long Statement,MigSharp.NUnit.Integration,Migration18,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration18_Clearing_Default_Values_Adding_Journey.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Value(1' 0))); " is 165.
Long Statement,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The length of the statement  "                                    new DateTime(TestValue.Year' TestValue.Month' TestValue.Day' TestValue.Hour' TestValue.Minute' TestValue.Second' 100*(TestValue.Millisecond/100))' // the seconds should only have one decimal place " is 196.
Long Statement,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The length of the statement  "                                    new DateTime(TestValue.Year' TestValue.Month' TestValue.Day' TestValue.Hour' TestValue.Minute' TestValue.Second' 0) // there should be no milliseconds " is 150.
Long Statement,MigSharp.NUnit.Integration,Migration21,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration21_RowVersion.cs,InsertAndUpdateRow,The length of the statement  "            command.CommandText = string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" ( \"Content\" ) VALUES ( 'First' )"' tableName); " is 135.
Long Statement,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' "Parent Row 1")); " is 159.
Long Statement,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[1]' "Parent Row 2")); " is 159.
Long Statement,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[1].Name' Tables[1].Columns[1]' 1)); " is 146.
Long Statement,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[1].Name' Tables[1].Columns[1]' 2)); " is 146.
Long Statement,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"DELETE FROM ""{0}"" WHERE ""{1}"" = 1"' Tables[0].Name' Tables[0].Columns[0])); // removing the parent row should delete its child rows " is 192.
Long Statement,MigSharp.NUnit.Integration,Migration23,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration23_Unicode.cs,Up,The length of the statement  "            string unicodeLiteralPrefix = db.Context.ProviderMetadata.PrefixUnicodeLiterals ? "N" : string.Empty; // see: http://stackoverflow.com/questions/31270356/is-nsome-string-here-ansi-sql " is 183.
Long Statement,MigSharp.NUnit.Integration,Migration23,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration23_Unicode.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""Mig23a"" (""Data"") VALUES ({0}'Irgendöppis')"' unicodeLiteralPrefix)); " is 142.
Long Statement,MigSharp.NUnit.Integration,Migration23,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration23_Unicode.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""Mig23a"" (""Data"") VALUES ({0}'Unicodović')"' unicodeLiteralPrefix)); " is 141.
Long Statement,MigSharp.NUnit.Integration,Migration23,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration23_Unicode.cs,InsertUsingParameters,The length of the statement  "            command.CommandText = string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""Mig23b"" (""Data"") VALUES ({0})"' ctx.ProviderMetadata.GetParameterSpecifier(parameter)); " is 172.
Long Statement,MigSharp.NUnit.Integration,Migration24,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration24_Boolean_Default_Value.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES (1)"' tableName' Tables[0].Columns[0])); // without 'Flag' " is 152.
Long Statement,MigSharp.NUnit.Integration,Migration24,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration24_Boolean_Default_Value.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES (2' 0)"' tableName' Tables[0].Columns[0]' Tables[0].Columns[1])); " is 168.
Long Statement,MigSharp.NUnit.Integration,Migration24,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration24_Boolean_Default_Value.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES (3' 1)"' tableName' Tables[0].Columns[0]' Tables[0].Columns[1])); " is 168.
Long Statement,MigSharp.NUnit.Integration,Migration26,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration26_Schema_Creating_and_Dropping.cs,AssertSchema,The length of the statement  "                    command.CommandText = string.Format(CultureInfo.InvariantCulture' "SELECT COUNT(*) FROM [INFORMATION_SCHEMA].[SCHEMATA] WHERE [SCHEMA_NAME] = '{0}'"' schemaName); " is 162.
Long Statement,MigSharp.NUnit.Integration,Migration27,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration27_UseModuleNameAsDefaultSchema.cs,Up,The length of the statement  "                    Assert.IsTrue(context.StepMetadata.UseModuleNameAsDefaultSchema' "Passing UseModuleNameAsDefaultSchema to migration metadata failed."); " is 135.
Long Statement,MigSharp.NUnit.Integration,Migration28,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration28_CurrentDateTimeOffsetDefault.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[0]' Tables[0].Value(0' 0))); " is 166.
Long Statement,MigSharp.NUnit.Integration,Migration29,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration29_Altering_DefaultConstraint_in_Custom_Schema.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"".""{1}"" (""{2}"") VALUES ('{3}')"' schemaName' Tables[0].Name' Tables[0].Columns[0]' 1)); " is 166.
Long Statement,MigSharp.NUnit.Integration,Migration29,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration29_Altering_DefaultConstraint_in_Custom_Schema.cs,Up,The length of the statement  "            db.Schemata[schemaName].Tables[Tables[0].Name].Columns["Column With Default"].AlterToNotNullable(DbType.DateTimeOffset).HavingCurrentDateTimeOffsetAsDefault(); " is 159.
Long Statement,MigSharp.NUnit.Integration,Migration29,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration29_Altering_DefaultConstraint_in_Custom_Schema.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"".""{1}"" (""{2}"") VALUES ('{3}')"' schemaName' Tables[0].Name' Tables[0].Columns[0]' 2)); " is 166.
Long Statement,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[2]' Tables[0].Value(0' 2))); " is 166.
Long Statement,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The length of the statement  "            db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[2]' Tables[0].Value(1' 2))); " is 166.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyValidationErrorsResultInException,The length of the statement  "            A.CallTo(() => validator.Validate(A<IEnumerable<IMigrationReporter>>._' out errors' out warnings)).AssignsOutAndRefParameters("Some test failure..."' null); " is 156.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyValidationErrorsResultInException,The length of the statement  "            MigrationBatch batch = new MigrationBatch(steps' Enumerable.Empty<IMigrationMetadata>()' A.Fake<IVersioning>()' configuration); " is 127.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyStepExecutedAndStepExecutingAreRaised,The length of the statement  "            var batch = new MigrationBatch(steps' Enumerable.Empty<IMigrationMetadata>()' A.Fake<IVersioning>()' A.Fake<IRuntimeConfiguration>()); " is 134.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyStepExecutedAndStepExecutingAreRaised,The length of the statement  "            Assert.AreSame(metadata' batch.Steps[0]' "The batch should expose the metadata of the step."); // this is tested to allow for the undocumented feature test below " is 161.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyStepExecutedAndStepExecutingAreRaised,The length of the statement  "                Assert.AreSame(metadata' args.Metadata' "The event should carry the same metadata that is in the ScheduleMigrations collection."); " is 130.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyStepExecutedAndStepExecutingAreRaised,The length of the statement  "                Assert.AreSame(metadata' args.Metadata' "The event should carry the same metadata that is in the ScheduleMigrations collection."); " is 130.
Long Statement,MigSharp.NUnit.Process,MigrationBatchTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationBatchTests.cs,VerifyCallingExecuteTwiceThrows,The length of the statement  "            var batch = new MigrationBatch(Enumerable.Empty<IMigrationStep>()' Enumerable.Empty<IMigrationMetadata>()' A.Fake<IVersioning>()' A.Fake<IRuntimeConfiguration>()); " is 163.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,VerifyMigrationReportProps,The length of the statement  "            CollectionAssert.AreEquivalent(expectedDataTypes.ToList()' report.DataTypes.ToList()' "The collection of used data types is wrong."); " is 133.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,VerifyMigrationReportProps,The length of the statement  "            CollectionAssert.AreEquivalent(expectedPrimaryKeyDataTypes.ToList()' report.PrimaryKeyDataTypes.ToList()' "The collection of used data types for primary keys is wrong."); " is 170.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,VerifyMigrationReportProps,The length of the statement  "            CollectionAssert.AreEquivalent(expectedIdentityDataTypes.ToList()' report.IdentityDataTypes.ToList()' "The collection of used data types for identity columns is wrong."); " is 170.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' "At least one column must be added to the CreateTable command."' "").SetDescription("CreateTable"); " is 133.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' "At least one column must be added to the AddForeignKeyTo command."' "").SetDescription("AddForeignKeyTo"); " is 141.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' "At least one column must be added to the AddUniqueConstraint command."' "").SetDescription("AddUniqueConstraint"); " is 149.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' "At least one column must be added to the AddPrimaryKey command."' "").SetDescription("AddPrimaryKey"); " is 137.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' ""' "MyVeryLongUniqeConstraintName").SetDescription("CreateTable with long unique constraint name"); " is 134.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' "Adding nullable columns with default values is not supported: some database platforms (like SQL Server) leave missing values NULL and some update missing values to the default value. Consider adding the column first as not-nullable' and then altering it to nullable."' "").SetDescription("Default values nullable columns"); " is 358.
Long Statement,MigSharp.NUnit.Process,MigrationReportTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationReportTests.cs,GetInvalidDatabaseCases,The length of the statement  "            yield return new TestCaseData(db' "Adding nullable columns with default values is not supported: some database platforms (like SQL Server) leave missing values NULL and some update missing values to the default value. Consider adding the column first as not-nullable' and then altering it to nullable."' "").SetDescription("Default values nullable columns"); " is 358.
Long Statement,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRevertingThrowsWhenImpossible,The length of the statement  "            Assert.Throws<IrreversibleMigrationException>(() => selector.GetMigrationsTo(2' m => true' out applicableMigrations' out unidentifiedMigrations)); " is 146.
Long Statement,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestDuplicateMigrationsThrowInvalidMigrationException,The length of the statement  "            Assert.That(() => new MigrationSelector(importedMigrations' executedMigrations)' Throws.TypeOf<InvalidMigrationExportException>().With.Message.EqualTo("The migration with timestamp 1 and module name '" + MigrationExportAttribute.DefaultModuleName + "' is defined more than once.")); " is 282.
Long Statement,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,CheckProviderValidation,The length of the statement  "            int totalNumberOfSupportedProviders = options.SupportedPlatforms.Sum(n => providerLocator.GetAllForMinimumRequirement(n).Count()); " is 130.
Long Statement,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,CheckProviderValidation,The length of the statement  "            var validatorFactory = new ValidatorFactory(providerLocator.GetExactly(platformUnderExecution)' options' providerLocator); " is 122.
Long Statement,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,CheckProviderValidation,The length of the statement  "            Assert.AreEqual(expectedTotalNumberOfSupportedProviders' totalNumberOfSupportedProviders' "Wrong total number of providers."); " is 126.
Long Statement,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,CheckProviderValidation,The length of the statement  "            A.CallTo(() => reporter.Report(A<IMigrationContext>._)).MustHaveHappened(Repeated.Exactly.Times(expectedValidationRuns)); " is 121.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyViolatingMaximumDbObjectNameLengthIsReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Error in migration '{0}': Some other validation error."' MigrationName) + Environment.NewLine + " is 138.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyViolatingMaximumDbObjectNameLengthIsReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' contains object names that are longer than what is supported by '{1}' ('{2}': {3}' supported: {4})."' MigrationName' Platform' longestName' longestName.Length' MaximumSupportedLength)' " is 243.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The length of the statement  "                new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType) " is 126.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The length of the statement  "            string expected = string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' which is not supported by '{2}'."' MigrationName' DbType.Currency' Platform) + Environment.NewLine + " is 202.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The length of the statement  "                              string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}(20'10)' which exceeds the maximum size of 10 supported by '{2}'."' MigrationName' DbType.Decimal' Platform) + Environment.NewLine + " is 214.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The length of the statement  "                              string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}(20'10)' which exceeds the maximum scale of 5 supported by '{2}'."' MigrationName' DbType.Decimal' Platform) + Environment.NewLine + " is 214.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The length of the statement  "                              string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' for a primary key which is not supported by '{2}'."' MigrationName' DbType.String' Platform) + Environment.NewLine + " is 200.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The length of the statement  "                              string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}(8'2)' for an identity column which is not supported by '{2}'."' MigrationName' DbType.Decimal' Platform); " is 188.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWarningsForSupportedDataTypesAreReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' which is not fully supported by '{2}': {3}"' MigrationName' DbType.Guid' Platform' ProviderStub.WarningMessage) + Environment.NewLine + " is 219.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWarningsForSupportedDataTypesAreReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' which is not fully supported by '{2}': {3}"' MigrationName' DbType.String' Platform' ProviderStub.WarningMessageWithoutSize)' " is 209.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWarningsForSupportedDataTypesAreReportedUnlessSuppressed,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' which is not fully supported by '{2}': {3}"' MigrationName' DbType.String' Platform' ProviderStub.WarningMessageWithoutSize)' " is 209.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWarningsForOdbc,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' which is not fully supported by '{2}': Int64 is not supported for DbParameters with ODBC; requires calling ToString to directly inline the value in the CommandText."' MigrationName' DbType.Int64' Platform)' " is 290.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWronglyUsedOfSizeAreReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}(777)' which is not supported by '{2}'."' MigrationName' DbType.Int32' Platform) + Environment.NewLine + " is 186.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWronglyUsedOfSizeAreReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}(null'777)' which is not supported by '{2}'."' MigrationName' DbType.String' Platform) + Environment.NewLine + " is 192.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWronglyUsedOfSizeAreReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' uses the data type '{1}' which is not supported by '{2}'."' MigrationName' DbType.Decimal' Platform)' " is 160.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,TestGetUnsupportedMethods,The length of the statement  "            Assert.IsNull(unsupportedMethods.Find(m => m.Name == "CreateTable")' "CreateTable should be one of the supported methods."); " is 124.
Long Statement,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedMethodsAreReported,The length of the statement  "                string.Format(CultureInfo.CurrentCulture' "Migration '{0}' calls the '{1}' method which is not supported by '{2}': AddColumn is not supported because this is just a test."' MigrationName' "AddColumn"' Platform)' " is 211.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("Customer_Id_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 128' "Id")' "Basic with one additional name."); " is 130.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("Customer_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 128' "Id"' "Name")' "Basic with two additional names."); " is 144.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("Cus-mer_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 18' "Id"' "Name")' "One char too long."); " is 128.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("Cus-er_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 17' "Id"' "Name")' "Two chars too long."); " is 128.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("Cu-er_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 16' "Id"' "Name")' "Three chars too long."); " is 129.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("Cu-r_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 15' "Id"' "Name")' "Four chars too long."); " is 127.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("C-r_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 14' "Id"' "Name")' "Five chars too long."); " is 126.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("C-r_Id_N-e_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 13' "Id"' "Name")' "Six chars too long."); " is 124.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("C_Id_N-e_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 12' "Id"' "Name")' "Seven chars too long."); " is 124.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("C_Id_N-e_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 11' "Id"' "Name")' "Eight chars too long."); " is 124.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("C_Id_N_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 10' "Id"' "Name")' "Nine chars too long."); " is 121.
Long Statement,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The length of the statement  "            Assert.AreEqual("C_I_N_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 8' "Id"' "Name")' "Eleven chars too long."); " is 121.
Long Statement,MigSharp.NUnit.Providers,ProviderLocatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ProviderLocatorTests.cs,TestGetAllForMinimumRequirement,The length of the statement  "            string[] providerTypeNames = locator.GetAllForMinimumRequirement(DbPlatform.SqlServer2012).Select(i => i.Provider).Select(p => p.GetType().Name).ToArray(); " is 155.
Long Statement,MigSharp.NUnit.Providers,ProviderLocatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ProviderLocatorTests.cs,TestGetAllForMinimumRequirementSelectsTheLatestIfNotReachable,The length of the statement  "            string[] providerTypeNames = locator.GetAllForMinimumRequirement(DbPlatform.SqlServer2014).Select(i => i.Provider).Select(p => p.GetType().Name).ToArray(); " is 155.
Long Statement,MigSharp.NUnit.Providers,RecordingProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\RecordingProviderTests.cs,VerifyAllProviderMethodsArePreventedFromBeingInlined,The length of the statement  "                Assert.AreEqual(MethodImplAttributes.NoInlining' method.GetMethodImplementationFlags()' string.Format(CultureInfo.CurrentCulture' "Method '{0}' is missing the [MethodImpl(MethodImplOptions.NoInlining)] attribute."' method.Name)); " is 229.
Long Statement,MigSharp.NUnit.Providers,RecordingProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\RecordingProviderTests.cs,VerifyNewObjectNamesAreRecorded,The length of the statement  "            provider.CreateTable(new TableName("Table"' null)' new[] { new CreatedColumn("Column"' new DataType(DbType.Boolean)' false' true' string.Empty' false' null' false) }' "MyPK").ToList(); " is 184.
Long Statement,MigSharp.NUnit.Providers,SqlScriptingHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\SqlScriptingHelperTests.cs,TestWrappingOfFormatExceptions,The length of the statement  "            Assert.That(() => SqlScriptingHelper.ToSql("0"' DbType.Boolean' false)' Throws.TypeOf<InvalidOperationException>().With.Message.EqualTo("Could not convert '0' of type System.String to a SQL expression of type Boolean.")); " is 221.
Complex Conditional,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The conditional expression  "support.DbType == DbType.AnsiStringFixedLength || // skip fixed length character types as the table would grow too large                      support.DbType == DbType.StringFixedLength || // skip fixed length character types as the table would grow too large                      support.DbType == DbType.Int64 || // skip Int64 as the ODBC driver does not support DbParameters for this data type --> note that Int64 is implicitly tested as MigSharp uses this data type for its timestamp column                      (support.DbType == DbType.Decimal && support.MaximumScale == 0)"  is complex.
Magic Number,MigSharp.NUnit,DbSchemaTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\DbSchemaTests.cs,TestSelectingNonExistingProvider,The following statement contains a magic number: Assert.That(() => new DbSchema("..."' new DbPlatform(Platform.SqlServer' 8))' Throws.TypeOf<NotSupportedException>().With.Message.EqualTo("Could not find a provider for 'SqlServer' Version: 8' Driver: AdoNet'."));
Magic Number,MigSharp.NUnit,DbSchemaTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\DbSchemaTests.cs,TestSelectingNonExistingOdbcProvider,The following statement contains a magic number: Assert.That(() => new DbSchema("..."' new DbPlatform(Platform.SqlServer' 8' Driver.Odbc))' Throws.TypeOf<NotSupportedException>().With.Message.EqualTo("Could not find a provider for 'SqlServer' Version: 8' Driver: Odbc'."));
Magic Number,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The following statement contains a magic number: A.CallTo(() => m2.Timestamp).Returns(2);
Magic Number,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The following statement contains a magic number: A.CallTo(() => m3.Timestamp).Returns(3);
Magic Number,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The following statement contains a magic number: A.CallTo(() => a2.Timestamp).Returns(2);
Magic Number,MigSharp.NUnit,MigrationBatchPreparerTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationBatchPreparerTests.cs,GetCases,The following statement contains a magic number: A.CallTo(() => a3.Timestamp).Returns(3);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,TestDefaultProvider,The following statement contains a magic number: Assert.AreEqual(timestamp' 201211171806);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,TestExampleAttributeProvider,The following statement contains a magic number: Assert.AreEqual(timestamp' 201211171825);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,TestExampleInterfaceProvider,The following statement contains a magic number: Assert.AreEqual(timestamp' 201211171833);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,MigratorUsesModuleSpecificTimestampProvider,The following statement contains a magic number: Assert.AreEqual(4' batch.Steps.Count);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,MigratorUsesModuleSpecificTimestampProvider,The following statement contains a magic number: Assert.AreEqual(23' step.Migrations.Single().Timestamp);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,MigratorUsesModuleSpecificTimestampProvider,The following statement contains a magic number: Assert.AreEqual(201110251455L' step.Migrations.Single().Timestamp);
Magic Number,MigSharp.NUnit,MigrationTimestampProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\MigrationTimestampProviderTests.cs,MigratorUsesModuleSpecificTimestampProvider,The following statement contains a magic number: Assert.AreEqual(201211171825L' step.Migrations.Single().Timestamp);
Magic Number,MigSharp.NUnit,SupportedPlatformsTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\SupportedPlatformsTests.cs,TestAddOrReplace,The following statement contains a magic number: supportedPlatforms.AddOrReplaceMinimumRequirement(new DbPlatform(Platform.SqlServer' 12' Driver.Odbc));
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.CreateTable("Customers")                  .WithPrimaryKeyColumn("ObjectKey"' DbType.Int32)                  .WithPrimaryKeyColumn("AnalysisKey"' DbType.Int32)                  .WithNullableColumn("Name"' DbType.String)                  .WithNullableColumn("Name in ANSI"' DbType.AnsiString)                  .WithNullableColumn("Street"' DbType.String).OfSize(128)                  .WithNullableColumn("Price"' DbType.Decimal).OfSize(10' 2)                  .WithNotNullableColumn("Non-nullable Column"' DbType.StringFixedLength).OfSize(128)                  .WithNotNullableColumn("Unique Column"' DbType.Int64).Unique()                  .WithNotNullableColumn("1st Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint")                  .WithNotNullableColumn("2nd Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.CreateTable("Customers")                  .WithPrimaryKeyColumn("ObjectKey"' DbType.Int32)                  .WithPrimaryKeyColumn("AnalysisKey"' DbType.Int32)                  .WithNullableColumn("Name"' DbType.String)                  .WithNullableColumn("Name in ANSI"' DbType.AnsiString)                  .WithNullableColumn("Street"' DbType.String).OfSize(128)                  .WithNullableColumn("Price"' DbType.Decimal).OfSize(10' 2)                  .WithNotNullableColumn("Non-nullable Column"' DbType.StringFixedLength).OfSize(128)                  .WithNotNullableColumn("Unique Column"' DbType.Int64).Unique()                  .WithNotNullableColumn("1st Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint")                  .WithNotNullableColumn("2nd Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.CreateTable("Customers")                  .WithPrimaryKeyColumn("ObjectKey"' DbType.Int32)                  .WithPrimaryKeyColumn("AnalysisKey"' DbType.Int32)                  .WithNullableColumn("Name"' DbType.String)                  .WithNullableColumn("Name in ANSI"' DbType.AnsiString)                  .WithNullableColumn("Street"' DbType.String).OfSize(128)                  .WithNullableColumn("Price"' DbType.Decimal).OfSize(10' 2)                  .WithNotNullableColumn("Non-nullable Column"' DbType.StringFixedLength).OfSize(128)                  .WithNotNullableColumn("Unique Column"' DbType.Int64).Unique()                  .WithNotNullableColumn("1st Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint")                  .WithNotNullableColumn("2nd Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.CreateTable("Customers")                  .WithPrimaryKeyColumn("ObjectKey"' DbType.Int32)                  .WithPrimaryKeyColumn("AnalysisKey"' DbType.Int32)                  .WithNullableColumn("Name"' DbType.String)                  .WithNullableColumn("Name in ANSI"' DbType.AnsiString)                  .WithNullableColumn("Street"' DbType.String).OfSize(128)                  .WithNullableColumn("Price"' DbType.Decimal).OfSize(10' 2)                  .WithNotNullableColumn("Non-nullable Column"' DbType.StringFixedLength).OfSize(128)                  .WithNotNullableColumn("Unique Column"' DbType.Int64).Unique()                  .WithNotNullableColumn("1st Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint")                  .WithNotNullableColumn("2nd Column Under Named Unique Constraint"' DbType.Int64).Unique("MyUniqueConstraint");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.String)' new DataType(DbType.AnsiString)' new DataType(DbType.String' 128)' new DataType(DbType.Decimal' 10' 2)' new DataType(DbType.StringFixedLength' 128)' new DataType(DbType.Int64) }'                  new[] { new DataType(DbType.Int32) }'                  Enumerable.Empty<DataType>()'                  "1st Column Under Named Unique Constraint")                  .SetDescription("CreateTable");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.String)' new DataType(DbType.AnsiString)' new DataType(DbType.String' 128)' new DataType(DbType.Decimal' 10' 2)' new DataType(DbType.StringFixedLength' 128)' new DataType(DbType.Int64) }'                  new[] { new DataType(DbType.Int32) }'                  Enumerable.Empty<DataType>()'                  "1st Column Under Named Unique Constraint")                  .SetDescription("CreateTable");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.String)' new DataType(DbType.AnsiString)' new DataType(DbType.String' 128)' new DataType(DbType.Decimal' 10' 2)' new DataType(DbType.StringFixedLength' 128)' new DataType(DbType.Int64) }'                  new[] { new DataType(DbType.Int32) }'                  Enumerable.Empty<DataType>()'                  "1st Column Under Named Unique Constraint")                  .SetDescription("CreateTable");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.String)' new DataType(DbType.AnsiString)' new DataType(DbType.String' 128)' new DataType(DbType.Decimal' 10' 2)' new DataType(DbType.StringFixedLength' 128)' new DataType(DbType.Int64) }'                  new[] { new DataType(DbType.Int32) }'                  Enumerable.Empty<DataType>()'                  "1st Column Under Named Unique Constraint")                  .SetDescription("CreateTable");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.Tables["Customers"]                  .AddNotNullableColumn("NewNonNullableColumn"' DbType.Int32)                  .AddNotNullableColumn("NewNonNullableColumnWithTempDflt7"' DbType.Int32).HavingTemporaryDefault(7)                  .AddNullableColumn("NewNullableColumn"' DbType.Int64)                  .AddNotNullableColumn("MyColumn"' DbType.String).OfSize(100).HavingDefault("myValue")                  .AddNotNullableColumn("MySystemTime"' DbType.DateTime).HavingCurrentDateTimeAsDefault();
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.Tables["Customers"]                  .AddNotNullableColumn("NewNonNullableColumn"' DbType.Int32)                  .AddNotNullableColumn("NewNonNullableColumnWithTempDflt7"' DbType.Int32).HavingTemporaryDefault(7)                  .AddNullableColumn("NewNullableColumn"' DbType.Int64)                  .AddNotNullableColumn("MyColumn"' DbType.String).OfSize(100).HavingDefault("myValue")                  .AddNotNullableColumn("MySystemTime"' DbType.DateTime).HavingCurrentDateTimeAsDefault();
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.Int64)' new DataType(DbType.String' 100)' new DataType(DbType.DateTime) }'                  Enumerable.Empty<DataType>()'                  Enumerable.Empty<DataType>()'                  "NewNonNullableColumnWithTempDflt7")                  .SetDescription("AddNotNullableColumn");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.CreateTable("Table")                  .WithPrimaryKeyColumn("PK"' DbType.Int32)                  .WithNotNullableColumn("Id"' DbType.Decimal).OfSize(12).AsIdentity();
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.Decimal' 12) }'                  new[] { new DataType(DbType.Int32) }'                  new[] { new DataType(DbType.Decimal' 12) }'                  "PK_Table")                  .SetDescription("Identity");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.Int32)' new DataType(DbType.Decimal' 12) }'                  new[] { new DataType(DbType.Int32) }'                  new[] { new DataType(DbType.Decimal' 12) }'                  "PK_Table")                  .SetDescription("Identity");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.Tables["Table"].Columns["Column"].AlterToNullable(DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.String' 255) }'                  Enumerable.Empty<DataType>()'                  Enumerable.Empty<DataType>()'                  string.Empty).SetDescription("MakeNullable OfSize");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.Tables["Table"].Columns["Column"].AlterToNotNullable(DbType.String).OfSize(255).HavingDefault("my default");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.String' 255) }'                  Enumerable.Empty<DataType>()'                  Enumerable.Empty<DataType>()'                  string.Empty)                  .SetDescription("MakeNullable OfSize");
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: db.Tables["Table"].Columns["Column"].AlterToNotNullable(DbType.String).OfSize(255).HavingCurrentDateTimeAsDefault();
Magic Number,MigSharp.NUnit,TestCaseGenerator,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\TestCaseGenerator.cs,CreateDatabaseCases,The following statement contains a magic number: yield return new TestCaseData(db'                  new[] { new DataType(DbType.String' 255) }'                  Enumerable.Empty<DataType>()'                  Enumerable.Empty<DataType>()'                  string.Empty)                  .SetDescription("MakeNullable OfSize");
Magic Number,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,CheckResultsOfMigration1,The following statement contains a magic number: Assert.AreEqual(3' versioningTable.Columns.Count);
Magic Number,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,CheckResultsOfMigration1,The following statement contains a magic number: Assert.AreEqual(BootstrapMigration.TagColumnName' versioningTable.Columns[2].ColumnName);
Magic Number,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,CheckResultsOfMigration1,The following statement contains a magic number: Assert.AreEqual(DBNull.Value' versioningTable.Rows[0][2]' "The tag of Migration1 is wrong.");
Magic Number,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,VerifyResultsOfAllMigrations,The following statement contains a magic number: Assert.AreEqual(Migration2.Tag' versioningRows[1][2]' "The tag of Migration2 is wrong.");
Magic Number,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestUndoingMigration2,The following statement contains a magic number: Assert.AreEqual(DBNull.Value' versioningTable.Rows[0][2]' "The tag of Migration1 is wrong.");
Magic Number,MigSharp.NUnit.Integration,IntegrationTestsBase,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\IntegrationTestsBase.cs,TestUnidentifiedMigrations,The following statement contains a magic number: const long timestamp = 123456L;
Magic Number,MigSharp.NUnit.Integration,Migration3,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration03_Execute.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                  .WithNotNullableColumn(Tables[0].Columns[0]' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration4,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration04_Identity.cs,CreateTableWithOneRecord,The following statement contains a magic number: table.WithNotNullableColumn("Content"' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[3]' DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[3]' DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[3]' DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[3]' DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(2000)                .WithNullableColumn(Tables[0].Columns[3]' DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First""' ""Second""' ""Third"") VALUES ('{1}'' '{2}'' '{3}')"' Tables[0].Name' Tables[0].Value(0' 1)' Tables[0].Value(0' 2)' Tables[0].Value(0' 3)));
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First""' ""Second""' ""Third"") VALUES ('{1}'' '{2}'' '{3}')"' Tables[0].Name' Tables[0].Value(0' 1)' Tables[0].Value(0' 2)' Tables[0].Value(0' 3)));
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[1]].AlterToNotNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[2]].AlterToNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[2]].AlterToNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"UPDATE ""{0}"" SET ""{1}""='{2}' WHERE ""{1}"" IS NULL"' Tables[0].Name' Tables[0].Columns[3]' Tables[0].Value(1' 3)));
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"UPDATE ""{0}"" SET ""{1}""='{2}' WHERE ""{1}"" IS NULL"' Tables[0].Name' Tables[0].Columns[3]' Tables[0].Value(1' 3)));
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNotNullable(DbType.String).OfSize(2000).HavingDefault(Default3);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNotNullable(DbType.String).OfSize(2000).HavingDefault(Default3);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(2' 1)));
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNotNullable(DbType.String).OfSize(2000).HavingDefault(SecondDefault3);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNotNullable(DbType.String).OfSize(2000).HavingDefault(SecondDefault3);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(3' 1)));
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[3]].AlterToNullable(DbType.String).OfSize(2000);
Magic Number,MigSharp.NUnit.Integration,Migration5,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration05_Alter_Column.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""First"") VALUES ('{1}')"' Tables[0].Name' Tables[0].Value(4' 1)));
Magic Number,MigSharp.NUnit.Integration,Migration6,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration06_CurrentDateTimeDefault.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                  .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                  .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime).HavingCurrentDateTimeAsDefault()                  .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime).HavingCurrentUtcDateTimeAsDefault();
Magic Number,MigSharp.NUnit.Integration,Migration6,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration06_CurrentDateTimeDefault.cs,AssertCurrentDateTimeValue,The following statement contains a magic number: return Math.Abs((DateTime.Now - currentDateTime).TotalHours) <= 24;
Magic Number,MigSharp.NUnit.Integration,Migration7,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration07_Adding_and_Dropping_Indexes.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                  .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                  .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(128)                  .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Double);
Magic Number,MigSharp.NUnit.Integration,Migration7,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration07_Adding_and_Dropping_Indexes.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                  .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                  .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(128)                  .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Double);
Magic Number,MigSharp.NUnit.Integration,Migration7,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration07_Adding_and_Dropping_Indexes.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddIndex("My Index")                  .OnColumn(Tables[0].Columns[1])                  .OnColumn(Tables[0].Columns[2]);
Magic Number,MigSharp.NUnit.Integration,Migration7,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration07_Adding_and_Dropping_Indexes.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""'""{2}""'""{3}"") VALUES ({4}''{5}''{6})"'                  Tables[0].Name'                  Tables[0].Columns[0]'                  Tables[0].Columns[1]'                  Tables[0].Columns[2]'                  Tables[0].Value(0' 0)'                  Tables[0].Value(0' 1)'                  Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration7,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration07_Adding_and_Dropping_Indexes.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""'""{2}""'""{3}"") VALUES ({4}''{5}''{6})"'                  Tables[0].Name'                  Tables[0].Columns[0]'                  Tables[0].Columns[1]'                  Tables[0].Columns[2]'                  Tables[0].Value(0' 0)'                  Tables[0].Value(0' 1)'                  Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The following statement contains a magic number: column.OfSize(5000);
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                        ExpectedTables[0].Clear();                      var values = new List<object>();                      foreach (var column in columns)                      {                          DbType dbType;                          object value = GetTestValue(column' db' out dbType);                          // MySQL only retains 8 digits for float values                          if (db.Context.ProviderMetadata.Platform == Platform.MySql)                          {                              if (dbType == DbType.Single)                              {                                  value = (float)Math.Round((float)value' 5);                              }                          }                          command.AddParameter("@" + column.Key' dbType' value);                          values.Add(value);                      }                      ExpectedTables[0].Add(values.ToArray());                        command.CommandText = string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" ({1}) VALUES ({2})"'                                                          Tables[0].Name'                                                          string.Join("' "' columns.Keys.Select(c => "\"" + c + "\"").ToArray())'                                                          string.Join("' "' command.Parameters.Cast<IDbDataParameter>().Select(p => context.ProviderMetadata.GetParameterSpecifier(p)).ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The following statement contains a magic number: maximumSize = 900;
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The following statement contains a magic number: maximumSize = 450;
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The following statement contains a magic number: maximumSize = 767/3;
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,Up,The following statement contains a magic number: maximumSize = 767/3;
Magic Number,MigSharp.NUnit.Integration,Migration8,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration08_All_DataTypes.cs,GetTestValue,The following statement contains a magic number: return (float)Math.Round((float)result' 5);
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.CreateTable(TableNameInitial)                .WithNotNullableColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(128)                .WithNotNullableColumn(UniqueColumn' DbType.Int32).Unique(UniqueColumnConstraint);
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[1]].AlterToNotNullable(DbType.String).OfSize(128);
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddNullableColumn(Tables[0].Columns[2]' DbType.Double);
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[2]].AlterToNotNullable(DbType.Double);
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddIndex("My Index")                                       .OnColumn(Tables[0].Columns[1])                                       .OnColumn(Tables[0].Columns[2]);
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""'""{2}""'""{3}"") VALUES ({4}''{5}''{6})"'                                       Tables[0].Name'                                       Tables[0].Columns[0]'                                       Tables[0].Columns[1]'                                       Tables[0].Columns[2]'                                       Tables[0].Value(0' 0)'                                       Tables[0].Value(0' 1)'                                       Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration9,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration09_Alter_Journey.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""'""{2}""'""{3}"") VALUES ({4}''{5}''{6})"'                                       Tables[0].Name'                                       Tables[0].Columns[0]'                                       Tables[0].Columns[1]'                                       Tables[0].Columns[2]'                                       Tables[0].Value(0' 0)'                                       Tables[0].Value(0' 1)'                                       Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(100);
Magic Number,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(100).HavingTemporaryDefault(DefaultString);
Magic Number,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(100).HavingTemporaryDefault(DefaultString);
Magic Number,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[3]' DbType.Int32).HavingTemporaryDefault(DefaultInt);
Magic Number,MigSharp.NUnit.Integration,Migration10,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration10_Temporary_Defaults.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime).HavingTemporaryDefault(DefaultDate);
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.Decimal).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Decimal).OfSize(5' 2);
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.Decimal).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Decimal).OfSize(5' 2);
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.Decimal).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Decimal).OfSize(5' 2);
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.Decimal).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Decimal).OfSize(5' 2);
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.Execute(GetInsertStatement((decimal)Tables[0].Value(0' 2) + 0.003m));
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.Execute(GetInsertStatement((decimal)Tables[0].Value(0' 2) + 0.003m));
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.CommandText = GetInsertStatement(1000m);                      Log.Verbose(LogCategory.Sql' command.CommandText);                      try                      {                          command.ExecuteNonQuery();                          Assert.Fail("The previous query should have failed.");                      }                      catch (Exception x)                      {                          if (!x.IsDbException())                          {                              throw;                          }                      }                  });
Magic Number,MigSharp.NUnit.Integration,Migration11,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration11_Decimals.cs,GetInsertStatement,The following statement contains a magic number: return string.Format(CultureInfo.InvariantCulture'                                   @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES ({3}' {4})"' Tables[0].Name' Tables[0].Columns[1]' Tables[0].Columns[2]' Tables[0].Value(0' 1)' value2);
Magic Number,MigSharp.NUnit.Integration,Migration12,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration12_Maximum_Size_Strings.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                  .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                  .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String)                  .WithNotNullableColumn(Tables[0].Columns[2]' DbType.AnsiString);
Magic Number,MigSharp.NUnit.Integration,Migration12,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration12_Maximum_Size_Strings.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      IDataParameter text = command.AddParameter("@text"' DbType.String' Tables[0].Value(0' 1));                      IDataParameter ansiText = command.AddParameter("@ansiText"' DbType.AnsiString' Tables[0].Value(0' 2));                      command.CommandText = string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES ({3}' {4})"'                          Tables[0].Name'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          context.ProviderMetadata.GetParameterSpecifier(text)'                          context.ProviderMetadata.GetParameterSpecifier(ansiText));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration12,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration12_Maximum_Size_Strings.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      IDataParameter text = command.AddParameter("@text"' DbType.String' Tables[0].Value(0' 1));                      IDataParameter ansiText = command.AddParameter("@ansiText"' DbType.AnsiString' Tables[0].Value(0' 2));                      command.CommandText = string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}""' ""{2}"") VALUES ({3}' {4})"'                          Tables[0].Name'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          context.ProviderMetadata.GetParameterSpecifier(text)'                          context.ProviderMetadata.GetParameterSpecifier(ansiText));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration13,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration13_FKs.cs,Up,The following statement contains a magic number: db.CreateTable(Other)                  .WithPrimaryKeyColumn(otherId' DbType.Int32).AsIdentity()                  .WithNotNullableColumn(otherName' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration15,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration15_Adding_and_Dropping_PKs.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.Int32);
Magic Number,MigSharp.NUnit.Integration,Migration15,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration15_Adding_and_Dropping_PKs.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" VALUES({1}' {2}' {3})"'                                       Tables[0].Name'                                       Tables[0].Value(0' 0)'                                       Tables[0].Value(0' 1)'                                       Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration15,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration15_Adding_and_Dropping_PKs.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddPrimaryKey()                                       .OnColumn(Tables[0].Columns[2]);
Magic Number,MigSharp.NUnit.Integration,Migration15,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration15_Adding_and_Dropping_PKs.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" VALUES({1}' {2}' {3})"'                                       Tables[0].Name'                                       Tables[0].Value(0' 0)'                                       Tables[0].Value(0' 1)'                                       Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(10).HavingDefault(FirstDefaultValue);
Magic Number,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.String).OfSize(10).HavingDefault(FirstDefaultValue);
Magic Number,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].Columns[Tables[0].Columns[2]].Rename(Tables[0].Columns[1]);
Magic Number,MigSharp.NUnit.Integration,Migration16,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration16_Clearing_Default_Values_Rename_Journey.cs,Up,The following statement contains a magic number: db.Tables[Tables[0].Name].AddNotNullableColumn(Tables[0].Columns[2]' DbType.Int32).HavingDefault(SecondDefaultValue);
Magic Number,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' "INSERT INTO \"{0}\" (\"{1}\") VALUES ('{2}')"' NewTableName' Tables[1].Columns[1]' Tables[1].Value(2' 1)));
Magic Number,MigSharp.NUnit.Integration,Migration17,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration17_Clearing_PKs_Journey.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration18,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration18_Clearing_Default_Values_Adding_Journey.cs,Up,The following statement contains a magic number: table.WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(10).HavingDefault(FirstDefaultValue);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: ExpectedTables.Add(                          new ExpectedTable("Mig19"' "Id"' "DateWithoutSizeOf"' "Date7"' "Date3"' "Date1"' "Date0")                              {                                  {                                      1'                                      TestValue' // should be the full value                                      TestValue' // should be the full value                                      TestValue' // should be the full value (still 3)                                      new DateTime(TestValue.Year' TestValue.Month' TestValue.Day' TestValue.Hour' TestValue.Minute' TestValue.Second' 100*(TestValue.Millisecond/100))' // the seconds should only have one decimal place                                      new DateTime(TestValue.Year' TestValue.Month' TestValue.Day' TestValue.Hour' TestValue.Minute' TestValue.Second' 0) // there should be no milliseconds                                  }'                              });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: ExpectedTables.Add(                          new ExpectedTable("Mig19"' "Id"' "DateWithoutSizeOf"' "Date7"' "Date3"' "Date1"' "Date0")                              {                                  {                                      1'                                      TestValue' // should be the full value                                      TestValue' // should be the full value                                      TestValue' // should be the full value (still 3)                                      new DateTime(TestValue.Year' TestValue.Month' TestValue.Day' TestValue.Hour' TestValue.Minute' TestValue.Second' 100*(TestValue.Millisecond/100))' // the seconds should only have one decimal place                                      new DateTime(TestValue.Year' TestValue.Month' TestValue.Day' TestValue.Hour' TestValue.Minute' TestValue.Second' 0) // there should be no milliseconds                                  }'                              });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime2)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime2).OfSize(7)                .WithNotNullableColumn(Tables[0].Columns[3]' DbType.DateTime2).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime2).OfSize(1)                .WithNotNullableColumn(Tables[0].Columns[5]' DbType.DateTime2).OfSize(0);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime2)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime2).OfSize(7)                .WithNotNullableColumn(Tables[0].Columns[3]' DbType.DateTime2).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime2).OfSize(1)                .WithNotNullableColumn(Tables[0].Columns[5]' DbType.DateTime2).OfSize(0);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime2)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime2).OfSize(7)                .WithNotNullableColumn(Tables[0].Columns[3]' DbType.DateTime2).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime2).OfSize(1)                .WithNotNullableColumn(Tables[0].Columns[5]' DbType.DateTime2).OfSize(0);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime2)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime2).OfSize(7)                .WithNotNullableColumn(Tables[0].Columns[3]' DbType.DateTime2).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime2).OfSize(1)                .WithNotNullableColumn(Tables[0].Columns[5]' DbType.DateTime2).OfSize(0);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime2)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime2).OfSize(7)                .WithNotNullableColumn(Tables[0].Columns[3]' DbType.DateTime2).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime2).OfSize(1)                .WithNotNullableColumn(Tables[0].Columns[5]' DbType.DateTime2).OfSize(0);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32)                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.DateTime2)                .WithNotNullableColumn(Tables[0].Columns[2]' DbType.DateTime2).OfSize(7)                .WithNotNullableColumn(Tables[0].Columns[3]' DbType.DateTime2).OfSize(3)                .WithNotNullableColumn(Tables[0].Columns[4]' DbType.DateTime2).OfSize(1)                .WithNotNullableColumn(Tables[0].Columns[5]' DbType.DateTime2).OfSize(0);
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration19,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration19_DateTime2.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      IDbCommand command = context.CreateCommand();                      command.AddParameter("@" + Tables[0].Columns[1]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[2]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[3]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[4]' DbType.DateTime2' TestValue);                      command.AddParameter("@" + Tables[0].Columns[5]' DbType.DateTime2' TestValue);                      command.CommandText = string.Format(CultureInfo.InvariantCulture'                          "INSERT INTO \"{0}\" (\"{1}\"' \"{2}\"' \"{3}\"' \"{4}\"' \"{5}\"' \"{6}\") VALUES ('{7}'' {8})"'                          Tables[0].Name'                          Tables[0].Columns[0]'                          Tables[0].Columns[1]'                          Tables[0].Columns[2]'                          Tables[0].Columns[3]'                          Tables[0].Columns[4]'                          Tables[0].Columns[5]'                          Tables[0].Value(0' 0)'                          string.Join("' "'                              command.Parameters.Cast<IDbDataParameter>()                                     .Select(p => context.ProviderMetadata.GetParameterSpecifier(p))                                     .ToArray()));                      context.CommandExecutor.ExecuteNonQuery(command);                  });
Magic Number,MigSharp.NUnit.Integration,Migration21,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration21_RowVersion.cs,Up,The following statement contains a magic number: db.CreateTable("Mig21b")                .WithPrimaryKeyColumn("Id"' DbType.Int32).AsIdentity()                .WithNotNullableColumn("Content"' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration21,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration21_RowVersion.cs,Up,The following statement contains a magic number: db.CreateTable("Mig21a")                .WithPrimaryKeyColumn("Id"' DbType.Int32).AsIdentity()                .WithRowVersionColumn("Version")                .WithNotNullableColumn("Content"' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration21,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration21_RowVersion.cs,InsertAndUpdateRow,The following statement contains a magic number: updatedRowVersion = BitConverter.GetBytes(2L);
Magic Number,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name' "Mig22PrimaryKey") // parent table                .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Int32).AsIdentity()                .WithNotNullableColumn(Tables[0].Columns[1]' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration22,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration22_Cascaded_Delete.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[1].Name' Tables[1].Columns[1]' 2));
Magic Number,MigSharp.NUnit.Integration,Migration23,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration23_Unicode.cs,Up,The following statement contains a magic number: db.CreateTable("Mig23a")                .WithPrimaryKeyColumn("Id"' DbType.Int32).AsIdentity()                .WithNotNullableColumn("Data"' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration23,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration23_Unicode.cs,Up,The following statement contains a magic number: db.CreateTable("Mig23b")                .WithPrimaryKeyColumn("Id"' DbType.Int32).AsIdentity()                .WithNotNullableColumn("Data"' DbType.String).OfSize(255);
Magic Number,MigSharp.NUnit.Integration,Migration27,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration27_UseModuleNameAsDefaultSchema.cs,Up,The following statement contains a magic number: db.Execute(context =>                  {                      Assert.AreEqual("Schema27"' context.StepMetadata.ModuleName);                      Assert.AreEqual(27L' context.StepMetadata.Migrations.Single().Timestamp);                      Assert.AreEqual("Test UseModuleNameAsDefaultSchema"' context.StepMetadata.Migrations.Single().Tag);                      Assert.AreEqual(MigrationDirection.Up' context.StepMetadata.Direction);                      Assert.IsTrue(context.StepMetadata.UseModuleNameAsDefaultSchema' "Passing UseModuleNameAsDefaultSchema to migration metadata failed.");                  });
Magic Number,MigSharp.NUnit.Integration,Migration28,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration28_CurrentDateTimeOffsetDefault.cs,AssertCurrentDateTimeValue,The following statement contains a magic number: return Math.Abs((DateTime.UtcNow - currentDateTime.UtcDateTime).TotalHours) <= 24;
Magic Number,MigSharp.NUnit.Integration,Migration29,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration29_Altering_DefaultConstraint_in_Custom_Schema.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"".""{1}"" (""{2}"") VALUES ('{3}')"' schemaName' Tables[0].Name' Tables[0].Columns[0]' 2));
Magic Number,MigSharp.NUnit.Integration,Migration29,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration29_Altering_DefaultConstraint_in_Custom_Schema.cs,AssertCurrentDateTimeValue,The following statement contains a magic number: return Math.Abs((DateTimeOffset.UtcNow - currentDateTime).TotalHours) <= 24;
Magic Number,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The following statement contains a magic number: db.CreateTable(Tables[0].Name)                  .WithPrimaryKeyColumn(Tables[0].Columns[0]' DbType.Guid).HavingNewSequentialGuidAsDefault()                  .WithNotNullableColumn(Tables[0].Columns[1]' DbType.Guid).HavingNewGuidAsDefault()                  .WithNotNullableColumn(Tables[0].Columns[2]' DbType.String);
Magic Number,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[2]' Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[2]' Tables[0].Value(0' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[2]' Tables[0].Value(1' 2)));
Magic Number,MigSharp.NUnit.Integration,Migration30,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\Migration30_NewSequentialGuid_SpecialDefaultValue.cs,Up,The following statement contains a magic number: db.Execute(string.Format(CultureInfo.InvariantCulture' @"INSERT INTO ""{0}"" (""{1}"") VALUES ('{2}')"' Tables[0].Name' Tables[0].Columns[2]' Tables[0].Value(1' 2)));
Magic Number,MigSharp.NUnit.Integration,OdbcIntegrationTestHelper,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Integration\OdbcIntegrationTestHelper.cs,CloseAllOdbcConnections,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRegularCase,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRegularCase,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRegularCase,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRegularCase,The following statement contains a magic number: Assert.AreEqual(3' applicableMigrations.First().Migration.Metadata.Timestamp);
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestGapsAreFound,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestGapsAreFound,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestGapsAreFound,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(3' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestGapsAreFound,The following statement contains a magic number: Assert.AreEqual(2' applicableMigrations.First().Migration.Metadata.Timestamp);
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestReverting,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestReverting,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestReverting,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                      new MigrationMetadata(3' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestReverting,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                      new MigrationMetadata(3' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestReverting,The following statement contains a magic number: selector.GetMigrationsTo(2' m => true' out applicableMigrations' out unidentifiedMigrations);
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestReverting,The following statement contains a magic number: Assert.AreEqual(3' applicableMigrations.First().Migration.Metadata.Timestamp);
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRevertingThrowsWhenImpossible,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRevertingThrowsWhenImpossible,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRevertingThrowsWhenImpossible,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                      new MigrationMetadata(3' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRevertingThrowsWhenImpossible,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                      new MigrationMetadata(3' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestRevertingThrowsWhenImpossible,The following statement contains a magic number: Assert.Throws<IrreversibleMigrationException>(() => selector.GetMigrationsTo(2' m => true' out applicableMigrations' out unidentifiedMigrations));
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestUnidentifiedMigrations,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestUnidentifiedMigrations,The following statement contains a magic number: ImportedMigration[] importedMigrations =                  {                      new ImportedMigration(migration' new MigrationMetadata(1' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(2' DefaultModuleName' null)' false)'                      new ImportedMigration(migration' new MigrationMetadata(3' DefaultModuleName' null)' false)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestUnidentifiedMigrations,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                      new MigrationMetadata(13' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestUnidentifiedMigrations,The following statement contains a magic number: IMigrationMetadata[] executedMigrations =                  {                      new MigrationMetadata(1' DefaultModuleName' null)'                      new MigrationMetadata(2' DefaultModuleName' null)'                      new MigrationMetadata(13' DefaultModuleName' null)'                  };
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestUnidentifiedMigrations,The following statement contains a magic number: Assert.AreEqual(3' applicableMigrations.First().Migration.Metadata.Timestamp);
Magic Number,MigSharp.NUnit.Process,MigrationSelectorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\MigrationSelectorTests.cs,TestUnidentifiedMigrations,The following statement contains a magic number: Assert.AreEqual(13' unidentifiedMigrations.First().Timestamp);
Magic Number,MigSharp.NUnit.Process,PersistedVersioningTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\PersistedVersioningTests.cs,TestExecutedMigrations,The following statement contains a magic number: Assert.AreEqual(2' executedMigrations.Count);
Magic Number,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCase                  {                      DbPlatformUnderExecution = DbPlatform.MySql5'                      Options = new DbAltererOptions                          {                              SupportedPlatforms =                                  {                                      DbPlatform.SqlServer2012'                                      DbPlatform.Oracle12c                                  }                          }'                      ExpectedTotalNumberOfSupportedProviders = 2'                      ExpectedValidationRuns = 3                  }.SetName("ProviderUnderExecutionIsValidatedAndSupportedProvidersToo");
Magic Number,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCase                  {                      DbPlatformUnderExecution = DbPlatform.MySql5'                      Options = new DbAltererOptions                          {                              SupportedPlatforms =                                  {                                      DbPlatform.SqlServer2012'                                      DbPlatform.Oracle12c                                  }                          }'                      ExpectedTotalNumberOfSupportedProviders = 2'                      ExpectedValidationRuns = 3                  }.SetName("ProviderUnderExecutionIsValidatedAndSupportedProvidersToo");
Magic Number,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCase                  {                      DbPlatformUnderExecution = DbPlatform.MySql5'                      Options = new DbAltererOptions                          {                              SupportedPlatforms =                                  {                                      DbPlatform.SqlServer2012'                                      DbPlatform.Oracle12c                                  }                          }'                      ExpectedTotalNumberOfSupportedProviders = 2'                      ExpectedValidationRuns = 3                  }.SetName("ProviderUnderExecutionIsValidatedAndSupportedProvidersToo (with a reachable minimum requirement)");
Magic Number,MigSharp.NUnit.Process,ValidatorFactoryTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorFactoryTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCase                  {                      DbPlatformUnderExecution = DbPlatform.MySql5'                      Options = new DbAltererOptions                          {                              SupportedPlatforms =                                  {                                      DbPlatform.SqlServer2012'                                      DbPlatform.Oracle12c                                  }                          }'                      ExpectedTotalNumberOfSupportedProviders = 2'                      ExpectedValidationRuns = 3                  }.SetName("ProviderUnderExecutionIsValidatedAndSupportedProvidersToo (with a reachable minimum requirement)");
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyUnsupportedDataTypesAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.String' 255)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Currency)' false' false)' // not supported                  new UsedDataType(new DataType(DbType.Int32)' false' false)' // ok                  new UsedDataType(new DataType(DbType.Decimal' 20' 10)' false' false)' // exceeds size and scale                  new UsedDataType(new DataType(DbType.String)' false' false)' // ok (should not override the primary key status of this DbType)                    new UsedDataType(new DataType(DbType.String)' true' false)' // as primary key -> *not* ok w/o size                  new UsedDataType(new DataType(DbType.String' 255)' true' false)' // as primary key -> ok                    new UsedDataType(new DataType(DbType.Decimal' 8' 2)' false' true)' // as identity -> *not* ok with scale                  new UsedDataType(new DataType(DbType.Decimal' 8)' false' true)' // as identity -> ok without scale              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWronglyUsedOfSizeAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.Int32' 777)' false' false)'                  new UsedDataType(new DataType(DbType.String' null' 777)' false' false)'                  new UsedDataType(new DataType(DbType.Decimal)' false' false)'              };
Magic Number,MigSharp.NUnit.Process,ValidatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Process\ValidatorTests.cs,VerifyWronglyUsedOfSizeAreReported,The following statement contains a magic number: var dataTypes = new List<UsedDataType>              {                  new UsedDataType(new DataType(DbType.Int32' 777)' false' false)'                  new UsedDataType(new DataType(DbType.String' null' 777)' false' false)'                  new UsedDataType(new DataType(DbType.Decimal)' false' false)'              };
Magic Number,MigSharp.NUnit.Providers,DataTypeTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\DataTypeTests.cs,TestEquals,The following statement contains a magic number: DataType type1 = new DataType(DbType.AnsiStringFixedLength' 20' 0);
Magic Number,MigSharp.NUnit.Providers,DataTypeTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\DataTypeTests.cs,TestEquals,The following statement contains a magic number: DataType type2 = new DataType(DbType.AnsiStringFixedLength' 20' 0);
Magic Number,MigSharp.NUnit.Providers,DataTypeTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\DataTypeTests.cs,TestEquals,The following statement contains a magic number: DataType type3 = new DataType(DbType.StringFixedLength' 20' 0);
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Customer_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 128)' "Basic.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Customer_Id_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 128' "Id")' "Basic with one additional name.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Customer_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 128' "Id"' "Name")' "Basic with two additional names.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Cus-mer_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 18' "Id"' "Name")' "One char too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Cus-er_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 17' "Id"' "Name")' "Two chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Cu-er_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 16' "Id"' "Name")' "Three chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("Cu-r_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 15' "Id"' "Name")' "Four chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C-r_Id_Name_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 14' "Id"' "Name")' "Five chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C-r_Id_N-e_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 13' "Id"' "Name")' "Six chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C_Id_N-e_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 12' "Id"' "Name")' "Seven chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C_Id_N-e_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 11' "Id"' "Name")' "Eight chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C_Id_N_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 10' "Id"' "Name")' "Nine chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C_Id_N_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 9' "Id"' "Name")' "Ten chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectName,The following statement contains a magic number: Assert.AreEqual("C_I_N_DF"' ObjectNameHelper.GetObjectName("Customer"' "DF"' 8' "Id"' "Name")' "Eleven chars too long.");
Magic Number,MigSharp.NUnit.Providers,ObjectNameHelperTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ObjectNameHelperTests.cs,VerifyGetObjectNameThrowsIfTooShort,The following statement contains a magic number: Assert.That(() => ObjectNameHelper.GetObjectName("Customer"' "DF"' 7' "Id"' "Name")' Throws.ArgumentException);
Magic Number,MigSharp.NUnit.Providers,ProviderLocatorTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\ProviderLocatorTests.cs,TestGetLatestWhenThereIsNoMatchingProviders,The following statement contains a magic number: Assert.That(() => locator.GetLatest(new DbPlatform(Platform.SqlServer' 8))' Throws.Exception);
Magic Number,MigSharp.NUnit.Providers,RecordingProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\RecordingProviderTests.cs,VerifyDateTypesAreRecorded,The following statement contains a magic number: provider.CreateTable(new TableName("Table"' null)' new[]              {                  new CreatedColumn("Primary Key Column"' new DataType(DbType.Int32)' false' true' string.Empty' false' null' false)'                  new CreatedColumn("Identity Column"' new DataType(DbType.Int64)' false' false' string.Empty' true' null' false)'                  new CreatedColumn("Column"' new DataType(DbType.String' 10)' false' false' string.Empty' false' null' false)'  // ReSharper disable ReturnValueOfPureMethodIsNotUsed : needed to force enumeration              }' "MyPK").ToList();
Magic Number,MigSharp.NUnit.Providers,RecordingProviderTests,D:\research\architectureSmells\repos\dradovic_MigSharp\MigSharp.NUnit\Providers\RecordingProviderTests.cs,VerifyDateTypesAreRecorded,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[]              {                  new UsedDataType(new DataType(DbType.Int32)' true' false)'                  new UsedDataType(new DataType(DbType.Int64)' false' true)'                  new UsedDataType(new DataType(DbType.String' 10)' false' false)'              }' provider.DataTypes.ToList());
