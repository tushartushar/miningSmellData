Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,Cyclomatic complexity of the method is 13
Complex Method,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,Convert,Cyclomatic complexity of the method is 25
Complex Method,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,HandleSwitches,Cyclomatic complexity of the method is 23
Complex Method,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,Initialize,Cyclomatic complexity of the method is 19
Long Parameter List,MigSharp.Generate,Program,F:\newReposMay17\dradovic_MigSharp\Generate\Program.cs,ParseCommandLineArguments,The method has 11 parameters.
Long Statement,MigSharp.Generate,Program,F:\newReposMay17\dradovic_MigSharp\Generate\Program.cs,Main,The length of the statement  "		ParseCommandLineArguments (options' parser' ConfigurationManager.ConnectionStrings' out connectionString' out migrationNamespace' out moduleName' out versioningTableName' out versioningTableSchema' out includedSchemas' out excludedTables' out includeData); " is 256.
Long Statement,MigSharp.Generate,Program,F:\newReposMay17\dradovic_MigSharp\Generate\Program.cs,ParseCommandLineArguments,The length of the statement  "		throw new InvalidCommandLineArgumentException ("Invalid command line arguments. Specify the target." + Environment.NewLine + Environment.NewLine + GetUsageMessage (parser)' InvalidArgumentsExitCode); " is 199.
Long Statement,MigSharp.Generate,Program,F:\newReposMay17\dradovic_MigSharp\Generate\Program.cs,ParseCommandLineArguments,The length of the statement  "		throw new InvalidCommandLineArgumentException (string.Format (CultureInfo.CurrentCulture' "Missing target: '{0}'. Could not find entry in the configuration file."' target)' InvalidTargetExitCode); " is 196.
Long Statement,MigSharp.Generate,Program,F:\newReposMay17\dradovic_MigSharp\Generate\Program.cs,ParseCommandLineArguments,The length of the statement  "		throw new InvalidCommandLineArgumentException (string.Format (CultureInfo.CurrentCulture' "Empty target: '{0}'. The entry in the configuration file is empty."' target)' InvalidTargetExitCode); " is 192.
Long Statement,MigSharp.Generate,Program,F:\newReposMay17\dradovic_MigSharp\Generate\Program.cs,GetUsageMessage,The length of the statement  "	string usage = "Migrate.exe <target> [<Arguments>]" + Environment.NewLine + Environment.NewLine + "target:     name of the connectionString as specified in Generate.exe.config" + Environment.NewLine + Environment.NewLine + parser.GetUsage (); " is 242.
Long Statement,MigSharp.Generate,SqlAggregateMigrationGenerator,F:\newReposMay17\dradovic_MigSharp\Generate\SqlAggregateMigrationGenerator.cs,GetLatestTimestamp,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "No migrations found for module '{0}'."' Options.ModuleName)); " is 142.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The length of the statement  "		if (!_options.IsSchemaIncluded (table.Schema) || !_options.IsTableIncluded (table.Name) || table.Name.StartsWith ("__"' StringComparison.Ordinal) || // hide special tables such as the EF migration history table " is 210.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleTable,The length of the statement  "	AppendLine (string.Format (CultureInfo.InvariantCulture' "db.Schemata[\"{0}\"].CreateTable(\"{1}\"{2})"' table.Schema' table.Name' string.IsNullOrEmpty (primaryKeyName) ? string.Empty : "' \"" + primaryKeyName + "\"")' 3); " is 222.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleUserDefinedTableType,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Could not script user defined table type. Expected one line but was: {0}"' string.Join (Environment.NewLine' script))); " is 200.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleTableData,The length of the statement  "	foreach (var line in script.Where (l => l.ToUpperInvariant ().StartsWith ("INSERT"' StringComparison.Ordinal) || l.ToUpperInvariant ().StartsWith ("SET IDENTITY_INSERT"' StringComparison.Ordinal))) { " is 199.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The length of the statement  "	AppendLine ("db.Schemata[\"{0}\"].Tables[\"{1}\"].AddForeignKeyTo(\"{2}\"' \"{3}\")"' 3' table.Schema' table.Name' foreignKey.ReferencedTable' foreignKey.Name); " is 160.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The length of the statement  "		AppendLine (".Through(\"{0}\"' \"{1}\"){2}"' 4' column.Name' column.ReferencedColumn' !cascadeDeletion && column == lastColumn ? ";" : string.Empty); " is 149.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleIndex,The length of the statement  "	string line = string.Format (CultureInfo.InvariantCulture' "db.Schemata[\"{0}\"].Tables[\"{1}\"].AddIndex()"' table.Schema' table.Name); " is 136.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleColumn,The length of the statement  "		string columnKind = column.InPrimaryKey ? "PrimaryKey" : (isRowVersionColumn ? "RowVersion" : string.Format (CultureInfo.InvariantCulture' "{0}Nullable"' column.Nullable ? string.Empty : "Not")); " is 195.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleColumn,The length of the statement  "		AppendLine (".With{0}Column(\"{1}\"{2}){3}{4}{5}{6}{7}"' 4' columnKind' column.Name' isRowVersionColumn ? string.Empty : "' " + GetDbTypeExpression (column)' isRowVersionColumn ? string.Empty : GetOfSize (column)' column.Identity ? ".AsIdentity()" : string.Empty' uniqueExpression' GetHavingDefault (column)' isLastColumn ? ";" : string.Empty); " is 344.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleColumn,The length of the statement  "		_errors.Add (string.Format (CultureInfo.CurrentCulture' "In table {0}.{1} for column {2}: {3}"' table.Schema' table.Name' column.Name' x.Message)); " is 147.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetDefaultConstraintValue,The length of the statement  "	if (dataType.SqlDataType == SqlDataType.BigInt || dataType.SqlDataType == SqlDataType.Int || dataType.SqlDataType == SqlDataType.SmallInt || dataType.SqlDataType == SqlDataType.TinyInt || dataType.SqlDataType == SqlDataType.Bit) { " is 230.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetDefaultConstraintValue,The length of the statement  "			throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Could not parse '{0}' as NVARCHAR literal."' defaultConstraint)); " is 146.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetDefaultConstraintValue,The length of the statement  "	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Default constraint for columns of type: {0} are not supported yet."' dataType.SqlDataType)); " is 169.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,FindUniqueIndex,The length of the statement  "	return table.Indexes.Cast<Index> ().SingleOrDefault (i => i.IsUnique && i.IndexedColumns.Cast<IndexedColumn> ().Any (c => c.Name == column.Name)); " is 146.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetOfSize,The length of the statement  "	if (dbType == DbType.String || dbType == DbType.AnsiString || dbType == DbType.StringFixedLength || dbType == DbType.AnsiStringFixedLength) { " is 141.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetOfSize,The length of the statement  "			return string.Format (CultureInfo.InvariantCulture' ".OfSize({0}' {1})"' column.DataType.NumericPrecision' column.DataType.NumericScale); " is 137.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,Convert,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "The column type {0} is not supported yet."' type)); " is 128.
Long Statement,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetExportAttributeArgs,The length of the statement  "	return string.IsNullOrEmpty (_options.ModuleName) ? string.Empty : string.Format (CultureInfo.InvariantCulture' "(ModuleName = \"{0}\")"' _options.ModuleName); " is 159.
Long Statement,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,ExtractApplicationName,The length of the statement  "	Regex r = new Regex (@"^\s*(\""(?<commandLine>.+?)\""|(?<commandLine>\S+))(?<remainder>.*)"' RegexOptions.ExplicitCapture); " is 123.
Long Statement,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,Initialize,The length of the statement  "						throw new ArgumentException (string.Format ("Switch '{0}' used ambiguously."' switchRec.Name)' "classForAutoAttributes"); " is 121.
Long Statement,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,Initialize,The length of the statement  "										throw new ArgumentException (string.Format ("Switch alias '{0}' used ambiguously (for switch '{1}' and '{2}'."' otherAlias' switchRec.Name' rec.Name)' "classForAutoAttributes"); " is 177.
Long Statement,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,GetUsage,The length of the statement  "		usage += (switchLine [i] + ":").PadRight (maxWidth + 5) + s.Description + ((s.Required) ? " (REQUIRED)" : "") + Environment.NewLine; " is 132.
Complex Conditional,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The conditional expression  "!_options.IsSchemaIncluded (table.Schema) || !_options.IsTableIncluded (table.Name) || table.Name.StartsWith ("__"' StringComparison.Ordinal) || // hide special tables such as the EF migration history table  (table.Name == _options.VersioningTableName && table.Schema == _options.VersioningTableSchema)"  is complex.
Complex Conditional,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetDefaultConstraintValue,The conditional expression  "dataType.SqlDataType == SqlDataType.BigInt || dataType.SqlDataType == SqlDataType.Int || dataType.SqlDataType == SqlDataType.SmallInt || dataType.SqlDataType == SqlDataType.TinyInt || dataType.SqlDataType == SqlDataType.Bit"  is complex.
Complex Conditional,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetOfSize,The conditional expression  "dbType == DbType.String || dbType == DbType.AnsiString || dbType == DbType.StringFixedLength || dbType == DbType.AnsiStringFixedLength"  is complex.
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,Generate,The following statement contains a magic number: AppendLine ("[GeneratedCode(\"{0}\"' \"{1}\")]"' 2' assemblyName.Name' assemblyName.Version);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,Generate,The following statement contains a magic number: AppendLine ("public void Up(IDatabase db)"' 2);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,Generate,The following statement contains a magic number: AppendLine ("{{"' 2);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,Generate,The following statement contains a magic number: AppendLine ("}}"' 2);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: foreach (dynamic schema in _database.Schemas) {  	if (!_options.IsSchemaIncluded (schema.Name) || schema.IsSystemObject) {  		Console.WriteLine ("Skipping schema [{0}]"' schema.Name);  		continue;  	}  	if (isFirstSchema) {  		AppendLine ("//"' 3);  		AppendLine ("// Schemas"' 3);  		AppendLine ("//"' 3);  		isFirstSchema = false;  	}  	HandleSchema (schema);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: foreach (dynamic schema in _database.Schemas) {  	if (!_options.IsSchemaIncluded (schema.Name) || schema.IsSystemObject) {  		Console.WriteLine ("Skipping schema [{0}]"' schema.Name);  		continue;  	}  	if (isFirstSchema) {  		AppendLine ("//"' 3);  		AppendLine ("// Schemas"' 3);  		AppendLine ("//"' 3);  		isFirstSchema = false;  	}  	HandleSchema (schema);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: foreach (dynamic schema in _database.Schemas) {  	if (!_options.IsSchemaIncluded (schema.Name) || schema.IsSystemObject) {  		Console.WriteLine ("Skipping schema [{0}]"' schema.Name);  		continue;  	}  	if (isFirstSchema) {  		AppendLine ("//"' 3);  		AppendLine ("// Schemas"' 3);  		AppendLine ("//"' 3);  		isFirstSchema = false;  	}  	HandleSchema (schema);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (isFirstSchema) {  	AppendLine ("//"' 3);  	AppendLine ("// Schemas"' 3);  	AppendLine ("//"' 3);  	isFirstSchema = false;  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (isFirstSchema) {  	AppendLine ("//"' 3);  	AppendLine ("// Schemas"' 3);  	AppendLine ("//"' 3);  	isFirstSchema = false;  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (isFirstSchema) {  	AppendLine ("//"' 3);  	AppendLine ("// Schemas"' 3);  	AppendLine ("//"' 3);  	isFirstSchema = false;  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("// Schemas"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("// Tables"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (tablesWithForeignKeys.Any ()) {  	AppendLine ();  	AppendLine ("//"' 3);  	AppendLine ("// Foreign Keys"' 3);  	AppendLine ("//"' 3);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (tablesWithForeignKeys.Any ()) {  	AppendLine ();  	AppendLine ("//"' 3);  	AppendLine ("// Foreign Keys"' 3);  	AppendLine ("//"' 3);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (tablesWithForeignKeys.Any ()) {  	AppendLine ();  	AppendLine ("//"' 3);  	AppendLine ("// Foreign Keys"' 3);  	AppendLine ("//"' 3);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("// Foreign Keys"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (_database.UserDefinedTableTypes.Count > 0) {  	AppendLine ();  	AppendLine ("//"' 3);  	AppendLine ("// User Defined Table Types"' 3);  	AppendLine ("//"' 3);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (_database.UserDefinedTableTypes.Count > 0) {  	AppendLine ();  	AppendLine ("//"' 3);  	AppendLine ("// User Defined Table Types"' 3);  	AppendLine ("//"' 3);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: if (_database.UserDefinedTableTypes.Count > 0) {  	AppendLine ();  	AppendLine ("//"' 3);  	AppendLine ("// User Defined Table Types"' 3);  	AppendLine ("//"' 3);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("// User Defined Table Types"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GenerateUpBody,The following statement contains a magic number: AppendLine ("//"' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleSchema,The following statement contains a magic number: AppendLine ("db.CreateSchema(\"{0}\");"' 3' schema.Name);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleTable,The following statement contains a magic number: AppendLine (string.Format (CultureInfo.InvariantCulture' "db.Schemata[\"{0}\"].CreateTable(\"{1}\"{2})"' table.Schema' table.Name' string.IsNullOrEmpty (primaryKeyName) ? string.Empty : "' \"" + primaryKeyName + "\"")' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleUserDefinedTableType,The following statement contains a magic number: AppendLine ("db.Execute(@\"{0}\");"' 3' script [0]);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleTableData,The following statement contains a magic number: foreach (var line in script.Where (l => l.ToUpperInvariant ().StartsWith ("INSERT"' StringComparison.Ordinal) || l.ToUpperInvariant ().StartsWith ("SET IDENTITY_INSERT"' StringComparison.Ordinal))) {  	AppendLine ("db.Execute(@\"{0}\");"' 3' line.Replace ("\""' "\"\""));  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleTableData,The following statement contains a magic number: AppendLine ("db.Execute(@\"{0}\");"' 3' line.Replace ("\""' "\"\""));  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: AppendLine ("db.Schemata[\"{0}\"].Tables[\"{1}\"].AddForeignKeyTo(\"{2}\"' \"{3}\")"' 3' table.Schema' table.Name' foreignKey.ReferencedTable' foreignKey.Name);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: if (foreignKey.ReferencedTableSchema != table.Schema) {  	AppendLine (".InSchema(\"{0}\")"' 4' foreignKey.ReferencedTableSchema);  	// CLEAN: use nameof  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: AppendLine (".InSchema(\"{0}\")"' 4' foreignKey.ReferencedTableSchema);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: foreach (ForeignKeyColumn column in foreignKey.Columns) {  	AppendLine (".Through(\"{0}\"' \"{1}\"){2}"' 4' column.Name' column.ReferencedColumn' !cascadeDeletion && column == lastColumn ? ";" : string.Empty);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: AppendLine (".Through(\"{0}\"' \"{1}\"){2}"' 4' column.Name' column.ReferencedColumn' !cascadeDeletion && column == lastColumn ? ";" : string.Empty);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: if (cascadeDeletion) {  	AppendLine (".CascadeOnDelete();"' 4);  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleForeignKey,The following statement contains a magic number: AppendLine (".CascadeOnDelete();"' 4);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleIndex,The following statement contains a magic number: AppendLine (line' 3);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleColumn,The following statement contains a magic number: try {  	bool isRowVersionColumn = column.DataType.SqlDataType == SqlDataType.Timestamp;  	string columnKind = column.InPrimaryKey ? "PrimaryKey" : (isRowVersionColumn ? "RowVersion" : string.Format (CultureInfo.InvariantCulture' "{0}Nullable"' column.Nullable ? string.Empty : "Not"));  	string uniqueExpression = GetUniqueExpression (table' column);  	AppendLine (".With{0}Column(\"{1}\"{2}){3}{4}{5}{6}{7}"' 4' columnKind' column.Name' isRowVersionColumn ? string.Empty : "' " + GetDbTypeExpression (column)' isRowVersionColumn ? string.Empty : GetOfSize (column)' column.Identity ? ".AsIdentity()" : string.Empty' uniqueExpression' GetHavingDefault (column)' isLastColumn ? ";" : string.Empty);  } catch (NotSupportedException x) {  	_errors.Add (string.Format (CultureInfo.CurrentCulture' "In table {0}.{1} for column {2}: {3}"' table.Schema' table.Name' column.Name' x.Message));  }  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,HandleColumn,The following statement contains a magic number: AppendLine (".With{0}Column(\"{1}\"{2}){3}{4}{5}{6}{7}"' 4' columnKind' column.Name' isRowVersionColumn ? string.Empty : "' " + GetDbTypeExpression (column)' isRowVersionColumn ? string.Empty : GetOfSize (column)' column.Identity ? ".AsIdentity()" : string.Empty' uniqueExpression' GetHavingDefault (column)' isLastColumn ? ";" : string.Empty);  
Magic Number,MigSharp.Generate,SqlMigrationGeneratorBase,F:\newReposMay17\dradovic_MigSharp\Generate\SqlMigrationGeneratorBase.cs,GetOfSize,The following statement contains a magic number: if (dbType == DbType.DateTime2 && column.DataType.NumericScale != 7) {  	return string.Format (CultureInfo.InvariantCulture' ".OfSize({0})"' column.DataType.NumericScale);  }  
Magic Number,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,GetUsage,The following statement contains a magic number: for (int i = 0; i < Switches.Length; i++) {  	SwitchInfo s = Switches [i];  	usage += (switchLine [i] + ":").PadRight (maxWidth + 5) + s.Description + ((s.Required) ? " (REQUIRED)" : "") + Environment.NewLine;  }  
Magic Number,MigSharp.Generate.Util,CommandLineParser,F:\newReposMay17\dradovic_MigSharp\Generate\Util\CommandLineParser.cs,GetUsage,The following statement contains a magic number: usage += (switchLine [i] + ":").PadRight (maxWidth + 5) + s.Description + ((s.Required) ? " (REQUIRED)" : "") + Environment.NewLine;  
