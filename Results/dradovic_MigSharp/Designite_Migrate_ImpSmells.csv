Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ParseCommandLineArguments,Cyclomatic complexity of the method is 9
Complex Method,MigSharp.Migrate.Util,CommandLineParser,C:\repos\dradovic_MigSharp\Migrate\Util\CommandLineParser.cs,HandleSwitches,Cyclomatic complexity of the method is 9
Complex Method,MigSharp.Migrate.Util,CommandLineParser,C:\repos\dradovic_MigSharp\Migrate\Util\CommandLineParser.cs,Initialize,Cyclomatic complexity of the method is 19
Long Parameter List,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ParseCommandLineArguments,The method has 9 parameters. Parameters: options' parser' connectionStrings' connectionString' dbPlatform' assemblyPath' additionalAssemblyPaths' timestamp' traceLevels
Long Parameter List,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ExecuteMigration,The method has 6 parameters. Parameters: connectionString' dbPlatform' options' assemblyPath' timestamp' additionalAssemblyPaths
Long Statement,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,Main,The length of the statement  "                options = ParseCommandLineArguments(commandLineOptions' parser' ConfigurationManager.ConnectionStrings' out connectionString' out dbPlatform' out assemblyPath' out additionalAssemblyPaths' out timestamp' out traceLevels); " is 221.
Long Statement,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ParseCommandLineArguments,The length of the statement  "                throw new InvalidCommandLineArgumentException("Invalid command line arguments. Specify at least the target and one assembly." + Environment.NewLine + Environment.NewLine + GetUsageMessage(parser)' " is 196.
Long Statement,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ParseCommandLineArguments,The length of the statement  "            var migrationOptions = !string.IsNullOrEmpty(options.Module) ? new MigrationOptions(options.Module) : new MigrationOptions(); " is 125.
Long Statement,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,GetUsageMessage,The length of the statement  "            string usage = "Migrate.exe <target> <assembly> [..<assembly>] [<Arguments>]" + Environment.NewLine + Environment.NewLine + " is 123.
Long Statement,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,GetUsageMessage,The length of the statement  "                           "assembly:   space separated path(s) to the assembly dll(s) containing the migrations to execute" + Environment.NewLine + " is 121.
Long Statement,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,GetErrorMessage,The length of the statement  "                message += string.Format(CultureInfo.CurrentCulture' "{0}: {1}{2}{3}{2}{2}"' x.GetType()' x.Message' Environment.NewLine' x.StackTrace); " is 136.
Long Statement,MigSharp.Migrate.Util,CommandLineParser,C:\repos\dradovic_MigSharp\Migrate\Util\CommandLineParser.cs,Initialize,The length of the statement  "                                                throw new ArgumentException(string.Format("Switch alias '{0}' used ambiguously (for switch '{1}' and '{2}'."' otherAlias' switchRec.Name' rec.Name)' "classForAutoAttributes"); " is 175.
Long Statement,MigSharp.Migrate.Util,CommandLineParser,C:\repos\dradovic_MigSharp\Migrate\Util\CommandLineParser.cs,GetUsage,The length of the statement  "                usage += (switchLine[i] + ":").PadRight(maxWidth + 5) + s.Description + ((s.Required) ? " (REQUIRED)" : "") + Environment.NewLine; " is 130.
Complex Conditional,MigSharp.Migrate.Util,SwitchRecord,C:\repos\dradovic_MigSharp\Migrate\Util\CommandLineParser.cs,SwitchRecord,The conditional expression  "type == typeof(bool) ||                      type == typeof(string) ||                      type == typeof(int) ||                      type.IsEnum"  is complex.
Magic Number,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ParseCommandLineArguments,The following statement contains a magic number: if (parser.Parameters.Length < 2 || // expect at least the target and one assemlby                  parser.UnhandledSwitches.Length > 0)              {                  throw new InvalidCommandLineArgumentException("Invalid command line arguments. Specify at least the target and one assembly." + Environment.NewLine + Environment.NewLine + GetUsageMessage(parser)'                      InvalidArgumentsExitCode);              }
Magic Number,MigSharp.Migrate,Program,C:\repos\dradovic_MigSharp\Migrate\Program.cs,ParseCommandLineArguments,The following statement contains a magic number: additionalAssemblyPaths = parser.Parameters.Skip(2).ToArray();
Magic Number,MigSharp.Migrate.Util,CommandLineParser,C:\repos\dradovic_MigSharp\Migrate\Util\CommandLineParser.cs,GetUsage,The following statement contains a magic number: for (int i = 0; i < Switches.Length; i++)              {                  SwitchInfo s = Switches[i];                  usage += (switchLine[i] + ":").PadRight(maxWidth + 5) + s.Description + ((s.Required) ? " (REQUIRED)" : "") + Environment.NewLine;              }
