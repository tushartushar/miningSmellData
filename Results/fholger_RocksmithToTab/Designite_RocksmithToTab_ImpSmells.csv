Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,Main,Cyclomatic complexity of the method is 9
Complex Method,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportPsarc,Cyclomatic complexity of the method is 15
Long Parameter List,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportArrangement,The method has 6 parameters.
Long Parameter List,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ConstructFileName,The method has 5 parameters.
Long Statement,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportPsarc,The length of the statement  "				Console.WriteLine ("[{0}] {1} - {2}  ({3}' {4})   {{{5}}}"' song.Identifier' song.Artist' song.Title' song.Album' song.Year' string.Join ("' "' song.Arrangements)); " is 164.
Long Statement,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportPsarc,The length of the statement  "				string baseFileName = CleanFileName (ConstructFileName (options.FileNameFormat' score' song.Identifier' archiveName' toolkitInfo)); " is 131.
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: foreach (var file in inputFiles) {  	var baseName = Path.Combine (Path.GetDirectoryName (file)' Path.GetFileNameWithoutExtension (file));  	if (baseName.Length > 2) {  		var lastTwo = baseName.Substring (baseName.Length - 2);  		if (lastTwo == "_m" || lastTwo == "_p")  			baseName = baseName.Substring (0' baseName.Length - 2);  	}  	if (!baseNames.Contains (baseName)) {  		baseNames.Add (baseName);  		files.Add (file);  	}  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: foreach (var file in inputFiles) {  	var baseName = Path.Combine (Path.GetDirectoryName (file)' Path.GetFileNameWithoutExtension (file));  	if (baseName.Length > 2) {  		var lastTwo = baseName.Substring (baseName.Length - 2);  		if (lastTwo == "_m" || lastTwo == "_p")  			baseName = baseName.Substring (0' baseName.Length - 2);  	}  	if (!baseNames.Contains (baseName)) {  		baseNames.Add (baseName);  		files.Add (file);  	}  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: foreach (var file in inputFiles) {  	var baseName = Path.Combine (Path.GetDirectoryName (file)' Path.GetFileNameWithoutExtension (file));  	if (baseName.Length > 2) {  		var lastTwo = baseName.Substring (baseName.Length - 2);  		if (lastTwo == "_m" || lastTwo == "_p")  			baseName = baseName.Substring (0' baseName.Length - 2);  	}  	if (!baseNames.Contains (baseName)) {  		baseNames.Add (baseName);  		files.Add (file);  	}  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: if (baseName.Length > 2) {  	var lastTwo = baseName.Substring (baseName.Length - 2);  	if (lastTwo == "_m" || lastTwo == "_p")  		baseName = baseName.Substring (0' baseName.Length - 2);  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: if (baseName.Length > 2) {  	var lastTwo = baseName.Substring (baseName.Length - 2);  	if (lastTwo == "_m" || lastTwo == "_p")  		baseName = baseName.Substring (0' baseName.Length - 2);  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: if (baseName.Length > 2) {  	var lastTwo = baseName.Substring (baseName.Length - 2);  	if (lastTwo == "_m" || lastTwo == "_p")  		baseName = baseName.Substring (0' baseName.Length - 2);  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: if (lastTwo == "_m" || lastTwo == "_p")  	baseName = baseName.Substring (0' baseName.Length - 2);  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ScanDirectory,The following statement contains a magic number: baseName = baseName.Substring (0' baseName.Length - 2);  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportXml,The following statement contains a magic number: foreach (var xmlFile in inputFiles) {  	Console.WriteLine ("Processing {0} ..."' xmlFile);  	Song2014 arrangement = null;  	try {  		arrangement = Song2014.LoadFromFile (xmlFile);  	} catch (Exception e) {  		Console.WriteLine ("Failed to parse XML input file: " + e.Message);  	}  	if (arrangement != null) {  		// xml files should be named "songidentifier_arrangement.xml"'   		// extract the arrangement identifier' which we use to set  		// the track name and track color as well as output file name  		string baseFileName = Path.GetFileNameWithoutExtension (xmlFile);  		var identifiers = baseFileName.Split (new char[] {  			'_'  		});  		string arr = "";  		if (identifiers.Length >= 2)  			arr = identifiers.Last ();  		identifier = identifiers.First ();  		ExportArrangement (score' arrangement' arr' options.DifficultyLevel' xmlFile' null);  		if (options.SplitArrangements) {  			baseFileName = CleanFileName (ConstructFileName (options.FileNameFormat' score' identifier' identifier' null));  			baseFileName += " (" + arr + ")";  			SaveScore (score' baseFileName' options.OutputDirectory' options.OutputFormat);  			// remember to remove the track from the score again  			score.Tracks.Clear ();  		}  	}  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportXml,The following statement contains a magic number: if (arrangement != null) {  	// xml files should be named "songidentifier_arrangement.xml"'   	// extract the arrangement identifier' which we use to set  	// the track name and track color as well as output file name  	string baseFileName = Path.GetFileNameWithoutExtension (xmlFile);  	var identifiers = baseFileName.Split (new char[] {  		'_'  	});  	string arr = "";  	if (identifiers.Length >= 2)  		arr = identifiers.Last ();  	identifier = identifiers.First ();  	ExportArrangement (score' arrangement' arr' options.DifficultyLevel' xmlFile' null);  	if (options.SplitArrangements) {  		baseFileName = CleanFileName (ConstructFileName (options.FileNameFormat' score' identifier' identifier' null));  		baseFileName += " (" + arr + ")";  		SaveScore (score' baseFileName' options.OutputDirectory' options.OutputFormat);  		// remember to remove the track from the score again  		score.Tracks.Clear ();  	}  }  
Magic Number,RocksmithToTab,Program,F:\newReposMay17\fholger_RocksmithToTab\RocksmithToTab\Program.cs,ExportXml,The following statement contains a magic number: if (identifiers.Length >= 2)  	arr = identifiers.Last ();  
