Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,PreFilterMessage,Cyclomatic complexity of the method is 12
Complex Method,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,OnHandleCreated,Cyclomatic complexity of the method is 9
Complex Method,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,Exec,Cyclomatic complexity of the method is 24
Complex Method,Ankh.VS.Dialogs,VSCommandInstaller,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandInstaller.cs,Install,Cyclomatic complexity of the method is 9
Complex Method,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,Cyclomatic complexity of the method is 13
Complex Method,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,InternalGetSelectedItems,Cyclomatic complexity of the method is 14
Complex Method,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetDescendants,Cyclomatic complexity of the method is 11
Complex Method,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,InternalGetOwnerProjects,Cyclomatic complexity of the method is 13
Complex Method,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSccFiles,Cyclomatic complexity of the method is 8
Complex Method,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSccFiles,Cyclomatic complexity of the method is 11
Complex Method,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSccFiles,Cyclomatic complexity of the method is 8
Complex Method,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,GetStateIcon,Cyclomatic complexity of the method is 14
Complex Method,Ankh.VS.SolutionExplorer,StatusImageMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\StatusImageMapper.cs,GetStatusImageForSvnItem,Cyclomatic complexity of the method is 15
Complex Method,Ankh.VS.LanguageServices.LogMessages,LogMessageColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\LogMessages\LogMessageColorizer.cs,ColorizeLine,Cyclomatic complexity of the method is 17
Complex Method,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffColorizer.cs,ColorizeLine,Cyclomatic complexity of the method is 15
Complex Method,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,PerformPost,Cyclomatic complexity of the method is 10
Complex Method,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,OnIdle,Cyclomatic complexity of the method is 10
Complex Method,Ankh.UI.VS.TextEditor,TheVSTextEditor,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,IsInputKey,Cyclomatic complexity of the method is 16
Long Parameter List,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,Exec,The method has 5 parameters.
Long Parameter List,Ankh.VS.Dialogs,VSDocumentInstance,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSDocumentInstance.cs,Find,The method has 5 parameters.
Long Parameter List,Ankh.VS.Dialogs,VSDocumentInstance,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSDocumentInstance.cs,Replace,The method has 6 parameters.
Long Parameter List,Ankh.VS.Dialogs,ContextCommandHandler,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandInstaller.cs,Exec,The method has 5 parameters.
Long Parameter List,Ankh.VS.Dialogs,VSDocumentHost,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSDocumentFormPane.cs,Exec,The method has 5 parameters.
Long Parameter List,Ankh.VS.Dialogs,VSDocumentFormPane,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSDocumentFormPane.cs,Exec,The method has 5 parameters.
Long Parameter List,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,OnSelectionChanged,The method has 8 parameters.
Long Parameter List,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSccFiles,The method has 7 parameters.
Long Parameter List,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSccFiles,The method has 5 parameters.
Long Parameter List,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSccFiles,The method has 7 parameters.
Long Parameter List,Ankh.VS.WebBrowser,BrowserUser,C:\repos\necora_ank_git\src\Ankh.VS\WebBrowser\AnkhWebBrowser.cs,GetCustomMenuInfo,The method has 6 parameters.
Long Parameter List,Ankh.VS.LanguageServices.Core,AnkhColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\Core\AnkhColorizer.cs,ColorizeLine,The method has 5 parameters.
Long Parameter List,Ankh.VS.LanguageServices.Core,AnkhColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\Core\AnkhColorizer.cs,ColorizeLine,The method has 5 parameters.
Long Parameter List,Ankh.VS.LanguageServices.Core,AnkhViewFilter,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\Core\AnkhViewFilter.cs,Exec,The method has 5 parameters.
Long Parameter List,Ankh.VS.LanguageServices.LogMessages,LogMessageColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\LogMessages\LogMessageColorizer.cs,ColorizeLine,The method has 5 parameters.
Long Parameter List,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffColorizer.cs,ColorizeLine,The method has 5 parameters.
Long Parameter List,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,CreateCodeWindow,The method has 5 parameters.
Long Parameter List,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,Exec,The method has 5 parameters.
Long Parameter List,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,OnChangeScrollInfo,The method has 6 parameters.
Long Statement,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,PreFilterMessage,The length of the statement  "		hr = _fKeys.TranslateAcceleratorEx (messages' dwFlags' 0' null' out cmdGuid' out cmdCode' out cmdTranslated' out keyComboStarts); " is 129.
Long Statement,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,OnLoad,The length of the statement  "		System.ComponentModel.Design.CommandID tbId = new System.ComponentModel.Design.CommandID (AnkhId.CommandSetGuid' (int)_form.ToolBar); " is 133.
Long Statement,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,SetBorderSpace,The length of the statement  "	if ((reserved.left == pbw [0].left) && (reserved.top == pbw [0].top) && (reserved.right == pbw [0].right) && (reserved.bottom == pbw [0].bottom)) { " is 147.
Long Statement,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The length of the statement  "			using (RegistryKey rk = baseKey.OpenSubKey (root + "\\SourceControlProviders"' RegistryKeyPermissionCheck.ReadSubTree)) { " is 121.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSelectedItems,The length of the statement  "	return _selectionItems ?? (_selectionItems = new CachedEnumerable<SelectionItem> (InternalGetSelectedItems ()' Disposer)); " is 122.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSelectedItemsRecursive,The length of the statement  "	return _selectionItemsRecursive ?? (_selectionItemsRecursive = new CachedEnumerable<SelectionItem> (InternalGetSelectedItemsRecursive ()' Disposer)); " is 149.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,InternalGetSelectedItems,The length of the statement  "					yield return new SelectionItem ((IVsHierarchy)Solution' VSConstants.VSITEMID_ROOT' SelectionUtils.GetSolutionAsSccProject (Context)); " is 133.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,InternalGetSelectedItems,The length of the statement  "	else if ((_currentHierarchy != null) && (_currentItem != VSConstants.VSITEMID_NIL) && (_currentItem != VSConstants.VSITEMID_SELECTION)) { " is 137.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,InternalGetSelectedItems,The length of the statement  "				yield return new SelectionItem ((IVsHierarchy)Solution' VSConstants.VSITEMID_ROOT' SelectionUtils.GetSolutionAsSccProject (Context)); " is 133.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,RecurseInto,The length of the statement  "	if (ErrorHandler.Succeeded (si.Hierarchy.GetProperty (si.Id' (int)__VSHPROPID.VSHPROPID_HasEnumerationSideEffects' out value))) { " is 129.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,RecurseInto,The length of the statement  "	if (si.SccProject == null && ErrorHandler.Succeeded (si.Hierarchy.GetProperty (si.Id' (int)__VSHPROPID2.VSHPROPID_ChildrenEnumerated' out value))) { " is 148.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSelectedFilesRecursive,The length of the statement  "	return _filenamesRecursive ?? (_filenamesRecursive = new CachedEnumerable<string> (InternalGetSelectedFiles (true)' Disposer)); " is 127.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSelectedSvnItemsRecursive,The length of the statement  "	return _svnItemsRecursive ?? (_svnItemsRecursive = new CachedEnumerable<SvnItem> (InternalGetSelectedSvnItems (true)' Disposer)); " is 129.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSccFiles,The length of the statement  "			if (!SelectionUtils.GetSccFiles (item' out files' depth >= ProjectWalkDepth.SpecialFiles' depth != ProjectWalkDepth.AllDescendantsInHierarchy' map)) " is 148.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSelectedProjects,The length of the statement  "	return _selectedProjects ?? (_selectedProjects = new CachedEnumerable<SvnProject> (InternalGetSelectedProjects (false)' Disposer)); " is 131.
Long Statement,Ankh.VS.Selection,SelectionContext,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionContext.cs,GetSelectedProjectsRecursive,The length of the statement  "	return _selectedProjectsRecursive ?? (_selectedProjectsRecursive = new CachedEnumerable<SvnProject> (InternalGetSelectedProjects (true)' Disposer)); " is 148.
Long Statement,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSolutionFileName,The length of the statement  "	if (ErrorHandler.Succeeded (sol.GetSolutionInfo (out solutionDirectory' out solutionFile' out solutionUserOptions)) && IsValidPath (solutionFile)) { " is 148.
Long Statement,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,GetTypeName,The length of the statement  "	IntPtr rslt = NativeMethods.SHGetFileInfoW (path' 0' ref fileinfo' (uint)Marshal.SizeOf (fileinfo)' NativeMethods.SHGFI_TYPENAME); " is 130.
Long Statement,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,GetTypeNameForExtension,The length of the statement  "	IntPtr rslt = NativeMethods.SHGetFileInfoW (dummyPath' (uint)(FileAttributes.Normal)' ref fileinfo' (uint)Marshal.SizeOf (fileinfo)' NativeMethods.SHGFI_TYPENAME | NativeMethods.SHGFI_USEFILEATTRIBUTES); " is 203.
Long Statement,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,GetOsIcon,The length of the statement  "	IntPtr sysImageList = NativeMethods.SHGetFileInfoW (path' 0' ref fileinfo' (uint)Marshal.SizeOf (fileinfo)' NativeMethods.SHGFI_SHELLICONSIZE | NativeMethods.SHGFI_SYSICONINDEX | NativeMethods.SHGFI_SMALLICON); " is 210.
Long Statement,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,GetSpecialIcon,The length of the statement  "	IntPtr sysImageList = NativeMethods.SHGetFileInfoW (name' (uint)(int)attr' ref fileinfo' (uint)Marshal.SizeOf (fileinfo)' NativeMethods.SHGFI_SHELLICONSIZE | NativeMethods.SHGFI_SYSICONINDEX | NativeMethods.SHGFI_SMALLICON | NativeMethods.SHGFI_USEFILEATTRIBUTES); " is 264.
Long Statement,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,GetSpecialFolderIcon,The length of the statement  "		IntPtr sysImageList = NativeMethods.SHGetFileInfoW (pidl' (uint)(int)FileAttributes.Directory' ref fileinfo' (uint)Marshal.SizeOf (fileinfo)' NativeMethods.SHGFI_SHELLICONSIZE | NativeMethods.SHGFI_SYSICONINDEX | NativeMethods.SHGFI_SMALLICON | NativeMethods.SHGFI_PIDL); " is 271.
Long Statement,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,EnsureSpecialImages,The length of the statement  "	Image img = Bitmap.FromStream (typeof(FileIconMapper).Assembly.GetManifestResourceStream (typeof(FileIconMapper).Namespace + ".UpDnListView.png")); " is 147.
Long Statement,Ankh.VS.SolutionExplorer,StatusImageMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\StatusImageMapper.cs,CreateStatusImageList,The length of the statement  "	using (Stream images = typeof(StatusImageMapper).Assembly.GetManifestResourceStream (typeof(StatusImageMapper).Namespace + ".StatusGlyphs.bmp")) { " is 146.
Long Statement,Ankh.VS.WebBrowser,AnkhWebBrowser,C:\repos\necora_ank_git\src\Ankh.VS\WebBrowser\AnkhWebBrowser.cs,Navigate,The length of the statement  "	int hr = browserSvc.CreateWebBrowser ((uint)args.CreateFlags' ref windowGuid' args.BaseCaption' url.ToString ()' new BrowserUser ()' out browser' out ppFrame); " is 159.
Long Statement,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ExecCommand,The length of the statement  "		bool ok = ErrorHandler.Succeeded (dispatcher.Exec (ref g' unchecked((uint)command.ID)' (uint)OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT' IntPtr.Zero' IntPtr.Zero)); " is 159.
Long Statement,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,DirectlyExecCommand,The length of the statement  "	CommandEventArgs e = new CommandEventArgs (command' AnkhContext' args' prompt == CommandPrompt.Always' prompt == CommandPrompt.Never); " is 134.
Long Statement,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,CreateCodeWindow,The length of the statement  "	uint initViewFlags = (uint)TextViewInitFlags.VIF_SET_WIDGET_MARGIN | (uint)TextViewInitFlags.VIF_SET_SELECTION_MARGIN | (uint)TextViewInitFlags2.VIF_SUPPRESSBORDER | //(uint)TextViewInitFlags2.VIF_SUPPRESS_STATUS_BAR_UPDATE | " is 225.
Long Statement,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,CreateCodeWindow,The length of the statement  "	ErrorHandler.ThrowOnFailure (_windowPane.CreatePaneWindow (parentHandle' place.X' place.Y' place.Width' place.Height' out editorHwnd)); " is 135.
Long Statement,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,CreateCodeWindow,The length of the statement  "			ErrorHandler.ThrowOnFailure (frame.SetGuidProperty ((int)__VSFPROPID.VSFPROPID_InheritKeyBindings' ref CMDUIGUID_TextEditor)); " is 126.
Long Statement,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,OnChangeScrollInfo,The length of the statement  "	VSTextEditorScrollEventArgs ea = new VSTextEditorScrollEventArgs (iMinUnit' iMaxUnits' iVisibleUnits' iFirstVisibleUnit); " is 121.
Complex Conditional,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,SetBorderSpace,The conditional expression  "(reserved.left == pbw [0].left) && (reserved.top == pbw [0].top) && (reserved.right == pbw [0].right) && (reserved.bottom == pbw [0].bottom)"  is complex.
Empty Catch Block,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,GetOtherSccActive,The method has an empty catch block.
Empty Catch Block,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The method has an empty catch block.
Empty Catch Block,Ankh.VS.Selection,SelectionUtils,C:\repos\necora_ank_git\src\Ankh.VS\Selection\SelectionUtils.cs,GetSccFiles,The method has an empty catch block.
Empty Catch Block,Ankh.VS.SolutionExplorer,SolutionExplorerWindow,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\SolutionExplorerWindow.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Ankh.VS.LanguageServices.Core,AnkhCodeWindowManager,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\Core\AnkhCodeWindowManager.cs,Close,The method has an empty catch block.
Empty Catch Block,Ankh.VS.LanguageServices.Core,AnkhColorizer,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\Core\AnkhColorizer.cs,Close,The method has an empty catch block.
Empty Catch Block,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ShowContextMenu,The method has an empty catch block.
Magic Number,Ankh.VS,TempDirManager,C:\repos\necora_ank_git\src\Ankh.VS\TempDirManager.cs,GetTempDir,The following statement contains a magic number: for (int i = 4; i < 32; i += 2) {  	name = Path.Combine (Path.GetTempPath ()' "AnkhSVN\\" + Guid.NewGuid ().ToString ("N").Substring (0' i));  	if (!Directory.Exists (name))  		break;  }  
Magic Number,Ankh.VS,TempDirManager,C:\repos\necora_ank_git\src\Ankh.VS\TempDirManager.cs,GetTempDir,The following statement contains a magic number: for (int i = 4; i < 32; i += 2) {  	name = Path.Combine (Path.GetTempPath ()' "AnkhSVN\\" + Guid.NewGuid ().ToString ("N").Substring (0' i));  	if (!Directory.Exists (name))  		break;  }  
Magic Number,Ankh.VS,TempDirManager,C:\repos\necora_ank_git\src\Ankh.VS\TempDirManager.cs,GetTempDir,The following statement contains a magic number: for (int i = 4; i < 32; i += 2) {  	name = Path.Combine (Path.GetTempPath ()' "AnkhSVN\\" + Guid.NewGuid ().ToString ("N").Substring (0' i));  	if (!Directory.Exists (name))  		break;  }  
Magic Number,Ankh.VS,TempDirManager,C:\repos\necora_ank_git\src\Ankh.VS\TempDirManager.cs,GetTempDir,The following statement contains a magic number: i += 2
Magic Number,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,PreFilterMessage,The following statement contains a magic number: if (m.Msg == WM_KEYDOWN)  	switch ((int)m.WParam) {  	case '\t':  		if ((Control.ModifierKeys & Keys.Control) != 0)  			return false;  		break;  	case 27:  		// Escape key should exit dialog  		return false;  	}  
Magic Number,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,PreFilterMessage,The following statement contains a magic number: switch ((int)m.WParam) {  case '\t':  	if ((Control.ModifierKeys & Keys.Control) != 0)  		return false;  	break;  case 27:  	// Escape key should exit dialog  	return false;  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (_otherSccProviderContexts == null) {  	List<SccData> sccs = new List<SccData> ();  	ILocalRegistry2 lr = GetService<ILocalRegistry2> (typeof(SLocalRegistry));  	string root;  	List<string> names = new List<string> ();  	if (ErrorHandler.Succeeded (lr.GetLocalRegistryRoot (out root))) {  		RegistryKey baseKey = Registry.LocalMachine;  		// TODO: Find some way to use the VS2008 RANU api  		if (root.EndsWith ("\\UserSettings")) {  			root = root.Substring (0' root.Length - 13) + "\\Configuration";  			baseKey = Registry.CurrentUser;  		}  		using (RegistryKey rk = baseKey.OpenSubKey (root + "\\SourceControlProviders"' RegistryKeyPermissionCheck.ReadSubTree)) {  			if (rk != null) {  				string myId = AnkhId.SccProviderGuid.ToString ("B");  				foreach (string name in rk.GetSubKeyNames ()) {  					if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  						try {  							using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  								string service = rks.GetValue ("Service") as string;  								if (!string.IsNullOrEmpty (service)) {  									Guid sccGuid = new Guid (name);  									CmdStateCacheItem cache = GetCache (new Guid (name));  									sccs.Add (new SccData (cache' service));  								}  							}  						}  						catch {  						}  					}  				}  			}  		}  	}  	_otherSccProviderContexts = sccs.ToArray ();  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (_otherSccProviderContexts == null) {  	List<SccData> sccs = new List<SccData> ();  	ILocalRegistry2 lr = GetService<ILocalRegistry2> (typeof(SLocalRegistry));  	string root;  	List<string> names = new List<string> ();  	if (ErrorHandler.Succeeded (lr.GetLocalRegistryRoot (out root))) {  		RegistryKey baseKey = Registry.LocalMachine;  		// TODO: Find some way to use the VS2008 RANU api  		if (root.EndsWith ("\\UserSettings")) {  			root = root.Substring (0' root.Length - 13) + "\\Configuration";  			baseKey = Registry.CurrentUser;  		}  		using (RegistryKey rk = baseKey.OpenSubKey (root + "\\SourceControlProviders"' RegistryKeyPermissionCheck.ReadSubTree)) {  			if (rk != null) {  				string myId = AnkhId.SccProviderGuid.ToString ("B");  				foreach (string name in rk.GetSubKeyNames ()) {  					if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  						try {  							using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  								string service = rks.GetValue ("Service") as string;  								if (!string.IsNullOrEmpty (service)) {  									Guid sccGuid = new Guid (name);  									CmdStateCacheItem cache = GetCache (new Guid (name));  									sccs.Add (new SccData (cache' service));  								}  							}  						}  						catch {  						}  					}  				}  			}  		}  	}  	_otherSccProviderContexts = sccs.ToArray ();  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (ErrorHandler.Succeeded (lr.GetLocalRegistryRoot (out root))) {  	RegistryKey baseKey = Registry.LocalMachine;  	// TODO: Find some way to use the VS2008 RANU api  	if (root.EndsWith ("\\UserSettings")) {  		root = root.Substring (0' root.Length - 13) + "\\Configuration";  		baseKey = Registry.CurrentUser;  	}  	using (RegistryKey rk = baseKey.OpenSubKey (root + "\\SourceControlProviders"' RegistryKeyPermissionCheck.ReadSubTree)) {  		if (rk != null) {  			string myId = AnkhId.SccProviderGuid.ToString ("B");  			foreach (string name in rk.GetSubKeyNames ()) {  				if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  					try {  						using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  							string service = rks.GetValue ("Service") as string;  							if (!string.IsNullOrEmpty (service)) {  								Guid sccGuid = new Guid (name);  								CmdStateCacheItem cache = GetCache (new Guid (name));  								sccs.Add (new SccData (cache' service));  							}  						}  					}  					catch {  					}  				}  			}  		}  	}  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (ErrorHandler.Succeeded (lr.GetLocalRegistryRoot (out root))) {  	RegistryKey baseKey = Registry.LocalMachine;  	// TODO: Find some way to use the VS2008 RANU api  	if (root.EndsWith ("\\UserSettings")) {  		root = root.Substring (0' root.Length - 13) + "\\Configuration";  		baseKey = Registry.CurrentUser;  	}  	using (RegistryKey rk = baseKey.OpenSubKey (root + "\\SourceControlProviders"' RegistryKeyPermissionCheck.ReadSubTree)) {  		if (rk != null) {  			string myId = AnkhId.SccProviderGuid.ToString ("B");  			foreach (string name in rk.GetSubKeyNames ()) {  				if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  					try {  						using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  							string service = rks.GetValue ("Service") as string;  							if (!string.IsNullOrEmpty (service)) {  								Guid sccGuid = new Guid (name);  								CmdStateCacheItem cache = GetCache (new Guid (name));  								sccs.Add (new SccData (cache' service));  							}  						}  					}  					catch {  					}  				}  			}  		}  	}  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (root.EndsWith ("\\UserSettings")) {  	root = root.Substring (0' root.Length - 13) + "\\Configuration";  	baseKey = Registry.CurrentUser;  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: root = root.Substring (0' root.Length - 13) + "\\Configuration";  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: using (RegistryKey rk = baseKey.OpenSubKey (root + "\\SourceControlProviders"' RegistryKeyPermissionCheck.ReadSubTree)) {  	if (rk != null) {  		string myId = AnkhId.SccProviderGuid.ToString ("B");  		foreach (string name in rk.GetSubKeyNames ()) {  			if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  				try {  					using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  						string service = rks.GetValue ("Service") as string;  						if (!string.IsNullOrEmpty (service)) {  							Guid sccGuid = new Guid (name);  							CmdStateCacheItem cache = GetCache (new Guid (name));  							sccs.Add (new SccData (cache' service));  						}  					}  				}  				catch {  				}  			}  		}  	}  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (rk != null) {  	string myId = AnkhId.SccProviderGuid.ToString ("B");  	foreach (string name in rk.GetSubKeyNames ()) {  		if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  			try {  				using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  					string service = rks.GetValue ("Service") as string;  					if (!string.IsNullOrEmpty (service)) {  						Guid sccGuid = new Guid (name);  						CmdStateCacheItem cache = GetCache (new Guid (name));  						sccs.Add (new SccData (cache' service));  					}  				}  			}  			catch {  			}  		}  	}  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: foreach (string name in rk.GetSubKeyNames ()) {  	if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  		try {  			using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  				string service = rks.GetValue ("Service") as string;  				if (!string.IsNullOrEmpty (service)) {  					Guid sccGuid = new Guid (name);  					CmdStateCacheItem cache = GetCache (new Guid (name));  					sccs.Add (new SccData (cache' service));  				}  			}  		}  		catch {  		}  	}  }  
Magic Number,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,EnsureContexts,The following statement contains a magic number: if (name.Length == 38 && !myId.Equals (name' StringComparison.OrdinalIgnoreCase)) {  	try {  		using (RegistryKey rks = rk.OpenSubKey (name' RegistryKeyPermissionCheck.ReadSubTree)) {  			string service = rks.GetValue ("Service") as string;  			if (!string.IsNullOrEmpty (service)) {  				Guid sccGuid = new Guid (name);  				CmdStateCacheItem cache = GetCache (new Guid (name));  				sccs.Add (new SccData (cache' service));  			}  		}  	}  	catch {  	}  }  
Magic Number,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,FileIconMapper,The following statement contains a magic number: _imageList.ImageSize = new Size (16' 16);  
Magic Number,Ankh.VS.SolutionExplorer,FileIconMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\FileIconMapper.cs,FileIconMapper,The following statement contains a magic number: _imageList.ImageSize = new Size (16' 16);  
Magic Number,Ankh.VS.SolutionExplorer,StatusImageMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\StatusImageMapper.cs,CreateStatusImageList,The following statement contains a magic number: using (Stream images = typeof(StatusImageMapper).Assembly.GetManifestResourceStream (typeof(StatusImageMapper).Namespace + ".StatusGlyphs.bmp")) {  	if (images == null)  		return null;  	Bitmap bitmap = (Bitmap)Image.FromStream (images' true);  	ImageList imageList = new ImageList ();  	imageList.ImageSize = new Size (8' bitmap.Height);  	bitmap.MakeTransparent (bitmap.GetPixel (0' 0));  	imageList.Images.AddStrip (bitmap);  	return imageList;  }  
Magic Number,Ankh.VS.SolutionExplorer,StatusImageMapper,C:\repos\necora_ank_git\src\Ankh.VS\SolutionExplorer\StatusImageMapper.cs,CreateStatusImageList,The following statement contains a magic number: imageList.ImageSize = new Size (8' bitmap.Height);  
Magic Number,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,The following statement contains a magic number: for (int i = 0; i < lastLine; i++) {  	ErrorHandler.ThrowOnFailure (lines.GetLengthOfLine (i' out linelen));  	if (linelen < 8)  		continue;  	// No 'Index: ' line  	string start;  	ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 0' i' 7' out start));  	if (!string.Equals (start' "Index: "))  		continue;  	ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 7' i' linelen' out start));  	start = start.Trim ();  	if (n >= _indexes.Count || _indexes [n] != start || _lines [n] != i) {  		changed = true;  		if (n <= _indexes.Count) {  			_lines.RemoveRange (n' _indexes.Count - n);  			_indexes.RemoveRange (n' _indexes.Count - n);  		}  		_indexes.Add (start);  		_lines.Add (i);  	}  	n++;  }  
Magic Number,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,The following statement contains a magic number: for (int i = 0; i < lastLine; i++) {  	ErrorHandler.ThrowOnFailure (lines.GetLengthOfLine (i' out linelen));  	if (linelen < 8)  		continue;  	// No 'Index: ' line  	string start;  	ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 0' i' 7' out start));  	if (!string.Equals (start' "Index: "))  		continue;  	ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 7' i' linelen' out start));  	start = start.Trim ();  	if (n >= _indexes.Count || _indexes [n] != start || _lines [n] != i) {  		changed = true;  		if (n <= _indexes.Count) {  			_lines.RemoveRange (n' _indexes.Count - n);  			_indexes.RemoveRange (n' _indexes.Count - n);  		}  		_indexes.Add (start);  		_lines.Add (i);  	}  	n++;  }  
Magic Number,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,The following statement contains a magic number: for (int i = 0; i < lastLine; i++) {  	ErrorHandler.ThrowOnFailure (lines.GetLengthOfLine (i' out linelen));  	if (linelen < 8)  		continue;  	// No 'Index: ' line  	string start;  	ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 0' i' 7' out start));  	if (!string.Equals (start' "Index: "))  		continue;  	ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 7' i' linelen' out start));  	start = start.Trim ();  	if (n >= _indexes.Count || _indexes [n] != start || _lines [n] != i) {  		changed = true;  		if (n <= _indexes.Count) {  			_lines.RemoveRange (n' _indexes.Count - n);  			_indexes.RemoveRange (n' _indexes.Count - n);  		}  		_indexes.Add (start);  		_lines.Add (i);  	}  	n++;  }  
Magic Number,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,The following statement contains a magic number: if (linelen < 8)  	continue;  
Magic Number,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,The following statement contains a magic number: ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 0' i' 7' out start));  
Magic Number,Ankh.VS.LanguageServices.UnifiedDiff,UnifiedDiffDropDownBar,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\UnifiedDiff\UnifiedDiffDropDownBar.cs,Parse,The following statement contains a magic number: ErrorHandler.ThrowOnFailure (lines.GetLineText (i' 7' i' linelen' out start));  
Magic Number,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ExecCommand,The following statement contains a magic number: try {  	vOut = Marshal.AllocCoTaskMem (128);  	NativeMethods.VariantInit (vOut);  	if (argument != null) {  		vIn = Marshal.AllocCoTaskMem (128);  		Marshal.GetNativeVariantForObject (argument' vIn);  	}  	bool ok = ErrorHandler.Succeeded (dispatcher.Exec (ref g' unchecked((uint)command.ID)' (uint)OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT' IntPtr.Zero' IntPtr.Zero));  	return new CommandResult (ok' Marshal.GetObjectForNativeVariant (vOut));  }  finally {  	if (vIn != IntPtr.Zero) {  		NativeMethods.VariantClear (vIn);  		Marshal.FreeCoTaskMem (vIn);  	}  	if (vOut != IntPtr.Zero) {  		NativeMethods.VariantClear (vOut);  		Marshal.FreeCoTaskMem (vOut);  	}  }  
Magic Number,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ExecCommand,The following statement contains a magic number: try {  	vOut = Marshal.AllocCoTaskMem (128);  	NativeMethods.VariantInit (vOut);  	if (argument != null) {  		vIn = Marshal.AllocCoTaskMem (128);  		Marshal.GetNativeVariantForObject (argument' vIn);  	}  	bool ok = ErrorHandler.Succeeded (dispatcher.Exec (ref g' unchecked((uint)command.ID)' (uint)OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT' IntPtr.Zero' IntPtr.Zero));  	return new CommandResult (ok' Marshal.GetObjectForNativeVariant (vOut));  }  finally {  	if (vIn != IntPtr.Zero) {  		NativeMethods.VariantClear (vIn);  		Marshal.FreeCoTaskMem (vIn);  	}  	if (vOut != IntPtr.Zero) {  		NativeMethods.VariantClear (vOut);  		Marshal.FreeCoTaskMem (vOut);  	}  }  
Magic Number,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ExecCommand,The following statement contains a magic number: vOut = Marshal.AllocCoTaskMem (128);  
Magic Number,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ExecCommand,The following statement contains a magic number: if (argument != null) {  	vIn = Marshal.AllocCoTaskMem (128);  	Marshal.GetNativeVariantForObject (argument' vIn);  }  
Magic Number,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,ExecCommand,The following statement contains a magic number: vIn = Marshal.AllocCoTaskMem (128);  
Magic Number,Ankh.Services,AnkhCommandService,C:\repos\necora_ank_git\src\Ankh.VS\Selection\AnkhCommandService.cs,PostCheck,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,Ankh.UI.VS.TextEditor,CodeEditorWindow,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,Init,The following statement contains a magic number: NativeMethods.ShowWindow (editorHwnd' 4);  
Missing Default,Ankh.VS.Dialogs,VSCommandRouting,C:\repos\necora_ank_git\src\Ankh.VS\Dialogs\VSCommandRouting.cs,PreFilterMessage,The following switch statement is missing a default case: switch ((int)m.WParam) {  case '\t':  	if ((Control.ModifierKeys & Keys.Control) != 0)  		return false;  	break;  case 27:  	// Escape key should exit dialog  	return false;  }  
Missing Default,Ankh.VS.Selection,CommandState,C:\repos\necora_ank_git\src\Ankh.VS\Selection\CommandState.cs,OnShellPropertyChange,The following switch statement is missing a default case: switch ((__VSSPROPID)propid) {  case __VSSPROPID.VSSPROPID_Zombie:  	if (var is bool) {  		_zombie = (bool)var;  		if (!_zombie)  			GetService<IAnkhServiceEvents> ().OnUIShellActivate (EventArgs.Empty);  	}  	break;  }  
Missing Default,Ankh.VS.LanguageServices.Core,AnkhViewFilter,C:\repos\necora_ank_git\src\Ankh.VS\LanguageServices\Core\AnkhViewFilter.cs,Exec,The following switch statement is missing a default case: switch ((VSConstants.VSStd2KCmdID)nCmdID) {  case VSConstants.VSStd2KCmdID.SHOWCONTEXTMENU:  	AnkhCommandMenu menu = Language.DefaultContextMenu;  	if (menu != 0)  		ShowContextMenu (AnkhId.CommandSetGuid' (int)menu' this);  	else  		ShowContextMenu (VsMenus.guidSHLMainMenu' VsMenus.IDM_VS_CTXT_CODEWIN' this);  	return VSConstants.S_OK;  }  
Missing Default,Ankh.UI.VS.TextEditor,TheVSTextEditor,C:\repos\necora_ank_git\src\Ankh.VS\TextEditor\TheVSTextEditor.cs,IsInputKey,The following switch statement is missing a default case: switch (key) {  case Keys.Tab:  	{  		if (_readOnly)  			return false;  		// Allow using tab for dialog navigation  		if ((keyData & (Keys.Control | Keys.Alt)) == Keys.Control) {  			if (TopLevelControl is Form) {  				Control c = this;  				bool found = false;  				bool forward = (keyData & Keys.Shift) == 0;  				while (!found && c != null) {  					ContainerControl cc = c.GetContainerControl () as ContainerControl;  					if (cc == null)  						break;  					else if (cc == c) {  						c = c.Parent;  						cc = c as ContainerControl;  						if (cc == null)  							continue;  					}  					if (cc.SelectNextControl (this' forward' true' true' false)) {  						found = true;  					}  					c = cc;  				}  				if (!found) {  					ContainerControl cc = c.TopLevelControl as ContainerControl;  					if (cc != null)  						cc.SelectNextControl (this' forward' true' true' true);  				}  			}  			return false;  		}  	}  	break;  case Keys.Escape:  	Form f = TopLevelControl as Form;  	if (f != null && f.Modal)  		return false;  	// Escape should close a dialog  	break;  }  
