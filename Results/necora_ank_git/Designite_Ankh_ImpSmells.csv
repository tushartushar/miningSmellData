Implementation smell,Namespace,Class,File,Method,Description
Long Method,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,The method has 101 lines of code.
Long Method,Ankh.Commands,SolutionUpdateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SolutionUpdateCommand.cs,OnExecute,The method has 141 lines of code.
Long Method,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The method has 118 lines of code.
Long Method,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnExecute,The method has 120 lines of code.
Complex Method,Ankh.Commands,ItemCreatePatch,C:\repos\necora_ank_git\src\Ankh\Commands\ItemCreatePatch.cs,OnExecute,Cyclomatic complexity of the method is 10
Complex Method,Ankh.Commands,ItemDelete,C:\repos\necora_ank_git\src\Ankh\Commands\ItemDelete.cs,OnExecute,Cyclomatic complexity of the method is 16
Complex Method,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,OnUpdate,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,OnExecute,Cyclomatic complexity of the method is 10
Complex Method,Ankh.Commands,ItemResolveCasing,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCasing.cs,OnExecute,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,GetRoot,Cyclomatic complexity of the method is 16
Complex Method,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,OnExecute,Cyclomatic complexity of the method is 8
Complex Method,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnExecute,Cyclomatic complexity of the method is 19
Complex Method,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,Cyclomatic complexity of the method is 10
Complex Method,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnResponse,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnUpdate,Cyclomatic complexity of the method is 30
Complex Method,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,Cyclomatic complexity of the method is 24
Complex Method,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,OnUpdate,Cyclomatic complexity of the method is 22
Complex Method,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,OnExecute,Cyclomatic complexity of the method is 29
Complex Method,Ankh.Commands,OpenInXExplorer,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInXExplorer.cs,OnUpdate,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,OpenInXExplorer,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInXExplorer.cs,OnExecute,Cyclomatic complexity of the method is 21
Complex Method,Ankh.Commands,AddItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\AddItemCommand.cs,OnExecute,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,OnUpdate,Cyclomatic complexity of the method is 15
Complex Method,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,SetProjectsManaged,Cyclomatic complexity of the method is 21
Complex Method,Ankh.Commands,ItemResolveCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCommand.cs,OnUpdate,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,ItemResolveCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCommand.cs,OnExecute,Cyclomatic complexity of the method is 25
Complex Method,Ankh.Commands,ItemResolveCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCommand.cs,Resolve,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,OpenFromSubversion,C:\repos\necora_ank_git\src\Ankh\Commands\OpenFromSubversion.cs,OnExecute,Cyclomatic complexity of the method is 20
Complex Method,Ankh.Commands,OpenInVisualStudio,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInVisualStudio.cs,OnUpdate,Cyclomatic complexity of the method is 17
Complex Method,Ankh.Commands,OpenInVisualStudio,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInVisualStudio.cs,OnExecute,Cyclomatic complexity of the method is 39
Complex Method,Ankh.Commands,SolutionUpdateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SolutionUpdateCommand.cs,OnUpdate,Cyclomatic complexity of the method is 19
Complex Method,Ankh.Commands,SolutionUpdateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SolutionUpdateCommand.cs,OnExecute,Cyclomatic complexity of the method is 32
Complex Method,Ankh.Commands,AddWorkingCopyExplorerRootCommand,C:\repos\necora_ank_git\src\Ankh\Commands\WorkingCopyExplorer\WorkingCopyBrowseCommand.cs,OnExecute,Cyclomatic complexity of the method is 13
Complex Method,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,OnUpdate,Cyclomatic complexity of the method is 17
Complex Method,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,OnExecute,Cyclomatic complexity of the method is 19
Complex Method,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,DoBlame,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnUpdate,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,Cyclomatic complexity of the method is 36
Complex Method,Ankh.Commands,LockCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LockCommand.cs,OnExecute,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Commands,LogCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LogCommand.cs,OnUpdate,Cyclomatic complexity of the method is 42
Complex Method,Ankh.Commands,LogCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LogCommand.cs,OnExecute,Cyclomatic complexity of the method is 38
Complex Method,Ankh.Commands,RevertItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemRevertCommand.cs,OnExecute,Cyclomatic complexity of the method is 14
Complex Method,Ankh.Commands,ShowToolWindows,C:\repos\necora_ank_git\src\Ankh\Commands\ShowToolWindows.cs,OnExecute,Cyclomatic complexity of the method is 16
Complex Method,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnUpdate,Cyclomatic complexity of the method is 24
Complex Method,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnExecute,Cyclomatic complexity of the method is 16
Complex Method,Ankh.Commands,UpdateItem,C:\repos\necora_ank_git\src\Ankh\Commands\UpdateItemCommand.cs,OnExecute,Cyclomatic complexity of the method is 19
Complex Method,Ankh.Commands.RepositoryExplorer,CopyToOrMove,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CopyToOrMove.cs,OnExecute,Cyclomatic complexity of the method is 10
Complex Method,Ankh.Commands.RepositoryExplorer,CopyToWorkingCopy,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CopyToWorkingCopy.cs,OnExecute,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Commands.RepositoryExplorer,RenameNode,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\RenameNode.cs,OnExecute,Cyclomatic complexity of the method is 8
Complex Method,Ankh.Commands.RepositoryExplorer,RepositoryBrowseCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\RepositoryBrowseCommand.cs,OnExecute,Cyclomatic complexity of the method is 10
Complex Method,Ankh.Services,MigrationService,C:\repos\necora_ank_git\src\Ankh\Services\MigrationService.cs,MaybeMigrate,Cyclomatic complexity of the method is 8
Complex Method,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFiles,Cyclomatic complexity of the method is 8
Complex Method,Ankh.Services,AnkhErrorHandler,C:\repos\necora_ank_git\src\Ankh\Services\AnkhErrorHandler.cs,ShowErrorDialog,Cyclomatic complexity of the method is 11
Complex Method,Ankh.Services.IssueTracker,AnkhIssueService,C:\repos\necora_ank_git\src\Ankh\Services\IssueTracker\AnkhIssueService.cs,PerformRegex,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Services.IssueTracker,AnkhIssueService,C:\repos\necora_ank_git\src\Ankh\Services\IssueTracker\AnkhIssueService.cs,ReadConnectorRegistry,Cyclomatic complexity of the method is 8
Complex Method,Ankh.Services.PendingChanges,PendingCommitState,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingCommitState.cs,CalculateCommitDepth,Cyclomatic complexity of the method is 14
Complex Method,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,CreatePatch,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,GetCommitRoots,Cyclomatic complexity of the method is 9
Complex Method,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,Commit,Cyclomatic complexity of the method is 8
Complex Method,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_HandleMissingFiles,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssues,Cyclomatic complexity of the method is 12
Complex Method,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,SetDefaultsFromRegistry,Cyclomatic complexity of the method is 13
Long Parameter List,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,The method has 9 parameters.
Long Parameter List,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,AddIgnores,The method has 5 parameters.
Long Parameter List,Ankh.Commands,AddItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\AddItemCommand.cs,OnExecute,The method has 5 parameters.
Long Parameter List,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,CheckoutWorkingCopyForProject,The method has 5 parameters.
Long Parameter List,Ankh.Commands,OpenFromSubversion,C:\repos\necora_ank_git\src\Ankh\Commands\OpenFromSubversion.cs,CheckOutAndOpenSolution,The method has 8 parameters.
Long Parameter List,Ankh.Commands,SolutionUpdateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SolutionUpdateCommand.cs,PerformUpdate,The method has 10 parameters.
Long Parameter List,Ankh.Commands,ViewRepositoryFileCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\ViewRepositoryFileCommand.cs,SaveFile,The method has 5 parameters.
Long Parameter List,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,DoBlame,The method has 15 parameters.
Long Parameter List,Ankh.Commands,LocalDiffCommandBase,C:\repos\necora_ank_git\src\Ankh\Commands\LocalDiffCommandBase.cs,GetDiff,The method has 5 parameters.
Long Parameter List,Ankh.Commands,LocalDiffCommandBase,C:\repos\necora_ank_git\src\Ankh\Commands\LocalDiffCommandBase.cs,GetPath,The method has 6 parameters.
Long Parameter List,Ankh.Commands,LockCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LockCommand.cs,OnExecute,The method has 9 parameters.
Long Parameter List,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnExecute,The method has 7 parameters.
Long Parameter List,Ankh.Commands,UnlockCommand,C:\repos\necora_ank_git\src\Ankh\Commands\UnlockCommand.cs,OnExecute,The method has 5 parameters.
Long Parameter List,Ankh.Commands,UpdateItem,C:\repos\necora_ank_git\src\Ankh\Commands\UpdateItemCommand.cs,OnExecute,The method has 5 parameters.
Long Parameter List,Ankh.Commands.RepositoryExplorer,CopyToWorkingCopy,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CopyToWorkingCopy.cs,OnExecute,The method has 7 parameters.
Long Parameter List,Ankh.Services,AnkhErrorMessage,C:\repos\necora_ank_git\src\Ankh\Services\AnkhErrorMessage.cs,SendByMail,The method has 5 parameters.
Long Parameter List,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,Substitute,The method has 5 parameters.
Long Parameter List,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFile,The method has 5 parameters.
Long Parameter List,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFile,The method has 5 parameters.
Long Parameter List,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFiles,The method has 8 parameters.
Long Statement,Ankh.Commands,ApplyPatch,C:\repos\necora_ank_git\src\Ankh\Commands\ApplyPatch.cs,OnExecute,The length of the statement  "		ofd.Filter = "Patch files( *.patch)|*.patch|Diff files (*.diff)|*.diff|" + "Text files (*.txt)|*.txt|All files (*.*)|*"; " is 120.
Long Statement,Ankh.Commands,ItemCreatePatch,C:\repos\necora_ank_git\src\Ankh\Commands\ItemCreatePatch.cs,GetFileName,The length of the statement  "		dlg.Filter = "Patch files( *.patch)|*.patch|Diff files (*.diff)|*.diff|" + "Text files (*.txt)|*.txt|All files (*.*)|*"; " is 120.
Long Statement,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,OnUpdate,The length of the statement  "	bool inRange = (e.Command >= AnkhCommand.MoveToExistingChangeList0 && e.Command < AnkhCommand.MoveToExistingChangeListMax); " is 123.
Long Statement,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,OnExecute,The length of the statement  "		if (item.IsVersioned && (name != null) ? (item.IsFile || item.IsModified || item.IsDocumentDirty) : !string.IsNullOrEmpty (item.Status.ChangeList)) { " is 149.
Long Statement,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,OnUpdate,The length of the statement  "	if (item == null || !item.IsVersioned || item.IsDeleteScheduled || item.Status.LocalContentStatus == SvnStatus.Added || item.Uri == null) " is 137.
Long Statement,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,OnExecute,The length of the statement  "			ProgressRunnerResult rr = e.GetService<IProgressRunner> ().RunModal ("Creating Branch/Tag"' delegate (object sender' ProgressWorkerArgs ee) { " is 141.
Long Statement,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,OnExecute,The length of the statement  "						dr = mb.Show (string.Format ("The Branch/Tag at Url '{0}' already exists."' dlg.NewDirectoryName)' "Path Exists"' MessageBoxButtons.RetryCancel); " is 145.
Long Statement,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,OnExecute,The length of the statement  "					ok = dlg.CopyFromUri ? ee.Client.RemoteCopy (new SvnUriTarget (dlg.SrcUri' dlg.SelectedRevision)' dlg.NewDirectoryName' ca) : ee.Client.RemoteCopy (new SvnPathTarget (dlg.SrcFolder)' dlg.NewDirectoryName' ca); " is 209.
Long Statement,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,IsDevVersion,The length of the statement  "	foreach (AssemblyConfigurationAttribute a in typeof(CheckForUpdates).Assembly.GetCustomAttributes (typeof(AssemblyConfigurationAttribute)' false)) { " is 148.
Long Statement,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,The length of the statement  "	string title = args [0]' header = args [1]' description = args [2]' url = args [3]' urltext = args [4]' version = args [5]' newVersion = args [6]' tag = args [7]; " is 162.
Long Statement,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,The length of the statement  "		if (!e.GetService<IProgressRunner> ().RunModal ("Retrieving Properties"' delegate (object Sender' ProgressWorkerArgs wa) { " is 122.
Long Statement,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,The length of the statement  "			wa.Client.PropertyList (new SvnPathTarget (firstVersioned.FullPath' SvnRevision.Base)' delegate (object s' SvnPropertyListEventArgs la) { " is 137.
Long Statement,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,The length of the statement  "			e.GetService<IProgressRunner> ().RunModal ("Applying property changes"' delegate (object sender' ProgressWorkerArgs wa) { " is 121.
Long Statement,Ankh.Commands,ItemConflictEdit,C:\repos\necora_ank_git\src\Ankh\Commands\ItemConflictEdit.cs,OnExecute,The length of the statement  "		mb.Show (string.Format (CommandStrings.TheConflictInXIsAlreadyResolved' conflict.FullPath)' CommandStrings.EditConflictTitle' System.Windows.Forms.MessageBoxButtons.OK' System.Windows.Forms.MessageBoxIcon.Information); " is 218.
Long Statement,Ankh.Commands,ItemConflictEdit,C:\repos\necora_ank_git\src\Ankh\Commands\ItemConflictEdit.cs,OnExecute,The length of the statement  "	ProgressRunnerResult r = e.GetService<IProgressRunner> ().RunModal ("Retrieving Conflict Information"' delegate (object sender' ProgressWorkerArgs a) { " is 151.
Long Statement,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,OnExecute,The length of the statement  "			switch (mb.Show (string.Format (CommandStrings.WouldYouLikeToAddXToTheIgnorePropertyOnY' text' k.Key)' CommandStrings.IgnoreCaption' System.Windows.Forms.MessageBoxButtons.YesNoCancel)) { " is 187.
Long Statement,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,AddIgnores,The length of the statement  "		context.GetService<IProgressRunner> ().RunModal (CommandStrings.IgnoreCaption' delegate (object sender' ProgressWorkerArgs e) { " is 127.
Long Statement,Ankh.Commands,OpenInXExplorer,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInXExplorer.cs,OnExecute,The length of the statement  "		IVsUIHierarchyWindow hierWindow = VsShellUtilities.GetUIHierarchyWindow (e.Context' new Guid (ToolWindowGuids80.SolutionExplorer)); " is 131.
Long Statement,Ankh.Commands,OpenInXExplorer,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInXExplorer.cs,OnExecute,The length of the statement  "			if (project != null && ErrorHandler.Succeeded (project.IsDocumentInProject (node.FullPath' out found' prio' out id)) && found != 0) { " is 133.
Long Statement,Ankh.Commands,OpenInXExplorer,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInXExplorer.cs,OnExecute,The length of the statement  "				hierWindow.ExpandItem (e.GetService<IVsUIHierarchy> (typeof(SVsSolution))' VSConstants.VSITEMID_ROOT' EXPANDFLAGS.EXPF_SelectItem); " is 131.
Long Statement,Ankh.Commands,AddItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\AddItemCommand.cs,OnExecute,The length of the statement  "			e.GetService<IProgressRunner> ().RunModal (CommandStrings.AddTaskDialogTitle' delegate (object sender' ProgressWorkerArgs ee) { " is 127.
Long Statement,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,HandleUnmanagedOrUnversionedSolution,The length of the statement  "	if (!confirmed && !e.DontPrompt && !e.IsInAutomation && DialogResult.Yes != mb.Show (string.Format (CommandResources.MarkXAsManaged' Path.GetFileName (e.Selection.SolutionFilename))' ""' MessageBoxButtons.YesNo)) { " is 214.
Long Statement,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,AddVersionableSolution,The length of the statement  "		DialogResult rslt = mb.Show (string.Format (CommandResources.AddXToExistingWcY' Path.GetFileName (e.Selection.SolutionFilename)' parentDir.FullPath)' AnkhId.PlkProduct' MessageBoxButtons.YesNoCancel); " is 200.
Long Statement,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,SetProjectsManaged,The length of the statement  "			DialogResult rslt = mb.Show (string.Format (CommandResources.AddXToExistingWcY' Path.GetFileName (projInfo.ProjectName)' parentDir.FullPath)' AnkhId.PlkProduct' MessageBoxButtons.YesNoCancel); " is 192.
Long Statement,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,AskSetManagedSelectionProjects,The length of the statement  "	return DialogResult.Yes == mb.Show (string.Format (CommandResources.MarkXAsManaged' txt)' AnkhId.PlkProduct' MessageBoxButtons.YesNo); " is 134.
Long Statement,Ankh.Commands,ItemResolveCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCommand.cs,OnUpdate,The length of the statement  "	else if (!canDiff && (e.Command == AnkhCommand.ItemResolveTheirsConflict || e.Command == AnkhCommand.ItemResolveMineConflict)) " is 126.
Long Statement,Ankh.Commands,ItemResolveCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCommand.cs,OnUpdate,The length of the statement  "	else if (e.Command == AnkhCommand.ItemResolveMergeTool && string.IsNullOrEmpty (e.GetService<IAnkhConfigurationService> ().Instance.MergeExePath)) " is 146.
Long Statement,Ankh.Commands,OpenFromSubversion,C:\repos\necora_ank_git\src\Ankh\Commands\OpenFromSubversion.cs,OnExecute,The length of the statement  "		if (!e.GetService<IProgressRunner> ().RunModal ("Retrieving Repository Root"' delegate (object sender' ProgressWorkerArgs a) { " is 126.
Long Statement,Ankh.Commands,OpenFromSubversion,C:\repos\necora_ank_git\src\Ankh\Commands\OpenFromSubversion.cs,CheckOutAndOpenSolution,The length of the statement  "	string projectFile = SvnTools.GetNormalizedFullPath (Path.Combine (localDir' SvnTools.UriPartToPath (file.ToString ()))); " is 121.
Long Statement,Ankh.Commands,OpenInVisualStudio,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInVisualStudio.cs,OnExecute,The length of the statement  "				IVsUIHierarchyWindow hierWindow = VsShellUtilities.GetUIHierarchyWindow (e.Context' new Guid (ToolWindowGuids80.SolutionExplorer)); " is 131.
Long Statement,Ankh.Commands,OpenInVisualStudio,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInVisualStudio.cs,OnExecute,The length of the statement  "					if (project != null && ErrorHandler.Succeeded (project.IsDocumentInProject (item.FullPath' out found' prio' out id)) && found != 0) { " is 133.
Long Statement,Ankh.Commands,OpenInVisualStudio,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInVisualStudio.cs,OnExecute,The length of the statement  "						hierWindow.ExpandItem (e.GetService<IVsUIHierarchy> (typeof(SVsSolution))' VSConstants.VSITEMID_ROOT' EXPANDFLAGS.EXPF_SelectItem); " is 131.
Long Statement,Ankh.Commands,SolutionUpdateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SolutionUpdateCommand.cs,OnExecute,The length of the statement  "				PerformUpdate (e' a' rev' allowUnversionedObstructions' updateExternals' setDepthInfinity' groups.Values' out updateResult); " is 124.
Long Statement,Ankh.Commands,ViewRepositoryFileCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\ViewRepositoryFileCommand.cs,SaveFile,The length of the statement  "	ProgressRunnerResult r = e.GetService<IProgressRunner> ().RunModal ("Saving File"' delegate (object sender' ProgressWorkerArgs ee) { " is 132.
Long Statement,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,DoBlame,The length of the statement  "	ProgressRunnerResult r = e.GetService<IProgressRunner> ().RunModal (CommandStrings.Annotating' delegate (object sender' ProgressWorkerArgs ee) { " is 144.
Long Statement,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,DoBlame,The length of the statement  "			if (DialogResult.Yes == mb.Show (CommandStrings.AnnotateBinaryFileContinueAnywayText' CommandStrings.AnnotateBinaryFileContinueAnywayTitle' MessageBoxButtons.YesNo' MessageBoxIcon.Information)) { " is 195.
Long Statement,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,DoBlame,The length of the statement  "				r = e.GetService<IProgressRunner> ().RunModal (CommandStrings.Annotating' delegate (object sender' ProgressWorkerArgs ee) { " is 123.
Long Statement,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,DoBlame,The length of the statement  "		if (line.StartsWith ("<?xml") || (line.StartsWith ("<") && line.Contains ("xmlns=\"http://schemas.microsoft.com/developer/msbuild/"))) { " is 136.
Long Statement,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The length of the statement  "			info.CheckableFilter += new PathSelectorInfo.SelectableFilter (delegate (SvnItem item' SvnRevision from' SvnRevision to) { " is 122.
Long Statement,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The length of the statement  "	if (revRange.EndRevision.RevisionType == SvnRevisionType.Working || revRange.StartRevision.RevisionType == SvnRevisionType.Working) { " is 133.
Long Statement,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The length of the statement  "		if ((item.Status.IsCopied || item.IsReplaced) && (!revRange.StartRevision.RequiresWorkingCopy || !revRange.EndRevision.RequiresWorkingCopy)) { " is 142.
Long Statement,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The length of the statement  "			if (null == (da.BaseFile = (revRange.StartRevision == SvnRevision.Working) ? item.FullPath : diff.GetTempFile (item' revRange.StartRevision' true))) { " is 150.
Long Statement,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The length of the statement  "			if (null == (da.MineFile = (revRange.EndRevision == SvnRevision.Working) ? item.FullPath : diff.GetTempFile (item' revRange.EndRevision' true))) { " is 146.
Long Statement,Ankh.Commands,LocalDiffCommandBase,C:\repos\necora_ank_git\src\Ankh\Commands\LocalDiffCommandBase.cs,GetPath,The length of the statement  "	context.GetService<IProgressRunner> ().RunModal ("Retrieving file for diffing"' delegate (object o' ProgressWorkerArgs ee) { " is 124.
Long Statement,Ankh.Commands,LockCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LockCommand.cs,OnExecute,The length of the statement  "		e.GetService<IProgressRunner> ().RunModal (CommandStrings.LockingTitle' delegate (object sender' ProgressWorkerArgs ee) { " is 121.
Long Statement,Ankh.Commands,LockCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LockCommand.cs,GuessUserFromError,The length of the statement  "		_guessRx = new Regex ("^[^']+ ['�](?<path>.*?)['�][^']+ ['�](?<user>.*?)['�][^']+( ['�].*?['�][^']*)*$"' RegexOptions.Compiled | RegexOptions.ExplicitCapture | RegexOptions.Singleline); " is 185.
Long Statement,Ankh.Commands,LogCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LogCommand.cs,PerformLog,The length of the statement  "	LogToolWindowControl logToolControl = context.GetService<ISelectionContext> ().ActiveFrameControl as LogToolWindowControl; " is 122.
Long Statement,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnExecute,The length of the statement  "							e.Context.GetService<IAnkhDialogOwner> ().MessageBox.Show ("Cannot switch to different repository because the repository UUIDs are different"' "Cannot switch"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 204.
Long Statement,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnExecute,The length of the statement  "			if (newRepositoryRoot != null && DialogResult.Yes == e.Context.GetService<IAnkhDialogOwner> ().MessageBox.Show (string.Format ("The repository root specified is different from the one in your " + "working copy. Would you like to relocate from '{0}' to '{1}'?"' pathItem.WorkingCopy.RepositoryRoot' newRepositoryRoot)' "Relocate"' MessageBoxButtons.YesNo' MessageBoxIcon.Question)) { " is 382.
Long Statement,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnExecute,The length of the statement  "				if (DialogResult.Yes == e.Context.GetService<IAnkhDialogOwner> ().MessageBox.Show (string.Format ("Would you like to try to switch '{0}' to '{1}' again?"' path' target)' "Switch"' MessageBoxButtons.YesNo' MessageBoxIcon.Question)) { " is 232.
Long Statement,Ankh.Commands,UpdateItem,C:\repos\necora_ank_git\src\Ankh\Commands\UpdateItemCommand.cs,OnExecute,The length of the statement  "					DialogResult dr = mb.Show (CommandStrings.CantUpdateDirectoriesNonRecursive' ""' System.Windows.Forms.MessageBoxButtons.YesNo' System.Windows.Forms.MessageBoxIcon.Warning); " is 172.
Long Statement,Ankh.Commands,UpdateItem,C:\repos\necora_ank_git\src\Ankh\Commands\UpdateItemCommand.cs,OnExecute,The length of the statement  "			e.GetService<IProgressRunner> ().RunModal (CommandStrings.UpdatingTitle' pa' delegate (object sender' ProgressWorkerArgs ee) { " is 126.
Long Statement,Ankh.Commands.RepositoryExplorer,CopyToWorkingCopy,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CopyToWorkingCopy.cs,OnExecute,The length of the statement  "		if (DialogResult.Yes == mb.Show ("The specified path is not in a workingcopy; would you like to export the file instead?"' "No Working Copy"' MessageBoxButtons.YesNo' MessageBoxIcon.Information)) { " is 197.
Long Statement,Ankh.Commands.RepositoryExplorer,RenameNode,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\RenameNode.cs,OnExecute,The length of the statement  "		e.GetService<IProgressRunner> ().RunModal (CommandStrings.RenamingNodes' delegate (object sender' ProgressWorkerArgs we) { " is 122.
Long Statement,Ankh.Commands.RepositoryExplorer,ShowRepositoryItemChanges,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\ShowRepositoryItemChanges.cs,OnUpdate,The length of the statement  "	if (reposItem != null && reposItem.Origin != null && reposItem.NodeKind != SharpSvn.SvnNodeKind.Directory && reposItem.Revision.RevisionType == SharpSvn.SvnRevisionType.Number) { " is 178.
Long Statement,Ankh.Commands.RepositoryExplorer,CreateDirectoryCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CreateDirectoryCommand.cs,OnUpdate,The length of the statement  "	if (item == null || item.Origin == null || item.Origin.Target.Revision != SvnRevision.Head || item.NodeKind == SvnNodeKind.File) { " is 130.
Long Statement,Ankh.Commands.RepositoryExplorer,CreateDirectoryCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CreateDirectoryCommand.cs,OnExecute,The length of the statement  "		ProgressRunnerResult prResult = e.GetService<IProgressRunner> ().RunModal (CommandStrings.CreatingDirectories' delegate (object sender' ProgressWorkerArgs ee) { " is 160.
Long Statement,Ankh.Commands.RepositoryExplorer,ViewInVSNetCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\ViewInVSNetCommand.cs,OnExecute,The length of the statement  "				e.GetService<IAnkhDialogOwner> ().MessageBox.Show ("Windows could not find an application associated with the file type"' "No associated application"' MessageBoxButtons.OK); " is 173.
Long Statement,Ankh.Services,AnkhHelpService,C:\repos\necora_ank_git\src\Ankh\Services\AnkhHelpService.cs,RunHelp,The length of the statement  "	ub.Query = string.Format ("t=dlgHelp&v={0}&l={1}&dt={2}"' GetService<IAnkhPackage> ().UIVersion' CultureInfo.CurrentUICulture.LCID' Uri.EscapeUriString (form.DialogHelpTypeName)); " is 179.
Long Statement,Ankh.Services,AnkhHelpService,C:\repos\necora_ank_git\src\Ankh\Services\AnkhHelpService.cs,RunHelp,The length of the statement  "			showHelpInBrowser = !ErrorHandler.Succeeded (help.DisplayTopicFromURL (ub.Uri.AbsoluteUri' (uint)VHS_COMMAND.VHS_Default)); " is 123.
Long Statement,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,GetRemoteSession,The length of the statement  "					if (reposUri == null || reposUri.GetComponents (UriComponents.SchemeAndServer' UriFormat.UriEscaped) != schemeAndServer) " is 120.
Long Statement,Ankh.Services,AnkhErrorMessage,C:\repos\necora_ank_git\src\Ankh\Services\AnkhErrorMessage.cs,SendByMail,The length of the statement  "	string command = string.Format ("mailto:{0}?subject={1}&body={2}"' recipient' Uri.EscapeDataString (subject)' Uri.EscapeDataString (msg.ToString ())); " is 150.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,RunMerge,The length of the statement  "		new AnkhMessageBox (Context).Show ("Please specify a merge tool in Tools->Options->SourceControl->Subversion"' "AnkhSVN - No visual merge tool is available"); " is 158.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,RunPatch,The length of the statement  "		new AnkhMessageBox (Context).Show ("Please specify a merge tool in Tools->Options->SourceControl->Subversion"' "AnkhSVN - No visual merge tool is available"); " is 158.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,SubstituteArguments,The length of the statement  "		_re = new Regex (@"(\%(?<pc>[a-zA-Z0-9_]+)(\%|\b))|(\$\((?<vs>[a-zA-Z0-9_-]*)(\((?<arg>[a-zA-Z0-9_-]*)\))?\))" + "|(\\$\\((?<if>[a-zA-Z0-9_-]+)" + ifBody + elseBody + "\\))"); " is 175.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTitle,The length of the statement  "	string strRev = revision.RevisionType == SvnRevisionType.Time ? revision.Time.ToLocalTime ().ToString ("g") : revision.ToString (); " is 131.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetName,The length of the statement  "	return (Path.GetFileNameWithoutExtension (filename) + "." + PathSafeRevision (rev) + Path.GetExtension (filename)).Trim ('.'); " is 126.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFile,The length of the statement  "	ProgressRunnerResult r = GetService<IProgressRunner> ().RunModal ("Getting file"' delegate (object sender' ProgressWorkerArgs aa) { " is 131.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFile,The length of the statement  "	ProgressRunnerResult r = GetService<IProgressRunner> ().RunModal ("Getting file"' delegate (object sender' ProgressWorkerArgs aa) { " is 131.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFiles,The length of the statement  "	if (from.RevisionType == SvnRevisionType.Number && to.RevisionType == SvnRevisionType.Number && from.Revision + 1 == to.Revision) { " is 131.
Long Statement,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFiles,The length of the statement  "		ProgressRunnerResult r = Context.GetService<IProgressRunner> ().RunModal ("Getting revisions"' delegate (object sender' ProgressWorkerArgs e) { " is 143.
Long Statement,Ankh.Services,AnkhErrorHandler,C:\repos\necora_ank_git\src\Ankh\Services\AnkhErrorHandler.cs,ShowErrorDialog,The length of the statement  "	System.Collections.Specialized.StringDictionary additionalInfo = new System.Collections.Specialized.StringDictionary (); " is 120.
Long Statement,Ankh.Services,AnkhErrorHandler,C:\repos\necora_ank_git\src\Ankh\Services\AnkhErrorHandler.cs,ShowErrorDialog,The length of the statement  "			while (sx != null && sx.SvnErrorCode == SvnErrorCode.SVN_ERR_BASE && (null != (ix = sx.InnerException as SvnException))) { " is 122.
Long Statement,Ankh.Services.IssueTracker,AnkhIssueService,C:\repos\necora_ank_git\src\Ankh\Services\IssueTracker\AnkhIssueService.cs,ShowConnectHelp,The length of the statement  "	ub.Query = string.Format ("t=ctrlHelp&v={0}&l={1}&dt={2}"' GetService<IAnkhPackage> ().UIVersion' CultureInfo.CurrentUICulture.LCID' Uri.EscapeUriString ("Ankh.UI.PendingChanges.PendingIssuesPage")); " is 199.
Long Statement,Ankh.Services.IssueTracker,AnkhIssueService,C:\repos\necora_ank_git\src\Ankh\Services\IssueTracker\AnkhIssueService.cs,ShowConnectHelp,The length of the statement  "			showHelpInBrowser = !ErrorHandler.Succeeded (help.DisplayTopicFromURL (ub.Uri.AbsoluteUri' (uint)VHS_COMMAND.VHS_Default)); " is 123.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,CreatePatch,The length of the statement  "				if (!string.IsNullOrEmpty (relativeToPath) && item.FullPath.StartsWith (relativeToPathP' StringComparison.OrdinalIgnoreCase)) " is 125.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,Commit,The length of the statement  "				using (DocumentLock dl = GetService<IAnkhOpenDocumentTracker> ().LockDocuments (state.CommitPaths' DocumentLockType.NoReload)) " is 126.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_VerifyLogMessage,The length of the statement  "	if (pcs.WarnIfNoIssue && pcs.ShowIssueBox && string.IsNullOrEmpty (state.IssueText) && state.MessageBox.Show (PccStrings.NoIssueNumber' ""' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) { " is 210.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_SaveDirty,The length of the statement  "		state.MessageBox.Show (PccStrings.FailedToSaveBeforeCommit' ""' System.Windows.Forms.MessageBoxButtons.OK' System.Windows.Forms.MessageBoxIcon.Exclamation); " is 156.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_AddNewFiles,The length of the statement  "					state.MessageBox.Show (a.LastException.Message + Environment.NewLine + Environment.NewLine + PccStrings.YouCanDownloadAnkh' ""' MessageBoxButtons.OK' System.Windows.Forms.MessageBoxIcon.Error); " is 193.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_AddNewFiles,The length of the statement  "				else if (state.MessageBox.Show (a.LastException.Message' ""' MessageBoxButtons.OKCancel' System.Windows.Forms.MessageBoxIcon.Error) == DialogResult.Cancel) " is 155.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_AddNeededParents,The length of the statement  "			while (parent != null && !string.Equals (parent.FullPath' wcPath' StringComparison.OrdinalIgnoreCase) && parent.IsNewAddition) { " is 128.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_HandleMissingFiles,The length of the statement  "			if (correctCasing == null || actualCasing == null || !string.Equals (correctCasing' actualCasing' StringComparison.OrdinalIgnoreCase)) " is 134.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_HandleMissingFiles,The length of the statement  "				state.MessageBox.Show (da.LastException.Message' ""' System.Windows.Forms.MessageBoxButtons.OK' System.Windows.Forms.MessageBoxIcon.Error); " is 139.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,Commit_CommitToRepository,The length of the statement  "	ProgressRunnerResult r = state.GetService<IProgressRunner> ().RunModal (PccStrings.CommitTitle' delegate (object sender' ProgressWorkerArgs e) { " is 144.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,Commit_CommitToRepository,The length of the statement  "		state.MessageBox.Show (outOfDateMessage.ToString ()' PccStrings.OutOfDateCaption' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 126.
Long Statement,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,Commit_CommitToRepository,The length of the statement  "			state.MessageBox.Show (rslt.PostCommitError' PccStrings.PostCommitError' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 123.
Long Statement,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssues,The length of the statement  "				sc.LogPrepareRe = new Regex (items [0]' RegexOptions.ExplicitCapture | RegexOptions.CultureInvariant | RegexOptions.Multiline); " is 127.
Long Statement,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,OpenHKLMCommonKey,The length of the statement  "	return Registry.LocalMachine.OpenSubKey ("SOFTWARE\\AnkhSVN\\AnkhSVN\\Global\\" + subKey' RegistryKeyPermissionCheck.ReadSubTree); " is 130.
Long Statement,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,OpenHKLMKey,The length of the statement  "	return Registry.LocalMachine.OpenSubKey ("SOFTWARE\\AnkhSVN\\AnkhSVN\\" + Settings.RegistryHiveSuffix + "\\" + subKey' RegistryKeyPermissionCheck.ReadSubTree); " is 159.
Long Statement,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,OpenHKCUKey,The length of the statement  "	return Registry.CurrentUser.CreateSubKey ("SOFTWARE\\AnkhSVN\\AnkhSVN\\" + Settings.RegistryHiveSuffix + "\\" + subKey); " is 120.
Complex Conditional,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,OnUpdate,The conditional expression  "item.IsFile && item.IsVersioned && (item.IsModified || item.IsDocumentDirty)"  is complex.
Complex Conditional,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,OnExecute,The conditional expression  "item.IsVersioned && (name != null) ? (item.IsFile || item.IsModified || item.IsDocumentDirty) : !string.IsNullOrEmpty (item.Status.ChangeList)"  is complex.
Complex Conditional,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,OnUpdate,The conditional expression  "item == null || !item.IsVersioned || item.IsDeleteScheduled || item.Status.LocalContentStatus == SvnStatus.Added || item.Uri == null"  is complex.
Complex Conditional,Ankh.Commands,AddItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\AddItemCommand.cs,OnExecute,The conditional expression  "!item.IsVersioned && item.IsVersionable && !item.IsIgnored && item.InSolution"  is complex.
Complex Conditional,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,HandleUnmanagedOrUnversionedSolution,The conditional expression  "!confirmed && !e.DontPrompt && !e.IsInAutomation && DialogResult.Yes != mb.Show (string.Format (CommandResources.MarkXAsManaged' Path.GetFileName (e.Selection.SolutionFilename))' ""' MessageBoxButtons.YesNo)"  is complex.
Complex Conditional,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The conditional expression  "(item.Status.IsCopied || item.IsReplaced) && (!revRange.StartRevision.RequiresWorkingCopy || !revRange.EndRevision.RequiresWorkingCopy)"  is complex.
Complex Conditional,Ankh.Commands,RevertItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemRevertCommand.cs,OnUpdate,The conditional expression  "item.IsModified || (item.IsVersioned && item.IsDocumentDirty) || item.IsConflicted"  is complex.
Complex Conditional,Ankh.Commands,RevertItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemRevertCommand.cs,OnExecute,The conditional expression  "i.IsModified || (i.IsVersioned && i.IsDocumentDirty) || i.IsConflicted"  is complex.
Complex Conditional,Ankh.Commands.RepositoryExplorer,ShowRepositoryItemChanges,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\ShowRepositoryItemChanges.cs,OnUpdate,The conditional expression  "reposItem != null && reposItem.Origin != null && reposItem.NodeKind != SharpSvn.SvnNodeKind.Directory && reposItem.Revision.RevisionType == SharpSvn.SvnRevisionType.Number"  is complex.
Complex Conditional,Ankh.Commands.RepositoryExplorer,CreateDirectoryCommand,C:\repos\necora_ank_git\src\Ankh\Commands\RepositoryExplorer\CreateDirectoryCommand.cs,OnUpdate,The conditional expression  "item == null || item.Origin == null || item.Origin.Target.Revision != SvnRevision.Head || item.NodeKind == SvnNodeKind.File"  is complex.
Complex Conditional,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_VerifyLogMessage,The conditional expression  "pcs.WarnIfNoIssue && pcs.ShowIssueBox && string.IsNullOrEmpty (state.IssueText) && state.MessageBox.Show (PccStrings.NoIssueNumber' ""' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No"  is complex.
Empty Catch Block,Ankh.Commands,ItemResolveCasing,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCasing.cs,OnExecute,The method has an empty catch block.
Empty Catch Block,Ankh.Commands,ItemResolveCasing,C:\repos\necora_ank_git\src\Ankh\Commands\ItemResolveCasing.cs,OnExecute,The method has an empty catch block.
Empty Catch Block,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnExecute,The method has an empty catch block.
Empty Catch Block,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnExecute,The method has an empty catch block.
Empty Catch Block,Ankh.Commands,OpenFromSubversion,C:\repos\necora_ank_git\src\Ankh\Commands\OpenFromSubversion.cs,FindRoot,The method has an empty catch block.
Empty Catch Block,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The method has an empty catch block.
Empty Catch Block,Ankh.Services,MigrationService,C:\repos\necora_ank_git\src\Ankh\Services\MigrationService.cs,MaybeMigrate,The method has an empty catch block.
Empty Catch Block,Ankh.Services,AnkhScheduler,C:\repos\necora_ank_git\src\Ankh\Services\Scheduler.cs,OnTimerElapsed,The method has an empty catch block.
Empty Catch Block,Ankh.Services.IssueTracker,AnkhIssueService,C:\repos\necora_ank_git\src\Ankh\Services\IssueTracker\AnkhIssueService.cs,OpenIssue,The method has an empty catch block.
Empty Catch Block,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PreCommit_HandleMissingFiles,The method has an empty catch block.
Empty Catch Block,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,PostCommit_IssueTracker,The method has an empty catch block.
Empty Catch Block,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,SetDefaultsFromRegistry,The method has an empty catch block.
Empty Catch Block,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,SetDefaultsFromRegistry,The method has an empty catch block.
Empty Catch Block,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,SetSettingsFromRegistry,The method has an empty catch block.
Magic Number,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,GetRecentNames,The following statement contains a magic number: foreach (string cl in e.GetService<IPendingChangesManager> ().GetSuggestedChangeLists ()) {  	names.Add (cl);  	if (names.Count >= 10)  		break;  }  
Magic Number,Ankh.Commands,ItemMoveToChangeList,C:\repos\necora_ank_git\src\Ankh\Commands\ItemMoveToChangeList.cs,GetRecentNames,The following statement contains a magic number: if (names.Count >= 10)  	break;  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnExecute,The following statement contains a magic number: sb.Append (version.ToString (2));  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,The following statement contains a magic number: if (args == null || args.Length < 8)  	return;  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,The following statement contains a magic number: using (UI.SccManagement.UpdateAvailableDialog uad = new UI.SccManagement.UpdateAvailableDialog ()) {  	try {  		uad.Text = string.Format (uad.Text' title);  		uad.headLabel.Text = header;  		uad.bodyLabel.Text = description;  		uad.linkLabel.Text = urltext;  		uad.linkLabel.Links.Add (0' urltext.Length).LinkData = url;  		if (!string.IsNullOrEmpty (version)) {  			uad.newVerLabel.Text = newVersion;  			uad.curVerLabel.Text = GetUIVersion (e.Context).ToString (3);  			uad.versionPanel.Enabled = uad.versionPanel.Visible = true;  		}  		if (string.IsNullOrEmpty (tag))  			uad.sameCheck.Enabled = uad.sameCheck.Visible = false;  	}  	catch {  		return;  		// Don't throw a visible exception from a background check!  	}  	uad.ShowDialog (e.Context);  	if (uad.sameCheck.Checked) {  		IAnkhConfigurationService config = e.GetService<IAnkhConfigurationService> ();  		using (RegistryKey rk = config.OpenUserInstanceKey ("UpdateCheck")) {  			rk.SetValue ("SkipTag"' tag);  		}  	}  }  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,The following statement contains a magic number: try {  	uad.Text = string.Format (uad.Text' title);  	uad.headLabel.Text = header;  	uad.bodyLabel.Text = description;  	uad.linkLabel.Text = urltext;  	uad.linkLabel.Links.Add (0' urltext.Length).LinkData = url;  	if (!string.IsNullOrEmpty (version)) {  		uad.newVerLabel.Text = newVersion;  		uad.curVerLabel.Text = GetUIVersion (e.Context).ToString (3);  		uad.versionPanel.Enabled = uad.versionPanel.Visible = true;  	}  	if (string.IsNullOrEmpty (tag))  		uad.sameCheck.Enabled = uad.sameCheck.Visible = false;  }  catch {  	return;  	// Don't throw a visible exception from a background check!  }  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,The following statement contains a magic number: if (!string.IsNullOrEmpty (version)) {  	uad.newVerLabel.Text = newVersion;  	uad.curVerLabel.Text = GetUIVersion (e.Context).ToString (3);  	uad.versionPanel.Enabled = uad.versionPanel.Visible = true;  }  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,ShowUpdate,The following statement contains a magic number: uad.curVerLabel.Text = GetUIVersion (e.Context).ToString (3);  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnResponse,The following statement contains a magic number: try {  	WebRequest rq = ((WebRequest)ar.AsyncState);  	WebResponse wr;  	try {  		wr = rq.EndGetResponse (ar);  	}  	catch (WebException e) {  		HttpWebResponse hwr = e.Response as HttpWebResponse;  		if (hwr != null) {  			if (hwr.StatusCode == HttpStatusCode.NotFound) {  				failed = false;  				return;  				// File not found.. Update info not yet or no longer available  			}  		}  		return;  	}  	catch {  		return;  	}  	if (wr.ContentLength > 65536)  		// Not for us.. We expect a few hundred bytes max  		return;  	string body;  	using (Stream s = wr.GetResponseStream ())  		using (StreamReader sr = new StreamReader (s)) {  			body = sr.ReadToEnd ().Trim ();  		}  	if (string.IsNullOrEmpty (body)) {  		failed = false;  		return;  	}  	if (body [0] != '<' || body [body.Length - 1] != '>')  		return;  	// No valid xml or empty  	failed = false;  	XmlDocument doc = new XmlDocument ();  	doc.LoadXml (body);  	string title = NodeText (doc' "/u/i/t");  	string header = NodeText (doc' "/u/i/h") ?? title;  	string description = NodeText (doc' "/u/i/d");  	string url = NodeText (doc' "/u/i/u");  	string urltext = NodeText (doc' "/u/i/l");  	string version = NodeText (doc' "/u/i/v");  	string newVersion = NodeText (doc' "/u/i/n") ?? version;  	tag = NodeText (doc' "/u/g");  	if (!string.IsNullOrEmpty (title) && !string.IsNullOrEmpty (description)) {  		if (!string.IsNullOrEmpty (version)) {  			Version v = new Version (version);  			if (v <= GetCurrentVersion (Context))  				return;  		}  		if (!string.IsNullOrEmpty (tag)) {  			using (RegistryKey rk = config.OpenUserInstanceKey ("UpdateCheck")) {  				string pTag = rk.GetValue ("SkipTag") as string;  				if (pTag == tag)  					return;  			}  		}  		IAnkhCommandService cs = Context.GetService<IAnkhCommandService> ();  		cs.PostExecCommand (AnkhCommand.CheckForUpdates' new string[] {  			title'  			header'  			description'  			url'  			urltext'  			version'  			newVersion'  			tag  		});  	}  }  finally {  	using (RegistryKey rk = config.OpenUserInstanceKey ("UpdateCheck")) {  		object fails = rk.GetValue ("Fails"' 0);  		rk.DeleteValue ("LastCheck"' false);  		rk.DeleteValue ("LastVersion"' false);  		rk.DeleteValue ("FailedChecks"' false);  		rk.SetValue ("LastCheck"' DateTime.UtcNow.Ticks);  		rk.SetValue ("LastVersion"' GetCurrentVersion (Context).ToString ());  		if (tag != null)  			rk.SetValue ("LastTag"' tag);  		else  			rk.DeleteValue ("LastTag"' false);  		if (failed) {  			int f = 0;  			if (fails is int)  				f = (int)fails + 1;  			rk.SetValue ("FailedChecks"' f);  		}  	}  }  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,OnResponse,The following statement contains a magic number: if (wr.ContentLength > 65536)  	// Not for us.. We expect a few hundred bytes max  	return;  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,MaybePerformUpdateCheck,The following statement contains a magic number: using (RegistryKey rk = config.OpenUserInstanceKey ("UpdateCheck")) {  	int interval = 24 * 6;  	// 6 days  	object value = rk.GetValue ("Interval");  	if (value is int) {  		interval = (int)value;  		if (interval <= 0)  			return;  	}  	TimeSpan ts = TimeSpan.FromHours (interval);  	value = rk.GetValue ("LastVersion");  	if (IsDevVersion () || (value is string && (string)value == GetCurrentVersion (context).ToString ())) {  		value = rk.GetValue ("LastCheck");  		long lv;  		if (value is string && long.TryParse ((string)value' out lv)) {  			DateTime lc = new DateTime (lv' DateTimeKind.Utc);  			if ((lc + ts) > DateTime.UtcNow)  				return;  			// TODO: Check the number of fails to increase the check interval  		}  	}  }  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,MaybePerformUpdateCheck,The following statement contains a magic number: using (RegistryKey rk = config.OpenUserInstanceKey ("UpdateCheck")) {  	int interval = 24 * 6;  	// 6 days  	object value = rk.GetValue ("Interval");  	if (value is int) {  		interval = (int)value;  		if (interval <= 0)  			return;  	}  	TimeSpan ts = TimeSpan.FromHours (interval);  	value = rk.GetValue ("LastVersion");  	if (IsDevVersion () || (value is string && (string)value == GetCurrentVersion (context).ToString ())) {  		value = rk.GetValue ("LastCheck");  		long lv;  		if (value is string && long.TryParse ((string)value' out lv)) {  			DateTime lc = new DateTime (lv' DateTimeKind.Utc);  			if ((lc + ts) > DateTime.UtcNow)  				return;  			// TODO: Check the number of fails to increase the check interval  		}  	}  }  
Magic Number,Ankh.Commands,CheckForUpdates,C:\repos\necora_ank_git\src\Ankh\Commands\CheckForUpdates.cs,MaybePerformUpdateCheck,The following statement contains a magic number: context.GetService<IAnkhScheduler> ().Schedule (new TimeSpan (0' 0' 20)' AnkhCommand.CheckForUpdates);  
Magic Number,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,AskSetManagedSelectionProjects,The following statement contains a magic number: if (li > 0)  	txt = txt.Substring (0' li + 1) + CommandResources.FileAnd + txt.Substring (li + 3);  
Magic Number,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,AskSetManagedSelectionProjects,The following statement contains a magic number: txt = txt.Substring (0' li + 1) + CommandResources.FileAnd + txt.Substring (li + 3);  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,ScheduleDisposeSessions,The following statement contains a magic number: if (nextCleanup.HasValue) {  	TimeSpan ts = nextCleanup.Value - DateTime.Now;  	if (ts.Minutes < 5 && ts.Minutes > -1)  		return;  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,ScheduleDisposeSessions,The following statement contains a magic number: if (ts.Minutes < 5 && ts.Minutes > -1)  	return;  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: lock (_remoteSessions) {  	DateTime now = DateTime.Now;  	foreach (AnkhSvnPoolRemoteSession rs in _remoteSessions) {  		bool dispose = false;  		switch (rs.SessionUri.Scheme) {  		case "svn":  			dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  			break;  		case "https":  		case "http":  			dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  			break;  		default:  			dispose = (now - rs.ReturnTime) > new TimeSpan (0' 1' 0);  			break;  		}  		if (!dispose)  			left = true;  		else {  			if (toDispose == null)  				toDispose = new List<SvnPoolRemoteSession> ();  			toDispose.Add (rs);  		}  	}  	if (toDispose != null)  		foreach (SvnPoolRemoteSession rs in toDispose)  			_remoteSessions.Remove (rs);  	if (left)  		ScheduleDisposeSessions ();  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: lock (_remoteSessions) {  	DateTime now = DateTime.Now;  	foreach (AnkhSvnPoolRemoteSession rs in _remoteSessions) {  		bool dispose = false;  		switch (rs.SessionUri.Scheme) {  		case "svn":  			dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  			break;  		case "https":  		case "http":  			dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  			break;  		default:  			dispose = (now - rs.ReturnTime) > new TimeSpan (0' 1' 0);  			break;  		}  		if (!dispose)  			left = true;  		else {  			if (toDispose == null)  				toDispose = new List<SvnPoolRemoteSession> ();  			toDispose.Add (rs);  		}  	}  	if (toDispose != null)  		foreach (SvnPoolRemoteSession rs in toDispose)  			_remoteSessions.Remove (rs);  	if (left)  		ScheduleDisposeSessions ();  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: foreach (AnkhSvnPoolRemoteSession rs in _remoteSessions) {  	bool dispose = false;  	switch (rs.SessionUri.Scheme) {  	case "svn":  		dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  		break;  	case "https":  	case "http":  		dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  		break;  	default:  		dispose = (now - rs.ReturnTime) > new TimeSpan (0' 1' 0);  		break;  	}  	if (!dispose)  		left = true;  	else {  		if (toDispose == null)  			toDispose = new List<SvnPoolRemoteSession> ();  		toDispose.Add (rs);  	}  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: foreach (AnkhSvnPoolRemoteSession rs in _remoteSessions) {  	bool dispose = false;  	switch (rs.SessionUri.Scheme) {  	case "svn":  		dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  		break;  	case "https":  	case "http":  		dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  		break;  	default:  		dispose = (now - rs.ReturnTime) > new TimeSpan (0' 1' 0);  		break;  	}  	if (!dispose)  		left = true;  	else {  		if (toDispose == null)  			toDispose = new List<SvnPoolRemoteSession> ();  		toDispose.Add (rs);  	}  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: switch (rs.SessionUri.Scheme) {  case "svn":  	dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  	break;  case "https":  case "http":  	dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  	break;  default:  	dispose = (now - rs.ReturnTime) > new TimeSpan (0' 1' 0);  	break;  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: switch (rs.SessionUri.Scheme) {  case "svn":  	dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  	break;  case "https":  case "http":  	dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  	break;  default:  	dispose = (now - rs.ReturnTime) > new TimeSpan (0' 1' 0);  	break;  }  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: dispose = (now - rs.ReturnTime) > new TimeSpan (0' 3' 0);  
Magic Number,Ankh.Services,AnkhClientPool,C:\repos\necora_ank_git\src\Ankh\Services\AnkhClientPool.cs,OnCleanup,The following statement contains a magic number: dispose = (now - rs.ReturnTime) > new TimeSpan (0' 8' 0);  
Magic Number,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFiles,The following statement contains a magic number: if (from.RevisionType == SvnRevisionType.Number && to.RevisionType == SvnRevisionType.Number && from.Revision + 1 == to.Revision) {  	f1 = GetTempPath (target.FileName' from);  	f2 = GetTempPath (target.FileName' to);  	int n = 0;  	ProgressRunnerResult r = Context.GetService<IProgressRunner> ().RunModal ("Getting revisions"' delegate (object sender' ProgressWorkerArgs e) {  		SvnFileVersionsArgs ea = new SvnFileVersionsArgs ();  		ea.Start = from;  		ea.End = to;  		e.Client.FileVersions (target' ea' delegate (object sender2' SvnFileVersionEventArgs e2) {  			if (n++ == 0)  				e2.WriteTo (f1);  			else  				e2.WriteTo (f2);  		});  	});  	if (!r.Succeeded)  		return null;  	if (n != 2) {  		// Sloooooow workaround for SvnBridge / Codeplex  		f1 = GetTempFile (target' from' withProgress);  		if (f1 == null)  			return null;  		// Canceled  		f2 = GetTempFile (target' to' withProgress);  	}  }  else {  	f1 = GetTempFile (target' from' withProgress);  	if (f1 == null)  		return null;  	// Canceled  	f2 = GetTempFile (target' to' withProgress);  }  
Magic Number,Ankh.Services,AnkhDiff,C:\repos\necora_ank_git\src\Ankh\Services\AnkhDiff.cs,GetTempFiles,The following statement contains a magic number: if (n != 2) {  	// Sloooooow workaround for SvnBridge / Codeplex  	f1 = GetTempFile (target' from' withProgress);  	if (f1 == null)  		return null;  	// Canceled  	f2 = GetTempFile (target' to' withProgress);  }  
Magic Number,Ankh.Services,AnkhScheduler,C:\repos\necora_ank_git\src\Ankh\Services\Scheduler.cs,Reschedule,The following statement contains a magic number: lock (_actions) {  	if (_actions.Count == 0)  		return;  	double tLeft = (_actions.Keys [0] - DateTime.Now).TotalMilliseconds;  	if (tLeft < 0.0)  		tLeft = 10.0;  	_timer.Interval = tLeft;  	_timer.Enabled = true;  }  
Magic Number,Ankh.Services,AnkhScheduler,C:\repos\necora_ank_git\src\Ankh\Services\Scheduler.cs,Reschedule,The following statement contains a magic number: if (tLeft < 0.0)  	tLeft = 10.0;  
Magic Number,Ankh.Services,AnkhScheduler,C:\repos\necora_ank_git\src\Ankh\Services\Scheduler.cs,Reschedule,The following statement contains a magic number: tLeft = 10.0;  
Magic Number,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssueTrackerUri,The following statement contains a magic number: if (url.StartsWith ("^/")) {  	Uri repositoryRoot = RepositoryRoot;  	if (repositoryRoot == null)  		return null;  	url = repositoryRoot.AbsoluteUri + url.Substring (2);  }  
Magic Number,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssueTrackerUri,The following statement contains a magic number: url = repositoryRoot.AbsoluteUri + url.Substring (2);  
Magic Number,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssues,The following statement contains a magic number: if (sc.AllInOneRe == null && sc.LogPrepareRe == null && items != null)  	try {  		switch (items.Count) {  		case 1:  			sc.AllInOneRe = new Regex (items [0]' RegexOptions.CultureInvariant | RegexOptions.Multiline);  			break;  		case 2:  			sc.LogPrepareRe = new Regex (items [0]' RegexOptions.ExplicitCapture | RegexOptions.CultureInvariant | RegexOptions.Multiline);  			sc.LogSplitRe = new Regex (items [1]' RegexOptions.CultureInvariant | RegexOptions.Multiline);  			break;  		default:  			sc.BrokenRegex = true;  			break;  		}  	}  	catch (ArgumentException) {  		sc.BrokenRegex = true;  	}  
Magic Number,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssues,The following statement contains a magic number: try {  	switch (items.Count) {  	case 1:  		sc.AllInOneRe = new Regex (items [0]' RegexOptions.CultureInvariant | RegexOptions.Multiline);  		break;  	case 2:  		sc.LogPrepareRe = new Regex (items [0]' RegexOptions.ExplicitCapture | RegexOptions.CultureInvariant | RegexOptions.Multiline);  		sc.LogSplitRe = new Regex (items [1]' RegexOptions.CultureInvariant | RegexOptions.Multiline);  		break;  	default:  		sc.BrokenRegex = true;  		break;  	}  }  catch (ArgumentException) {  	sc.BrokenRegex = true;  }  
Magic Number,Ankh.Settings,SolutionSettings,C:\repos\necora_ank_git\src\Ankh\Services\SolutionSettings.Commit.cs,GetIssues,The following statement contains a magic number: switch (items.Count) {  case 1:  	sc.AllInOneRe = new Regex (items [0]' RegexOptions.CultureInvariant | RegexOptions.Multiline);  	break;  case 2:  	sc.LogPrepareRe = new Regex (items [0]' RegexOptions.ExplicitCapture | RegexOptions.CultureInvariant | RegexOptions.Multiline);  	sc.LogSplitRe = new Regex (items [1]' RegexOptions.CultureInvariant | RegexOptions.Multiline);  	break;  default:  	sc.BrokenRegex = true;  	break;  }  
Magic Number,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,GetRecentLogMessages,The following statement contains a magic number: return new RegistryLifoList (Context' "RecentLogMessages"' 32);  
Magic Number,Ankh.Configuration,ConfigService,C:\repos\necora_ank_git\src\Ankh\Services\ConfigService.cs,GetRecentReposUrls,The following statement contains a magic number: return new RegistryLifoList (Context' "RecentRepositoryUrls"' 32);  
Missing Default,Ankh.Commands,BranchSolutionCommand,C:\repos\necora_ank_git\src\Ankh\Commands\BranchSolutionCommand.cs,GetRoot,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.SolutionBranch:  	IAnkhSolutionSettings ss = e.GetService<IAnkhSolutionSettings> ();  	if (ss == null)  		return null;  	string root = ss.ProjectRoot;  	if (string.IsNullOrEmpty (root))  		return null;  	item = e.GetService<IFileStatusCache> () [root];  	break;  case AnkhCommand.ProjectBranch:  	SvnProject p = EnumTools.GetSingle (e.Selection.GetSelectedProjects (false));  	if (p == null)  		break;  	ISvnProjectInfo info = e.GetService<IProjectFileMapper> ().GetProjectInfo (p);  	if (info == null || info.ProjectDirectory == null)  		break;  	item = e.GetService<IFileStatusCache> () [info.ProjectDirectory];  	break;  }  
Missing Default,Ankh.Commands,ItemEditPropertiesCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemEditPropertiesCommand.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ItemEditProperties:  case AnkhCommand.ItemShowPropertyChanges:  	foreach (SvnItem i in e.Selection.GetSelectedSvnItems (false)) {  		if (i.IsVersioned) {  			firstVersioned = i;  			break;  		}  	}  	break;  case AnkhCommand.ProjectEditProperties:  	// use project folder  	foreach (SvnProject p in e.Selection.GetSelectedProjects (false)) {  		IProjectFileMapper pfm = e.GetService<IProjectFileMapper> ();  		if (pfm != null) {  			ISvnProjectInfo info = pfm.GetProjectInfo (p);  			if (info != null && info.ProjectDirectory != null) {  				firstVersioned = cache [info.ProjectDirectory];  			}  			if (firstVersioned != null) {  				break;  			}  		}  	}  	break;  case AnkhCommand.SolutionEditProperties:  	// use solution folder  	IAnkhSolutionSettings solutionSettings = e.GetService<IAnkhSolutionSettings> ();  	if (solutionSettings != null) {  		firstVersioned = cache [solutionSettings.ProjectRoot];  	}  	break;  }  
Missing Default,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,OnUpdate,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ItemIgnoreFile:  	e.Text = string.Format (foundOne.IsDirectory ? CommandStrings.IgnoreFolder : CommandStrings.IgnoreFile' foundOne.Name);  	break;  case AnkhCommand.ItemIgnoreFileType:  	e.Text = string.Format (CommandStrings.IgnoreFileType' foundOne.Extension);  	break;  case AnkhCommand.ItemIgnoreFolder:  	SvnItem pp;  	SvnItem p = foundOne.Parent;  	while (p != null && (pp = p.Parent) != null && !pp.IsVersioned)  		p = pp;  	e.Text = string.Format (CommandStrings.IgnoreFolder' (p != null) ? p.Name : "");  	break;  }  
Missing Default,Ankh.Commands,ItemIgnore,C:\repos\necora_ank_git\src\Ankh\Commands\ItemIgnore.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ItemIgnoreFile:  	AddIgnore (add' i.Parent' i.Name);  	break;  case AnkhCommand.ItemIgnoreFileType:  	AddIgnore (add' i.Parent' "*" + i.Extension);  	break;  case AnkhCommand.ItemIgnoreFilesInFolder:  	AddIgnore (add' i.Parent' "*");  	break;  case AnkhCommand.ItemIgnoreFolder:  	SvnItem p = i.Parent;  	SvnItem pp = null;  	while (null != p && null != (pp = p.Parent) && !pp.IsVersioned)  		p = pp;  	if (p != null && pp != null)  		AddIgnore (add' pp' p.Name);  	break;  }  
Missing Default,Ankh.Commands,OpenInXExplorer,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInXExplorer.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ItemSelectInRepositoryExplorer:  	if (node == null || node.Uri == null)  		return;  	if (cmd != null)  		cmd.DirectlyExecCommand (AnkhCommand.RepositoryBrowse' node.FullPath);  	break;  case AnkhCommand.ItemSelectInWorkingCopyExplorer:  	if (node == null || !node.Exists)  		return;  	if (cmd != null)  		cmd.DirectlyExecCommand (AnkhCommand.WorkingCopyBrowse' node.FullPath);  	break;  case AnkhCommand.ItemSelectInSolutionExplorer:  	if (node == null)  		return;  	IVsUIHierarchyWindow hierWindow = VsShellUtilities.GetUIHierarchyWindow (e.Context' new Guid (ToolWindowGuids80.SolutionExplorer));  	IVsProject project = VsShellUtilities.GetProject (e.Context' node.FullPath) as IVsProject;  	if (hierWindow != null) {  		int found;  		uint id;  		VSDOCUMENTPRIORITY[] prio = new VSDOCUMENTPRIORITY[1];  		if (project != null && ErrorHandler.Succeeded (project.IsDocumentInProject (node.FullPath' out found' prio' out id)) && found != 0) {  			hierWindow.ExpandItem (project as IVsUIHierarchy' id' EXPANDFLAGS.EXPF_SelectItem);  		}  		else if (string.Equals (node.FullPath' e.Selection.SolutionFilename' StringComparison.OrdinalIgnoreCase))  			hierWindow.ExpandItem (e.GetService<IVsUIHierarchy> (typeof(SVsSolution))' VSConstants.VSITEMID_ROOT' EXPANDFLAGS.EXPF_SelectItem);  		// Now try to activate the solution explorer  		IVsWindowFrame solutionExplorer;  		Guid solutionExplorerGuid = new Guid (ToolWindowGuids80.SolutionExplorer);  		IVsUIShell shell = e.GetService<IVsUIShell> (typeof(SVsUIShell));  		if (shell != null) {  			shell.FindToolWindow ((uint)__VSFINDTOOLWIN.FTW_fForceCreate' ref solutionExplorerGuid' out solutionExplorer);  			if (solutionExplorer != null)  				solutionExplorer.Show ();  		}  	}  	break;  }  
Missing Default,Ankh.Commands,AddToSccCommands,C:\repos\necora_ank_git\src\Ankh\Commands\AddToSccCommands.cs,SetProjectsManaged,The following switch statement is missing a default case: switch (rslt) {  case DialogResult.Cancel:  	return;  case DialogResult.No:  	if (CheckoutWorkingCopyForProject (e' projInfo' solutionReposRoot' out markAsManaged' out writeReference)) {  		if (markAsManaged)  			scc.SetProjectManaged (project' true);  		if (writeReference)  			scc.EnsureCheckOutReference (project);  		continue;  	}  	break;  case DialogResult.Yes:  	projectsToBeManaged.Add (project);  	AddPathToSubversion (e' projInfo.ProjectFile ?? projInfo.ProjectDirectory);  	continue;  }  
Missing Default,Ankh.Commands,OpenInVisualStudio,C:\repos\necora_ank_git\src\Ankh\Commands\OpenInVisualStudio.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ItemOpenVisualStudio:  	IProjectFileMapper mapper = e.GetService<IProjectFileMapper> ();  	if (mapper.IsProjectFileOrSolution (item.FullPath))  		goto case AnkhCommand.ItemOpenSolutionExplorer;  	if (item.IsDirectory)  		goto case AnkhCommand.ItemOpenFolder;  	if (!item.IsFile || !item.Exists)  		continue;  	VsShellUtilities.OpenDocument (e.Context' item.FullPath);  	break;  case AnkhCommand.ItemOpenTextEditor:  	{  		IVsUIHierarchy hier;  		IVsWindowFrame frame;  		uint id;  		if (!item.IsFile)  			continue;  		VsShellUtilities.OpenDocument (e.Context' item.FullPath' VSConstants.LOGVIEWID_TextView' out hier' out id' out frame);  	}  	break;  case AnkhCommand.ItemOpenFolder:  	if (!item.IsDirectory)  		System.Diagnostics.Process.Start (Path.GetDirectoryName (item.FullPath));  	else  		System.Diagnostics.Process.Start (item.FullPath);  	break;  case AnkhCommand.ItemOpenWindows:  	System.Diagnostics.ProcessStartInfo psi = new System.Diagnostics.ProcessStartInfo (item.FullPath);  	psi.Verb = "open";  	System.Diagnostics.Process.Start (psi);  	break;  case AnkhCommand.ItemOpenSolutionExplorer:  	IVsUIHierarchyWindow hierWindow = VsShellUtilities.GetUIHierarchyWindow (e.Context' new Guid (ToolWindowGuids80.SolutionExplorer));  	IVsProject project = VsShellUtilities.GetProject (e.Context' item.FullPath) as IVsProject;  	if (hierWindow != null) {  		int found;  		uint id;  		VSDOCUMENTPRIORITY[] prio = new VSDOCUMENTPRIORITY[1];  		if (project != null && ErrorHandler.Succeeded (project.IsDocumentInProject (item.FullPath' out found' prio' out id)) && found != 0) {  			hierWindow.ExpandItem (project as IVsUIHierarchy' id' EXPANDFLAGS.EXPF_SelectItem);  		}  		else if (string.Equals (item.FullPath' e.Selection.SolutionFilename' StringComparison.OrdinalIgnoreCase))  			hierWindow.ExpandItem (e.GetService<IVsUIHierarchy> (typeof(SVsSolution))' VSConstants.VSITEMID_ROOT' EXPANDFLAGS.EXPF_SelectItem);  		// Now try to activate the solution explorer  		IVsWindowFrame solutionExplorer;  		Guid solutionExplorerGuid = new Guid (ToolWindowGuids80.SolutionExplorer);  		IVsUIShell shell = e.GetService<IVsUIShell> (typeof(SVsUIShell));  		if (shell != null) {  			shell.FindToolWindow ((uint)__VSFINDTOOLWIN.FTW_fForceCreate' ref solutionExplorerGuid' out solutionExplorer);  			if (solutionExplorer != null)  				solutionExplorer.Show ();  		}  	}  	break;  }  
Missing Default,Ankh.Commands,AddWorkingCopyExplorerRootCommand,C:\repos\necora_ank_git\src\Ankh\Commands\WorkingCopyExplorer\WorkingCopyBrowseCommand.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.WorkingCopyAdd:  	ctrl.AddRoot (info);  	break;  case AnkhCommand.WorkingCopyBrowse:  	ctrl.BrowsePath (e.Context' info);  	break;  }  
Missing Default,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,OnUpdate,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.SvnNodeAnnotate:  	ISvnRepositoryItem ri = EnumTools.GetSingle (e.Selection.GetSelection<ISvnRepositoryItem> ());  	if (ri != null && ri.Origin != null && ri.NodeKind != SvnNodeKind.Directory)  		return;  	break;  case AnkhCommand.ItemAnnotate:  	foreach (SvnItem item in e.Selection.GetSelectedSvnItems (false)) {  		if (item.IsVersioned && item.IsFile)  			return;  	}  	break;  case AnkhCommand.DocumentAnnotate:  	if (e.Selection.ActiveDocumentItem != null && e.Selection.ActiveDocumentItem.HasCopyableHistory)  		return;  	break;  case AnkhCommand.LogAnnotateRevision:  	ILogControl logControl = e.Selection.GetActiveControl<ILogControl> ();  	if (logControl == null || logControl.Origins == null) {  		e.Visible = e.Enabled = false;  		return;  	}  	if (!EnumTools.IsEmpty (e.Selection.GetSelection<ISvnLogChangedPathItem> ()))  		return;  	break;  }  
Missing Default,Ankh.Commands,ItemAnnotateCommand,C:\repos\necora_ank_git\src\Ankh\Commands\ItemAnnotateCommand.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ItemAnnotate:  	endRev = SvnRevision.Base;  	foreach (SvnItem i in e.Selection.GetSelectedSvnItems (false)) {  		if (i.IsVersionable)  			targets.Add (new SvnOrigin (i));  	}  	break;  case AnkhCommand.LogAnnotateRevision:  	foreach (ISvnLogChangedPathItem logItem in e.Selection.GetSelection<ISvnLogChangedPathItem> ()) {  		targets.Add (logItem.Origin);  		endRev = logItem.Revision;  	}  	break;  case AnkhCommand.SvnNodeAnnotate:  	foreach (ISvnRepositoryItem item in e.Selection.GetSelection<ISvnRepositoryItem> ()) {  		targets.Add (item.Origin);  		endRev = item.Revision;  	}  	break;  case AnkhCommand.DocumentAnnotate:  	targets.Add (new SvnOrigin (e.GetService<IFileStatusCache> () [e.Selection.ActiveDocumentFilename]));  	endRev = SvnRevision.Base;  	break;  }  
Missing Default,Ankh.Commands,DiffLocalItem,C:\repos\necora_ank_git\src\Ankh\Commands\ItemShowChanges.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.DiffLocalItem:  	break;  // revRange null -> show selector  case AnkhCommand.ItemCompareBase:  case AnkhCommand.ItemShowChanges:  case AnkhCommand.DocumentShowChanges:  	revRange = new SvnRevisionRange (SvnRevision.Base' SvnRevision.Working);  	break;  case AnkhCommand.ItemCompareCommitted:  	revRange = new SvnRevisionRange (SvnRevision.Committed' SvnRevision.Working);  	break;  case AnkhCommand.ItemCompareLatest:  	revRange = new SvnRevisionRange (SvnRevision.Head' SvnRevision.Working);  	break;  case AnkhCommand.ItemComparePrevious:  	revRange = new SvnRevisionRange (SvnRevision.Previous' SvnRevision.Working);  	break;  }  
Missing Default,Ankh.Commands,LogCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LogCommand.cs,OnUpdate,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ProjectHistory:  	SvnProject p = EnumTools.GetFirst (e.Selection.GetSelectedProjects (false));  	if (p == null)  		break;  	ISvnProjectInfo pi = e.GetService<IProjectFileMapper> ().GetProjectInfo (p);  	if (pi == null || string.IsNullOrEmpty (pi.ProjectDirectory))  		break;  	// No project location  	if (e.GetService<IFileStatusCache> () [pi.ProjectDirectory].HasCopyableHistory)  		return;  	// Ok' we have history!                                             	break;  // No history  case AnkhCommand.SolutionHistory:  	IAnkhSolutionSettings ss = e.GetService<IAnkhSolutionSettings> ();  	if (ss == null || string.IsNullOrEmpty (ss.ProjectRoot))  		break;  	if (e.GetService<IFileStatusCache> () [ss.ProjectRoot].HasCopyableHistory)  		return;  	// Ok' we have history!  	break;  // No history  case AnkhCommand.DocumentHistory:  	SvnItem docitem = e.Selection.ActiveDocumentItem;  	if (docitem != null && docitem.HasCopyableHistory)  		return;  	break;  // No history  case AnkhCommand.Log:  	int itemCount = 0;  	int needsRemoteCount = 0;  	foreach (SvnItem item in e.Selection.GetSelectedSvnItems (false)) {  		if (!item.IsVersioned) {  			e.Enabled = false;  			return;  		}  		if (item.IsReplaced || item.IsAdded) {  			if (item.HasCopyableHistory)  				needsRemoteCount++;  			else {  				e.Enabled = false;  				return;  			}  		}  		itemCount++;  	}  	if (itemCount == 0 || (needsRemoteCount != 0 && itemCount > 1)) {  		e.Enabled = false;  		return;  	}  	if (needsRemoteCount >= 1) {  		// One remote log  		Debug.Assert (needsRemoteCount == 1);  		return;  	}  	// Local log only  	return;  case AnkhCommand.ReposExplorerLog:  	i = 0;  	foreach (ISvnRepositoryItem item in e.Selection.GetSelection<ISvnRepositoryItem> ()) {  		if (item == null || item.Origin == null)  			continue;  		i++;  		if (i > 1)  			break;  	}  	if (i == 1)  		return;  	break;  case AnkhCommand.AnnotateShowLog:  	if (EnumTools.GetSingle (e.Selection.GetSelection<IAnnotateSection> ()) != null)  		return;  	break;  }  
Missing Default,Ankh.Commands,LogCommand,C:\repos\necora_ank_git\src\Ankh\Commands\LogCommand.cs,OnExecute,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.Log:  	IAnkhDiffHandler diffHandler = e.GetService<IAnkhDiffHandler> ();  	List<SvnOrigin> items = new List<SvnOrigin> ();  	foreach (SvnItem i in e.Selection.GetSelectedSvnItems (false)) {  		Debug.Assert (i.IsVersioned);  		if (i.IsReplaced || i.IsAdded) {  			if (!i.HasCopyableHistory)  				continue;  			items.Add (new SvnOrigin (diffHandler.GetCopyOrigin (i)' i.WorkingCopy.RepositoryRoot));  			continue;  		}  		items.Add (new SvnOrigin (i));  	}  	PerformLog (e.Context' items' null' null);  	break;  case AnkhCommand.SolutionHistory:  	IAnkhSolutionSettings settings = e.GetService<IAnkhSolutionSettings> ();  	PerformLog (e.Context' new SvnOrigin[] {  		new SvnOrigin (cache [settings.ProjectRoot])  	}' null' null);  	break;  case AnkhCommand.ProjectHistory:  	IProjectFileMapper mapper = e.GetService<IProjectFileMapper> ();  	foreach (SvnProject p in e.Selection.GetSelectedProjects (false)) {  		ISvnProjectInfo info = mapper.GetProjectInfo (p);  		if (info != null)  			selected.Add (new SvnOrigin (cache [info.ProjectDirectory]));  	}  	PerformLog (e.Context' selected' null' null);  	break;  case AnkhCommand.DocumentHistory:  	SvnItem docItem = e.Selection.ActiveDocumentItem;  	Debug.Assert (docItem != null);  	PerformLog (e.Context' new SvnOrigin[] {  		new SvnOrigin (docItem)  	}' null' null);  	break;  case AnkhCommand.ReposExplorerLog:  	ISvnRepositoryItem item = null;  	foreach (ISvnRepositoryItem i in e.Selection.GetSelection<ISvnRepositoryItem> ()) {  		if (i != null && i.Uri != null)  			item = i;  		break;  	}  	if (item != null)  		PerformLog (e.Context' new SvnOrigin[] {  			item.Origin  		}' null' null);  	break;  case AnkhCommand.AnnotateShowLog:  	IAnnotateSection section = EnumTools.GetSingle (e.Selection.GetSelection<IAnnotateSection> ());  	if (section == null)  		return;  	PerformLog (e.Context' new SvnOrigin[] {  		section.Origin  	}' section.Revision' null);  	break;  }  
Missing Default,Ankh.Commands,ShowToolWindows,C:\repos\necora_ank_git\src\Ankh\Commands\ShowToolWindows.cs,OnUpdate,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.ShowPendingChanges:  	if (!e.State.SccProviderActive)  		e.Visible = e.Enabled = false;  	break;  }  
Missing Default,Ankh.Commands,SwitchItemCommand,C:\repos\necora_ank_git\src\Ankh\Commands\SwitchItemCommand.cs,OnUpdate,The following switch statement is missing a default case: switch (e.Command) {  case AnkhCommand.SolutionSwitchDialog:  	IAnkhSolutionSettings solutionSettings = e.GetService<IAnkhSolutionSettings> ();  	if (solutionSettings == null || string.IsNullOrEmpty (solutionSettings.ProjectRoot)) {  		e.Enabled = false;  		return;  	}  	statusCache = e.GetService<IFileStatusCache> ();  	SvnItem solutionItem = statusCache [solutionSettings.ProjectRoot];  	if (!solutionItem.IsVersioned) {  		e.Enabled = false;  		return;  	}  	break;  case AnkhCommand.SwitchProject:  	statusCache = e.GetService<IFileStatusCache> ();  	IProjectFileMapper pfm = e.GetService<IProjectFileMapper> ();  	foreach (SvnProject item in e.Selection.GetSelectedProjects (true)) {  		ISvnProjectInfo pi = pfm.GetProjectInfo (item);  		if (pi == null || pi.ProjectDirectory == null) {  			e.Enabled = false;  			return;  		}  		SvnItem projectItem = statusCache [pi.ProjectDirectory];  		if (!projectItem.IsVersioned) {  			e.Enabled = false;  			return;  		}  	}  	break;  case AnkhCommand.SwitchItem:  	bool foundOne = false' error = false;  	foreach (SvnItem item in e.Selection.GetSelectedSvnItems (false)) {  		if (item.IsVersioned && !foundOne)  			foundOne = true;  		else {  			error = true;  			break;  		}  	}  	e.Enabled = foundOne && !error;  	break;  }  
Missing Default,Ankh.Services.PendingChanges,PendingCommitState,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingCommitState.cs,CalculateCommitDepth,The following switch statement is missing a default case: switch (ee.LocalContentStatus) {  case SvnStatus.Zero:  case SvnStatus.None:  case SvnStatus.Normal:  case SvnStatus.Ignored:  case SvnStatus.NotVersioned:  case SvnStatus.External:  	return;  }  
Missing Default,Ankh.Services.PendingChanges,PendingChangeHandler,C:\repos\necora_ank_git\src\Ankh\Services\PendingChanges\PendingChangeHandler.cs,Commit_CommitToRepository,The following switch statement is missing a default case: switch (ca.LastException.SvnErrorCode) {  case SvnErrorCode.SVN_ERR_WC_NOT_UP_TO_DATE:  case SvnErrorCode.SVN_ERR_RA_OUT_OF_DATE:  case SvnErrorCode.SVN_ERR_FS_TXN_OUT_OF_DATE:  	outOfDateMessage = new StringBuilder ();  	Exception ex = ca.LastException;  	while (ex != null) {  		outOfDateMessage.AppendLine (ex.Message);  		ex = ex.InnerException;  	}  	break;  }  
