Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Photos.Common,RichTextColumns,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Long Parameter List,Photos.PhotosReference,PhotosSoapSecure,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,ImageGetListByUserAlbumAsync,The method has 5 parameters. Parameters: user' album' page' interface' orderBy
Long Parameter List,Photos.PhotosReference,ImageGetListBySearchRequest,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,ImageGetListBySearchRequest,The method has 5 parameters. Parameters: page' interface' terms' dateFrom' dateTo
Long Parameter List,Photos.PhotosReference,ImageGetListByTagsRequest,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,ImageGetListByTagsRequest,The method has 6 parameters. Parameters: tags' page' orderBy' m18' user' interface
Long Parameter List,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,ImageGetListBySearchAsync,The method has 5 parameters. Parameters: page' interface' terms' dateFrom' dateTo
Long Parameter List,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,ImageGetListByTagsAsync,The method has 6 parameters. Parameters: tags' page' orderBy' m18' user' interface
Long Parameter List,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,ImageGetListByUserAlbumAsync,The method has 5 parameters. Parameters: user' album' page' interface' orderBy
Long Identifier,Photos.SapoServices,PhotosServiceClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\SapoServices\PhotosServiceClient.cs,,The length of the parameter HttpFotosSapoPtUploadpostHtmlUri is 32.
Long Identifier,Photos.SapoServices.Utils,EnsureCredentialsUseContext,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\SapoServices\Utils\EnsureCredentialsUseContext.cs,,The length of the parameter HttpServicesSapoPtMetadataMarket is 32.
Long Identifier,Photos.PhotosReference,AlbumGetListByCollectionResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByCollectionResponse,The length of the parameter AlbumGetListByCollectionResult is 30.
Long Identifier,Photos.PhotosReference,AlbumGetListByCollectionResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter AlbumGetListByCollectionResult is 30.
Long Identifier,Photos.PhotosReference,AlbumGetListByHighlightedResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByHighlightedResponse,The length of the parameter AlbumGetListByHighlightedResult is 31.
Long Identifier,Photos.PhotosReference,AlbumGetListByHighlightedResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter AlbumGetListByHighlightedResult is 31.
Long Identifier,Photos.PhotosReference,TagsGetListByHighlightedResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,TagsGetListByHighlightedResponse,The length of the parameter TagsGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,TagsGetListByHighlightedResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter TagsGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,UserGetListByHighlightedResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,UserGetListByHighlightedResponse,The length of the parameter UserGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,UserGetListByHighlightedResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter UserGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,AlbumGetListByCollectionResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByCollectionResponse1,The length of the parameter AlbumGetListByCollectionResult is 30.
Long Identifier,Photos.PhotosReference,AlbumGetListByCollectionResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter AlbumGetListByCollectionResult is 30.
Long Identifier,Photos.PhotosReference,AlbumGetListByHighlightedResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByHighlightedResponse1,The length of the parameter AlbumGetListByHighlightedResult is 31.
Long Identifier,Photos.PhotosReference,AlbumGetListByHighlightedResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter AlbumGetListByHighlightedResult is 31.
Long Identifier,Photos.PhotosReference,TagsGetListByHighlightedResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,TagsGetListByHighlightedResponse1,The length of the parameter TagsGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,TagsGetListByHighlightedResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter TagsGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,UserGetListByHighlightedResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,UserGetListByHighlightedResponse1,The length of the parameter UserGetListByHighlightedResult is 30.
Long Identifier,Photos.PhotosReference,UserGetListByHighlightedResponse1,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,,The length of the parameter UserGetListByHighlightedResult is 30.
Long Statement,Photos.Common,SuspensionManager,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,Photos.Common,SuspensionManager,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,Photos.SapoServices,PhotosServiceClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\SapoServices\PhotosServiceClient.cs,CreateImageAsync,The length of the statement  "                //Default HTTP Method is POST (http://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.networking.backgroundtransfer.backgrounduploader.method.aspx) " is 158.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByCollectionAsync,The length of the statement  "            Photos.PhotosReference.AlbumGetListByCollectionRequest inValue = new Photos.PhotosReference.AlbumGetListByCollectionRequest(); " is 126.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByHighlightedAsync,The length of the statement  "            Photos.PhotosReference.AlbumGetListByHighlightedRequest inValue = new Photos.PhotosReference.AlbumGetListByHighlightedRequest(); " is 128.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,CollectionGetListByUserAsync,The length of the statement  "            Photos.PhotosReference.CollectionGetListByUserRequest inValue = new Photos.PhotosReference.CollectionGetListByUserRequest(); " is 124.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,TagsGetListByHighlightedAsync,The length of the statement  "            Photos.PhotosReference.TagsGetListByHighlightedRequest inValue = new Photos.PhotosReference.TagsGetListByHighlightedRequest(); " is 126.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,UserGetListByHighlightedAsync,The length of the statement  "            Photos.PhotosReference.UserGetListByHighlightedRequest inValue = new Photos.PhotosReference.UserGetListByHighlightedRequest(); " is 126.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,OpenAsync,The length of the statement  "            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null' null)' new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen)); " is 227.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,CloseAsync,The length of the statement  "            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null' null)' new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose)); " is 229.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,GetBindingForEndpoint,The length of the statement  "            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'."' endpointConfiguration)); " is 127.
Long Statement,Photos.PhotosReference,PhotosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,GetEndpointAddress,The length of the statement  "            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'."' endpointConfiguration)); " is 127.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByCollectionAsync,The length of the statement  "            Photos.PhotosReference.AlbumGetListByCollectionRequest1 inValue = new Photos.PhotosReference.AlbumGetListByCollectionRequest1(); " is 128.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,AlbumGetListByHighlightedAsync,The length of the statement  "            Photos.PhotosReference.AlbumGetListByHighlightedRequest1 inValue = new Photos.PhotosReference.AlbumGetListByHighlightedRequest1(); " is 130.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,CollectionGetListByUserAsync,The length of the statement  "            Photos.PhotosReference.CollectionGetListByUserRequest1 inValue = new Photos.PhotosReference.CollectionGetListByUserRequest1(); " is 126.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,TagsGetListByHighlightedAsync,The length of the statement  "            Photos.PhotosReference.TagsGetListByHighlightedRequest1 inValue = new Photos.PhotosReference.TagsGetListByHighlightedRequest1(); " is 128.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,UserGetListByHighlightedAsync,The length of the statement  "            Photos.PhotosReference.UserGetListByHighlightedRequest1 inValue = new Photos.PhotosReference.UserGetListByHighlightedRequest1(); " is 128.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,OpenAsync,The length of the statement  "            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null' null)' new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen)); " is 227.
Long Statement,Photos.PhotosReference,PhotosSoap12SecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Service References\PhotosReference\Reference.cs,CloseAsync,The length of the statement  "            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null' null)' new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose)); " is 229.
Complex Conditional,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Magic Number,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Photos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Photos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
