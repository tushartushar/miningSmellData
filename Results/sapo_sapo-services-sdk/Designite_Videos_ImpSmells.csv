Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Videos.Common,RichTextColumns,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Long Parameter List,Videos.SapoServices,VideosServiceClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\SapoServices\VideosServiceClient.cs,GetVideoAsync,The method has 5 parameters. Parameters: videoId' email' videoRandname' Interface' showComments
Long Parameter List,Videos.SapoServices,VideosServiceClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\SapoServices\VideosServiceClient.cs,GetUserVideos,The method has 5 parameters. Parameters: email' Interface' order' limit' page
Long Parameter List,Videos.SapoServices,VideosServiceClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\SapoServices\VideosServiceClient.cs,QueryAsync,The method has 8 parameters. Parameters: emails' tags' cos' limit' order' viewAll' itfc' showTags
Long Parameter List,Videos.VideosReference,VideosSoapSecure,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,CheckVideoAsync,The method has 5 parameters. Parameters: VideoId' Email' VideoRandname' Interface' ShowComments
Long Parameter List,Videos.VideosReference,VideosSoapSecure,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetEncodeParametersAsync,The method has 6 parameters. Parameters: EncId' IdVideoWidth' IdVideoHeight' IdAudioBitrate' IdAudioNch' IdVideoFps
Long Parameter List,Videos.VideosReference,ListUserPlaylistsRequest,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListUserPlaylistsRequest,The method has 5 parameters. Parameters: Email' Interface' Page' Limit' Order
Long Parameter List,Videos.VideosReference,ListUserVideosRequest,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListUserVideosRequest,The method has 5 parameters. Parameters: Email' Interface' Order' Limit' Page
Long Parameter List,Videos.VideosReference,ListVideosFromPlaylistRequest,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListVideosFromPlaylistRequest,The method has 6 parameters. Parameters: Playlist' Email' Interface' Order' Limit' Page
Long Parameter List,Videos.VideosReference,QueryRequest,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,QueryRequest,The method has 8 parameters. Parameters: Emails' Tags' Cos' Limit' Order' ViewAll' Interface' ShowTags
Long Parameter List,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,CheckVideoAsync,The method has 5 parameters. Parameters: VideoId' Email' VideoRandname' Interface' ShowComments
Long Parameter List,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetEncodeParametersAsync,The method has 6 parameters. Parameters: EncId' IdVideoWidth' IdVideoHeight' IdAudioBitrate' IdAudioNch' IdVideoFps
Long Parameter List,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListUserPlaylistsAsync,The method has 5 parameters. Parameters: Email' Interface' Page' Limit' Order
Long Parameter List,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListUserVideosAsync,The method has 5 parameters. Parameters: Email' Interface' Order' Limit' Page
Long Parameter List,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListVideosFromPlaylistAsync,The method has 6 parameters. Parameters: Playlist' Email' Interface' Order' Limit' Page
Long Parameter List,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,QueryAsync,The method has 8 parameters. Parameters: Emails' Tags' Cos' Limit' Order' ViewAll' Interface' ShowTags
Long Identifier,Videos.SapoServices.Utils,EnsureCredentialsUseContext,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\SapoServices\Utils\EnsureCredentialsUseContext.cs,,The length of the parameter HttpServicesSapoPtMetadataMarket is 32.
Long Identifier,Videos.VideosReference,Playlist,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,,The length of the parameter resultTotalPlaylistsFieldSpecified is 34.
Long Identifier,Videos.VideosReference,Video,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,,The length of the parameter resultTotalVideosFieldSpecified is 31.
Long Identifier,Videos.VideosReference,GetEncodeProfilesForUserResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetEncodeProfilesForUserResponse,The length of the parameter GetEncodeProfilesForUserResult is 30.
Long Identifier,Videos.VideosReference,GetEncodeProfilesForUserResponse,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,,The length of the parameter GetEncodeProfilesForUserResult is 30.
Long Statement,Videos.Common,SuspensionManager,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,Videos.Common,SuspensionManager,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetEncodeParametersAsync,The length of the statement  "            return base.Channel.GetEncodeParametersAsync(EncId' IdVideoWidth' IdVideoHeight' IdAudioBitrate' IdAudioNch' IdVideoFps); " is 121.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetEncodeProfilesForUserAsync,The length of the statement  "            Videos.VideosReference.GetEncodeProfilesForUserRequest inValue = new Videos.VideosReference.GetEncodeProfilesForUserRequest(); " is 126.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,ListVideosFromPlaylistAsync,The length of the statement  "            Videos.VideosReference.ListVideosFromPlaylistRequest inValue = new Videos.VideosReference.ListVideosFromPlaylistRequest(); " is 122.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,OpenAsync,The length of the statement  "            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null' null)' new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen)); " is 227.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,CloseAsync,The length of the statement  "            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null' null)' new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose)); " is 229.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetBindingForEndpoint,The length of the statement  "            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'."' endpointConfiguration)); " is 127.
Long Statement,Videos.VideosReference,VideosSoapSecureClient,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Service References\VideosReference\Reference.cs,GetEndpointAddress,The length of the statement  "            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'."' endpointConfiguration)); " is 127.
Complex Conditional,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Magic Number,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Videos.Common,LayoutAwarePage,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Videos.Pages,GetUserVideos,C:\repos\sapo_sapo-services-sdk\Client-SDK\Code\Windows8\XAML+CSharp\SOAP\Code_Samples\CSharpSOAP_ProxyInAppProj\Videos\Pages\GetUserVideos.xaml.cs,BtGetUserVideosClick,The following statement contains a magic number: Video[] videos = await client.GetUserVideos(null' null' null' 50' 1);
