Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DotLiquid.Tests.Tags,TestFileSystem,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,ReadTemplateFile,Cyclomatic complexity of the method is 9
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestDictionaryHasKey,The length of the statement  "            System.Collections.Generic.Dictionary<string' string> testDictionary = new System.Collections.Generic.Dictionary<string' string> " is 128.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestDictionaryHasValue,The length of the statement  "            System.Collections.Generic.Dictionary<string' string> testDictionary = new System.Collections.Generic.Dictionary<string' string> " is 128.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCapitalInCustomOperator,The length of the statement  "                Helper.AssertTemplateResult("Liquid error: Unknown operator isMultipleOf"' "{% if 16 isMultipleOf 4 %} TRUE {% endif %}"); " is 122.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCapitalInCustomCSharpOperator,The length of the statement  "                    Helper.AssertTemplateResult("Liquid error: Unknown operator divisibleBy"' "{% if 16 divisibleBy 4 %} TRUE {% endif %}"); " is 120.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCompareBetweenDifferentTypes,The length of the statement  "            var parsedOutput = parse.Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = Hash.FromDictionary(row) }); " is 130.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestRuby_PascalCaseNotAccepted,The length of the statement  "            Helper.AssertTemplateResult("Liquid error: Unknown operator StartsWith"' "{% if 'bob' StartsWith 'B' %} YES {% endif %}"); " is 122.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCSharp_LowerCaseAccepted,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if 'Bob' startswith 'B' %} YES {% endif %}"' null' new CSharpNamingConvention()); " is 122.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCSharp_PascalCaseAccepted,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if 'Bob' StartsWith 'B' %} YES {% endif %}"' null' new CSharpNamingConvention()); " is 122.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCSharp_LowerPascalCaseAccepted,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if 'Bob' startsWith 'B' %} YES {% endif %}"' null' new CSharpNamingConvention()); " is 122.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestCSharp_SnakeCaseNotAccepted,The length of the statement  "            Helper.AssertTemplateResult("Liquid error: Unknown operator starts_with"' "{% if 'bob' starts_with 'B' %} YES {% endif %}"' null' new CSharpNamingConvention()); " is 160.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,AssertEvaluatesTrue,The length of the statement  "            Assert.IsTrue(new Condition(left' op' right).Evaluate(_context ?? new Context(CultureInfo.InvariantCulture)' CultureInfo.InvariantCulture)' " is 139.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,AssertEvaluatesFalse,The length of the statement  "            Assert.IsFalse(new Condition(left' op' right).Evaluate(_context ?? new Context(CultureInfo.InvariantCulture)' CultureInfo.InvariantCulture)' " is 140.
Long Statement,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,AssertError,The length of the statement  "            Assert.Throws(errorType' () => new Condition(left' op' right).Evaluate(_context ?? new Context(CultureInfo.InvariantCulture)' CultureInfo.InvariantCulture)); " is 157.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariableNotFoundErrors,The length of the statement  "            Assert.AreEqual(string.Format(Liquid.ResourceManager.GetString("VariableNotFoundException")' "does_not_exist")' template.Errors[0].Message); " is 140.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariableNotFoundFromAnonymousObject,The length of the statement  "            Assert.AreEqual(string.Format(Liquid.ResourceManager.GetString("VariableNotFoundException")' "first.test")' template.Errors[0].Message); " is 136.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariableNotFoundFromAnonymousObject,The length of the statement  "            Assert.AreEqual(string.Format(Liquid.ResourceManager.GetString("VariableNotFoundException")' "second.test")' template.Errors[1].Message); " is 137.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariableNotFoundException,The length of the statement  "            Assert.DoesNotThrow(() => Template.Parse("{{ does_not_exist }}").Render(new RenderParameters(CultureInfo.InvariantCulture) " is 122.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestOverrideGlobalFilter,The length of the statement  "            Assert.AreEqual("Local test"' Template.Parse("{{'test' | notice }}").Render(new RenderParameters(CultureInfo.InvariantCulture) { Filters = new[] { typeof(LocalFilters) } })); " is 174.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDigits,The length of the statement  "            Assert.AreEqual(100.00' _context[string.Format("100{0}00"' System.Globalization.CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator)]); " is 146.
Long Statement,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestNestedDictionaryAsVariable,The length of the statement  "            _context["dynamic"] = Hash.FromDictionary(new Dictionary<string' object> { ["lambda"] = new Dictionary<string' object> { ["name"] = "Hello" } }); " is 145.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScope,The length of the statement  "            Assert.AreEqual("1"' Template.Parse("{{ context.scopes }}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop() }))); " is 131.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScope,The length of the statement  "            Assert.AreEqual("2"' Template.Parse("{%for i in dummy%}{{ context.scopes }}{%endfor%}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1 } }))); " is 180.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScope,The length of the statement  "            Assert.AreEqual("3"' Template.Parse("{%for i in dummy%}{%for i in dummy%}{{ context.scopes }}{%endfor%}{%endfor%}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1 } }))); " is 208.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeThroughProc,The length of the statement  "            Assert.AreEqual("1"' Template.Parse("{{ s }}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' s = (Proc)(c => c["context.scopes"]) }))); " is 156.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeThroughProc,The length of the statement  "            Assert.AreEqual("2"' Template.Parse("{%for i in dummy%}{{ s }}{%endfor%}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' s = (Proc)(c => c["context.scopes"])' dummy = new[] { 1 } }))); " is 205.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeThroughProc,The length of the statement  "            Assert.AreEqual("3"' Template.Parse("{%for i in dummy%}{%for i in dummy%}{{ s }}{%endfor%}{%endfor%}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' s = (Proc)(c => c["context.scopes"])' dummy = new[] { 1 } }))); " is 233.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeWithAssigns,The length of the statement  "            Assert.AreEqual("variable"' Template.Parse("{% assign a = 'variable'%}{{a}}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop() }))); " is 149.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeWithAssigns,The length of the statement  "            Assert.AreEqual("variable"' Template.Parse("{% assign a = 'variable'%}{%for i in dummy%}{{a}}{%endfor%}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1 } }))); " is 198.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeWithAssigns,The length of the statement  "            Assert.AreEqual("test"' Template.Parse("{% assign header_gif = \"test\"%}{{header_gif}}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop() }))); " is 161.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeWithAssigns,The length of the statement  "            Assert.AreEqual("test"' Template.Parse("{% assign header_gif = 'test'%}{{header_gif}}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop() }))); " is 159.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeFromTags,The length of the statement  "            Assert.AreEqual("1"' Template.Parse("{% for i in context.scopes_as_array %}{{i}}{% endfor %}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1 } }))); " is 187.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeFromTags,The length of the statement  "            Assert.AreEqual("12"' Template.Parse("{%for a in dummy%}{% for i in context.scopes_as_array %}{{i}}{% endfor %}{% endfor %}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1 } }))); " is 218.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestScopeFromTags,The length of the statement  "            Assert.AreEqual("123"' Template.Parse("{%for a in dummy%}{%for a in dummy%}{% for i in context.scopes_as_array %}{{i}}{% endfor %}{% endfor %}{% endfor %}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1 } }))); " is 249.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestAccessContextFromDrop,The length of the statement  "            Assert.AreEqual("123"' Template.Parse("{% for a in dummy %}{{ context.loop_pos }}{% endfor %}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1' 2' 3 } }))); " is 194.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestEnumerableDrop,The length of the statement  "            Assert.AreEqual("123"' Template.Parse("{% for c in collection %}{{c}}{% endfor %}").Render(Hash.FromAnonymousObject(new { collection = new EnumerableDrop() }))); " is 161.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestEnumerableDropSize,The length of the statement  "            Assert.AreEqual("3"' Template.Parse("{{collection.size}}").Render(Hash.FromAnonymousObject(new { collection = new EnumerableDrop() }))); " is 136.
Long Statement,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestNullCatchAll,The length of the statement  "            Assert.AreEqual(""' Template.Parse("{{ nulldrop.a_method }}").Render(Hash.FromAnonymousObject(new { nulldrop = new NullDrop() }))); " is 131.
Long Statement,DotLiquid.Tests,FileSystemTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FileSystemTests.cs,TestDefault,The length of the statement  "            Assert.Throws<FileSystemException>(() => new BlankFileSystem().ReadTemplateFile(new Context(CultureInfo.InvariantCulture)' "dummy")); " is 133.
Long Statement,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The length of the statement  "            CollectionAssert.AreEqual(new[] { "alphabetic"' "as"' "expected" }' new Variable("words | sort").Render(_context) as IEnumerable); " is 130.
Long Statement,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestLocalGlobal,The length of the statement  "            Assert.AreEqual(" 1000$ CAD "' Template.Parse("{{1000 | money}}").Render(new RenderParameters(CultureInfo.InvariantCulture) { Filters = new[] { typeof(CanadianMoneyFilter) } })); " is 178.
Long Statement,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestLocalGlobal,The length of the statement  "            Assert.AreEqual(" 1000$ CAD "' Template.Parse("{{1000 | money}}").Render(new RenderParameters(CultureInfo.InvariantCulture) { Filters = new[] { typeof(CanadianMoneyFilter) } })); " is 178.
Long Statement,DotLiquid.Tests,LiquidTypeAttributeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\LiquidTypeAttributeTests.cs,TestLiquidTypeAttributeWithNoAllowedMembers,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new MyLiquidTypeWithNoAllowedMembers() { Name = "worked" } })); " is 133.
Long Statement,DotLiquid.Tests,LiquidTypeAttributeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\LiquidTypeAttributeTests.cs,TestLiquidTypeAttributeWithAllowedMember,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new MyLiquidTypeWithAllowedMember() { Name = "worked" } })); " is 130.
Long Statement,DotLiquid.Tests,LiquidTypeAttributeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\LiquidTypeAttributeTests.cs,TestLiquidTypeAttributeWithGlobalMemberAllowance,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new MyLiquidTypeWithGlobalMemberAllowance() { Name = "worked" } })); " is 138.
Long Statement,DotLiquid.Tests,LiquidTypeAttributeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\LiquidTypeAttributeTests.cs,TestLiquidTypeAttributeWithGlobalMemberAllowanceDoesNotExposeHiddenChildMembers,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new MyLiquidTypeWithGlobalMemberAllowanceAndHiddenChild() { Name = "worked_parent"' Child = new MyLiquidTypeWithNoAllowedMembers() { Name = "worked_child" } } })); " is 233.
Long Statement,DotLiquid.Tests,LiquidTypeAttributeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\LiquidTypeAttributeTests.cs,TestLiquidTypeAttributeWithGlobalMemberAllowanceDoesExposeValidChildMembers,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new MyLiquidTypeWithGlobalMemberAllowanceAndExposedChild() { Name = "worked_parent"' Child = new MyLiquidTypeWithAllowedMember() { Name = "worked_child" } } })); " is 231.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestVariablePiping,The length of the statement  "            Assert.AreEqual(" LOL "' Template.Parse(" {{ car.gm | make_funny }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 202.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestVariablePipingWithInput,The length of the statement  "            Assert.AreEqual(" LOL: bad "' Template.Parse(" {{ car.gm | cite_funny }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 207.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestVariablePipingWithArgs,The length of the statement  "            Assert.AreEqual(" bad :-( "' Template.Parse(" {{ car.gm | add_smiley : ':-(' }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 214.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestVariablePipingWithNoArgs,The length of the statement  "            Assert.AreEqual(" bad :-) "' Template.Parse(" {{ car.gm | add_smiley }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 206.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestMultipleVariablePipingWithArgs,The length of the statement  "            Assert.AreEqual(" bad :-( :-( "' Template.Parse(" {{ car.gm | add_smiley : ':-(' | add_smiley : ':-(' }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 239.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestVariablePipingWithArgs2,The length of the statement  "            Assert.AreEqual(" <span id=\"bar\">bad</span> "' Template.Parse(" {{ car.gm | add_tag : 'span'' 'bar' }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 239.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestVariablePipingWithWithVariableArgs,The length of the statement  "            Assert.AreEqual(" <span id=\"good\">bad</span> "' Template.Parse(" {{ car.gm | add_tag : 'span'' car.bmw }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 242.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestMultiplePipings,The length of the statement  "            Assert.AreEqual(" <p>LOL: bmw</p> "' Template.Parse(" {{ best_cars | cite_funny | paragraph }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 229.
Long Statement,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,TestLinkTo,The length of the statement  "            Assert.AreEqual(" <a href=\"http://typo.leetsoft.com\">Typo</a> "' Template.Parse(" {{ 'Typo' | link_to: 'http://typo.leetsoft.com' }} ").Render(new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = _assigns' Filters = new[] { typeof(FunnyFilter) } })); " is 269.
Long Statement,DotLiquid.Tests,ParsingQuirksTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ParsingQuirksTests.cs,TestMeaninglessParens,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if a == 'foo' or (b == 'bar' and c == 'baz') or false %} YES {% endif %}"' assigns); " is 125.
Long Statement,DotLiquid.Tests,RegexpTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\RegexpTests.cs,TestAllRegexesAreCompiled,The length of the statement  "                foreach (var t in parent.GetTypeInfo().GetFields(BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)) " is 141.
Long Statement,DotLiquid.Tests,RegexpTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\RegexpTests.cs,TestTags,The length of the statement  "            CollectionAssert.AreEqual(new[] { "<style"' "class=\"hello\">"' "</style>" }' Run("<style class=\"hello\">' </style>"' Liquid.QuotedFragment)); " is 143.
Long Statement,DotLiquid.Tests,RegexpTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\RegexpTests.cs,TestQuotedWordsInTheMiddle,The length of the statement  "            CollectionAssert.AreEqual(new[] { "arg1"' "arg2"' "\"arg 3\""' "arg4" }' Run("arg1 arg2 \"arg 3\" arg4"' Liquid.QuotedFragment)); " is 129.
Long Statement,DotLiquid.Tests,RegexpTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\RegexpTests.cs,TestVariableParser,The length of the statement  "            CollectionAssert.AreEqual(new[] { "var"' "[method]"' "[0]"' "method" }' Run("var[method][0].method"' Liquid.VariableParser)); " is 125.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTruncateWords,The length of the statement  "            Assert.AreEqual("Two small (13&#8221; x 5.5&#8221; x 10&#8221; high) baskets fit inside one large basket (13&#8221;..."' StandardFilters.TruncateWords("Two small (13&#8221; x 5.5&#8221; x 10&#8221; high) baskets fit inside one large basket (13&#8221; x 16&#8221; x 10.5&#8221; high) with cover."' 15)); " is 302.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The length of the statement  "                        Hash.FromAnonymousObject(new { foo = Hash.FromAnonymousObject(new { bar = "a" }) })' Hash.FromAnonymousObject(new { foo = Hash.FromAnonymousObject(new { bar = "b" }) })' " is 169.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The length of the statement  "            Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty)); " is 135.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The length of the statement  "            Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null)); " is 127.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The length of the statement  "            Assert.AreEqual(new DateTime(2006' 7' 5).ToString("MM/dd/yyyy")' StandardFilters.Date("2006-07-05 10:00:00"' "MM/dd/yyyy")); " is 124.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The length of the statement  "            Assert.AreEqual(new DateTime(2004' 7' 16).ToString("MM/dd/yyyy")' StandardFilters.Date("Fri Jul 16 2004 01:00:00"' "MM/dd/yyyy")); " is 130.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The length of the statement  "            Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty)); " is 135.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The length of the statement  "            Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null)); " is 127.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStripWindowsNewlines,The length of the statement  "            Helper.AssertTemplateResult("abc"' "{{ source | strip_newlines }}"' Hash.FromAnonymousObject(new { source = "a\r\nb\r\nc" })); " is 126.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStripWindowsNewlines,The length of the statement  "            Helper.AssertTemplateResult("ab"' "{{ source | strip_newlines }}"' Hash.FromAnonymousObject(new { source = "a\r\n\r\n\r\nb" })); " is 128.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStripUnixNewlines,The length of the statement  "            Helper.AssertTemplateResult("abc"' "{{ source | strip_newlines }}"' Hash.FromAnonymousObject(new { source = "a\nb\nc" })); " is 122.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStripUnixNewlines,The length of the statement  "            Helper.AssertTemplateResult("ab"' "{{ source | strip_newlines }}"' Hash.FromAnonymousObject(new { source = "a\n\n\nb" })); " is 122.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMinus,The length of the statement  "                Helper.AssertTemplateResult("4"' "{{ input | minus:operand }}"' Hash.FromAnonymousObject(new { input = 5' operand = 1 })); " is 122.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestUniq,The length of the statement  "			CollectionAssert.AreEqual(new[] { "ants"' "bugs"' "bees" }' StandardFilters.Uniq(new string[] { "ants"' "bugs"' "bees"' "bugs"' "ants" })); " is 139.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCompact,The length of the statement  "			CollectionAssert.AreEqual(new[] { "business"' "celebrities"' "lifestyle"' "sports"' "technology" }' StandardFilters.Compact(new string[] { "business"' null' "celebrities"' null' null' "lifestyle"' "sports"' null' "technology"' null})); " is 235.
Long Statement,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCompact,The length of the statement  "            CollectionAssert.AreEqual(new[] { "business"' "celebrities"}' StandardFilters.Compact(new string[] { "business"' "celebrities" })); " is 131.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestVarAndStringEqual,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if var == 'hello there!' %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { var = "hello there!" }))); " is 177.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestVarAndStringAreEqualBackwards,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if 'hello there!' == var %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { var = "hello there!" }))); " is 177.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestIsCollectionEmpty,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if array == empty %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { array = new object[] { } }))); " is 174.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestIsNotCollectionEmpty,The length of the statement  "            Assert.AreEqual("  false  "' Template.Parse(" {% if array == empty %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }))); " is 176.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestNil,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if var == nil %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { var = (object) null }))); " is 165.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestNil,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if var == null %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { var = (object) null }))); " is 166.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestNotNil,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if var != nil %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { var = 1 }))); " is 153.
Long Statement,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestNotNil,The length of the statement  "            Assert.AreEqual("  true  "' Template.Parse(" {% if var != null %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { var = 1 }))); " is 154.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestTokenizeVariables,The length of the statement  "            CollectionAssert.AreEqual(new[] { " "' "{{funk}}"' " "' "{{so}}"' " "' "{{brother}}"' " " }' Template.Tokenize(" {{funk}} {{so}} {{brother}} ")); " is 145.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestTokenizeBlocks,The length of the statement  "            CollectionAssert.AreEqual(new[] { " "' "{%comment%}"' " "' "{%endcomment%}"' " " }' Template.Tokenize(" {%comment%} {%endcomment%} ")); " is 135.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestTokenizeBlocks,The length of the statement  "            CollectionAssert.AreEqual(new[] { "  "' "{% comment %}"' " "' "{% endcomment %}"' " " }' Template.Tokenize("  {% comment %} {% endcomment %} ")); " is 145.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestInstanceAssignsPersistOnSameTemplateObjectBetweenParses,The length of the statement  "            Assert.AreEqual("from instance assigns"' t.ParseInternal("{% assign foo = 'from instance assigns' %}{{ foo }}").Render()); " is 122.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestThreadSafeInstanceAssignsNotPersistOnSameTemplateObjectBetweenParses,The length of the statement  "            Assert.AreEqual("from instance assigns"' t.ParseInternal("{% assign foo = 'from instance assigns' %}{{ foo }}").Render()); " is 122.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestCustomAssignsDoNotPersistOnSameTemplate,The length of the statement  "            Assert.AreEqual("from custom assigns"' t.ParseInternal("{{ foo }}").Render(Hash.FromAnonymousObject(new { foo = "from custom assigns" }))); " is 139.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestCustomAssignsSquashInstanceAssigns,The length of the statement  "            Assert.AreEqual("from instance assigns"' t.ParseInternal("{% assign foo = 'from instance assigns' %}{{ foo }}").Render()); " is 122.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestCustomAssignsSquashInstanceAssigns,The length of the statement  "            Assert.AreEqual("from custom assigns"' t.ParseInternal("{{ foo }}").Render(Hash.FromAnonymousObject(new { foo = "from custom assigns" }))); " is 139.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestRenderToStreamWriter,The length of the statement  "                template.Render(writer' new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = Hash.FromAnonymousObject(new { test = "worked" }) }); " is 147.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestRenderToStream,The length of the statement  "            template.Render(output' new RenderParameters(CultureInfo.InvariantCulture) { LocalVariables = Hash.FromAnonymousObject(new { test = "worked" }) }); " is 147.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestNestedRegisterRegisterSafeTypeWithValueTypeTransformer,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new NestedMySimpleType() { Nested = inner' Name = "Bar" } })); " is 132.
Long Statement,DotLiquid.Tests,TemplateTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\TemplateTests.cs,TestRegisterGenericInterface,The length of the statement  "            var output = template.Render(Hash.FromAnonymousObject(new { context = new MyGenericImpl<string> { Value = "worked" } })); " is 121.
Long Statement,DotLiquid.Tests,VariableResolutionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\VariableResolutionTests.cs,TestSimpleWithWhitespaces,The length of the statement  "            Assert.AreEqual("  worked wonderfully  "' template.Render(Hash.FromAnonymousObject(new { test = "worked wonderfully" }))); " is 122.
Long Statement,DotLiquid.Tests,VariableTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\VariableTests.cs,TestFilters,The length of the statement  "            AssertFiltersAreEqual(new[] { new Variable.Filter("textileze"' new string[] { })' new Variable.Filter("paragraph"' new string[] { }) }' var.Filters); " is 149.
Long Statement,DotLiquid.Tests,VariableTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\VariableTests.cs,TestFilters,The length of the statement  "            AssertFiltersAreEqual(new[] { new Variable.Filter("things"' new[] { "\"%Y' okay?\""' "'the other one'" }) }' var.Filters); " is 122.
Long Statement,DotLiquid.Tests,VariableTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\VariableTests.cs,TestFiltersWithoutWhitespace,The length of the statement  "            AssertFiltersAreEqual(new[] { new Variable.Filter("textileze"' new string[] { })' new Variable.Filter("paragraph"' new string[] { }) }' var.Filters); " is 149.
Long Statement,DotLiquid.Tests,VariableTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\VariableTests.cs,TestFiltersWithoutWhitespace,The length of the statement  "            AssertFiltersAreEqual(new[] { new Variable.Filter("textileze"' new string[] { })' new Variable.Filter("paragraph"' new string[] { }) }' var.Filters); " is 149.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIf,The length of the statement  "            Helper.AssertTemplateResult("  this text should go into the output  "' " {% if true %} this text should go into the output {% endif %} "); " is 138.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfOr,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if a or b %} YES {% endif %}"' Hash.FromAnonymousObject(new { a = true' b = true })); " is 126.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfOr,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if a or b %} YES {% endif %}"' Hash.FromAnonymousObject(new { a = true' b = false })); " is 127.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfOr,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if a or b %} YES {% endif %}"' Hash.FromAnonymousObject(new { a = false' b = true })); " is 127.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfOr,The length of the statement  "            Helper.AssertTemplateResult(""' "{% if a or b %} YES {% endif %}"' Hash.FromAnonymousObject(new { a = false' b = false })); " is 123.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestComparisonOfStringsContainingAndOrOr,The length of the statement  "                const string awfulMarkup = "a == 'and' and b == 'or' and c == 'foo and bar' and d == 'bar or baz' and e == 'foo' and foo and bar"; " is 130.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestComparisonOfStringsContainingAndOrOr,The length of the statement  "                Hash assigns = Hash.FromAnonymousObject(new { a = "and"' b = "or"' c = "foo and bar"' d = "bar or baz"' e = "foo"' foo = true' bar = true }); " is 141.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfFromVariable,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if var %} YES {% endif %}"' Hash.FromAnonymousObject(new { var = new Hash() })); " is 121.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfFromVariable,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if var %} YES {% endif %}"' Hash.FromAnonymousObject(new { var = new object[] { } })); " is 127.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfFromVariable,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if var %} NO {% else %} YES {% endif %}"' Hash.FromAnonymousObject(new { var = false })); " is 130.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfFromVariable,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if var %} NO {% else %} YES {% endif %}"' Hash.FromAnonymousObject(new { var = nullValue })); " is 134.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfFromVariable,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if var %} YES {% else %} NO {% endif %}"' Hash.FromAnonymousObject(new { var = true })); " is 129.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfFromVariable,The length of the statement  "            Helper.AssertTemplateResult(" YES "' "{% if 'foo' %} YES {% else %} NO {% endif %}"' Hash.FromAnonymousObject(new { var = "text" })); " is 133.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfWithCustomCondition,The length of the statement  "            Condition.Operators["contains"] = (left' right) => (left is IList) ? ((IList) left).Contains(right) : ((left is string) ? ((string) left).Contains((string) right) : false); " is 172.
Long Statement,DotLiquid.Tests.Tags,IfElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IfElseTests.cs,TestIfMaxConditions,The length of the statement  "            var se = Assert.Throws<SyntaxException>(() => Helper.AssertTemplateResult(""' "{% if 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 and 1 %}too many conditions{% endif %}")); " is 3123.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagMustNotBeConsideredError,The length of the statement  "            Assert.DoesNotThrow(() => Template.Parse("{% include 'product_template' %}").Render(new RenderParameters(CultureInfo.InvariantCulture) { RethrowErrors = true })); " is 162.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagLooksForFileSystemInRegistersFirst,The length of the statement  "            Assert.AreEqual("from OtherFileSystem"' Template.Parse("{% include 'pick_a_source' %}").Render(new RenderParameters(CultureInfo.InvariantCulture) { Registers = Hash.FromAnonymousObject(new { file_system = new OtherFileSystem() }) })); " is 234.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagWith,The length of the statement  "            Assert.AreEqual("Product: Draft 151cm "' Template.Parse("{% include 'product' with products[0] %}").Render(Hash.FromAnonymousObject(new { products = new[] { Hash.FromAnonymousObject(new { title = "Draft 151cm" })' Hash.FromAnonymousObject(new { title = "Element 155cm" }) } }))); " is 279.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagWithDefaultName,The length of the statement  "            Assert.AreEqual("Product: Draft 151cm "' Template.Parse("{% include 'product' %}").Render(Hash.FromAnonymousObject(new { product = Hash.FromAnonymousObject(new { title = "Draft 151cm" }) }))); " is 192.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagFor,The length of the statement  "            Assert.AreEqual("Product: Draft 151cm Product: Element 155cm "' Template.Parse("{% include 'product' for products %}").Render(Hash.FromAnonymousObject(new { products = new[] { Hash.FromAnonymousObject(new { title = "Draft 151cm" })' Hash.FromAnonymousObject(new { title = "Element 155cm" }) } }))); " is 298.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagWithMultipleLocalVariables,The length of the statement  "            Assert.AreEqual("Locale: test123 test321"' Template.Parse("{% include 'locale_variables' echo1: 'test123'' echo2: 'test321' %}").Render()); " is 139.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeTagWithMultipleLocalVariablesFromContext,The length of the statement  "                Template.Parse("{% include 'locale_variables' echo1: echo1' echo2: more_echos.echo2 %}").Render(Hash.FromAnonymousObject(new { echo1 = "test123"' more_echos = Hash.FromAnonymousObject(new { echo2 = "test321" }) }))); " is 216.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestNestedIncludeTagWithVariable,The length of the statement  "                Template.Parse("{% include 'nested_product_template' with product %}").Render(Hash.FromAnonymousObject(new { product = Hash.FromAnonymousObject(new { title = "Draft 151cm" }) }))); " is 180.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestNestedIncludeTagWithVariable,The length of the statement  "                Template.Parse("{% include 'nested_product_template' for products %}").Render(Hash.FromAnonymousObject(new { products = new[] { Hash.FromAnonymousObject(new { title = "Draft 151cm" })' Hash.FromAnonymousObject(new { title = "Element 155cm" }) } }))); " is 250.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestRecursivelyIncludedTemplateDoesNotProductEndlessLoop,The length of the statement  "            Assert.Throws<StackLevelException>(() => Template.Parse("{% include 'loop' %}").Render(new RenderParameters(CultureInfo.InvariantCulture) { RethrowErrors = true })); " is 165.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestDynamicallyChosenTemplate,The length of the statement  "            Assert.AreEqual("Test123"' Template.Parse("{% include template %}").Render(Hash.FromAnonymousObject(new { template = "Test123" }))); " is 132.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestDynamicallyChosenTemplate,The length of the statement  "            Assert.AreEqual("Test321"' Template.Parse("{% include template %}").Render(Hash.FromAnonymousObject(new { template = "Test321" }))); " is 132.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestDynamicallyChosenTemplate,The length of the statement  "            Assert.AreEqual("Product: Draft 151cm "' Template.Parse("{% include template for product %}").Render(Hash.FromAnonymousObject(new { template = "product"' product = Hash.FromAnonymousObject(new { title = "Draft 151cm" }) }))); " is 225.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestUndefinedTemplateVariableWithLocalFileSystem,The length of the statement  "            Assert.Throws<FileSystemException>(() => Template.Parse(" hello {% include notthere %} world ").Render(new RenderParameters(CultureInfo.InvariantCulture) " is 153.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestMissingTemplateWithLocalFileSystem,The length of the statement  "            Assert.Throws<FileSystemException>(() => Template.Parse(" hello {% include 'doesnotexist' %} world ").Render(new RenderParameters(CultureInfo.InvariantCulture) " is 159.
Long Statement,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeFromTemplateFileSystem,The length of the statement  "                Assert.AreEqual("Product: Draft 151cm "' Template.Parse("{% include 'product' with products[0] %}").Render(Hash.FromAnonymousObject(new { products = new[] { Hash.FromAnonymousObject(new { title = "Draft 151cm" })' Hash.FromAnonymousObject(new { title = "Element 155cm" }) } }))); " is 279.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The length of the statement  "            Helper.AssertTemplateResult("yoyo"' "{%for item in array%}yo{%endfor%}"' Hash.FromAnonymousObject(new { array = new[] { 1' 2 } })); " is 131.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The length of the statement  "            Helper.AssertTemplateResult(" yo "' "{%for item in array%} yo {%endfor%}"' Hash.FromAnonymousObject(new { array = new[] { 1 } })); " is 130.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The length of the statement  "            Helper.AssertTemplateResult(""' "{%for item in array%}{%endfor%}"' Hash.FromAnonymousObject(new { array = new[] { 1' 2 } })); " is 125.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The length of the statement  "            Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) }); " is 138.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The length of the statement  "            Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) }); " is 138.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The length of the statement  "            Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) }); " is 138.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The length of the statement  "            Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) }); " is 138.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestAssignWithColonAndSpaces,The length of the statement  "            Hash assigns = Hash.FromAnonymousObject(new { var = new Dictionary<string' object> { { "a:b c"' new { paged = 1 } } } }); " is 121.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaptureDetectsBadSyntax,The length of the statement  "                Helper.AssertTemplateResult("content foo content foo "' "{{ var2 }}{% capture %}{{ var }} foo {% endcapture %}{{ var2 }}{{ var2 }}"' Hash.FromAnonymousObject(new { var = "content" }))); " is 185.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestAssignFromCase,The length of the statement  "            const string code = "{% case collection.handle %}{% when 'menswear-jackets' %}{% assign ptitle = 'menswear' %}{% when 'menswear-t-shirts' %}{% assign ptitle = 'menswear' %}{% else %}{% assign ptitle = 'womenswear' %}{% endcase %}{{ ptitle }}"; " is 243.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestAssignFromCase,The length of the statement  "            Assert.AreEqual("menswear"' template.Render(Hash.FromAnonymousObject(new { collection = new { handle = "menswear-jackets" } }))); " is 129.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestAssignFromCase,The length of the statement  "            Assert.AreEqual("menswear"' template.Render(Hash.FromAnonymousObject(new { collection = new { handle = "menswear-t-shirts" } }))); " is 130.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestAssignIsGlobal,The length of the statement  "            Assert.AreEqual("variable"' Template.Parse("{%for i in (1..2) %}{% assign a = 'variable'%}{% endfor %}{{a}}").Render()); " is 120.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseDetectsBadSyntax,The length of the statement  "            Assert.Throws<SyntaxException>(() => Helper.AssertTemplateResult(""' "{% case false %}{% when %}true{% endcase %}"' new Hash())); " is 129.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseDetectsBadSyntax,The length of the statement  "            Assert.Throws<SyntaxException>(() => Helper.AssertTemplateResult(""' "{% case false %}{% huh %}true{% endcase %}"' new Hash())); " is 128.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestMultipleNamedCycles,The length of the statement  "                "{%cycle 1: 'one'' 'two' %} {%cycle 2: 'one'' 'two' %} {%cycle 1: 'one'' 'two' %} {%cycle 2: 'one'' 'two' %} {%cycle 1: 'one'' 'two' %} {%cycle 2: 'one'' 'two' %}"); " is 165.
Long Statement,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestMultipleNamedCyclesWithNamesFromContext,The length of the statement  "                "{%cycle var1: 'one'' 'two' %} {%cycle var2: 'one'' 'two' %} {%cycle var1: 'one'' 'two' %} {%cycle var2: 'one'' 'two' %} {%cycle var1: 'one'' 'two' %} {%cycle var2: 'one'' 'two' %}"' " is 182.
Long Statement,DotLiquid.Tests.Tags,UnlessElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\UnlessElseTests.cs,TestUnless,The length of the statement  "            Helper.AssertTemplateResult("  this text should go into the output  "' " {% unless false %} this text should go into the output {% endunless %} "); " is 147.
Long Statement,DotLiquid.Tests.Tags,UnlessElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\UnlessElseTests.cs,TestUnless,The length of the statement  "            Helper.AssertTemplateResult("  you rock ?"' "{% unless true %} you suck {% endunless %} {% unless false %} you rock {% endunless %}?"); " is 135.
Long Statement,DotLiquid.Tests.Tags,UnlessElseTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\UnlessElseTests.cs,TestUnlessElseInLoop,The length of the statement  "            Helper.AssertTemplateResult(" TRUE  2  3 "' "{% for i in choices %}{% unless i %} {{ forloop.index }} {% else %} TRUE {% endunless %}{% endfor %}"' " is 147.
Long Statement,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTable,The length of the statement  "                string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 4 </td><td class=\"col2\"> 5 </td><td class=\"col3\"> 6 </td></tr>{0}"' Environment.NewLine)' " is 258.
Long Statement,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTableWithDifferentCols,The length of the statement  "                string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td><td class=\"col4\"> 4 </td><td class=\"col5\"> 5 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 6 </td></tr>{0}"' Environment.NewLine)' " is 258.
Long Statement,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlColCounter,The length of the statement  "                string.Format("<tr class=\"row1\">{0}<td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row3\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}"' Environment.NewLine)' " is 273.
Long Statement,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlOffsetLimit,The length of the statement  "                string.Format("<tr class=\"row1\">{0}<td class=\"col1\">2</td><td class=\"col2\">3</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">4</td></tr>{0}"' Environment.NewLine)' " is 171.
Magic Number,DotLiquid.Tests,BlockTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\BlockTests.cs,TestVariableBeginning,The following statement contains a magic number: Assert.AreEqual(2' template.Root.NodeList.Count);
Magic Number,DotLiquid.Tests,BlockTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\BlockTests.cs,TestVariableEnd,The following statement contains a magic number: Assert.AreEqual(2' template.Root.NodeList.Count);
Magic Number,DotLiquid.Tests,BlockTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\BlockTests.cs,TestVariableMiddle,The following statement contains a magic number: Assert.AreEqual(3' template.Root.NodeList.Count);
Magic Number,DotLiquid.Tests,BlockTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\BlockTests.cs,TestVariableManyEmbeddedFragments,The following statement contains a magic number: Assert.AreEqual(7' template.Root.NodeList.Count);
Magic Number,DotLiquid.Tests,BlockTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\BlockTests.cs,TestWithBlock,The following statement contains a magic number: Assert.AreEqual(3' template.Root.NodeList.Count);
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestContainsWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestContainsWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestContainsWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestContainsWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestStartsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestStartsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestStartsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestStartsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestEndsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestEndsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestEndsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestEndsWithWorksOnArrays,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ConditionTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ConditionTests.cs,TestLessThanDecimal,The following statement contains a magic number: var model = new { value = new decimal(-10.5) };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: _context["num"] = 5;
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: Assert.AreEqual(5' _context["num"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: _context["decimal"] = 5m;
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: Assert.AreEqual(5m' _context["decimal"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: _context["float"] = 5.0f;
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: Assert.AreEqual(5.0f' _context["float"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: _context["double"] = 5.0;
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: Assert.AreEqual(5.0' _context["double"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: DateTimeOffset offset = new DateTimeOffset(2013' 9' 10' 0' 10' 32' new TimeSpan(1' 0' 0));
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: DateTimeOffset offset = new DateTimeOffset(2013' 9' 10' 0' 10' 32' new TimeSpan(1' 0' 0));
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: DateTimeOffset offset = new DateTimeOffset(2013' 9' 10' 0' 10' 32' new TimeSpan(1' 0' 0));
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: DateTimeOffset offset = new DateTimeOffset(2013' 9' 10' 0' 10' 32' new TimeSpan(1' 0' 0));
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariables,The following statement contains a magic number: DateTimeOffset offset = new DateTimeOffset(2013' 9' 10' 0' 10' 32' new TimeSpan(1' 0' 0));
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestVariableNotFoundFromAnonymousObject,The following statement contains a magic number: Assert.AreEqual(2' template.Errors.Count);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new[] { 1' 2' 3' 4 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new[] { 1' 2' 3' 4 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new[] { 1' 2' 3' 4 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: Assert.AreEqual(4' _context["numbers.size"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<int' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<int' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<int' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<int' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<int' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<int' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: Assert.AreEqual(4' _context["numbers.size"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: _context["numbers"] = new Dictionary<object' int>              {                  { 1' 1 }'                  { 2' 2 }'                  { 3' 3 }'                  { 4' 4 }'                  { "size"' 1000 }              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLengthQuery,The following statement contains a magic number: Assert.AreEqual(1000' _context["numbers.size"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDigits,The following statement contains a magic number: Assert.AreEqual(100' _context["100"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDigits,The following statement contains a magic number: Assert.AreEqual(100.00' _context[string.Format("100{0}00"' System.Globalization.CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator)]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: Assert.AreEqual(2' _context["test[1]"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: Assert.AreEqual(3' _context["test[2]"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: Assert.AreEqual(4' _context["test[3]"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayNotation,The following statement contains a magic number: Assert.AreEqual(5' _context["test[4]"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRecursiveArrayNotation,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRecursiveArrayNotation,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRecursiveArrayNotation,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRecursiveArrayNotation,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: Assert.AreEqual(5' _context["test.last"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: _context["test"] = new { test = new[] { 1' 2' 3' 4' 5 } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestTryFirst,The following statement contains a magic number: Assert.AreEqual(5' _context["test.test.last"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestAccessHashesWithHashNotation,The following statement contains a magic number: _context["products"] = new { count = 5' tags = new[] { "deepsnow"' "freestyle" } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestAccessHashesWithHashNotation,The following statement contains a magic number: Assert.AreEqual(5' _context["products[\"count\"]"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestAccessHashesWithHashAccessVariables,The following statement contains a magic number: _context["products"] = new { count = 5' tags = new[] { "deepsnow"' "freestyle" } };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestHashNotationOnlyForHashAccess,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestHashNotationOnlyForHashAccess,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestHashNotationOnlyForHashAccess,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestHashNotationOnlyForHashAccess,The following statement contains a magic number: _context["array"] = new[] { 1' 2' 3' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestCents,The following statement contains a magic number: Assert.AreEqual(100' _context["cents"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestNestedCents,The following statement contains a magic number: Assert.AreEqual(100' _context["cents.amount"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestNestedCents,The following statement contains a magic number: Assert.AreEqual(100' _context["cents.cents.amount"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestCentsThroughDrop,The following statement contains a magic number: Assert.AreEqual(100' _context["cents.amount"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestNestedCentsThroughDrop,The following statement contains a magic number: Assert.AreEqual(100' _context["vars.cents.amount"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRanges,The following statement contains a magic number: _context.Merge(Hash.FromAnonymousObject(new { test = 5 }));
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRanges,The following statement contains a magic number: CollectionAssert.AreEqual(Enumerable.Range(1' 5)' _context["(1..5)"] as IEnumerable);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRanges,The following statement contains a magic number: CollectionAssert.AreEqual(Enumerable.Range(1' 5)' _context["(1..test)"] as IEnumerable);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestRanges,The following statement contains a magic number: CollectionAssert.AreEqual(Enumerable.Range(5' 1)' _context["(test..test)"] as IEnumerable);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestCentsThroughDropNestedly,The following statement contains a magic number: Assert.AreEqual(100' _context["cents.cents.amount"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestCentsThroughDropNestedly,The following statement contains a magic number: Assert.AreEqual(100' _context["cents.cents.cents.amount"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDropWithVariableCalledOnlyOnce,The following statement contains a magic number: Assert.AreEqual(2' _context["counter.count"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDropWithVariableCalledOnlyOnce,The following statement contains a magic number: Assert.AreEqual(3' _context["counter.count"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDropWithKeyOnlyCalledOnce,The following statement contains a magic number: Assert.AreEqual(2' _context["counter['count']"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestDropWithKeyOnlyCalledOnce,The following statement contains a magic number: Assert.AreEqual(3' _context["counter['count']"]);
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayContainingLambdaAsVariable,The following statement contains a magic number: _context["dynamic"] = new object[] { 1' 2' (Proc) (c => "Hello")' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayContainingLambdaAsVariable,The following statement contains a magic number: _context["dynamic"] = new object[] { 1' 2' (Proc) (c => "Hello")' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestArrayContainingLambdaAsVariable,The following statement contains a magic number: _context["dynamic"] = new object[] { 1' 2' (Proc) (c => "Hello")' 4' 5 };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLambdaInArrayIsCalledOnce,The following statement contains a magic number: _context["callcount"] = new object[]              { 1' 2' (Proc) (c =>              {                  ++global;                  return global.ToString();              })' 4' 5              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLambdaInArrayIsCalledOnce,The following statement contains a magic number: _context["callcount"] = new object[]              { 1' 2' (Proc) (c =>              {                  ++global;                  return global.ToString();              })' 4' 5              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestLambdaInArrayIsCalledOnce,The following statement contains a magic number: _context["callcount"] = new object[]              { 1' 2' (Proc) (c =>              {                  ++global;                  return global.ToString();              })' 4' 5              };
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestAccessToContextFromProc,The following statement contains a magic number: _context.Registers["magic"] = 345392;
Magic Number,DotLiquid.Tests,ContextTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,TestAccessToContextFromProc,The following statement contains a magic number: Assert.AreEqual(345392' _context["magic"]);
Magic Number,DotLiquid.Tests,HundredCents,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ContextTests.cs,ToLiquid,The following statement contains a magic number: return 100;
Magic Number,DotLiquid.Tests,CustomIndexableTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\CustomIndexableTests.cs,TestVirtualListLoop,The following statement contains a magic number: string output = Template.Parse("{%for item in list%}{{ item }} {%endfor%}")                  .Render(Hash.FromAnonymousObject(new {list = new VirtualList(1' "Second"' 3)}));
Magic Number,DotLiquid.Tests,CustomIndexableTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\CustomIndexableTests.cs,TestVirtualListIndex,The following statement contains a magic number: string output = Template.Parse("1: {{ list[0] }}' 2: {{ list[1] }}' 3: {{ list[2] }}")                  .Render(Hash.FromAnonymousObject(new {list = new VirtualList(1' "Second"' 3)}));
Magic Number,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestAccessContextFromDrop,The following statement contains a magic number: Assert.AreEqual("123"' Template.Parse("{% for a in dummy %}{{ context.loop_pos }}{% endfor %}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1' 2' 3 } })));
Magic Number,DotLiquid.Tests,DropTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,TestAccessContextFromDrop,The following statement contains a magic number: Assert.AreEqual("123"' Template.Parse("{% for a in dummy %}{{ context.loop_pos }}{% endfor %}").Render(Hash.FromAnonymousObject(new { context = new ContextDrop()' dummy = new[] { 1' 2' 3 } })));
Magic Number,DotLiquid.Tests,EnumerableDrop,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,GetEnumerator,The following statement contains a magic number: yield return 2;
Magic Number,DotLiquid.Tests,EnumerableDrop,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\DropTests.cs,GetEnumerator,The following statement contains a magic number: yield return 3;
Magic Number,DotLiquid.Tests,ExceptionHandlingTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ExceptionHandlingTests.cs,TestMaximumIterationsExceededError,The following statement contains a magic number: Assert.Throws<MaximumIterationsExceededException>(() =>              {                  template.Render(new RenderParameters(CultureInfo.InvariantCulture)                  {                      MaxIterations = 50                  });              });
Magic Number,DotLiquid.Tests,ExceptionHandlingTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ExceptionHandlingTests.cs,TestTimeoutError,The following statement contains a magic number: Assert.Throws<System.TimeoutException>(() =>              {                  template.Render(new RenderParameters(CultureInfo.InvariantCulture)                  {                      Timeout = 100 //ms                  });              });
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestLocalFilter,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestUnderscoreInFilterName,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestFilterWithNumericArgument,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestFilterWithNegativeArgument,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestFilterWithDefaultArgument,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestFilterWithTwoArguments,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSecondFilterOverwritesFirst,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSize,The following statement contains a magic number: Assert.AreEqual(4' new Variable("var | size").Render(_context));
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestJoin,The following statement contains a magic number: _context["var"] = new[] { 1' 2' 3' 4 };
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestJoin,The following statement contains a magic number: _context["var"] = new[] { 1' 2' 3' 4 };
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestJoin,The following statement contains a magic number: _context["var"] = new[] { 1' 2' 3' 4 };
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: _context["value"] = 3;
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: _context["numbers"] = new[] { 2' 1' 4' 3 };
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: _context["numbers"] = new[] { 2' 1' 4' 3 };
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: _context["numbers"] = new[] { 2' 1' 4' 3 };
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' new Variable("numbers | sort").Render(_context) as IEnumerable);
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' new Variable("numbers | sort").Render(_context) as IEnumerable);
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' new Variable("numbers | sort").Render(_context) as IEnumerable);
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 3 }' new Variable("value | sort").Render(_context) as IEnumerable);
Magic Number,DotLiquid.Tests,FilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FilterTests.cs,TestContextFilter,The following statement contains a magic number: _context["var"] = 1000;
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingFunctions,The following statement contains a magic number: _context["var"] = 2;
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingFunctions,The following statement contains a magic number: _context.AddFilter<int' string>("AddTwo"' i => (i + 2).ToString(CultureInfo.InvariantCulture));
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingAnonimousFunctionWithClosure,The following statement contains a magic number: _context["var"] = 2;
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingAnonimousFunctionWithClosure,The following statement contains a magic number: int x = 2;
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingAnonimousFunctionWithClosure,The following statement contains a magic number: Assert.That(x' Is.EqualTo(4));
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingMethodInfo,The following statement contains a magic number: _context["var"] = 2;
Magic Number,DotLiquid.Tests,FunctionFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\FunctionFilterTests.cs,AddingMethodInfo,The following statement contains a magic number: _context.AddFilter<int' string>("AddTwo"' i => (i + 2).ToString(CultureInfo.InvariantCulture));
Magic Number,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,SetUp,The following statement contains a magic number: _assigns = Hash.FromAnonymousObject(new              {                  best_cars = "bmw"'                  car = Hash.FromAnonymousObject(new { bmw = "good"' gm = "bad" })'                  number = 3.145              });
Magic Number,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,ParsingWithInvariantCultureShouldWork,The following statement contains a magic number: Assert.AreEqual(2.5'result);
Magic Number,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,ParsingWithExplicitCultureShouldWork,The following statement contains a magic number: Assert.AreEqual(25' result);
Magic Number,DotLiquid.Tests,OutputTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\OutputTests.cs,ParsingWithDefaultCultureShouldWork,The following statement contains a magic number: Assert.AreEqual(25'result);
Magic Number,DotLiquid.Tests,ParallelTest,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ParallelTest.cs,TestCachedTemplateRender,The following statement contains a magic number: var parallelOptions = new ParallelOptions { MaxDegreeOfParallelism = 30 };
Magic Number,DotLiquid.Tests,ParallelTest,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\ParallelTest.cs,TestCachedTemplateRender,The following statement contains a magic number: Parallel.For(0' 10000' parallelOptions' (x) => Assert.AreEqual("from instance assigns"' template.Render()));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSize,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.Size(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSize,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.Size(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSize,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.Size(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTruncate,The following statement contains a magic number: Assert.AreEqual("1234..."' StandardFilters.Truncate("1234567890"' 7));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTruncate,The following statement contains a magic number: Assert.AreEqual("1234567890"' StandardFilters.Truncate("1234567890"' 20));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTruncateWords,The following statement contains a magic number: Assert.AreEqual("one two three"' StandardFilters.TruncateWords("one two three"' 4));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTruncateWords,The following statement contains a magic number: Assert.AreEqual("one two..."' StandardFilters.TruncateWords("one two three"' 2));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTruncateWords,The following statement contains a magic number: Assert.AreEqual("Two small (13&#8221; x 5.5&#8221; x 10&#8221; high) baskets fit inside one large basket (13&#8221;..."' StandardFilters.TruncateWords("Two small (13&#8221; x 5.5&#8221; x 10&#8221; high) baskets fit inside one large basket (13&#8221; x 16&#8221; x 10.5&#8221; high) with cover."' 15));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual(null' StandardFilters.Slice(""' 10));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("abc"' StandardFilters.Slice("abcdefg"' 0' 3));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("bcd"' StandardFilters.Slice("abcdefg"' 1' 3));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("efg"' StandardFilters.Slice("abcdefg"' -3' 3));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("efg"' StandardFilters.Slice("abcdefg"' -3' 3));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("efg"' StandardFilters.Slice("abcdefg"' -3' 30));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("efg"' StandardFilters.Slice("abcdefg"' -3' 30));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("efg"' StandardFilters.Slice("abcdefg"' 4' 30));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("efg"' StandardFilters.Slice("abcdefg"' 4' 30));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("a"' StandardFilters.Slice("abc"' -4' 2));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual("a"' StandardFilters.Slice("abc"' -4' 2));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual(""' StandardFilters.Slice("abcdefg"' -10' 1));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual("1 2 3 4"' StandardFilters.Join(new[] { 1' 2' 3' 4 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual("1 2 3 4"' StandardFilters.Join(new[] { 1' 2' 3' 4 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual("1 2 3 4"' StandardFilters.Join(new[] { 1' 2' 3' 4 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual("1 - 2 - 3 - 4"' StandardFilters.Join(new[] { 1' 2' 3' 4 }' " - "));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual("1 - 2 - 3 - 4"' StandardFilters.Join(new[] { 1' 2' 3' 4 }' " - "));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual("1 - 2 - 3 - 4"' StandardFilters.Join(new[] { 1' 2' 3' 4 }' " - "));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' StandardFilters.Sort(new[] { 4' 3' 2' 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' StandardFilters.Sort(new[] { 4' 3' 2' 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' StandardFilters.Sort(new[] { 4' 3' 2' 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' StandardFilters.Sort(new[] { 4' 3' 2' 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' StandardFilters.Sort(new[] { 4' 3' 2' 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }' StandardFilters.Sort(new[] { 4' 3' 2' 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Sort(new[] { new { a = 4 }' new { a = 3 }' new { a = 1 }' new { a = 2 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Sort(new[] { new { a = 4 }' new { a = 3 }' new { a = 1 }' new { a = 2 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Sort(new[] { new { a = 4 }' new { a = 3 }' new { a = 1 }' new { a = 2 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Sort(new[] { new { a = 4 }' new { a = 3 }' new { a = 1 }' new { a = 2 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Sort(new[] { new { a = 4 }' new { a = 3 }' new { a = 1 }' new { a = 2 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Sort(new[] { new { a = 4 }' new { a = 3 }' new { a = 1 }' new { a = 2 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort_OnHashList_WithProperty_DoesNotFlattenList,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort_OnHashList_WithProperty_DoesNotFlattenList,The following statement contains a magic number: Assert.AreEqual(hash3["content"]' result[2]["content"]);
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort_OnDictionaryWithPropertyOnlyInSomeElement_ReturnsSortedDictionary,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestSort_OnDictionaryWithPropertyOnlyInSomeElement_ReturnsSortedDictionary,The following statement contains a magic number: Assert.AreEqual(hash2["content"]' result[2]["content"]);
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3' 4 }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "a"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "b"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "b"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "b"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "b"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "b"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMap,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }'                  StandardFilters.Map(new[] { new { a = 1 }' new { a = 2 }' new { a = 3 }' new { a = 4 } }' "b"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCurrencyWithinTemplateRender,The following statement contains a magic number: Assert.AreEqual("7.000'00 €"' euroTemplate.Render(Hash.FromAnonymousObject(new { amount = 7000 })));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCurrencyFromDoubleInput,The following statement contains a magic number: Assert.AreEqual("$6.85"' StandardFilters.Currency(6.8458' "en-US"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCurrencyFromDoubleInput,The following statement contains a magic number: Assert.AreEqual("$6.72"' StandardFilters.Currency(6.72' "en-CA"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCurrencyFromDoubleInput,The following statement contains a magic number: Assert.AreEqual("6.000.000'00 €"' StandardFilters.Currency(6000000' "de-DE"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCurrencyFromDoubleInput,The following statement contains a magic number: Assert.AreEqual("6.000.000'78 €"' StandardFilters.Currency(6000000.78' "de-DE"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(5)' StandardFilters.Date(DateTime.Parse("2006-05-05 10:00:00")' "MMMM"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(6)' StandardFilters.Date(DateTime.Parse("2006-06-05 10:00:00")' "MMMM"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(7)' StandardFilters.Date(DateTime.Parse("2006-07-05 10:00:00")' "MMMM"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(5)' StandardFilters.Date("2006-05-05 10:00:00"' "MMMM"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(6)' StandardFilters.Date("2006-06-05 10:00:00"' "MMMM"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(7)' StandardFilters.Date("2006-07-05 10:00:00"' "MMMM"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 5).ToString("MM/dd/yyyy")' StandardFilters.Date("2006-07-05 10:00:00"' "MM/dd/yyyy"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 5).ToString("MM/dd/yyyy")' StandardFilters.Date("2006-07-05 10:00:00"' "MM/dd/yyyy"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 5).ToString("MM/dd/yyyy")' StandardFilters.Date("2006-07-05 10:00:00"' "MM/dd/yyyy"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2004' 7' 16).ToString("MM/dd/yyyy")' StandardFilters.Date("Fri Jul 16 2004 01:00:00"' "MM/dd/yyyy"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2004' 7' 16).ToString("MM/dd/yyyy")' StandardFilters.Date("Fri Jul 16 2004 01:00:00"' "MM/dd/yyyy"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2004' 7' 16).ToString("MM/dd/yyyy")' StandardFilters.Date("Fri Jul 16 2004 01:00:00"' "MM/dd/yyyy"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(5)' StandardFilters.Date(DateTime.Parse("2006-05-05 10:00:00")' "%B"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(6)' StandardFilters.Date(DateTime.Parse("2006-06-05 10:00:00")' "%B"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(7)' StandardFilters.Date(DateTime.Parse("2006-07-05 10:00:00")' "%B"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(5)' StandardFilters.Date("2006-05-05 10:00:00"' "%B"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(6)' StandardFilters.Date("2006-06-05 10:00:00"' "%B"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(dateTimeFormat.GetMonthName(7)' StandardFilters.Date("2006-07-05 10:00:00"' "%B"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 3' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 3' 10' 0' 0)' string.Empty));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestStrFTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 8' 4' 10' 0' 0).ToString()' StandardFilters.Date(new DateTime(2006' 8' 4' 10' 0' 0)' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestFirstLast,The following statement contains a magic number: Assert.AreEqual(1' StandardFilters.First(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestFirstLast,The following statement contains a magic number: Assert.AreEqual(1' StandardFilters.First(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestFirstLast,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.Last(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestFirstLast,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.Last(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestFirstLast,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.Last(new[] { 1' 2' 3 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestMinus,The following statement contains a magic number: Helper.AssertTemplateResult("4"' "{{ input | minus:operand }}"' Hash.FromAnonymousObject(new { input = 5' operand = 1 }));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(8.43' StandardFilters.Times(0.843m' 10));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(8.43' StandardFilters.Times(0.843m' 10));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(8.43' StandardFilters.Times(0.843m' 10));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(412' StandardFilters.Times(4.12m' 100));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(412' StandardFilters.Times(4.12m' 100));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(412' StandardFilters.Times(4.12m' 100));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(7556.3' StandardFilters.Times(7.5563m' 1000));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(7556.3' StandardFilters.Times(7.5563m' 1000));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestTimes,The following statement contains a magic number: Assert.AreEqual(7556.3' StandardFilters.Times(7.5563m' 1000));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDividedBy,The following statement contains a magic number: Assert.Null(StandardFilters.DividedBy(null' 3));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestDividedBy,The following statement contains a magic number: Assert.Null(StandardFilters.DividedBy(4' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestInt32DividedByInt64,The following statement contains a magic number: int a = 20;
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestInt32DividedByInt64,The following statement contains a magic number: long b = 5;
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestInt32DividedByInt64,The following statement contains a magic number: Assert.AreEqual(c' (long)4);
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestModulo,The following statement contains a magic number: Assert.Null(StandardFilters.Modulo(null' 3));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestModulo,The following statement contains a magic number: Assert.Null(StandardFilters.Modulo(4' null));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestUniq,The following statement contains a magic number: Assert.AreEqual(new List<object> {5}' StandardFilters.Uniq(5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestUniq,The following statement contains a magic number: Assert.AreEqual(new List<object> {5}' StandardFilters.Uniq(5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.Abs(10));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.Abs(10));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.Abs(-5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.Abs(-5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(19.86' StandardFilters.Abs(19.86));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(19.86' StandardFilters.Abs(19.86));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(19.86' StandardFilters.Abs(-19.86));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(19.86' StandardFilters.Abs(-19.86));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.Abs("10"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.Abs("-5"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAbs,The following statement contains a magic number: Assert.AreEqual(30.60' StandardFilters.Abs("30.60"));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual("notNumber"' StandardFilters.AtLeast("notNumber"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(5' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(5' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(5' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(3' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(3' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(3' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(6' StandardFilters.AtLeast(6' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(6' StandardFilters.AtLeast(6' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(6' StandardFilters.AtLeast(6' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.AtLeast(10' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.AtLeast(10' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.AtLeast(10' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(9.85' StandardFilters.AtLeast(9.85' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(9.85' StandardFilters.AtLeast(9.85' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(9.85' StandardFilters.AtLeast(9.85' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(3.56' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(3.56' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast(3.56' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.AtLeast("10"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(10' StandardFilters.AtLeast("10"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast("4"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtLeast("4"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual("10a"' StandardFilters.AtLeast("10a"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtLeast,The following statement contains a magic number: Assert.AreEqual("4b"' StandardFilters.AtLeast("4b"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual("notNumber"' StandardFilters.AtMost("notNumber"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(5' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(5' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(5' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.AtMost(3' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.AtMost(3' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(3' StandardFilters.AtMost(3' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(6' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(6' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(6' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(10' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(10' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(10' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(9.85' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(9.85' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost(9.85' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(3.56' StandardFilters.AtMost(3.56' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(3.56' StandardFilters.AtMost(3.56' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(3.56' StandardFilters.AtMost(3.56' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost("10"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(5' StandardFilters.AtMost("10"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(4' StandardFilters.AtMost("4"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual(4' StandardFilters.AtMost("4"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual("4a"' StandardFilters.AtMost("4a"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestAtMost,The following statement contains a magic number: Assert.AreEqual("10b"' StandardFilters.AtMost("10b"' 5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCompact,The following statement contains a magic number: Assert.AreEqual(new List<object> { 5 }' StandardFilters.Compact(5));
Magic Number,DotLiquid.Tests,StandardFilterTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StandardFilterTests.cs,TestCompact,The following statement contains a magic number: Assert.AreEqual(new List<object> { 5 }' StandardFilters.Compact(5));
Magic Number,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestIsNotCollectionEmpty,The following statement contains a magic number: Assert.AreEqual("  false  "' Template.Parse(" {% if array == empty %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } })));
Magic Number,DotLiquid.Tests,StatementTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\StatementTests.cs,TestIsNotCollectionEmpty,The following statement contains a magic number: Assert.AreEqual("  false  "' Template.Parse(" {% if array == empty %} true {% else %} false {% endif %} ").Render(Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } })));
Magic Number,DotLiquid.Tests.Tags,AssignTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\AssignTests.cs,TestAssignDecimal,The following statement contains a magic number: Helper.AssertTemplateResult(string.Format("10{0}05"' CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator)'                  "{% assign foo = decimal %}{{ foo }}"'                  Hash.FromAnonymousObject(new { @decimal = 10.05d }));
Magic Number,DotLiquid.Tests.Tags,IncludeTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\IncludeTagTests.cs,TestIncludeFromTemplateFileSystem,The following statement contains a magic number: i < 2
Magic Number,DotLiquid.Tests.Tags,InheritanceTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\InheritanceTests.cs,TestExtendFromTemplateFileSystem,The following statement contains a magic number: i < 2
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult(" yo  yo  yo  yo "' "{%for item in array%} yo {%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult(" yo  yo  yo  yo "' "{%for item in array%} yo {%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult(" yo  yo  yo  yo "' "{%for item in array%} yo {%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult("yoyo"' "{%for item in array%}yo{%endfor%}"' Hash.FromAnonymousObject(new { array = new[] { 1' 2 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult(""' "{%for item in array%}{%endfor%}"' Hash.FromAnonymousObject(new { array = new[] { 1' 2 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult(expected' template' Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestFor,The following statement contains a magic number: Helper.AssertTemplateResult(expected' template' Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithVariable,The following statement contains a magic number: Helper.AssertTemplateResult(" 1  2  3 "' "{%for item in array%} {{item}} {%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithVariable,The following statement contains a magic number: Helper.AssertTemplateResult(" 1  2  3 "' "{%for item in array%} {{item}} {%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithVariable,The following statement contains a magic number: Helper.AssertTemplateResult("123"' "{%for item in array%}{{item}}{%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithVariable,The following statement contains a magic number: Helper.AssertTemplateResult("123"' "{%for item in array%}{{item}}{%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithVariable,The following statement contains a magic number: Helper.AssertTemplateResult("123"' "{% for item in array %}{{item}}{% endfor %}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithVariable,The following statement contains a magic number: Helper.AssertTemplateResult("123"' "{% for item in array %}{{item}}{% endfor %}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForHelpers,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForHelpers,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForAndIf,The following statement contains a magic number: Helper.AssertTemplateResult("+--"' "{%for item in array%}{% if forloop.first %}+{% else %}-{% endif %}{%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForAndIf,The following statement contains a magic number: Helper.AssertTemplateResult("+--"' "{%for item in array%}{% if forloop.first %}+{% else %}-{% endif %}{%endfor%}"'                  Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: assigns["limit"] = 2;
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestDynamicVariableLimiting,The following statement contains a magic number: assigns["offset"] = 2;
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestNestedFor,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { new[] { 1' 2 }' new[] { 3' 4 }' new[] { 5' 6 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestNestedFor,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { new[] { 1' 2 }' new[] { 3' 4 }' new[] { 5' 6 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestNestedFor,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { new[] { 1' 2 }' new[] { 3' 4 }' new[] { 5' 6 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestNestedFor,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { new[] { 1' 2 }' new[] { 3' 4 }' new[] { 5' 6 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestNestedFor,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { new[] { 1' 2 }' new[] { 3' 4 }' new[] { 5' 6 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestOffsetOnly,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResume,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigLimit,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestPauseResumeBigOffset,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = Hash.FromAnonymousObject(new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 } }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithBreak,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForWithContinue,The following statement contains a magic number: var assigns = Hash.FromAnonymousObject(new { array = new { items = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 } } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCase,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { condition = 2 });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCase,The following statement contains a magic number: assigns = Hash.FromAnonymousObject(new { condition = 3 });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWithElse,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { condition = 5 });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWithElse,The following statement contains a magic number: assigns = Hash.FromAnonymousObject(new { condition = 6 });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWithElse,The following statement contains a magic number: assigns = Hash.FromAnonymousObject(new { condition = 6 });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenOr,The following statement contains a magic number: Helper.AssertTemplateResult(" its 1 or 2 or 3 "' code1' Hash.FromAnonymousObject(new { condition = 2 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenOr,The following statement contains a magic number: Helper.AssertTemplateResult(" its 1 or 2 or 3 "' code1' Hash.FromAnonymousObject(new { condition = 3 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenOr,The following statement contains a magic number: Helper.AssertTemplateResult(" its 4 "' code1' Hash.FromAnonymousObject(new { condition = 4 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenOr,The following statement contains a magic number: Helper.AssertTemplateResult(""' code1' Hash.FromAnonymousObject(new { condition = 5 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenComma,The following statement contains a magic number: Helper.AssertTemplateResult(" its 1 or 2 or 3 "' code1' Hash.FromAnonymousObject(new { condition = 2 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenComma,The following statement contains a magic number: Helper.AssertTemplateResult(" its 1 or 2 or 3 "' code1' Hash.FromAnonymousObject(new { condition = 3 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenComma,The following statement contains a magic number: Helper.AssertTemplateResult(" its 4 "' code1' Hash.FromAnonymousObject(new { condition = 4 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestCaseWhenComma,The following statement contains a magic number: Helper.AssertTemplateResult(""' code1' Hash.FromAnonymousObject(new { condition = 5 }));
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestMultipleNamedCyclesWithNamesFromContext,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { var1 = 1' var2 = 2 });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestSizeOfArray,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestSizeOfArray,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestSizeOfArray,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3' 4 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestSizeOfHash,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { hash = Hash.FromAnonymousObject(new { a = 1' b = 2' c = 3' d = 4 }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestSizeOfHash,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { hash = Hash.FromAnonymousObject(new { a = 1' b = 2' c = 3' d = 4 }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestSizeOfHash,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { hash = Hash.FromAnonymousObject(new { a = 1' b = 2' c = 3' d = 4 }) });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForReversed,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestForReversed,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 2' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestIfChanged,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 1' 2' 2' 3' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestIfChanged,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 1' 2' 2' 3' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestIfChanged,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 1' 2' 2' 3' 3 } });
Magic Number,DotLiquid.Tests.Tags,StandardTagTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\StandardTagTests.cs,TestIfChanged,The following statement contains a magic number: Hash assigns = Hash.FromAnonymousObject(new { array = new[] { 1' 1' 2' 2' 3' 3 } });
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTable,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 4 </td><td class=\"col2\"> 5 </td><td class=\"col3\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTable,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 4 </td><td class=\"col2\"> 5 </td><td class=\"col3\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTable,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 4 </td><td class=\"col2\"> 5 </td><td class=\"col3\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTable,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 4 </td><td class=\"col2\"> 5 </td><td class=\"col3\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTable,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 4 </td><td class=\"col2\"> 5 </td><td class=\"col3\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTableWithDifferentCols,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td><td class=\"col4\"> 4 </td><td class=\"col5\"> 5 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:5%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTableWithDifferentCols,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td><td class=\"col4\"> 4 </td><td class=\"col5\"> 5 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:5%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTableWithDifferentCols,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td><td class=\"col4\"> 4 </td><td class=\"col5\"> 5 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:5%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTableWithDifferentCols,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td><td class=\"col4\"> 4 </td><td class=\"col5\"> 5 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:5%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlTableWithDifferentCols,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\"> 1 </td><td class=\"col2\"> 2 </td><td class=\"col3\"> 3 </td><td class=\"col4\"> 4 </td><td class=\"col5\"> 5 </td></tr>{0}<tr class=\"row2\"><td class=\"col1\"> 6 </td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:5%} {{n}} {% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlColCounter,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row3\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2%}{{tablerowloop.col}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlColCounter,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row3\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2%}{{tablerowloop.col}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlColCounter,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row3\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2%}{{tablerowloop.col}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlColCounter,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row3\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2%}{{tablerowloop.col}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlColCounter,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}<tr class=\"row3\"><td class=\"col1\">1</td><td class=\"col2\">2</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2%}{{tablerowloop.col}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlOffsetLimit,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">2</td><td class=\"col2\">3</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">4</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2 offset:1 limit:3 %}{{n}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlOffsetLimit,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">2</td><td class=\"col2\">3</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">4</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2 offset:1 limit:3 %}{{n}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlOffsetLimit,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">2</td><td class=\"col2\">3</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">4</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2 offset:1 limit:3 %}{{n}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlOffsetLimit,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">2</td><td class=\"col2\">3</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">4</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2 offset:1 limit:3 %}{{n}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Tags.Html,TableRowTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Tags\Html\TableRowTests.cs,TestHtmlOffsetLimit,The following statement contains a magic number: Helper.AssertTemplateResult(                  string.Format("<tr class=\"row1\">{0}<td class=\"col1\">2</td><td class=\"col2\">3</td></tr>{0}<tr class=\"row2\"><td class=\"col1\">4</td></tr>{0}"' Environment.NewLine)'                  "{% tablerow n in numbers cols:2 offset:1 limit:3 %}{{n}}{% endtablerow %}"'                  Hash.FromAnonymousObject(new { numbers = new[] { 1' 2' 3' 4' 5' 6 } }));
Magic Number,DotLiquid.Tests.Util,ListExtensionMethodsTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\ListExtensionMethodsTests.cs,TestGetAtIndexForNonNullList,The following statement contains a magic number: Assert.IsNull(list.TryGetAtIndex(2));
Magic Number,DotLiquid.Tests.Util,ListExtensionMethodsTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\ListExtensionMethodsTests.cs,TestGetAtIndexReverseForNonNullList,The following statement contains a magic number: Assert.IsNull(list.TryGetAtIndexReverse(2));
Magic Number,DotLiquid.Tests.Util,StrFTimeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\StrFTimeTests.cs,TestFormat,The following statement contains a magic number: return new DateTime(2012' 1' 8' 14' 32' 14).ToStrFTime(format);
Magic Number,DotLiquid.Tests.Util,StrFTimeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\StrFTimeTests.cs,TestFormat,The following statement contains a magic number: return new DateTime(2012' 1' 8' 14' 32' 14).ToStrFTime(format);
Magic Number,DotLiquid.Tests.Util,StrFTimeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\StrFTimeTests.cs,TestFormat,The following statement contains a magic number: return new DateTime(2012' 1' 8' 14' 32' 14).ToStrFTime(format);
Magic Number,DotLiquid.Tests.Util,StrFTimeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\StrFTimeTests.cs,TestFormat,The following statement contains a magic number: return new DateTime(2012' 1' 8' 14' 32' 14).ToStrFTime(format);
Magic Number,DotLiquid.Tests.Util,StrFTimeTests,D:\research\architectureSmells\repos\dotliquid_dotliquid\src\DotLiquid.Tests\Util\StrFTimeTests.cs,TestFormat,The following statement contains a magic number: return new DateTime(2012' 1' 8' 14' 32' 14).ToStrFTime(format);
