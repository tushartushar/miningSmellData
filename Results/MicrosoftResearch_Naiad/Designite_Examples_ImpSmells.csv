Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.Research.Naiad.Examples.Throughput,ProducerVertex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,MakeStage,The method has 5 parameters. Parameters: numberToSend' startProcess' endProcess' numberOfWorkers' input
Long Parameter List,Microsoft.Research.Naiad.Examples.Throughput,ConsumerVertex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,MakeStage,The method has 6 parameters. Parameters: numberToConsume' startProcess' endProcess' numberOfWorkers' exchange' stream
Long Statement,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The length of the statement  "                Func<IntPair' int> priorityFunction = node => 65536 * (node.t < 10 ? node.t : 10 + Convert.ToInt32(Math.Log(1 + node.t) / Math.Log(2.0))); " is 138.
Long Statement,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The length of the statement  "                var qTerms = queries.SelectMany(query => query.text.Split(' ').Select(term => new Query(term' query.id' query.threshold))) " is 122.
Long Statement,Microsoft.Research.Naiad.Examples.DifferentialDataflow,StronglyConnectedComponentsExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,TrimAndTranspose,The length of the statement  "                        .Join(labels' x => x.edge.source' node => node.name' x => x.edge.target' y => y.label' (k' x' y) => new SCC.LabeledEdge(new SCC.Edge(k' x)' y' 0)) " is 146.
Long Statement,Microsoft.Research.Naiad.Examples.DifferentialDataflow,StronglyConnectedComponentsExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,TrimAndTranspose,The length of the statement  "                        .Join(labels' x => x.edge.target' node => node.name' x => new IntPair(x.edge.source' x.label1)' y => y.label' (k' x' y) => new SCC.LabeledEdge(new SCC.Edge(x.s' k)' x.t' y)) " is 173.
Long Statement,Microsoft.Research.Naiad.Examples.DifferentialDataflow,StronglyConnectedComponentsExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,BroadcastMin,The length of the statement  "            Func<SCC.Node' int> priority = node => 65536 * (node.label < keep ? node.label : keep + Convert.ToInt32(Math.Log(1 + node.label))); " is 131.
Long Statement,Microsoft.Research.Naiad.Examples.DifferentialDataflow,StronglyConnectedComponentsExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,BroadcastMin,The length of the statement  "                                                           .Join(x' edge => edge.source' node => node.name' edge => edge.target' node => node.label' (source' target' label) => new SCC.Node(target' label)' true) " is 151.
Long Statement,Microsoft.Research.Naiad.Examples.GraphLINQ,PageRank,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\PageRank.cs,Execute,The length of the statement  "                computation.OnFrontierChange += (x' y) => { Console.WriteLine(stopwatch.Elapsed + "\t" + string.Join("' "' y.NewFrontier)); Console.Out.Flush(); }; " is 147.
Long Statement,Microsoft.Research.Naiad.Examples.ConnectedComponents,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,StreamingAggregate,The length of the statement  "            return Foundry.NewUnaryStage(input' (i' s) => new StreamingAggregateVertex<TKey' TValue' TTime>(i' s' aggregate)' x => x.First.GetHashCode()' x => x.First.GetHashCode()' "StreamingAggregate"); " is 192.
Long Statement,Microsoft.Research.Naiad.Examples.ConnectedComponents,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,BlockingAggregate,The length of the statement  "            return Foundry.NewUnaryStage(input' (i' s) => new BlockingAggregateVertex<TKey' TValue' TTime>(i' s' aggregate)' x => x.First.GetHashCode()' x => x.First.GetHashCode()' "BlockingAggregate"); " is 190.
Long Statement,Microsoft.Research.Naiad.Examples.ConnectedComponents,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,GraphJoin,The length of the statement  "            return Foundry.NewBinaryStage(edges' values' (i' s) => new GraphJoinVertex<TVertex' TState' TTime>(i' s)' x => x.First.GetHashCode()' y => y.First.GetHashCode()' null' "GraphJoin"); " is 181.
Long Statement,Microsoft.Research.Naiad.Examples.KeyValueLookup,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\KeyValueLookup.cs,KeyValueLookup,The length of the statement  "            return Foundry.NewBinaryStage(kvpairs' requests' (i' s) => new KeyValueLookupVertex<TKey' TValue>(i' s)' x => x.First.GetHashCode()' y => y.GetHashCode()' null' "Lookup"); " is 171.
Long Statement,Microsoft.Research.Naiad.Examples.Latency,Barrier,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,MakeStage,The length of the statement  "            var stage = new Stage<Barrier' IterationIn<Epoch>>(ingress.Context' (i' s) => new Barrier(i' s' iterations)' "Barrier"); " is 120.
Long Statement,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The length of the statement  "                Console.WriteLine("Running barrier latency test with {0} iterations' vertices={1}"' iterations' ingress.ForStage.Placement.Count); " is 130.
Long Statement,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The length of the statement  "                Console.WriteLine("Ran {0} iterations on {1} processes; this is process {2}"' times.Count - 1' computation.Configuration.Processes' computation.Configuration.ProcessID); " is 169.
Long Statement,Microsoft.Research.Naiad.Examples.Throughput,ProducerVertex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,MakeStage,The length of the statement  "            Stage<ProducerVertex' Epoch> stage = Foundry.NewStage(placement' input.Context' (i' s) => new ProducerVertex(i' s' numberToSend)' "Producer"); " is 142.
Long Statement,Microsoft.Research.Naiad.Examples.Throughput,ConsumerVertex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,MakeStage,The length of the statement  "            Stage<ConsumerVertex' Epoch> stage = Foundry.NewStage(placement' stream.Context' (i' s) => new ConsumerVertex(i' s' numberToConsume)' "Consumer"); " is 146.
Long Statement,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The length of the statement  "                Stream<Pair<int' int>' Epoch> stream = ProducerVertex.MakeStage(numToExchange' 0' producers' computation.Configuration.WorkerCount' input); " is 139.
Long Statement,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The length of the statement  "                Stage<ConsumerVertex' Epoch> consumer = ConsumerVertex.MakeStage(numToExchange' computation.Configuration.Processes - consumers' computation.Configuration.Processes' computation.Configuration.WorkerCount' exchange' stream); " is 223.
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The following statement contains a magic number: edgeCount = Convert.ToInt32(args[2]);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The following statement contains a magic number: args.Length == 3
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The following statement contains a magic number: Func<IntPair' int> priorityFunction = node => 65536 * (node.t < 10 ? node.t : 10 + Convert.ToInt32(Math.Log(1 + node.t) / Math.Log(2.0)));
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The following statement contains a magic number: Func<IntPair' int> priorityFunction = node => 65536 * (node.t < 10 ? node.t : 10 + Convert.ToInt32(Math.Log(1 + node.t) / Math.Log(2.0)));
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The following statement contains a magic number: Func<IntPair' int> priorityFunction = node => 65536 * (node.t < 10 ? node.t : 10 + Convert.ToInt32(Math.Log(1 + node.t) / Math.Log(2.0)));
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\ConnectedComponents.cs,Execute,The following statement contains a magic number: Func<IntPair' int> priorityFunction = node => 65536 * (node.t < 10 ? node.t : 10 + Convert.ToInt32(Math.Log(1 + node.t) / Math.Log(2.0)));
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,GraphColoring,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\GraphColoring.cs,Execute,The following statement contains a magic number: edgeCount = Convert.ToInt32(args[2]);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,GraphColoring,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\GraphColoring.cs,Execute,The following statement contains a magic number: args.Length == 3
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: int documentCount = 100000;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: int vocabulary = 100000;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: int batchSize = 10000;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: int iterations = 10;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: vocabulary = Convert.ToInt32(args[2]);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: batchSize = Convert.ToInt32(args[3]);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: iterations = Convert.ToInt32(args[4]);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: args.Length == 5
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: List<Document> docs = Enumerable.Range(0' documentCount)                                                 .Select(i => new Document(Enumerable.Range(0' 10)                                                 .Select(j => String.Format("{0}"' random.Next(vocabulary)))                                                 .Aggregate((x' y) => x + " " + y)' i)).ToList<Document>();
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SearchIndex,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\SearchIndex.cs,Execute,The following statement contains a magic number: Console.WriteLine("Indexing {0} random documents' {1} terms (please wait)"' documentCount' 10 * documentCount);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,StronglyConnectedComponentsExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,BroadcastMin,The following statement contains a magic number: var keep = 10;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,StronglyConnectedComponentsExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,BroadcastMin,The following statement contains a magic number: Func<SCC.Node' int> priority = node => 65536 * (node.label < keep ? node.label : keep + Convert.ToInt32(Math.Log(1 + node.label)));
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SCC,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,Execute,The following statement contains a magic number: edgeCount = Convert.ToInt32(args[2]);
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,SCC,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,Execute,The following statement contains a magic number: args.Length == 3
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,Node,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,GetHashCode,The following statement contains a magic number: return 13241 * name + 312 * label;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,Node,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,GetHashCode,The following statement contains a magic number: return 13241 * name + 312 * label;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,Edge,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,GetHashCode,The following statement contains a magic number: return 12312 * source + 1231 * target;
Magic Number,Microsoft.Research.Naiad.Examples.DifferentialDataflow,Edge,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\DifferentialDataflow\StronglyConnectedComponents.cs,GetHashCode,The following statement contains a magic number: return 12312 * source + 1231 * target;
Magic Number,Microsoft.Research.Naiad.Examples.GraphLINQ,PageRank,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\PageRank.cs,Execute,The following statement contains a magic number: edges = GenerateEdges(1000000' 20000000' computation.Configuration.ProcessID).AsNaiadStream(computation);
Magic Number,Microsoft.Research.Naiad.Examples.GraphLINQ,PageRank,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\PageRank.cs,Execute,The following statement contains a magic number: edges = GenerateEdges(1000000' 20000000' computation.Configuration.ProcessID).AsNaiadStream(computation);
Magic Number,Microsoft.Research.Naiad.Examples.GraphLINQ,PageRank,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\PageRank.cs,Execute,The following statement contains a magic number: var start = degrees.Select(x => x.node.WithValue(0.15f))                                     .PartitionBy(x => x.node.index);
Magic Number,Microsoft.Research.Naiad.Examples.GraphLINQ,PageRank,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\PageRank.cs,Execute,The following statement contains a magic number: var iterations = 10;
Magic Number,Microsoft.Research.Naiad.Examples.GraphLINQ,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\PageRank.cs,PageRankStep,The following statement contains a magic number: return ranks.NodeJoin(degrees' (rank' degree) => degree > 0 ? rank * (0.85f / degree) : 0.0f)                          .GraphReduce(edges' (x' y) => x + y' false)                          .Where(x => x.value > 0.0f);
Magic Number,Microsoft.Research.Naiad.Examples.GraphLINQ,Reachability,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\GraphLINQ\Reachability.cs,Execute,The following statement contains a magic number: var rootStrings = new[] { args[2] }.AsNaiadStream(computation)                                                     .SelectMany(x => ReadLines(x));
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,StreamingAggregateVertex<TKey;TValue;TTime>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,StreamingAggregateVertex,The following statement contains a magic number: this.Entrancy = 5;
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,GraphJoinVertex<TVertex;TState;TTime>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,GraphJoinVertex,The following statement contains a magic number: this.Entrancy = 5;
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,Execute,The following statement contains a magic number: var nodeCount = args.Length == 3 ? Convert.ToInt32(args[1]) : 1000;
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,Execute,The following statement contains a magic number: var nodeCount = args.Length == 3 ? Convert.ToInt32(args[1]) : 1000;
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,Execute,The following statement contains a magic number: var edgeCount = args.Length == 3 ? Convert.ToInt32(args[2]) : 2000;
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,Execute,The following statement contains a magic number: var edgeCount = args.Length == 3 ? Convert.ToInt32(args[2]) : 2000;
Magic Number,Microsoft.Research.Naiad.Examples.ConnectedComponents,ConnectedComponents,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\ConnectedComponents.cs,Execute,The following statement contains a magic number: var edgeCount = args.Length == 3 ? Convert.ToInt32(args[2]) : 2000;
Magic Number,Microsoft.Research.Naiad.Examples.KeyValueLookup,KeyValueLookup,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\KeyValueLookup.cs,Execute,The following statement contains a magic number: split.Length == 2
Magic Number,Microsoft.Research.Naiad.Examples.KeyValueLookup,KeyValueLookup,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\KeyValueLookup.cs,Execute,The following statement contains a magic number: split.Length > 2
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: computation.OnFrontierChange += (v' b) =>                  {                      var now = sw.ElapsedTicks;                        if (lastTime > 0)                          times.Add(1000.0 * (now - lastTime) / (double)Stopwatch.Frequency);                        lastTime = now;                  };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Latency,Latency,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Latency.cs,Execute,The following statement contains a magic number: var percentiles = new[] { 0.00' 0.01' 0.05' 0.10' 0.25' 0.50' 0.75' 0.90' 0.95' 0.99 };
Magic Number,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The following statement contains a magic number: int numToExchange = args.Length > 1 ? int.Parse(args[1]) : 1000000;
Magic Number,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The following statement contains a magic number: int producers = Int32.Parse(args[2]);
Magic Number,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The following statement contains a magic number: int consumers = Int32.Parse(args[3]);
Magic Number,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The following statement contains a magic number: var exchange = args.Length > 4 && args[4] == "exchange";
Magic Number,Microsoft.Research.Naiad.Examples.Throughput,Throughput,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Examples\Naiad\Throughput.cs,Execute,The following statement contains a magic number: var exchange = args.Length > 4 && args[4] == "exchange";
