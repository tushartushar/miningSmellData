Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ReadWebHdfsCollection,The method has 5 parameters. Parameters: manager' fileOrDirectoryPath' deserialize' user' webPort
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,WriteWebHdfsBinary,The method has 8 parameters. Parameters: source' user' webPort' format' writerFunction' serialize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,WriteWebHdfsBinary,The method has 7 parameters. Parameters: source' user' webPort' prefix' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ToWebHdfsBinary,The method has 8 parameters. Parameters: source' user' webPort' format' writerFunction' serialize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ToWebHdfsBinary,The method has 7 parameters. Parameters: source' user' webPort' prefix' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,WriteWebHdfsText,The method has 6 parameters. Parameters: source' user' webPort' prefix' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ToWebHdfsText,The method has 6 parameters. Parameters: source' user' webPort' prefix' blockSize' segmentThreshold
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,FromWebHdfsText,The following statement contains a magic number: return input.GenerateWork(                  time => new DfsTextCoordinator(new WebHdfsClient(user' webPort))'                  (workerIndex' time) => new DfsTextWorker(new WebHdfsClient(user' webPort)' 256));
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,FromWebHdfsText,The following statement contains a magic number: return input.FromWebHdfsText<TTime>(Environment.UserName' 50070);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ReadWebHdfsTextCollection,The following statement contains a magic number: return new Uri[] { fileOrDirectoryPath }                  .AsNaiadStream(manager)                  // this distinct ensures that the same code can be run at every process without reading files multiple times                  .Distinct()                  .GenerateWork(                      time => new DfsTextCoordinator(new WebHdfsClient(user' webPort))'                      (workerIndex' time) => new DfsTextWorker(new WebHdfsClient(user' webPort)' 256));
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ReadWebHdfsTextCollection,The following statement contains a magic number: return manager.ReadWebHdfsTextCollection(fileOrDirectoryPath' Environment.UserName' 50070);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,FromWebHdfs,The following statement contains a magic number: return input.FromWebHdfs<TOutput' TTime>(deserialize' Environment.UserName' 50070);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ReadWebHdfsCollection,The following statement contains a magic number: return manager.ReadWebHdfsCollection<TOutput>(fileOrDirectoryPath' deserialize' Environment.UserName' 50070);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,FromWebHdfsBinary,The following statement contains a magic number: return input.GenerateWork(                      time => new DfsFileCoordinator(new WebHdfsClient(user' webPort))'                      (workerIndex' time) =>                          new DfsFileWorker<TOutput>(                              new WebHdfsClient(user' webPort)'                               stream => Utils.GetNaiadReaderBatchEnumerable<TOutput>(stream' 256)));
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,FromWebHdfsBinary,The following statement contains a magic number: return input.FromWebHdfsBinary<TOutput' TTime>(Environment.UserName' 50070);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ReadWebHdfsBinaryCollection,The following statement contains a magic number: return new Uri[] { fileOrDirectoryPath }                  .AsNaiadStream(manager)                  // this distinct ensures that the same code can be run at every process without reading files multiple times                  .Distinct()                  .GenerateWork(                      time => new DfsFileCoordinator(new WebHdfsClient(user' webPort))'                      (workerIndex' time) =>                          new DfsFileWorker<TOutput>(                              new WebHdfsClient(user' webPort)'                              stream => Utils.GetNaiadReaderBatchEnumerable<TOutput>(stream' 256)));
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ReadWebHdfsBinaryCollection,The following statement contains a magic number: return manager.ReadWebHdfsBinaryCollection<TOutput>(fileOrDirectoryPath' Environment.UserName' 50070);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,WriteWebHdfsText,The following statement contains a magic number: return source.WriteWebHdfsBinary(                  user' webPort'                  (processId' threadId' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  blockSize'                  segmentThreshold);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,WriteWebHdfsText,The following statement contains a magic number: return source.WriteWebHdfsBinary(                  user' webPort'                  (processId' threadId' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  blockSize'                  segmentThreshold);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ToWebHdfsText,The following statement contains a magic number: return source.ToWebHdfsBinary(                  user' webPort'                  (processId' threadId' time' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' time' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  blockSize' segmentThreshold);
Magic Number,Microsoft.Research.Naiad.Frameworks.WebHdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\WebHdfsSupport\WebHdfs.cs,ToWebHdfsText,The following statement contains a magic number: return source.ToWebHdfsBinary(                  user' webPort'                  (processId' threadId' time' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' time' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  blockSize' segmentThreshold);
