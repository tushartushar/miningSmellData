Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,WriteHdfsBinary,The method has 7 parameters. Parameters: source' format' writerFunction' serialize' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,WriteHdfsBinary,The method has 5 parameters. Parameters: source' prefix' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ToHdfsBinary,The method has 7 parameters. Parameters: source' format' writerFunction' serialize' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ToHdfsBinary,The method has 5 parameters. Parameters: source' prefix' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,WriteHdfsText,The method has 5 parameters. Parameters: source' prefix' bufferSize' blockSize' segmentThreshold
Long Parameter List,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ToHdfsText,The method has 5 parameters. Parameters: source' prefix' bufferSize' blockSize' segmentThreshold
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,FromHdfsText,The following statement contains a magic number: return input.GenerateWork(                  time => new DfsTextCoordinator(new HdfsClient())'                  (workerIndex' time) => new DfsTextWorker(new HdfsClient()' 256));
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ReadHdfsTextCollection,The following statement contains a magic number: return new Uri[] { fileOrDirectoryPath }                  .AsNaiadStream(manager)                  // this distinct ensures that the same code can be run at every process without reading files multiple times                  .Distinct()                  .GenerateWork(                      time => new DfsTextCoordinator(new HdfsClient())'                      (workerIndex' time) => new DfsTextWorker(new HdfsClient()' 256));
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,FromHdfsBinary,The following statement contains a magic number: return input.GenerateWork(                      time => new DfsFileCoordinator(new HdfsClient())'                      (workerIndex' time) =>                          new DfsFileWorker<TOutput>(                              new HdfsClient()'                              stream => Utils.GetNaiadReaderBatchEnumerable<TOutput>(stream' 256)));
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ReadHdfsBinaryCollection,The following statement contains a magic number: return new Uri[] { fileOrDirectoryPath }                  .AsNaiadStream(manager)                  // this distinct ensures that the same code can be run at every process without reading files multiple times                  .Distinct()                  .GenerateWork(                      time => new DfsFileCoordinator(new HdfsClient())'                      (workerIndex' time) =>                          new DfsFileWorker<TOutput>(                              new HdfsClient()'                              stream => Utils.GetNaiadReaderBatchEnumerable<TOutput>(stream' 256)));
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,WriteHdfsText,The following statement contains a magic number: return source.WriteHdfsBinary(                  (processId' threadId' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  bufferSize' blockSize' segmentThreshold);
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,WriteHdfsText,The following statement contains a magic number: return source.WriteHdfsBinary(                  (processId' threadId' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  bufferSize' blockSize' segmentThreshold);
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ToHdfsText,The following statement contains a magic number: return source.ToHdfsBinary(                  (processId' threadId' time' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' time' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  bufferSize' blockSize' segmentThreshold);
Magic Number,Microsoft.Research.Naiad.Frameworks.Hdfs,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\HdfsSupport\Hdfs.cs,ToHdfsText,The following statement contains a magic number: return source.ToHdfsBinary(                  (processId' threadId' time' segment) => Utils.DefaultPartFormat(prefix' processId' threadId' time' segment)'                  stream => new Utils.FStreamWriter(stream' utf8' 1024 * 1024)'                  (writer' arraySegment) =>                  {                      for (int i = 0; i < arraySegment.Count; i++)                      {                          writer.WriteLine(arraySegment.Array[i]);                      }                  }'                  bufferSize' blockSize' segmentThreshold);
