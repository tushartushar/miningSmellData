Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,CoGroupBy,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,CoGroupBy,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,LatticeInternTable<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\LatticeInternTable.cs,InterestingTimes,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,BufferingDataStreamBroadcaster<R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Remoting.cs,StartEpoch,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceImmutable<R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,Compact,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithAggregation<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithAggregation.cs,SubtractStrictlyPriorDifferences,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithAggregation<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithAggregation.cs,UpdateAccumulation,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithAggregation<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithAggregation.cs,EnsureStateIsCurrentWRTAdvancedTimes,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceAsHashTable,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceAsUnsortedList,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceRecords,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,SubtractStrictlyPriorDifferences,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,EnumerateCollectionAt,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,UpdateAccumulation,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,EnumerateDifferenceAt,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,EnsureStateIsCurrentWRTAdvancedTimes,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,SubtractStrictlyPriorDifferences,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,UpdateAccumulation,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,EnumerateDifferenceAt,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,EnsureStateIsCurrentWRTAdvancedTimes,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,CoGroupBy<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\CoGroupBy.cs,Reduce,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Join<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Join<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,MinIntKeyed<V;M;S;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Min.cs,NewOutputMinusOldOutput,Cyclomatic complexity of the method is 13
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Manufacture,The method has 6 parameters. Parameters: other' factory' input1PartitionedBy' input2PartitionedBy' outputPartitionedBy' name
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,CoGroupBy,The method has 6 parameters. Parameters: other' key1' key2' selector1' selector2' reducer
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,CoGroupBy,The method has 6 parameters. Parameters: other' key1' key2' selector1' selector2' reducer
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,The method has 6 parameters. Parameters: other' key1' key2' val1' val2' reducer
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,The method has 7 parameters. Parameters: other' key1' key2' val1' val2' reducer' useDenseIntKeys
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Aggregate,The method has 5 parameters. Parameters: key' value' axpy' isZero' reducer
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Min,The method has 5 parameters. Parameters: key' value' minBy' reducer' useDenseIntKeys
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,Collection,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionInterfaces.cs,CoGroupBy,The method has 6 parameters. Parameters: other' keySelector1' keySelector2' valueSelector1' valueSelector2' reducer
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,Collection,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionInterfaces.cs,CoGroupBy,The method has 6 parameters. Parameters: other' keySelector1' keySelector2' valueSelector1' valueSelector2' reducer
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,Collection,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionInterfaces.cs,Join,The method has 6 parameters. Parameters: other' keySelector1' keySelector2' valueSelector1' valueSelector2' resultSelector
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,Collection,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionInterfaces.cs,Join,The method has 7 parameters. Parameters: other' keySelector1' keySelector2' valueSelector1' valueSelector2' resultSelector' useDenseIntKeys
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,Collection,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionInterfaces.cs,Aggregate,The method has 5 parameters. Parameters: keySelector' valueSelector' axpy' isZeroPredicate' resultSelector
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,Collection,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionInterfaces.cs,Min,The method has 5 parameters. Parameters: keySelector' valueSelector' comparableSelector' resultSelector' useDenseIntKeys
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,BinaryKeyIndices,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\KeyIndices.cs,BinaryKeyIndices,The method has 5 parameters. Parameters: u1' u2' p1' p2' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulOperator<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStateful.cs,BinaryStatefulOperator,The method has 9 parameters. Parameters: index' stage' input1Immutable' input2Immutable' k1' k2' v1' v2' maintainOC
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,ConservativeBinaryStatefulOperator<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStateful.cs,ConservativeBinaryStatefulOperator,The method has 9 parameters. Parameters: index' stage' input1Immutable' input2Immutable' k1' k2' v1' v2' maintainOC
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,BinaryStatefulIntKeyedOperator,The method has 9 parameters. Parameters: index' stage' input1Immutable' input2Immutable' k1' k2' v1' v2' maintainOC
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulOperator<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStateful.cs,UnaryStatefulOperator,The method has 6 parameters. Parameters: index' collection' immutableInput' k' v' maintainOutputTrace
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,ConservativeUnaryStatefulOperator<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStateful.cs,ConservativeUnaryStatefulOperator,The method has 6 parameters. Parameters: index' collection' immutableInput' k' v' ignored
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,UnaryStatefulIntKeyedOperator,The method has 6 parameters. Parameters: index' collection' immutableInput' k' v' maintainOutputTrace
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulOperatorWithAggregation<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulWithAggregation.cs,UnaryStatefulOperatorWithAggregation,The method has 7 parameters. Parameters: index' collection' immutableInput' k' v' a' i
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Aggregate<K;S;T;R;V>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Aggregate.cs,Aggregate,The method has 8 parameters. Parameters: i' c' inputImmutable' k' v' axpy' isZero' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,CoGroupBy<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\CoGroupBy.cs,CoGroupBy,The method has 9 parameters. Parameters: index' stage' input1Immutable' input2Immutable' k1' k2' t1' t2' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,CoGroupBy<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\CoGroupBy.cs,CoGroupBy,The method has 9 parameters. Parameters: index' stage' input1Immutable' input2Immutable' k1' k2' t1' t2' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Count<K;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Count.cs,Count,The method has 5 parameters. Parameters: index' collection' inputImmutable' k' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,GroupBy<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\GroupBy.cs,GroupBy,The method has 6 parameters. Parameters: index' collection' immutableInput' k' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Join<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,Join,The method has 9 parameters. Parameters: index' collection' input1Immutable' input2Immutable' k1' k2' v1' v2' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,JoinIntKeyed,The method has 9 parameters. Parameters: index' collection' input1Immutable' input2Immutable' k1' k2' v1' v2' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Max<K;V;M;S;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Max.cs,Max,The method has 7 parameters. Parameters: index' collection' inputImmutable' k' e' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Min<K;V;M;S;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Min.cs,Min,The method has 7 parameters. Parameters: index' collection' inputImmutable' k' e' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,MinIntKeyed<V;M;S;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Min.cs,MinIntKeyed,The method has 7 parameters. Parameters: index' collection' inputImmutable' k' e' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,SumInt32<K;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Sum.cs,SumInt32,The method has 6 parameters. Parameters: index' collection' inputImmutable' k' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,SumInt64<K;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Sum.cs,SumInt64,The method has 6 parameters. Parameters: index' collection' inputImmutable' k' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,SumFloat<K;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Sum.cs,SumFloat,The method has 6 parameters. Parameters: index' collection' inputImmutable' k' v' r
Long Parameter List,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,SumDouble<K;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Sum.cs,SumDouble,The method has 6 parameters. Parameters: index' collection' inputImmutable' k' v' r
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,PartitionBy,The length of the statement  "            var stream = Microsoft.Research.Naiad.Dataflow.PartitionBy.ExtensionMethods.PartitionBy(this.Output' partitionFunction.ConvertToWeightedFuncAndHashCode()); " is 155.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Consolidate,The length of the statement  "            return this.Manufacture((i' v) => new Operators.Consolidate<R' T>(i' v)' partitionFunction' partitionFunction' "Consolidate"); " is 126.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,AdjustTime,The length of the statement  "            var result = this.Manufacture((i' v) => new Operators.AdjustTime<R' T>(i' v' adjustment)' this.Output.PartitionedBy' this.Output.PartitionedBy' "AdjustLattice"); " is 161.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Manufacture,The length of the statement  "            var output = Foundry.NewBinaryStage(this.Output' other.Output' factory' input1PartitionedBy' input2PartitionedBy' outputPartitionedBy' name); " is 141.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Where,The length of the statement  "            return this.Manufacture((i' v) => new Operators.Where<R' T>(i' v' predicate)' this.Output.PartitionedBy' this.Output.PartitionedBy' "Where"); " is 141.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,SelectMany,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.SelectManyBatch<R' T' R2>(i' v' selector)' null' null' "SelectManyBatch"); " is 126.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,GroupBy,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.GroupBy<K' V' R' T' R2>(i' v' this.Immutable' key' selector' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "SelectMany"); " is 183.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,CoGroupBy,The length of the statement  "            return this.Manufacture<R2' R3>(that' (i' v) => new Operators.CoGroupBy<K' V1' V2' R' R2' T' R3>(i' v' this.immutable' that.immutable' key1' key2' selector1' selector2' reducer)' key1.ConvertToWeightedFuncAndHashCode()' key2.ConvertToWeightedFuncAndHashCode()' null' "CoGroupBy"); " is 280.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,CoGroupBy,The length of the statement  "            return this.Manufacture<R2' R3>(that' (i' v) => new Operators.CoGroupBy<K' V1' V2' R' R2' T' R3>(i' v' this.immutable' that.immutable' key1' key2' selector1' selector2' reducer)' key1.ConvertToWeightedFuncAndHashCode()' key2.ConvertToWeightedFuncAndHashCode()' null' "CoGroupBy"); " is 280.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,The length of the statement  "            return this.Manufacture<R2'R3>(that' (i' v) => new Operators.Join<K' R' R2' R' R2' T' R3>(i' v' this.Immutable' that.Immutable' key1' key2' x => x' x => x' (k' x' y) => compiledReducer(x' y))' key1.ConvertToWeightedFuncAndHashCode()' key2.ConvertToWeightedFuncAndHashCode()' null' "Join"); " is 289.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,The length of the statement  "            return this.Manufacture<R2' R3>(that' (i' v) => new Operators.Join<K' V1' V2' R' R2' T' R3>(i' v' this.Immutable' that.Immutable' key1' key2' val1' val2' (k' x' y) => compiledReducer(k' x' y))' key1.ConvertToWeightedFuncAndHashCode()' key2.ConvertToWeightedFuncAndHashCode()' null' "Join"); " is 290.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Join,The length of the statement  "                return this.Manufacture<R2' R3>(that' (i' v) => new Operators.JoinIntKeyed<V1' V2' R' R2' T' R3>(i' v' this.Immutable' that.Immutable' key1' key2' val1' val2' (k' x' y) => compiledReducer(k' x' y))' key1.ConvertToWeightedFuncAndHashCode()' key2.ConvertToWeightedFuncAndHashCode()' null' "Join"); " is 295.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Aggregate,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.Aggregate<K' R' T' R2' V>(i' v' this.Immutable' key' value' axpy' isZero' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Aggregate"); " is 195.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Count,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.Count<K' R' T' R2>(i' v' this.Immutable' key' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Count"); " is 163.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Sum,The length of the statement  "            return this.Manufacture<R2>((i'v) => new Operators.SumInt32<K' R' T' R2>(i' v' this.Immutable' key' valueSelector' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Sum<Int32>"); " is 185.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Sum,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.SumInt64<K' R' T' R2>(i' v' this.Immutable' key' valueSelector' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Sum<Int64>"); " is 186.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Sum,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.SumFloat<K' R' T' R2>(i' v' this.Immutable' key' valueSelector' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Sum<float>"); " is 186.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Sum,The length of the statement  "            return this.Manufacture<R2>((i' v) => new Operators.SumDouble<K' R' T' R2>(i' v' this.Immutable' key' valueSelector' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Sum<double>"); " is 188.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Min,The length of the statement  "            return this.Manufacture<R>((i'v) => new Operators.Min<K' R' M' R' T>(i' v' this.Immutable' key' x => x' (k' t) => compiledValue(t)' (k' t) => t)' key.ConvertToWeightedFuncAndHashCode()' key.ConvertToWeightedFuncAndHashCode()' "Min"); " is 233.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Min,The length of the statement  "                return this.Manufacture<R>((i'v) => new Operators.MinIntKeyed<V' M' R' T>(i' v' this.Immutable' key' value' minBy' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Min"); " is 178.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Min,The length of the statement  "            return this.Manufacture<R>((i'v) => new Operators.Min<K' V' M' R' T>(i' v' this.Immutable' key' value' minBy' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Min"); " is 173.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Max,The length of the statement  "            return this.Manufacture((i'v) => new Operators.Max<K' R' M' R' T>(i' v' this.Immutable' key' x => x' (k't) => compiledValue(t)' (k't) => t)' key.ConvertToWeightedFuncAndHashCode()' key.ConvertToWeightedFuncAndHashCode()' "Max"); " is 228.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Max,The length of the statement  "            return this.Manufacture<R>((i'v) => new Operators.Max<K' S' M' R' T>(i' v' this.Immutable' key' selector' value' reducer)' key.ConvertToWeightedFuncAndHashCode()' null' "Max"); " is 176.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Union,The length of the statement  "            return this.Manufacture(that' (i' v) => new Operators.Union<R' T>(i' v' this.Immutable' that.Immutable)' ident' ident' ident' "Union"); " is 135.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Intersect,The length of the statement  "            return this.Manufacture(that' (i' v) => new Operators.Intersect<R' T>(i' v' this.Immutable' that.Immutable)' ident' ident' ident' "Intersect"); " is 143.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,SymmetricDifference,The length of the statement  "            return this.Manufacture(that' (i' v) => new Operators.SymmetricDifference<R' T>(i' v' this.Immutable' that.Immutable)' ident' ident' ident' "SymmetricDifference"); " is 163.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Concat,The length of the statement  "            if (!Microsoft.Research.Naiad.Utilities.ExpressionComparer.Instance.Equals(this.Output.PartitionedBy' that.Output.PartitionedBy)) " is 129.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Concat,The length of the statement  "            return this.Manufacture(that' (i' v) => new Operators.Concat<R' T>(i' v)' partitionFunction' partitionFunction' partitionFunction' "Concat"); " is 141.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Except,The length of the statement  "            if (!Microsoft.Research.Naiad.Utilities.ExpressionComparer.Instance.Equals(this.Output.PartitionedBy' that.Output.PartitionedBy)) " is 129.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Except,The length of the statement  "            return this.Manufacture(that' (i' v) => new Operators.Except<R' T>(i' v)' partitionFunction' partitionFunction' partitionFunction' "Except"); " is 141.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,TypedCollection<R;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Collection.cs,Monitor,The length of the statement  "            return this.Manufacture((i'v) => new Operators.Monitor<R' T>(i' v' this.Immutable' action)' this.Output.PartitionedBy' this.Output.PartitionedBy' "Monitor"); " is 157.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,ExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\ExtensionMethods.cs,AssumePartitionedBy,The length of the statement  "            return Microsoft.Research.Naiad.Dataflow.PartitionBy.ExtensionMethods.AssumePartitionedBy(input.Output' keySelector.ConvertToWeightedFuncAndHashCode()) " is 151.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,NaiadDataStreamProtocolExtensionMethods,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Remoting.cs,ToReceiver,The length of the statement  "            collection.Subscribe(xs => { receiver.StartEpoch(); foreach (Weighted<R> x in xs) receiver.Send(x); receiver.EndEpoch(); }); " is 124.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,RemoteDictionary<R;K;V>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Remoting.cs,GetEnumerator,The length of the statement  "                return this.observedCollectionConverter(this.collection.Select(x => new KeyValuePair<K' V>(x.Key' this.valueSelector(x.Value)))).GetEnumerator(); " is 145.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,RemoteDictionary<R;K;V>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Remoting.cs,GetEnumerator,The length of the statement  "                return this.observedCollectionConverter(this.collection.Select(x => new KeyValuePair<K' V>(x.Key' this.valueSelector(x.Value)))).GetEnumerator(); " is 145.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithAggregation<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithAggregation.cs,Introduce,The length of the statement  "                var result = new CollectionTraceWithAggregationIncrement<S>(incr.Weight + weight' timeIndex' axpy(1' element' incr.Value)); " is 123.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithAggregation<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithAggregation.cs,Introduce,The length of the statement  "                Introduce(ref thisOffsetLength' axpy(scale' handle.Array[handle.Offset + i].Value' default(S))' scale * handle.Array[handle.Offset + i].Weight' handle.Array[handle.Offset + i].TimeIndex); " is 187.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceAsHashTable,The length of the statement  "                        Logging.Error("handle.Array.Length={0}' handle.Offset={1}' handle.Length={2}' index={3}' randomOffsets[into.Length][i]={4}"' " is 124.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceIncrements,The length of the statement  "                            Introduce(ref thisOffsetLength' recordHandle.Array[recordHandle.Offset + j].record' scale * recordHandle.Array[recordHandle.Offset + j].weight' handle.Array[handle.Offset + i].TimeIndex); " is 187.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceRecords,The length of the statement  "                        Introduce(ref thisOffsetLength' handle.Array[handle.Offset + i].record' scale * handle.Array[handle.Offset + i].weight); " is 120.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,SubtractStrictlyPriorDifferences,The length of the statement  "                handle.Array[handle.Offset + position] = new CollectionTraceWithHeapIncrement(UpdateAccumulation(ref ol' timeIndex)' timeIndex); " is 128.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,Introduce,The length of the statement  "                Introduce(ref thisOffsetLength' default(S)' scale * handle.Array[handle.Offset + i].Weight' handle.Array[handle.Offset + i].TimeIndex); " is 135.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,SubtractStrictlyPriorDifferences,The length of the statement  "                handle.Array[handle.Offset + position] = new CollectionTraceWithoutHeapIncrement(-1 * UpdateAccumulation(ref ol' timeIndex)' timeIndex); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulOperator<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStateful.cs,createOutputTrace,The length of the statement  "            return new CollectionTraceWithHeap<R>((x' y) => internTable.LessThan(x' y)' x => internTable.UpdateTime(x)' this.Stage.Placement.Count); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulOperator<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStateful.cs,NewOutputMinusOldOutput,The length of the statement  "                outputTrace.Introduce(ref outputWorkspace' outputCollection.Array[i].record' -outputCollection.Array[i].weight' timeIndex); " is 123.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,ConservativeBinaryStatefulOperator<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStateful.cs,createOutputTrace,The length of the statement  "            return new CollectionTraceWithHeap<R>((x' y) => internTable.LessThan(x' y)' x => internTable.UpdateTime(x)' this.Stage.Placement.Count); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,ConservativeBinaryStatefulOperator<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStateful.cs,NewOutputMinusOldOutput,The length of the statement  "                outputTrace.Introduce(ref outputWorkspace' outputCollection.Array[i].record' -outputCollection.Array[i].weight' timeIndex); " is 123.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,createOutputTrace,The length of the statement  "            return new CollectionTraceWithHeap<R>((x' y) => internTable.LessThan(x' y)' x => internTable.UpdateTime(x)' this.Stage.Placement.Count); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput1,The length of the statement  "            inputTrace1.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed1' value1(entry.record)' entry.weight' internTable.Intern(time)); " is 143.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput2,The length of the statement  "            inputTrace2.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed2' value2(entry.record)' entry.weight' internTable.Intern(time)); " is 143.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,NewOutputMinusOldOutput,The length of the statement  "                outputTrace.Introduce(ref outputWorkspace' outputCollection.Array[i].record' -outputCollection.Array[i].weight' timeIndex); " is 123.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulOperator<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStateful.cs,createOutputTrace,The length of the statement  "            return new CollectionTraceWithHeap<R>((x' y) => internTable.LessThan(x' y)' x => internTable.UpdateTime(x)' this.Stage.Placement.Count); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,ConservativeUnaryStatefulOperator<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStateful.cs,createOutputTrace,The length of the statement  "            return new CollectionTraceWithHeap<R>((x' y) => internTable.LessThan(x' y)' x => internTable.UpdateTime(x)' this.Stage.Placement.Count); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,createOutputTrace,The length of the statement  "            return new CollectionTraceWithHeap<R>((x' y) => internTable.LessThan(x' y)' x => internTable.UpdateTime(x)' this.Stage.Placement.Count); " is 136.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,OnInput,The length of the statement  "            inputTrace.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed' value(entry.record)' entry.weight' internTable.Intern(time)); " is 140.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulOperatorWithAggregation<K;V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulWithAggregation.cs,createInputTrace,The length of the statement  "            return new CollectionTraceWithAggregation<V>((i' j) => this.internTable.LessThan(i' j)' i => this.internTable.UpdateTime(i)' axpy' isZero); " is 139.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Join<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The length of the statement  "                            output.Send(resultSelector(k' v' differences2.Array[j].record).ToWeighted(entry.weight * differences2.Array[j].weight)); " is 120.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,Join<K;V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The length of the statement  "                            output.Send(resultSelector(k' differences1.Array[j].record' v).ToWeighted(entry.weight * differences1.Array[j].weight)); " is 120.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The length of the statement  "                            output.Send(resultSelector(k' v' differences2.Array[j].record).ToWeighted(entry.weight * differences2.Array[j].weight)); " is 120.
Long Statement,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The length of the statement  "                            output.Send(resultSelector(k' differences1.Array[j].record' v).ToWeighted(entry.weight * differences1.Array[j].weight)); " is 120.
Complex Conditional,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,MinIntKeyed<V;M;S;T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Min.cs,NewOutputMinusOldOutput,The conditional expression  "((value.CompareTo(oldValue) < 0 || !oldFound)&& entry.weight > 0) || (value.Equals(oldValue) && entry.weight <= 0)"  is complex.
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,IntPair,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CommonNaiadables.cs,GetHashCode,The following statement contains a magic number: return 47 * s + 36425232 * t;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,IntPair,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CommonNaiadables.cs,GetHashCode,The following statement contains a magic number: return 47 * s + 36425232 * t;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,LatticeInternTable<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\LatticeInternTable.cs,Intern,The following statement contains a magic number: var tempTimes = new T[count * 2];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,LatticeInternTable<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\LatticeInternTable.cs,Intern,The following statement contains a magic number: var tempRedir = new int[count * 2];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,NaiadList<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\NaiadList.cs,EnsureCapacity,The following statement contains a magic number: var newArraySize = Math.Max(2 * Array.Length' 4);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,NaiadList<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\NaiadList.cs,EnsureCapacity,The following statement contains a magic number: var newArraySize = Math.Max(2 * Array.Length' 4);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow,NaiadList<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\NaiadList.cs,EnsureCapacity,The following statement contains a magic number: newArraySize = 2 * newArraySize;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,Add,The following statement contains a magic number: spine[this.Count >> 16] = new T[1 << 16];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,Add,The following statement contains a magic number: spine[this.Count >> 16] = new T[1 << 16];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,Add,The following statement contains a magic number: spine[this.Count >> 16] == null
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,Add,The following statement contains a magic number: spine[this.Count >> 16][this.Count % (1 << 16)] = element;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,Add,The following statement contains a magic number: spine[this.Count >> 16][this.Count % (1 << 16)] = element;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,ElementAt,The following statement contains a magic number: return spine[index >> 16][index & 0xFFFF];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,SpinedList<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTrace.cs,SpinedList,The following statement contains a magic number: spine = new T[1 << 16][];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithAggregation<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithAggregation.cs,CollectionTraceWithAggregation,The following statement contains a magic number: increments = new VariableLengthHeap<CollectionTraceWithAggregationIncrement<S>>(32);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,RandomOffsets,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,RandomOffsets,The following statement contains a magic number: Offsets = new int[32][];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,RandomOffsets,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,RandomOffsets,The following statement contains a magic number: Offsets[i] = new int[10];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceAsHashTable,The following statement contains a magic number: i < 10
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,IntroduceAsHashTable,The following statement contains a magic number: handle = EnsureAllocation(ref into' 2 * handle.Length);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,CollectionTraceWithHeap,The following statement contains a magic number: records = new VariableLengthHeap<Weighted<S>>(32);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithHeap.cs,CollectionTraceWithHeap,The following statement contains a magic number: increments = new VariableLengthHeap<CollectionTraceWithHeapIncrement>(32);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,CollectionTraceWithoutHeap<S>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\CollectionTraceWithoutHeap.cs,CollectionTraceWithoutHeap,The following statement contains a magic number: increments = new VariableLengthHeap<CollectionTraceWithoutHeapIncrement>(32);
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,RegionHandle,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\Heaps.cs,RegionHandle,The following statement contains a magic number: (Identifier >> HeapIndex) % 2 == 0
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,VariableLengthHeap,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\Heaps.cs,VariableLengthHeap,The following statement contains a magic number: heaps = Enumerable.Range(0' heapCount).Select(i => new FixedLengthHeap<T>(1 << i' 1 << 16)).ToArray();
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.CollectionTrace,OffsetLength,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\CollectionTrace\OffsetLength.cs,GetOffsetLength,The following statement contains a magic number: (offsetLength >> length) % 2 == 0
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput1,The following statement contains a magic number: keyIndices[index / 65536] = new BinaryKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput1,The following statement contains a magic number: keyIndices[index / 65536] = new BinaryKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput1,The following statement contains a magic number: keyIndices[index / 65536] == null
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput1,The following statement contains a magic number: inputTrace1.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed1' value1(entry.record)' entry.weight' internTable.Intern(time));
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput1,The following statement contains a magic number: inputTrace1.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed1' value1(entry.record)' entry.weight' internTable.Intern(time));
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput2,The following statement contains a magic number: keyIndices[index / 65536] = new BinaryKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput2,The following statement contains a magic number: keyIndices[index / 65536] = new BinaryKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput2,The following statement contains a magic number: keyIndices[index / 65536] == null
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput2,The following statement contains a magic number: inputTrace2.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed2' value2(entry.record)' entry.weight' internTable.Intern(time));
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,OnInput2,The following statement contains a magic number: inputTrace2.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed2' value2(entry.record)' entry.weight' internTable.Intern(time));
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: var traceIndices = keyIndices[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: var traceIndices = keyIndices[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: keyIndices[index / 65536][index % 65536] = traceIndices;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: keyIndices[index / 65536][index % 65536] = traceIndices;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,BinaryStatefulIntKeyedOperator<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\BinaryStatefulIntKeyed.cs,BinaryStatefulIntKeyedOperator,The following statement contains a magic number: keyIndices = new BinaryKeyIndices[65536][];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,OnInput,The following statement contains a magic number: keyIndices[index / 65536] = new UnaryKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,OnInput,The following statement contains a magic number: keyIndices[index / 65536] = new UnaryKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,OnInput,The following statement contains a magic number: keyIndices[index / 65536] == null
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,OnInput,The following statement contains a magic number: inputTrace.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed' value(entry.record)' entry.weight' internTable.Intern(time));
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,OnInput,The following statement contains a magic number: inputTrace.Introduce(ref keyIndices[index / 65536][index % 65536].unprocessed' value(entry.record)' entry.weight' internTable.Intern(time));
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: var traceIndices = keyIndices[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: var traceIndices = keyIndices[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: keyIndices[index / 65536][index % 65536] = traceIndices;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,Update,The following statement contains a magic number: keyIndices[index / 65536][index % 65536] = traceIndices;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.OperatorImplementations,UnaryStatefulIntKeyedOperator<V;S;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\OperatorImplementations\UnaryStatefulIntKeyed.cs,UnaryStatefulIntKeyedOperator,The following statement contains a magic number: keyIndices = new UnaryKeyIndices[65536][];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: JoinKeys[index / 65536] = new JoinIntKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: JoinKeys[index / 65536] = new JoinIntKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: JoinKeys[index / 65536] == null
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: var state = JoinKeys[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: var state = JoinKeys[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: JoinKeys[index / 65536][index % 65536] = state;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput1,The following statement contains a magic number: JoinKeys[index / 65536][index % 65536] = state;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: JoinKeys[index / 65536] = new JoinIntKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: JoinKeys[index / 65536] = new JoinIntKeyIndices[65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: JoinKeys[index / 65536] == null
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: var state = JoinKeys[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: var state = JoinKeys[index / 65536][index % 65536];
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: JoinKeys[index / 65536][index % 65536] = state;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,OnInput2,The following statement contains a magic number: JoinKeys[index / 65536][index % 65536] = state;
Magic Number,Microsoft.Research.Naiad.Frameworks.DifferentialDataflow.Operators,JoinIntKeyed<V1;V2;S1;S2;T;R>,D:\research\architectureSmells\repos\MicrosoftResearch_Naiad\Frameworks\DifferentialDataflow\Operators\Join.cs,JoinIntKeyed,The following statement contains a magic number: JoinKeys = new JoinIntKeyIndices[65536][];
