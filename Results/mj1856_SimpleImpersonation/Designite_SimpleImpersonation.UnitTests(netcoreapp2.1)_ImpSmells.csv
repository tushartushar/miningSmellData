Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: await Task.Delay(rnd.Next(5' 100));
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: await Task.Delay(rnd.Next(5' 100));
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: var name2 = await Impersonation.RunAsUser(credentials' LogonType.Interactive'                      async () =>                      {                          await Task.Delay(rnd.Next(5' 100));                          var name = WindowsIdentity.GetCurrent().Name;                          await Task.Delay(rnd.Next(5' 100));                          return name;                      });
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: var name2 = await Impersonation.RunAsUser(credentials' LogonType.Interactive'                      async () =>                      {                          await Task.Delay(rnd.Next(5' 100));                          var name = WindowsIdentity.GetCurrent().Name;                          await Task.Delay(rnd.Next(5' 100));                          return name;                      });
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: var name2 = await Impersonation.RunAsUser(credentials' LogonType.Interactive'                      async () =>                      {                          await Task.Delay(rnd.Next(5' 100));                          var name = WindowsIdentity.GetCurrent().Name;                          await Task.Delay(rnd.Next(5' 100));                          return name;                      });
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: var name2 = await Impersonation.RunAsUser(credentials' LogonType.Interactive'                      async () =>                      {                          await Task.Delay(rnd.Next(5' 100));                          var name = WindowsIdentity.GetCurrent().Name;                          await Task.Delay(rnd.Next(5' 100));                          return name;                      });
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: await Task.Delay(rnd.Next(5' 100));
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: await Task.Delay(rnd.Next(5' 100));
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: await Task.Delay(500);
Magic Number,SimpleImpersonation.UnitTests,ImpersonationTests,D:\research\architectureSmells\repos\mj1856_SimpleImpersonation\test\SimpleImpersonation.UnitTests\ImpersonationTests.cs,Impersonate_RunAsUser_Async,The following statement contains a magic number: var tasks = Enumerable.Range(1' 50).Select(x => Task.Run(TaskFactory));
