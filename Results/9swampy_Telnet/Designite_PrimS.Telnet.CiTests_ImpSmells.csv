Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnEscapedIac,The length of the statement  "        A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(new int[] { (int)Commands.InterpretAsCommand' (int)Commands.InterpretAsCommand }); " is 147.
Long Statement,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDoSgaByteStreamShouldReturnEmptyAndReplyIacWill,The length of the statement  "        A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(new int[] { (int)Commands.InterpretAsCommand' (int)Commands.Do' (int)Options.SuppressGoAhead }); " is 161.
Long Statement,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDo1ByteStreamShouldReturnEmptyAndReplyIacWont,The length of the statement  "          A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(new int[] { (int)Commands.InterpretAsCommand' (int)Commands.Do' 1 }); " is 134.
Long Statement,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDont1ByteStreamShouldReturnEmptyAndReplyIacDont,The length of the statement  "          A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(new int[] { (int)Commands.InterpretAsCommand' (int)Commands.Dont' 1 }); " is 136.
Long Statement,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDontSgaByteStreamShouldReturnEmptyAndReplyIacDo,The length of the statement  "          A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(new int[] { (int)Commands.InterpretAsCommand' (int)Commands.Dont' (int)Options.SuppressGoAhead }); " is 163.
Long Statement,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,SpinListen,The length of the statement  "          handler.Send(Encoding.ASCII.GetBytes("show statistic wan2\n\r WAN1 total TX: 0 Bytes 'RX: 0 Bytes \n\r WAN2 total TX: 6.3 GB 'RX: 6.9 GB \n\r WAN3 total TX: 0 Bytes 'RX: 0 Bytes \n\r WAN4 total TX: 0 Bytes 'RX: 0 Bytes \n\r WAN5 total TX: 0 Bytes 'RX: 0 Bytes \n\r>")); " is 269.
Long Statement,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ShouldRespondWithWan2InfoRegexTerminated,The length of the statement  "          string s = await client.TerminatedReadAsync(new Regex(".*>$")' TimeSpan.FromMilliseconds(timeoutMs)).ConfigureAwait(false); " is 123.
Long Statement,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ShouldLoginCrLf,The length of the statement  "          (await client.TryLoginAsync("username"' "password"' timeoutMs' linefeed: "\r\n").ConfigureAwait(false)).Should().Be(true); " is 122.
Long Statement,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ReadmeExample,The length of the statement  "          System.Text.RegularExpressions.Regex regEx = new System.Text.RegularExpressions.Regex("(?!WAN2 total TX: )([0-9.]*)(?! GB 'RX: )([0-9.]*)(?= GB)"); " is 147.
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnEmptyResponse,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnCharA,The following statement contains a magic number: A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(65);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnCharA,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnEscapedIac,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnEmpty,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDoSgaByteStreamShouldReturnEmptyAndReplyIacWill,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDo1ByteStreamShouldReturnEmptyAndReplyIacWont,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIac2ByteStreamShouldReturnEmptyAndNotReply,The following statement contains a magic number: A.CallTo(() => networkStream.ReadByte()).ReturnsNextFromSequence(new int[] { (int)Commands.InterpretAsCommand' 2 });
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIac2ByteStreamShouldReturnEmptyAndNotReply,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDont1ByteStreamShouldReturnEmptyAndReplyIacDont,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,WhenIacDontSgaByteStreamShouldReturnEmptyAndReplyIacDo,The following statement contains a magic number: string response = await sut.ReadAsync(TimeSpan.FromMilliseconds(10)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnUponCancellation,The following statement contains a magic number: A.CallTo(() => networkStream.ReadByte()).Returns(142);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnUponCancellation,The following statement contains a magic number: cancellationToken.CancelAfter(100);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnUponCancellation,The following statement contains a magic number: await sut.ReadAsync(TimeSpan.FromMilliseconds(1000)).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,ByteStreamHandlerTests,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\ByteStreamHandlerTests.cs,ByteStreamShouldReturnUponCancellation,The following statement contains a magic number: stopwatch.ElapsedMilliseconds.Should().BeLessThan(500);
Magic Number,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,TelnetServerBase,The following statement contains a magic number: this.Port = 11000;
Magic Number,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,Dispose,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,SpinListen,The following statement contains a magic number: this.Listen(10);
Magic Number,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,SpinListen,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,ReceiveResponse,The following statement contains a magic number: byte[] bytes = new byte[1024];
Magic Number,PrimS.Telnet.CiTests,TelnetServerBase,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\TelnetServerBase.cs,ReceiveResponse,The following statement contains a magic number: data += Encoding.ASCII.GetString(bytes' 0' bytesRec).Trim((char)255);
Magic Number,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ShouldRespondWithWan2Info,The following statement contains a magic number: (await client.TryLoginAsync("username"' "password"' 1500).ConfigureAwait(false)).Should().Be(true);
Magic Number,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ShouldRespondWithWan2InfoCrLf,The following statement contains a magic number: (await client.TryLoginAsync("username"' "password"' 1500' linefeed: "\r\n").ConfigureAwait(false)).Should().Be(true);
Magic Number,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ShouldRespondWithWan2InfoRegexTerminated,The following statement contains a magic number: (await client.TryLoginAsync("username"' "password"' 1500).ConfigureAwait(false)).Should().Be(true);
Magic Number,PrimS.Telnet.CiTests,WithClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithClient.cs,ReadmeExample,The following statement contains a magic number: (tx + rx).Should().BeLessThan(50);
Magic Number,PrimS.Telnet.CiTests,WithFakeClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithFakeClient.cs,ShouldWaitRoughlyOneTimeout,The following statement contains a magic number: DateTime.Now.Subtract(start).Should().BeCloseTo(timeout' 35);
Magic Number,PrimS.Telnet.CiTests,WithFakeClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithFakeClient.cs,ShouldWaitRoughlyOneMillisecondSpin,The following statement contains a magic number: int millisecondsSpin = 150;
Magic Number,PrimS.Telnet.CiTests,WithFakeClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithFakeClient.cs,ShouldWaitRoughlyOneMillisecondSpin,The following statement contains a magic number: await sut.TerminatedReadAsync("."' new TimeSpan(0' 0' 0' 0' 10)' millisecondsSpin).ConfigureAwait(false);
Magic Number,PrimS.Telnet.CiTests,WithFakeClient,D:\research\architectureSmells\repos\9swampy_Telnet\PrimS.Telnet.CiTests\WithFakeClient.cs,ShouldWaitRoughlyOneMillisecondSpin,The following statement contains a magic number: stopwatch.Elapsed.Should().BeCloseTo(TimeSpan.FromMilliseconds(millisecondsSpin)' 70);
