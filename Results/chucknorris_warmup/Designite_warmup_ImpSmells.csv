Implementation smell,Namespace,Class,File,Method,Description
Long Statement,warmup.commands,AddTemplateFolder,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTemplateFolder.cs,Run,The length of the statement  "            CommandRunner.Run("cmd.exe"' string.Format("/c mklink /d \"{0}\" \"{1}\""' linkFolder' targetPath)' waitForExit: true' assertFullPath: false); " is 142.
Long Statement,warmup.commands,AddTemplateFolder,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTemplateFolder.cs,ShowHelp,The length of the statement  "            Console.WriteLine("Example: 'SomeTemplate' is the name of the template to add' \"C:\\somefolder\\somerepo\\SomeTemplate\" is the path to the template."); " is 153.
Long Statement,warmup.commands,AddTextReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTextReplacement.cs,Run,The length of the statement  "                    Console.WriteLine("Adding '{0}' with a replacement of '{1}' to the configuration."' find' replace.Replace("\""' string.Empty)); " is 127.
Long Statement,warmup.commands,GenerateWarmup,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\GenerateWarmup.cs,ShowHelp,The length of the statement  "            Console.WriteLine("Example: 'base' is a subfolder in your warmup template that has a warmup template in it. 'Bob' is what you want to use instead of the token '__NAME__'."); " is 173.
Complex Conditional,warmup,TokenReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\TokenReplacement.cs,GetFileEncoding,The conditional expression  "bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == 0xfe && bom[3] == 0xff"  is complex.
Magic Number,warmup.commands,AddTemplateFolder,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTemplateFolder.cs,Run,The following statement contains a magic number: args == null || args.Length != 3
Magic Number,warmup.commands,AddTemplateFolder,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTemplateFolder.cs,Run,The following statement contains a magic number: var targetPath = args[2].Replace("\""' string.Empty);
Magic Number,warmup.commands,AddTextReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTextReplacement.cs,Run,The following statement contains a magic number: args == null || args.Length != 3
Magic Number,warmup.commands,AddTextReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\AddTextReplacement.cs,Run,The following statement contains a magic number: var replace = args[2];
Magic Number,warmup.commands,GenerateWarmup,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\GenerateWarmup.cs,Run,The following statement contains a magic number: args == null || args.Length < 2
Magic Number,warmup.commands,GenerateWarmup,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\GenerateWarmup.cs,Run,The following statement contains a magic number: target = args[2];
Magic Number,warmup.commands,GenerateWarmup,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\commands\GenerateWarmup.cs,Run,The following statement contains a magic number: args.Length > 2
Magic Number,warmup,TokenReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\TokenReplacement.cs,GetFileEncoding,The following statement contains a magic number: var bom = new byte[4];
Magic Number,warmup,TokenReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\TokenReplacement.cs,GetFileEncoding,The following statement contains a magic number: file.Read(bom' 0' 4);
Magic Number,warmup,TokenReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\TokenReplacement.cs,GetFileEncoding,The following statement contains a magic number: bom[0] == 0xef && bom[1] == 0xbb && bom[2] == 0xbf
Magic Number,warmup,TokenReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\TokenReplacement.cs,GetFileEncoding,The following statement contains a magic number: bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == 0xfe && bom[3] == 0xff
Magic Number,warmup,TokenReplacement,D:\research\architectureSmells\repos\chucknorris_warmup\warmup\TokenReplacement.cs,GetFileEncoding,The following statement contains a magic number: bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == 0xfe && bom[3] == 0xff
