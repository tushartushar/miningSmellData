Implementation smell,Namespace,Class,File,Method,Description
Long Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The method has 186 lines of code.
Long Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The method has 187 lines of code.
Long Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The method has 189 lines of code.
Long Method,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The method has 189 lines of code.
Long Method,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The method has 140 lines of code.
Long Method,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The method has 173 lines of code.
Complex Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,Cyclomatic complexity of the method is 29
Complex Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,Cyclomatic complexity of the method is 37
Complex Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,Cyclomatic complexity of the method is 105
Complex Method,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,Cyclomatic complexity of the method is 41
Complex Method,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Init,Cyclomatic complexity of the method is 19
Complex Method,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,Cyclomatic complexity of the method is 47
Complex Method,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,Cyclomatic complexity of the method is 37
Complex Method,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,Cyclomatic complexity of the method is 11
Complex Method,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,Cyclomatic complexity of the method is 8
Long Parameter List,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The method has 34 parameters.
Long Parameter List,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The method has 26 parameters.
Long Parameter List,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The method has 6 parameters.
Long Parameter List,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,Board,The method has 6 parameters.
Long Parameter List,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The method has 61 parameters.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The length of the statement  "		dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false); " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,HandleInput,The length of the statement  "		top &= !board.HandleInput (control' top' !showTimeup && !gameEndFlag && shakedDice && !doubt && !showRoundStartMessage && myTurn >= 0 && myTurn == turn); " is 153.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50); " is 250.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "				Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25)); " is 157.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		Utility.DrawCenterStringToHandle ("期待値(数字)：" + (n / 3.0).ToString ("F2")' GameControl.SWidth / 2' y + 12' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)); " is 171.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		Utility.DrawCenterStringToHandle ("期待値(☆)：" + (n / 6.0).ToString ("F2")' GameControl.SWidth / 2' y + 38' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)); " is 170.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE); " is 139.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "			dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false); " is 157.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "				DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70); " is 193.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "				DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70); " is 192.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70); " is 202.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85); " is 193.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60); " is 216.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25); " is 248.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "				DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50); " is 239.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "				DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50); " is 199.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "			DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50); " is 201.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50); " is 177.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "			DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70); " is 218.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "		//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 ); " is 125.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The length of the statement  "			DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40)); " is 196.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "		board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents); " is 141.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "			control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false); " is 311.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "				doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  { " is 138.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "			control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false); " is 335.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "			control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false); " is 309.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "				endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  { " is 141.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "			showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  { " is 137.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "			rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  { " is 145.
Long Statement,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The length of the statement  "			endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  { " is 145.
Long Statement,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The length of the statement  "		changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  { " is 144.
Long Statement,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The length of the statement  "		leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  { " is 141.
Long Statement,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The length of the statement  "		changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  { " is 144.
Long Statement,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The length of the statement  "		changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  { " is 144.
Long Statement,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The length of the statement  "					network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]); " is 139.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 274.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 278.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 274.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 278.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 271.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 276.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 275.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 280.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 240.
Long Statement,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The length of the statement  "			select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  { " is 239.
Complex Conditional,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The conditional expression  "endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))"  is complex.
Complex Conditional,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The conditional expression  "!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice"  is complex.
Complex Conditional,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The conditional expression  "!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound"  is complex.
Magic Number,GameBase,Bluff,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Bluff.cs,GetGameInfo,The following statement contains a magic number: if (info == null) {  	info = new GameInfo ();  	info.Name = "Bluff";  	info.Version = 1;  	info.PlayerMinNumber = 2;  	info.PlayerMaxNumber = 8;  	info.IsValidGameRecord = true;  	//info.HandOverRoomHost = true;  }  
Magic Number,GameBase,Bluff,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Bluff.cs,GetGameInfo,The following statement contains a magic number: if (info == null) {  	info = new GameInfo ();  	info.Name = "Bluff";  	info.Version = 1;  	info.PlayerMinNumber = 2;  	info.PlayerMaxNumber = 8;  	info.IsValidGameRecord = true;  	//info.HandOverRoomHost = true;  }  
Magic Number,GameBase,Bluff,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Bluff.cs,GetGameInfo,The following statement contains a magic number: info.PlayerMinNumber = 2;  
Magic Number,GameBase,Bluff,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Bluff.cs,GetGameInfo,The following statement contains a magic number: info.PlayerMaxNumber = 8;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: switch (index) {  case 0:  	back = new Utility.GraphicHandle (DrawHelper.LoadRandomGraph ()' false);  	break;  case 1:  	dice = new Utility.GraphicHandle[7];  	break;  case 2:  	dice [0] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice0.bmp")' false);  	break;  case 3:  	dice [1] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice1.bmp")' false);  	break;  case 4:  	dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  	break;  case 5:  	dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  	break;  case 6:  	dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  	break;  case 7:  	dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  	break;  case 8:  	dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  	break;  default:  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: dice = new Utility.GraphicHandle[7];  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: dice [2] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice2.bmp")' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: dice [3] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice3.bmp")' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: dice [4] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice4.bmp")' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: dice [5] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice5.bmp")' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,LoadContent,The following statement contains a magic number: dice [6] = new Utility.GraphicHandle (Utility.LoadGraphFromAssembly (Assembly.GetExecutingAssembly ()' "GameBase.IMG.dice6.bmp")' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("予想：" + board.ExpectationNumber + "  結果：" + showDoubtResultReal' GameControl.SWidth / 2' GameControl.SHeight / 4' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in playerStatus.Keys) {  	var status = playerStatus [item];  	string str = (status.Turn == turn ? "⇒" : "") + (status.Turn + 1) + ":" + status.Name;  	if (status.WaitEndRound || status.WaitRematch) {  		str += "待機中" + dotStr;  	}  	if (status.NextNumber >= 0) {  		Utility.DrawCenterStringToHandle (str + " " + status.Number + "⇒" + status.NextNumber' sx' y' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else if (status.Turn == myTurn) {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_GREEN' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	else {  		Utility.DrawCenterStringToHandle (str' sx' y' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  	}  	if (shakedDice) {  		int diceNum = status.diceSet.DiceList.Count;  		int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  		if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  			foreach (var d in status.diceSet.DiceList) {  				dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  		else {  			foreach (var d in status.diceSet.DiceList) {  				dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  				x += 27;  			}  		}  	}  	y += 26;  	n += status.Number;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice) {  	int diceNum = status.diceSet.DiceList.Count;  	int x = GameControl.SWidth * 8 / 13 - (diceNum - 1) * 27 / 2;  	if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  		foreach (var d in status.diceSet.DiceList) {  			dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  	else {  		foreach (var d in status.diceSet.DiceList) {  			dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  			x += 27;  		}  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRound || (showDiceSet && (status.Turn == myTurn || diceSet.DiceList.Count <= 0))) {  	foreach (var d in status.diceSet.DiceList) {  		dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  else {  	foreach (var d in status.diceSet.DiceList) {  		dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  		x += 27;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [d.Number].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: x += 27;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var d in status.diceSet.DiceList) {  	dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  	x += 27;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [6].DrawCenterGraph (x' y + 13' 25' 25' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: x += 27;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: y += 26;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("期待値(数字)：" + (n / 3.0).ToString ("F2")' GameControl.SWidth / 2' y + 12' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("期待値(数字)：" + (n / 3.0).ToString ("F2")' GameControl.SWidth / 2' y + 12' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("期待値(数字)：" + (n / 3.0).ToString ("F2")' GameControl.SWidth / 2' y + 12' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("期待値(☆)：" + (n / 6.0).ToString ("F2")' GameControl.SWidth / 2' y + 38' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("期待値(☆)：" + (n / 6.0).ToString ("F2")' GameControl.SWidth / 2' y + 38' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("期待値(☆)：" + (n / 6.0).ToString ("F2")' GameControl.SWidth / 2' y + 38' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (shakedDice && diceSet.DiceList.Count > 0) {  	int size = GameControl.SHeight / 15;  	int left = GameControl.SWidth / 2 - (size + 5) * diceSet.DiceList.Count / 2;  	int right = GameControl.SWidth - left;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  	DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	foreach (var item in diceSet.DiceList) {  		dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  		left += size + 5;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.DrawBox (left - 20' GameControl.SHeight * 4 / 5 - 20' right + 20' GameControl.SHeight * 4 / 5 + size + 20' control.COLOR_BLUE' DX.TRUE);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in diceSet.DiceList) {  	dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  	left += size + 5;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in diceSet.DiceList) {  	dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  	left += size + 5;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in diceSet.DiceList) {  	dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  	left += size + 5;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in diceSet.DiceList) {  	dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  	left += size + 5;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in diceSet.DiceList) {  	dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  	left += size + 5;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: foreach (var item in diceSet.DiceList) {  	dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  	left += size + 5;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: dice [showDiceSet || endRound ? item.Number : 6].DrawExtendGraph (left' GameControl.SHeight * 4 / 5' left + size' GameControl.SHeight * 4 / 5 + size' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: left += size + 5;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (!oppRematchFlag && !rematchFlag) {  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  		if (win) {  			DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		else {  			DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  		}  		DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  	}  }  else if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!oppRematchFlag && !rematchFlag) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  	if (win) {  		DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	else {  		DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_NOBLEND' 0);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 200);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (win) {  	DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  else {  	DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("勝利！"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("敗北"' GameControl.SWidth / 2' GameControl.SHeight / 7' control.COLOR_GRAY1' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gotCountDown) {  	DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (countDown' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showTimeup) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showTimeup) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showTimeup) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showTimeup) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showTimeup) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showTimeup) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("時間切れ"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_85)' 3' -3' 85);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showRoundStartMessage) {  	DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showRoundStartMessage) {  	DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showRoundStartMessage) {  	DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showRoundStartMessage) {  	DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showRoundStartMessage) {  	DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("Round" + (round + 1) + "の開始"' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_60)' 3' -3' 60);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (recvResult) {  	DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("あなたの戦績：" + resultWin + "勝 " + resultLose + "敗 "' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 - 40' control.COLOR_GRAY1' control.COLOR_WHITE' control.GetFont (FontDefines.FONT_SIZE_25)' 3' -3' 25);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!showDoubtResult && !doubt && !showTimeup) {  	if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		try {  			Status status = playerStatus.Values.First (item => item.Turn == turn);  			string str = status.Name + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  		catch {  			string str = "プレイヤー" + (turn + 1) + "の手を待っています";  			DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  		}  	}  	else if (sendingAction) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn != myTurn && shakedDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	try {  		Status status = playerStatus.Values.First (item => item.Turn == turn);  		string str = status.Name + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  	catch {  		string str = "プレイヤー" + (turn + 1) + "の手を待っています";  		DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  	}  }  else if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: try {  	Status status = playerStatus.Values.First (item => item.Turn == turn);  	string str = status.Name + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  catch {  	string str = "プレイヤー" + (turn + 1) + "の手を待っています";  	DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + String.Join (""' Enumerable.Repeat ("."' dot))' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (str + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (sendingAction) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx ("通信中" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_50)' 3' -3' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (myTurn < 0) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (myTurn < 0) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (myTurn < 0) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (myTurn < 0) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle ("しばらくお待ちください" + dotStr' GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont (FontDefines.FONT_SIZE_50)' 50);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResult) {  	if (showDoubtResultCount >= 0) {  		DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  	}  	//if( sentEndRound )  	//{  	//	Utility.DrawCenterStringToHandle(  	//		"しばらくお待ちください" + dotStr'  	//		GameControl.SWidth / 2' GameControl.SHeight / 2' control.COLOR_YELLOW' control.GetFont( FontDefines.FONT_SIZE_50 )' 50 );  	//}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (showDoubtResultCount >= 0) {  	DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawCenterStringToHandleEx (showDoubtResultCount + ""' GameControl.SWidth * 5 / 6' GameControl.SHeight * 5 / 6' control.COLOR_GRAY1' control.COLOR_RED' control.GetFont (FontDefines.FONT_SIZE_70)' 3' -3' 70);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (endRoomCount >= 0) {  		DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (endRoomCount >= 0) {  		DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (endRoomCount >= 0) {  		DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (gameEndFlag) {  	if (endRoomCount >= 0) {  		DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRoomCount >= 0) {  	DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRoomCount >= 0) {  	DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRoomCount >= 0) {  	DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: if (endRoomCount >= 0) {  	DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Draw,The following statement contains a magic number: DrawHelper.DrawStringToHandleEx (GameControl.SWidth * 3 / 4' GameControl.SHeight * 9 / 16' endRoomCount + ""' control.COLOR_GRAY1' control.COLOR_OLIVE' control.GetFont (FontDefines.FONT_SIZE_40));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: showRouondStartMessageCount = 2000;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: if (playerStatus.ContainsKey (id)) {  	playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  }  else {  	playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: if (playerStatus.ContainsKey (id)) {  	playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  }  else {  	playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: showRouondStartMessageCount = 2000;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: board.Set (int.Parse (command [1])' int.Parse (command [2]));  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: if (id == client.Params.User.UserID) {  	recvResult = true;  	resultWin = int.Parse (command [1]);  	resultLose = int.Parse (command [2]);  	gameEndFlag = true;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: resultLose = int.Parse (command [2]);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: if (id == client.Params.User.UserID) {  	timeup = true;  	showTimeupCount = 3000;  	showTimeup = true;  }  else {  	showTimeupCount = 3000;  	showTimeup = true;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: if (id == client.Params.User.UserID) {  	timeup = true;  	showTimeupCount = 3000;  	showTimeup = true;  }  else {  	showTimeupCount = 3000;  	showTimeup = true;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: showTimeupCount = 3000;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following statement contains a magic number: showTimeupCount = 3000;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!initialized) {  	initialized = true;  	board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  	client.AddGameCommand ("ready");  	control.StartButton ();  	return;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!initialized) {  	initialized = true;  	board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  	client.AddGameCommand ("ready");  	control.StartButton ();  	return;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!initialized) {  	initialized = true;  	board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  	client.AddGameCommand ("ready");  	control.StartButton ();  	return;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!initialized) {  	initialized = true;  	board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  	client.AddGameCommand ("ready");  	control.StartButton ();  	return;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!initialized) {  	initialized = true;  	board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  	client.AddGameCommand ("ready");  	control.StartButton ();  	return;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!initialized) {  	initialized = true;  	board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  	client.AddGameCommand ("ready");  	control.StartButton ();  	return;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: board = new Board (GameControl.SWidth / 2' GameControl.SHeight / 2' GameControl.SWidth * 4 / 5' GameControl.SHeight * 2 / 3' dice' contents);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: while (drawDotCount >= 1000) {  	drawDotCount -= 1000;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: while (drawDotCount >= 1000) {  	drawDotCount -= 1000;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: drawDotCount -= 1000;  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!gameEndFlag && myTurn >= 0 && turn == myTurn) {  	if (!showRoundStartMessage && !drawTurnStartMessage) {  		drawTurnStartMessage = true;  		string str = "あなたの番です．";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  	}  	if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  		if (doubt || !board.Expectating) {  			sendAction = true;  		}  		if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  			string str = "ダウト！";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				doubt = true;  				board.CancelExpectingDice ();  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  	}  }  else {  	drawTurnStartMessage = false;  	if (doubtButton != null) {  		doubtButton = null;  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && !drawTurnStartMessage) {  	drawTurnStartMessage = true;  	string str = "あなたの番です．";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_OLIVE' FontDefines.FONT_SIZE_50' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  	if (doubt || !board.Expectating) {  		sendAction = true;  	}  	if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			doubt = true;  			board.CancelExpectingDice ();  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  	if (doubt || !board.Expectating) {  		sendAction = true;  	}  	if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			doubt = true;  			board.CancelExpectingDice ();  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  	if (doubt || !board.Expectating) {  		sendAction = true;  	}  	if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			doubt = true;  			board.CancelExpectingDice ();  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showRoundStartMessage && shakedDice && !sendAction && !sendingAction && !endRound) {  	if (doubt || !board.Expectating) {  		sendAction = true;  	}  	if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			doubt = true;  			board.CancelExpectingDice ();  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		doubt = true;  		board.CancelExpectingDice ();  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		doubt = true;  		board.CancelExpectingDice ();  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		doubt = true;  		board.CancelExpectingDice ();  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (board.ExpectationIndex >= 0 && board.ExpectationDice >= 0 && doubtButton == null) {  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		doubt = true;  		board.CancelExpectingDice ();  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	doubt = true;  	board.CancelExpectingDice ();  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	doubt = true;  	board.CancelExpectingDice ();  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	doubt = true;  	board.CancelExpectingDice ();  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: doubtButton = new MyButton (str' GameControl.SWidth * 4 / 5' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	doubt = true;  	board.CancelExpectingDice ();  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (doubt) {  	if (!drawDoubtMessage) {  		drawDoubtMessage = true;  		string str = "ダウト！";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  		control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	}  }  else {  	drawDoubtMessage = false;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!drawDoubtMessage) {  	drawDoubtMessage = true;  	string str = "ダウト！";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_50));  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  	control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 - 200 + 3' GameControl.SHeight / 2 - 25 - 3' GameControl.SWidth / 2 - len / 2 + 200 + 3' GameControl.SHeight / 2 - 25 - 3' control.COLOR_GRAY1' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: control.AddMessage (str' null' 1500' GameControl.SWidth / 2 - len / 2' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 - 200' GameControl.SHeight / 2 - 25' GameControl.SWidth / 2 - len / 2 + 200' GameControl.SHeight / 2 - 25' control.COLOR_RED' FontDefines.FONT_SIZE_70' 250' 250' true' false);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showDoubtResult) {  	if (!sentEndRound && endRoundButton == null) {  		int n = 0;  		if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  			foreach (var item in playerStatus.Values) {  				if (item.Number > 0 && item.NextNumber != 0) {  					n++;  				}  			}  		}  		if (n >= 2) {  			string str = "次へ";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				sentEndRound = true;  				client.AddGameCommand ("endRoundPrepare");  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  		else {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  		}  	}  }  else if (endRoundButton != null) {  	endRoundButton = null;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showDoubtResult) {  	if (!sentEndRound && endRoundButton == null) {  		int n = 0;  		if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  			foreach (var item in playerStatus.Values) {  				if (item.Number > 0 && item.NextNumber != 0) {  					n++;  				}  			}  		}  		if (n >= 2) {  			string str = "次へ";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				sentEndRound = true;  				client.AddGameCommand ("endRoundPrepare");  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  		else {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  		}  	}  }  else if (endRoundButton != null) {  	endRoundButton = null;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showDoubtResult) {  	if (!sentEndRound && endRoundButton == null) {  		int n = 0;  		if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  			foreach (var item in playerStatus.Values) {  				if (item.Number > 0 && item.NextNumber != 0) {  					n++;  				}  			}  		}  		if (n >= 2) {  			string str = "次へ";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				sentEndRound = true;  				client.AddGameCommand ("endRoundPrepare");  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  		else {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  		}  	}  }  else if (endRoundButton != null) {  	endRoundButton = null;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showDoubtResult) {  	if (!sentEndRound && endRoundButton == null) {  		int n = 0;  		if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  			foreach (var item in playerStatus.Values) {  				if (item.Number > 0 && item.NextNumber != 0) {  					n++;  				}  			}  		}  		if (n >= 2) {  			string str = "次へ";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				sentEndRound = true;  				client.AddGameCommand ("endRoundPrepare");  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  		else {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  		}  	}  }  else if (endRoundButton != null) {  	endRoundButton = null;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showDoubtResult) {  	if (!sentEndRound && endRoundButton == null) {  		int n = 0;  		if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  			foreach (var item in playerStatus.Values) {  				if (item.Number > 0 && item.NextNumber != 0) {  					n++;  				}  			}  		}  		if (n >= 2) {  			string str = "次へ";  			int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  			endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}' (x' y' o) =>  {  				sentEndRound = true;  				client.AddGameCommand ("endRoundPrepare");  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}' null);  		}  		else {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  		}  	}  }  else if (endRoundButton != null) {  	endRoundButton = null;  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!sentEndRound && endRoundButton == null) {  	int n = 0;  	if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  		foreach (var item in playerStatus.Values) {  			if (item.Number > 0 && item.NextNumber != 0) {  				n++;  			}  		}  	}  	if (n >= 2) {  		string str = "次へ";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  	else {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!sentEndRound && endRoundButton == null) {  	int n = 0;  	if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  		foreach (var item in playerStatus.Values) {  			if (item.Number > 0 && item.NextNumber != 0) {  				n++;  			}  		}  	}  	if (n >= 2) {  		string str = "次へ";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  	else {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!sentEndRound && endRoundButton == null) {  	int n = 0;  	if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  		foreach (var item in playerStatus.Values) {  			if (item.Number > 0 && item.NextNumber != 0) {  				n++;  			}  		}  	}  	if (n >= 2) {  		string str = "次へ";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  	else {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!sentEndRound && endRoundButton == null) {  	int n = 0;  	if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  		foreach (var item in playerStatus.Values) {  			if (item.Number > 0 && item.NextNumber != 0) {  				n++;  			}  		}  	}  	if (n >= 2) {  		string str = "次へ";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  	else {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!sentEndRound && endRoundButton == null) {  	int n = 0;  	if (playerStatus [client.Params.User.UserID].Number > 0 && playerStatus [client.Params.User.UserID].NextNumber != 0) {  		foreach (var item in playerStatus.Values) {  			if (item.Number > 0 && item.NextNumber != 0) {  				n++;  			}  		}  	}  	if (n >= 2) {  		string str = "次へ";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			sentEndRound = true;  			client.AddGameCommand ("endRoundPrepare");  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  	else {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (n >= 2) {  	string str = "次へ";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  else {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (n >= 2) {  	string str = "次へ";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  else {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (n >= 2) {  	string str = "次へ";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  else {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (n >= 2) {  	string str = "次へ";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  else {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (n >= 2) {  	string str = "次へ";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		sentEndRound = true;  		client.AddGameCommand ("endRoundPrepare");  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  else {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endRoundButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	sentEndRound = true;  	client.AddGameCommand ("endRoundPrepare");  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (endRound) {  	if (showHideButton != null) {  		showHideButton = null;  		showDiceSet = true;  	}  }  else {  	if (prevShowDiceSet != showDiceSet) {  		showHideButton = null;  		prevShowDiceSet = showDiceSet;  	}  	if (showHideButton == null) {  		string str = showDiceSet ? "ダイスを非表示" : "ダイスを表示";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			showDiceSet = !showDiceSet;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (endRound) {  	if (showHideButton != null) {  		showHideButton = null;  		showDiceSet = true;  	}  }  else {  	if (prevShowDiceSet != showDiceSet) {  		showHideButton = null;  		prevShowDiceSet = showDiceSet;  	}  	if (showHideButton == null) {  		string str = showDiceSet ? "ダイスを非表示" : "ダイスを表示";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			showDiceSet = !showDiceSet;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (endRound) {  	if (showHideButton != null) {  		showHideButton = null;  		showDiceSet = true;  	}  }  else {  	if (prevShowDiceSet != showDiceSet) {  		showHideButton = null;  		prevShowDiceSet = showDiceSet;  	}  	if (showHideButton == null) {  		string str = showDiceSet ? "ダイスを非表示" : "ダイスを表示";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			showDiceSet = !showDiceSet;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showHideButton == null) {  	string str = showDiceSet ? "ダイスを非表示" : "ダイスを表示";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		showDiceSet = !showDiceSet;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showHideButton == null) {  	string str = showDiceSet ? "ダイスを非表示" : "ダイスを表示";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		showDiceSet = !showDiceSet;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showHideButton == null) {  	string str = showDiceSet ? "ダイスを非表示" : "ダイスを表示";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		showDiceSet = !showDiceSet;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	showDiceSet = !showDiceSet;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	showDiceSet = !showDiceSet;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: showHideButton = new MyButton (str' GameControl.SWidth / 2' GameControl.SHeight - 50' len + 50' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	showDiceSet = !showDiceSet;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (!showEndGameButton && gameEndFlag) {  	if (!sentResult) {  		sentResult = true;  		win = false;  		foreach (var item in playerStatus.Keys) {  			var status = playerStatus [item];  			if (status.Number > 0 && status.NextNumber != 0) {  				if (item == client.Params.User.UserID) {  					win = true;  				}  			}  		}  		client.AddGameCommand ("result"' win ? "win" : "lose");  	}  	showEndGameButtonCount -= control.MilliSecond;  	if (showEndGameButtonCount < 0) {  		showEndGameButton = true;  		string str = "終了する";  		int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  		rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			rematchFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}' null);  		endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}' (x' y' o) =>  {  			ExitFlag = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}' null);  	}  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: if (showEndGameButtonCount < 0) {  	showEndGameButton = true;  	string str = "終了する";  	int len = Utility.GetDrawStringWidthToHandle (str' control.GetFont (FontDefines.FONT_SIZE_35));  	rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		rematchFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		ExitFlag = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	rematchFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	rematchFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	rematchFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	rematchFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: rematchButton = new MyButton ("再戦"' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4' len + 200' FontDefines.FONT_SIZE_30' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	rematchFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	ExitFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	ExitFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	ExitFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	ExitFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	ExitFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,Update,The following statement contains a magic number: endButton = new MyButton (str' GameControl.SWidth * 3 / 4' GameControl.SHeight * 3 / 4 + 50' len + 200' FontDefines.FONT_SIZE_35' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	ExitFlag = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (changeStateButton == null) {  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  	leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onLeave = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  	AddSystemMessage (1' "参加プレイヤーが集まったら「準備完了！」ボタンを押してください．"' control.COLOR_YELLOW' true);  	AddSystemMessage (1' "このゲームは２人以上のプレイヤーが必要です．"' control.COLOR_YELLOW' true);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onLeave = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onLeave = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onLeave = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: leaveRoomButton = new MyButton ("部屋を出る"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 70' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onLeave = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (onReady) {  	onReady = false;  	OnReady (client);  	changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		offReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (onReady) {  	onReady = false;  	OnReady (client);  	changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		offReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (onReady) {  	onReady = false;  	OnReady (client);  	changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		offReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (onReady) {  	onReady = false;  	OnReady (client);  	changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		offReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	offReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	offReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	offReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("キャンセル"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	offReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (offReady) {  	offReady = false;  	OffReady (client);  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (offReady) {  	offReady = false;  	OffReady (client);  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (offReady) {  	offReady = false;  	OffReady (client);  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: if (offReady) {  	offReady = false;  	OffReady (client);  	changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}' (x' y' o) =>  {  		onReady = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}' null);  }  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffRoomScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffRoomScreen.cs,Update,The following statement contains a magic number: changeStateButton = new MyButton ("準備完了！"' GameControl.SWidth * 4 / 5' GameControl.SHeight - 120' 200' FontDefines.FONT_SIZE_25' (x' y' o) =>  {  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  }' (x' y' o) =>  {  	onReady = true;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }' null);  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!endGame && !timeup && checkReady) {  	if (!sentReady) {  		sentReady = true;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  		Random rnd = new Random ();  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			int r = rnd.Next (Factory.Players.Count);  			if (r != i) {  				var tmp = playerID [i];  				playerID [i] = playerID [r];  				playerID [r] = tmp;  				tmp = playerName [i];  				playerName [i] = playerName [r];  				playerName [r] = tmp;  			}  		}  		for (int i = 0; i < Factory.Players.Count; i++) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  		}  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		countDown = TIMEUP_COUNT;  		sentCountDown = (int)countDown;  		nextTurnFlag = true;  		nextTurnCount = 1500;  		shakeFlag = true;  		shakeCount = 2000;  		turn = 0;  		stopCountDown = true;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  	else if (!onCheckEndGame) {  		if (endRoundCount > 0) {  			bool checkEndRoundPrepare = Factory.Players.Count >= 2;  			for (int i = 0; i < Factory.Players.Count; i++) {  				if (!endRoundPrepare [i]) {  					checkEndRoundPrepare = false;  					break;  				}  			}  			endRoundCount -= control.MilliSecond;  			int c = (int)(endRoundCount / 1000);  			bool check = c <= 0;  			if (check || checkEndRoundPrepare) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRoundPrepare [i] = false;  				}  				endRoundCount = -1;  			}  			else if (c < prevEndRountDount) {  				prevEndRountDount = c;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  			}  		}  		bool checkEndRound = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRound [i]) {  				checkEndRound = false;  				break;  			}  		}  		if (checkEndRound) {  			round++;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  			nextTurnFlag = true;  			nextTurnCount = 2000;  			shakeFlag = true;  			shakeCount = 2000;  			stopCountDown = true;  		}  		if (sendDoubtResultFlag) {  			sendDoubtResultCount -= control.MilliSecond;  			if (sendDoubtResultCount < 0) {  				sendDoubtResultFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  				if (sendDoubtResult >= expectationNumber) {  					turn = prevTurn;  				}  				endRoundCount = END_ROUND_COUNT;  				prevEndRountDount = (int)END_ROUND_COUNT;  				for (int i = 0; i < Factory.Players.Count; i++) {  					endRound [i] = false;  				}  			}  		}  		else if (nextTurnFlag) {  			nextTurnCount -= control.MilliSecond;  			if (nextTurnCount < 0) {  				nextTurnFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  				if (!shakeFlag) {  					stopCountDown = false;  				}  			}  		}  		else if (shakeFlag) {  			shakeCount -= control.MilliSecond;  			if (shakeCount < 0) {  				shakeFlag = false;  				network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  				stopCountDown = false;  			}  		}  		else if (!stopCountDown) {  			countDown -= control.MilliSecond;  			if (countDown < TIMEUP_COUNT - 1000) {  				if (countDown < 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  					timeup = true;  					stopCountDown = true;  					dead [turn] = true;  				}  				else {  					int tmp = (int)(countDown / 1000);  					if (tmp < sentCountDown) {  						sentCountDown = tmp;  						if (tmp > 0) {  							network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  						}  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!sentReady) {  	sentReady = true;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tinit");  	Random rnd = new Random ();  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		int r = rnd.Next (Factory.Players.Count);  		if (r != i) {  			var tmp = playerID [i];  			playerID [i] = playerID [r];  			playerID [r] = tmp;  			tmp = playerName [i];  			playerName [i] = playerName [r];  			playerName [r] = tmp;  		}  	}  	for (int i = 0; i < Factory.Players.Count; i++) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [i] + "\t\tsetTurn"' i + ""' playerName [i]);  	}  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	nextTurnFlag = true;  	nextTurnCount = 1500;  	shakeFlag = true;  	shakeCount = 2000;  	turn = 0;  	stopCountDown = true;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  else if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: nextTurnCount = 1500;  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: shakeCount = 2000;  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!onCheckEndGame) {  	if (endRoundCount > 0) {  		bool checkEndRoundPrepare = Factory.Players.Count >= 2;  		for (int i = 0; i < Factory.Players.Count; i++) {  			if (!endRoundPrepare [i]) {  				checkEndRoundPrepare = false;  				break;  			}  		}  		endRoundCount -= control.MilliSecond;  		int c = (int)(endRoundCount / 1000);  		bool check = c <= 0;  		if (check || checkEndRoundPrepare) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRoundPrepare [i] = false;  			}  			endRoundCount = -1;  		}  		else if (c < prevEndRountDount) {  			prevEndRountDount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  		}  	}  	bool checkEndRound = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRound [i]) {  			checkEndRound = false;  			break;  		}  	}  	if (checkEndRound) {  		round++;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  		nextTurnFlag = true;  		nextTurnCount = 2000;  		shakeFlag = true;  		shakeCount = 2000;  		stopCountDown = true;  	}  	if (sendDoubtResultFlag) {  		sendDoubtResultCount -= control.MilliSecond;  		if (sendDoubtResultCount < 0) {  			sendDoubtResultFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  			if (sendDoubtResult >= expectationNumber) {  				turn = prevTurn;  			}  			endRoundCount = END_ROUND_COUNT;  			prevEndRountDount = (int)END_ROUND_COUNT;  			for (int i = 0; i < Factory.Players.Count; i++) {  				endRound [i] = false;  			}  		}  	}  	else if (nextTurnFlag) {  		nextTurnCount -= control.MilliSecond;  		if (nextTurnCount < 0) {  			nextTurnFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  			if (!shakeFlag) {  				stopCountDown = false;  			}  		}  	}  	else if (shakeFlag) {  		shakeCount -= control.MilliSecond;  		if (shakeCount < 0) {  			shakeFlag = false;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  			stopCountDown = false;  		}  	}  	else if (!stopCountDown) {  		countDown -= control.MilliSecond;  		if (countDown < TIMEUP_COUNT - 1000) {  			if (countDown < 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  				timeup = true;  				stopCountDown = true;  				dead [turn] = true;  			}  			else {  				int tmp = (int)(countDown / 1000);  				if (tmp < sentCountDown) {  					sentCountDown = tmp;  					if (tmp > 0) {  						network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  					}  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (endRoundCount > 0) {  	bool checkEndRoundPrepare = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRoundPrepare [i]) {  			checkEndRoundPrepare = false;  			break;  		}  	}  	endRoundCount -= control.MilliSecond;  	int c = (int)(endRoundCount / 1000);  	bool check = c <= 0;  	if (check || checkEndRoundPrepare) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRoundPrepare [i] = false;  		}  		endRoundCount = -1;  	}  	else if (c < prevEndRountDount) {  		prevEndRountDount = c;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (endRoundCount > 0) {  	bool checkEndRoundPrepare = Factory.Players.Count >= 2;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (!endRoundPrepare [i]) {  			checkEndRoundPrepare = false;  			break;  		}  	}  	endRoundCount -= control.MilliSecond;  	int c = (int)(endRoundCount / 1000);  	bool check = c <= 0;  	if (check || checkEndRoundPrepare) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundSignal"' prevEndRountDount.ToString ());  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRoundPrepare [i] = false;  		}  		endRoundCount = -1;  	}  	else if (c < prevEndRountDount) {  		prevEndRountDount = c;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoundCount"' prevEndRountDount.ToString ());  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (checkEndRound) {  	round++;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = false;  	}  	nextTurnFlag = true;  	nextTurnCount = 2000;  	shakeFlag = true;  	shakeCount = 2000;  	stopCountDown = true;  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (checkEndRound) {  	round++;  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tround"' round + "");  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = false;  	}  	nextTurnFlag = true;  	nextTurnCount = 2000;  	shakeFlag = true;  	shakeCount = 2000;  	stopCountDown = true;  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: nextTurnCount = 2000;  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: shakeCount = 2000;  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (sendDoubtResultFlag) {  	sendDoubtResultCount -= control.MilliSecond;  	if (sendDoubtResultCount < 0) {  		sendDoubtResultFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  		if (sendDoubtResult >= expectationNumber) {  			turn = prevTurn;  		}  		endRoundCount = END_ROUND_COUNT;  		prevEndRountDount = (int)END_ROUND_COUNT;  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  	}  }  else if (nextTurnFlag) {  	nextTurnCount -= control.MilliSecond;  	if (nextTurnCount < 0) {  		nextTurnFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  		if (!shakeFlag) {  			stopCountDown = false;  		}  	}  }  else if (shakeFlag) {  	shakeCount -= control.MilliSecond;  	if (shakeCount < 0) {  		shakeFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  		stopCountDown = false;  	}  }  else if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (sendDoubtResultFlag) {  	sendDoubtResultCount -= control.MilliSecond;  	if (sendDoubtResultCount < 0) {  		sendDoubtResultFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tdoubtResult"' sendDoubtResult + ""' playerID [turn]' playerID [prevTurn]);  		if (sendDoubtResult >= expectationNumber) {  			turn = prevTurn;  		}  		endRoundCount = END_ROUND_COUNT;  		prevEndRountDount = (int)END_ROUND_COUNT;  		for (int i = 0; i < Factory.Players.Count; i++) {  			endRound [i] = false;  		}  	}  }  else if (nextTurnFlag) {  	nextTurnCount -= control.MilliSecond;  	if (nextTurnCount < 0) {  		nextTurnFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  		if (!shakeFlag) {  			stopCountDown = false;  		}  	}  }  else if (shakeFlag) {  	shakeCount -= control.MilliSecond;  	if (shakeCount < 0) {  		shakeFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  		stopCountDown = false;  	}  }  else if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (nextTurnFlag) {  	nextTurnCount -= control.MilliSecond;  	if (nextTurnCount < 0) {  		nextTurnFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  		if (!shakeFlag) {  			stopCountDown = false;  		}  	}  }  else if (shakeFlag) {  	shakeCount -= control.MilliSecond;  	if (shakeCount < 0) {  		shakeFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  		stopCountDown = false;  	}  }  else if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (nextTurnFlag) {  	nextTurnCount -= control.MilliSecond;  	if (nextTurnCount < 0) {  		nextTurnFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tturn"' turn + "");  		if (!shakeFlag) {  			stopCountDown = false;  		}  	}  }  else if (shakeFlag) {  	shakeCount -= control.MilliSecond;  	if (shakeCount < 0) {  		shakeFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  		stopCountDown = false;  	}  }  else if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (shakeFlag) {  	shakeCount -= control.MilliSecond;  	if (shakeCount < 0) {  		shakeFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  		stopCountDown = false;  	}  }  else if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (shakeFlag) {  	shakeCount -= control.MilliSecond;  	if (shakeCount < 0) {  		shakeFlag = false;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tshake");  		stopCountDown = false;  	}  }  else if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (!stopCountDown) {  	countDown -= control.MilliSecond;  	if (countDown < TIMEUP_COUNT - 1000) {  		if (countDown < 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  			timeup = true;  			stopCountDown = true;  			dead [turn] = true;  		}  		else {  			int tmp = (int)(countDown / 1000);  			if (tmp < sentCountDown) {  				sentCountDown = tmp;  				if (tmp > 0) {  					network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  				}  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (countDown < TIMEUP_COUNT - 1000) {  	if (countDown < 0) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  		timeup = true;  		stopCountDown = true;  		dead [turn] = true;  	}  	else {  		int tmp = (int)(countDown / 1000);  		if (tmp < sentCountDown) {  			sentCountDown = tmp;  			if (tmp > 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (countDown < TIMEUP_COUNT - 1000) {  	if (countDown < 0) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  		timeup = true;  		stopCountDown = true;  		dead [turn] = true;  	}  	else {  		int tmp = (int)(countDown / 1000);  		if (tmp < sentCountDown) {  			sentCountDown = tmp;  			if (tmp > 0) {  				network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  			}  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (countDown < 0) {  	network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\ttimeup");  	timeup = true;  	stopCountDown = true;  	dead [turn] = true;  }  else {  	int tmp = (int)(countDown / 1000);  	if (tmp < sentCountDown) {  		sentCountDown = tmp;  		if (tmp > 0) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + playerID [turn] + "\t\tcountDown"' (tmp - 1) + "");  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (endGame && !endRoom) {  	bool checkRematch = Factory.Players.Count >= 2;  	for (int i = Factory.Players.Count; --i >= 0;) {  		if (!rematch [i]) {  			checkRematch = false;  			break;  		}  	}  	if (checkRematch) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\trematchStart");  		Init ();  	}  	else {  		rematchCount -= control.MilliSecond;  		int c = (int)(rematchCount / 1000);  		endRoom = c <= 0;  		if (endRoom) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoom");  		}  		else if (c < prevRematchCount) {  			prevRematchCount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\trematchCount"' prevRematchCount.ToString ());  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (endGame && !endRoom) {  	bool checkRematch = Factory.Players.Count >= 2;  	for (int i = Factory.Players.Count; --i >= 0;) {  		if (!rematch [i]) {  			checkRematch = false;  			break;  		}  	}  	if (checkRematch) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\trematchStart");  		Init ();  	}  	else {  		rematchCount -= control.MilliSecond;  		int c = (int)(rematchCount / 1000);  		endRoom = c <= 0;  		if (endRoom) {  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoom");  		}  		else if (c < prevRematchCount) {  			prevRematchCount = c;  			network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\trematchCount"' prevRematchCount.ToString ());  		}  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,Update,The following statement contains a magic number: if (checkRematch) {  	network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\trematchStart");  	Init ();  }  else {  	rematchCount -= control.MilliSecond;  	int c = (int)(rematchCount / 1000);  	endRoom = c <= 0;  	if (endRoom) {  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\tendRoom");  	}  	else if (c < prevRematchCount) {  		prevRematchCount = c;  		network.AddSendChannelData (channelIndex' "gameCommand\t" + "\t\trematchCount"' prevRematchCount.ToString ());  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRound") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	endRound [index] = true;  }  else if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endRoundPrepare") {  	if (endRoundCount > 0) {  		int index = 0;  		for (; index < Factory.Players.Count; index++) {  			if (playerID [index] == command [0]) {  				break;  			}  		}  		endRoundPrepare [index] = true;  		base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	}  }  else if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "ready") {  	Record.Lose (command [0]);  	int n = 0;  	for (; n < 6; n++) {  		if (!ready [n]) {  			break;  		}  	}  	ready [n] = true;  	playerID [n] = command [0];  	playerName [n] = command [1];  }  else if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: for (; n < 6; n++) {  	if (!ready [n]) {  		break;  	}  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "result") {  	if (command [3] == "win") {  		Record.Win (command [0]);  	}  	string[] str = new string[5];  	str [0] = command [0];  	str [1] = command [1];  	str [2] = "result";  	var tmp = Record.GetRecord (command [0]);  	if (tmp == null) {  		Record.Lose (command [0]);  		tmp = Record.GetRecord (command [0]);  	}  	if (tmp != null) {  		str [3] = tmp.Win + "";  		str [4] = tmp.Lose + "";  		network.AddSendChannelData (roomIndex' "gameCommand"' str);  	}  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	gotResult [index] = true;  }  else if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [3] == "win") {  	Record.Win (command [0]);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: str [2] = "result";  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (tmp != null) {  	str [3] = tmp.Win + "";  	str [4] = tmp.Lose + "";  	network.AddSendChannelData (roomIndex' "gameCommand"' str);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (tmp != null) {  	str [3] = tmp.Win + "";  	str [4] = tmp.Lose + "";  	network.AddSendChannelData (roomIndex' "gameCommand"' str);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: str [3] = tmp.Win + "";  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: str [4] = tmp.Lose + "";  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "move") {  	prevTurn = turn;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  	nextTurnFlag = true;  	nextTurnCount = 1500;  	stopCountDown = true;  }  else if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: nextTurnCount = 1500;  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubt") {  	stopCountDown = true;  	expectationNumber = int.Parse (command [3]);  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  else if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: expectationNumber = int.Parse (command [3]);  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "doubtCount") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	doubtCount [index] = int.Parse (command [3]);  	int count = 0;  	for (int i = 0; i < Factory.Players.Count; i++) {  		if (doubtCount [i] < 0) {  			count = -1;  			break;  		}  		count += doubtCount [i];  	}  	if (count >= 0) {  		sendDoubtResult = count;  		sendDoubtResultFlag = true;  		sendDoubtResultCount = 2000;  		for (int i = doubtCount.Length; --i >= 0;)  			doubtCount [i] = -1;  	}  }  else if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: doubtCount [index] = int.Parse (command [3]);  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (count >= 0) {  	sendDoubtResult = count;  	sendDoubtResultFlag = true;  	sendDoubtResultCount = 2000;  	for (int i = doubtCount.Length; --i >= 0;)  		doubtCount [i] = -1;  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: sendDoubtResultCount = 2000;  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "endShowTimeup") {  	timeup = false;  	prevTurn = -1;  	turn = (turn + 1) % Factory.Players.Count;  	while (dead [turn]) {  		turn = (turn + 1) % Factory.Players.Count;  	}  	countDown = TIMEUP_COUNT;  	sentCountDown = (int)countDown;  	for (int i = 0; i < Factory.Players.Count; i++) {  		endRound [i] = true;  	}  	onCheckEndGame = true;  }  else if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "dead") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	dead [index] = true;  	onCheckEndGame = true;  }  else if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,BluffServerScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffServerScreen.cs,ParseTCPMessages,The following statement contains a magic number: if (command [2] == "rematch") {  	int index = 0;  	for (; index < Factory.Players.Count; index++) {  		if (playerID [index] == command [0]) {  			break;  		}  	}  	rematch [index] = true;  	network.AddSendChannelData (roomIndex' "gameCommand\t" + command [0] + "\t\trematch");  }  else {  	base.ParseTCPMessages (control' roomIndex' network' players' handle' command);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons = new MyButton[30];  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ("☆" + (i / 3 + 1)' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i] = new MyButton ((i * 2 / 3 + 1) + ""' x0 + w - sizeX / 2 - i * sizeX' y0 + h - sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 9;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 9;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ("☆" + (i / 3 + 4)' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (ExpectatingIndex && isValid) {  	prevExpectationIndex = ExpectationIndex;  	ExpectationIndex = (int)o + 9;  	ExpectationDice = 0;  	ExpectatingIndex = false;  	ExpectatingDice = false;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: ExpectationIndex = (int)o + 9;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 9] = new MyButton ((i * 2 / 3 + 7) + ""' x0 + sizeX / 2' y0 + h - sizeY / 2 - i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 9;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (ExpectatingIndex && isValid) {  	prevExpectationIndex = ExpectationIndex;  	ExpectationIndex = (int)o + 9;  	ExpectatingIndex = false;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: ExpectationIndex = (int)o + 9;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	if (i % 3 == 1) {  		buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 15;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 15;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ("☆" + (i / 3 + 6)' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (ExpectatingIndex && isValid) {  	prevExpectationIndex = ExpectationIndex;  	ExpectationIndex = (int)o + 15;  	ExpectationDice = 0;  	ExpectatingIndex = false;  	ExpectatingDice = false;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: ExpectationIndex = (int)o + 15;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 15] = new MyButton ((i * 2 / 3 + 11) + ""' x0 + sizeX / 2 + i * sizeX' y0 + sizeY / 2' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 15;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (ExpectatingIndex && isValid) {  	prevExpectationIndex = ExpectationIndex;  	ExpectationIndex = (int)o + 15;  	ExpectatingIndex = false;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: ExpectationIndex = (int)o + 15;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (i % 3 == 1) {  		buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectationDice = 0;  				ExpectatingIndex = false;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  	else {  		buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (ExpectatingIndex && isValid) {  				prevExpectationIndex = ExpectationIndex;  				ExpectationIndex = (int)o + 24;  				ExpectatingIndex = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i % 3 == 1) {  	buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectationDice = 0;  			ExpectatingIndex = false;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  else {  	buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (ExpectatingIndex && isValid) {  			prevExpectationIndex = ExpectationIndex;  			ExpectationIndex = (int)o + 24;  			ExpectatingIndex = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ("☆" + (i / 3 + 9)' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 108' 10)' DX.GetColor (250' 190' 20)' DX.GetColor (200' 80' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectationDice = 0;  		ExpectatingIndex = false;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (ExpectatingIndex && isValid) {  	prevExpectationIndex = ExpectationIndex;  	ExpectationIndex = (int)o + 24;  	ExpectationDice = 0;  	ExpectatingIndex = false;  	ExpectatingDice = false;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: ExpectationIndex = (int)o + 24;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: buttons [i + 24] = new MyButton ((i * 2 / 3 + 17) + ""' x0 + w - sizeX / 2' y0 + sizeY / 2 + i * sizeY' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (ExpectatingIndex && isValid) {  		prevExpectationIndex = ExpectationIndex;  		ExpectationIndex = (int)o + 24;  		ExpectatingIndex = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (ExpectatingIndex && isValid) {  	prevExpectationIndex = ExpectationIndex;  	ExpectationIndex = (int)o + 24;  	ExpectatingIndex = false;  	contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: ExpectationIndex = (int)o + 24;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select = new MyButton[6];  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: x0 = cx - width / 2 + width / 10;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: x0 = cx - width / 2 + width / 10;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: y0 = cy - height / 2 + height / 10;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: y0 = cy - height / 2 + height / 10;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: sizeX2 = sizeX * 3 / 4;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: sizeX2 = sizeX * 3 / 4;  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	if (i == select.Length - 1) {  		select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationIndex = prevExpectationIndex;  				ExpectatingIndex = true;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  			}  		}' null);  	}  	else {  		select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  			}  		}' (mx' my' o) =>  {  			if (!ExpectatingIndex && ExpectatingDice && isValid) {  				ExpectationDice = (int)o + 1;  				ExpectatingDice = false;  				contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  			}  		}' (object)i);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: if (i == select.Length - 1) {  	select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationIndex = prevExpectationIndex;  			ExpectatingIndex = true;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  		}  	}' null);  }  else {  	select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  		}  	}' (mx' my' o) =>  {  		if (!ExpectatingIndex && ExpectatingDice && isValid) {  			ExpectationDice = (int)o + 1;  			ExpectatingDice = false;  			contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  		}  	}' (object)i);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton ("×"' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationIndex = prevExpectationIndex;  		ExpectatingIndex = true;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CANCEL);  	}  }' null);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,SetButtons,The following statement contains a magic number: select [i] = new MyButton (""' x0 + sizeX / 2 + sizeX * i' cy' sizeX2' sizeY2' DX.GetColor (255' 201' 14)' DX.GetColor (201' 250' 20)' DX.GetColor (180' 140' 0)' 200' DX.GetColor (255' 255' 255)' FontDefines.FONT_SIZE_20' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.CURSOR);  	}  }' (mx' my' o) =>  {  	if (!ExpectatingIndex && ExpectatingDice && isValid) {  		ExpectationDice = (int)o + 1;  		ExpectatingDice = false;  		contents.Contents.Sound.Play (SystemSound.SystemSoundType.DECIDE);  	}  }' (object)i);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex >= 0) {  	int cx = buttons [ExpectationIndex].CenterX;  	int cy = buttons [ExpectationIndex].CenterY;  	int size = buttons [ExpectationIndex].Width * 3 / 4;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 220);  	if (ExpectationIndex % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  			diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  		}  		else {  			diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex >= 0) {  	int cx = buttons [ExpectationIndex].CenterX;  	int cy = buttons [ExpectationIndex].CenterY;  	int size = buttons [ExpectationIndex].Width * 3 / 4;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 220);  	if (ExpectationIndex % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  			diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  		}  		else {  			diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex >= 0) {  	int cx = buttons [ExpectationIndex].CenterX;  	int cy = buttons [ExpectationIndex].CenterY;  	int size = buttons [ExpectationIndex].Width * 3 / 4;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 220);  	if (ExpectationIndex % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  			diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  		}  		else {  			diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex >= 0) {  	int cx = buttons [ExpectationIndex].CenterX;  	int cy = buttons [ExpectationIndex].CenterY;  	int size = buttons [ExpectationIndex].Width * 3 / 4;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 220);  	if (ExpectationIndex % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  			diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  		}  		else {  			diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex >= 0) {  	int cx = buttons [ExpectationIndex].CenterX;  	int cy = buttons [ExpectationIndex].CenterY;  	int size = buttons [ExpectationIndex].Width * 3 / 4;  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 220);  	if (ExpectationIndex % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  			diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  		}  		else {  			diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 220);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex % 3 == 1) {  	diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  }  else {  	if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  		diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (ExpectationIndex % 3 == 1) {  	diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  }  else {  	if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  		diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if ((ExpectatingIndex || !ExpectatingDice) && ExpectationDice >= 0) {  	diceGph [ExpectationDice].DrawCenterGraph (cx' cy' size' size' false);  }  else {  	diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: diceGph [6].DrawCenterGraph (cx' cy' size' size' false);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' 120);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: for (int i = flag ? history.Count - 1 : history.Count; --i >= 0;) {  	Tuple<int' int> h = history [i];  	int cx = buttons [h.Item1].CenterX;  	int cy = buttons [h.Item1].CenterY;  	int size = buttons [h.Item1].Width * 3 / 4;  	if (h.Item1 % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		diceGph [h.Item2].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: for (int i = flag ? history.Count - 1 : history.Count; --i >= 0;) {  	Tuple<int' int> h = history [i];  	int cx = buttons [h.Item1].CenterX;  	int cy = buttons [h.Item1].CenterY;  	int size = buttons [h.Item1].Width * 3 / 4;  	if (h.Item1 % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		diceGph [h.Item2].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: for (int i = flag ? history.Count - 1 : history.Count; --i >= 0;) {  	Tuple<int' int> h = history [i];  	int cx = buttons [h.Item1].CenterX;  	int cy = buttons [h.Item1].CenterY;  	int size = buttons [h.Item1].Width * 3 / 4;  	if (h.Item1 % 3 == 1) {  		diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  	}  	else {  		diceGph [h.Item2].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawBoard,The following statement contains a magic number: if (h.Item1 % 3 == 1) {  	diceGph [0].DrawCenterGraph (cx' cy' size' size' false);  }  else {  	diceGph [h.Item2].DrawCenterGraph (cx' cy' size' size' false);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (!ExpectatingIndex) {  	if (ExpectatingDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		for (int i = 0; i < select.Length; i++) {  			var item = select [i];  			item.Draw (control);  			if (i < select.Length - 1) {  				int cx = item.CenterX;  				int cy = item.CenterY;  				int size = item.Width * 3 / 4;  				diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  			}  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (!ExpectatingIndex) {  	if (ExpectatingDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		for (int i = 0; i < select.Length; i++) {  			var item = select [i];  			item.Draw (control);  			if (i < select.Length - 1) {  				int cx = item.CenterX;  				int cy = item.CenterY;  				int size = item.Width * 3 / 4;  				diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  			}  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (!ExpectatingIndex) {  	if (ExpectatingDice) {  		control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  		for (int i = 0; i < select.Length; i++) {  			var item = select [i];  			item.Draw (control);  			if (i < select.Length - 1) {  				int cx = item.CenterX;  				int cy = item.CenterY;  				int size = item.Width * 3 / 4;  				diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  			}  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (ExpectatingDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	for (int i = 0; i < select.Length; i++) {  		var item = select [i];  		item.Draw (control);  		if (i < select.Length - 1) {  			int cx = item.CenterX;  			int cy = item.CenterY;  			int size = item.Width * 3 / 4;  			diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (ExpectatingDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	for (int i = 0; i < select.Length; i++) {  		var item = select [i];  		item.Draw (control);  		if (i < select.Length - 1) {  			int cx = item.CenterX;  			int cy = item.CenterY;  			int size = item.Width * 3 / 4;  			diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (ExpectatingDice) {  	control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  	for (int i = 0; i < select.Length; i++) {  		var item = select [i];  		item.Draw (control);  		if (i < select.Length - 1) {  			int cx = item.CenterX;  			int cy = item.CenterY;  			int size = item.Width * 3 / 4;  			diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  		}  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: control.FadeBackBufferToBlack (120' control.COLOR_BLACK);  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	var item = select [i];  	item.Draw (control);  	if (i < select.Length - 1) {  		int cx = item.CenterX;  		int cy = item.CenterY;  		int size = item.Width * 3 / 4;  		diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: for (int i = 0; i < select.Length; i++) {  	var item = select [i];  	item.Draw (control);  	if (i < select.Length - 1) {  		int cx = item.CenterX;  		int cy = item.CenterY;  		int size = item.Width * 3 / 4;  		diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  	}  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (i < select.Length - 1) {  	int cx = item.CenterX;  	int cy = item.CenterY;  	int size = item.Width * 3 / 4;  	diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  }  
Magic Number,GameBase,Board,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Board.cs,DrawSelectDice,The following statement contains a magic number: if (i < select.Length - 1) {  	int cx = item.CenterX;  	int cy = item.CenterY;  	int size = item.Width * 3 / 4;  	diceGph [i + 1].DrawCenterGraph (cx' cy' size' size' false);  }  
Magic Number,GameBase,Dice,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\Dice.cs,Shake,The following statement contains a magic number: Number = DX.GetRand (5);  
Missing Default,GameBase,BluffGameScreen,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Bluff\BluffGameScreen.cs,ParseGameCommand,The following switch statement is missing a default case: switch (command [0]) {  case "init":  	showRoundStartMessage = true;  	showRouondStartMessageCount = 2000;  	round = 0;  	doubt = false;  	board.Expectating = true;  	sendingAction = false;  	shakedDice = false;  	break;  case "setTurn":  	{  		int tmp = int.Parse (command [1]);  		if (id == client.Params.User.UserID) {  			myTurn = tmp;  		}  		if (playerStatus.ContainsKey (id)) {  			playerStatus [id] = new Status (tmp' command [2]' diceSet.RestDiceNumber);  		}  		else {  			playerStatus.Add (id' new Status (tmp' command [2]' diceSet.RestDiceNumber));  		}  	}  	break;  case "round":  	{  		foreach (var item in playerStatus.Values) {  			item.UpdateNext ();  		}  		showRoundStartMessage = true;  		showRouondStartMessageCount = 2000;  		round = int.Parse (command [1]);  		doubt = false;  		board.Init ();  		sendingAction = false;  		shakedDice = false;  		endRound = false;  		sentEndRound = false;  		endRoundButton = null;  		showDoubtResult = false;  		int n = playerStatus [client.Params.User.UserID].Number;  		while (diceSet.RestDiceNumber > n) {  			diceSet.DiceList.RemoveAt (0);  		}  		drawTurnStartMessage = false;  	}  	break;  case "shake":  	diceSet.Shake ();  	shakedDice = true;  	client.AddGameCommand ("clearDiceSet");  	foreach (var item in diceSet.DiceList) {  		client.AddGameCommand ("setDiceSet"' item.Number + "");  	}  	break;  case "clearDiceSet":  	playerStatus [id].diceSet.DiceList.Clear ();  	break;  case "setDiceSet":  	playerStatus [id].diceSet.DiceList.Add (new Dice (int.Parse (command [1])));  	break;  case "turn":  	turn = int.Parse (command [1]);  	doubt = false;  	sendingAction = false;  	board.Expectating = true;  	break;  case "doubt":  	{  		int n = diceSet.Count (board.ExpectationDice);  		client.AddGameCommand ("doubtCount"' n + "");  		doubt = true;  		gotCountDown = false;  	}  	break;  case "doubtResult":  	{  		int expect = board.ExpectationNumber;  		int result = int.Parse (command [1]);  		string now = command [2];  		string prev = command [3];  		turn = -1;  		foreach (var key in playerStatus.Keys) {  			var status = playerStatus [key];  			if (key == now) {  				if (result > expect) {  					status.Dec (result - expect);  				}  				else if (result == expect) {  					status.Dec (1);  				}  			}  			else if (key == prev) {  				if (result < expect) {  					status.Dec (expect - result);  				}  			}  			else {  				if (result == expect) {  					status.Dec (1);  				}  			}  			status.WaitEndRound = false;  		}  		showDoubtResultReal = result;  	}  	sendingAction = false;  	endRound = true;  	sentEndRound = false;  	showDoubtResult = true;  	showDoubtResultCount = -1;  	break;  case "move":  	board.Set (int.Parse (command [1])' int.Parse (command [2]));  	gotCountDown = false;  	break;  case "countDown":  	gotCountDown = true;  	countDown = command [1];  	break;  case "endRoundPrepare":  	playerStatus [id].WaitEndRound = true;  	break;  case "endRoundCount":  	showDoubtResultCount = int.Parse (command [1]);  	break;  case "endRoundSignal":  	{  		foreach (var item in playerStatus.Values) {  			item.WaitEndRound = false;  		}  		var status = playerStatus [client.Params.User.UserID];  		if (status.NextNumber == 0) {  			if (!sentDeadFlag) {  				sentDeadFlag = true;  				client.AddGameCommand ("dead");  			}  		}  		client.AddGameCommand ("endRound");  	}  	showDoubtResultCount = -1;  	endRoundButton = null;  	break;  case "endGame":  	gameEndFlag = true;  	break;  case "result":  	if (id == client.Params.User.UserID) {  		recvResult = true;  		resultWin = int.Parse (command [1]);  		resultLose = int.Parse (command [2]);  		gameEndFlag = true;  	}  	break;  case "timeup":  	playerStatus [id].Dec (playerStatus [id].Number);  	{  		if (id == client.Params.User.UserID) {  			timeup = true;  			showTimeupCount = 3000;  			showTimeup = true;  		}  		else {  			showTimeupCount = 3000;  			showTimeup = true;  		}  	}  	break;  case "rematch":  	if (id != client.Params.User.UserID) {  		oppRematchFlag = true;  	}  	playerStatus [id].WaitRematch = true;  	break;  case "rematchCount":  	endRoomCount = int.Parse (command [1]);  	break;  case "rematchStart":  	rematchStart = true;  	break;  case "endRoom":  	this.ExitFlag = true;  	endRoomCount = 0;  	break;  }  
