Implementation smell,Namespace,Class,File,Method,Description
Long Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The method has 126 lines of code.
Long Method,Common3D,Player,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Control,The method has 110 lines of code.
Complex Method,Common3D,CommonContents3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,Cyclomatic complexity of the method is 17
Complex Method,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,NetworkControl,Cyclomatic complexity of the method is 9
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Move,Cyclomatic complexity of the method is 19
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Flow,Cyclomatic complexity of the method is 14
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheck,Cyclomatic complexity of the method is 16
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,Cyclomatic complexity of the method is 23
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheckWhileJump,Cyclomatic complexity of the method is 16
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,Cyclomatic complexity of the method is 8
Complex Method,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,SetIdleState,Cyclomatic complexity of the method is 8
Complex Method,Common3D,Player,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Control,Cyclomatic complexity of the method is 26
Complex Method,Common3D,CharacterFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,Cyclomatic complexity of the method is 11
Complex Method,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckRThetaPhi,Cyclomatic complexity of the method is 12
Complex Method,Utility3D,CollisionController,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,SetCollInfo,Cyclomatic complexity of the method is 9
Long Parameter List,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AnimationModel,The method has 13 parameters.
Long Parameter List,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AnimationModel,The method has 12 parameters.
Long Parameter List,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Bullet,The method has 9 parameters.
Long Parameter List,Common3D,WeaponData,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WeaponData,The method has 9 parameters.
Long Parameter List,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Character,The method has 12 parameters.
Long Parameter List,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,NetworkControl,The method has 13 parameters.
Long Parameter List,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheck,The method has 6 parameters.
Long Parameter List,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheckWhileJump,The method has 6 parameters.
Long Parameter List,Common3D,Player,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Player,The method has 11 parameters.
Long Parameter List,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,DrawBulletRate,The method has 5 parameters.
Long Parameter List,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The method has 6 parameters.
Long Parameter List,Utility3D,CollisionController,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,CollisionController,The method has 5 parameters.
Long Parameter List,Utility3D,Math3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,HitCheck_Line_Capsule,The method has 5 parameters.
Long Parameter List,Utility3D,ICharacter,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,NetworkControl,The method has 13 parameters.
Long Statement,Common3D,CommonContents3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The length of the statement  "		FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "Shader.dat"' FolderInfo.GetApplicationDataFolder () + "Shader.dat"); " is 147.
Long Statement,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The length of the statement  "	Skin4_DirLight_DepthShadow_Step2_VertexShader = DX.LoadVertexShader (shaderFolder + "\\SkinMesh4_DirLight_DepthShadow_Step2VS.vso"); " is 132.
Long Statement,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The length of the statement  "	Normal_DirLight_DepthShadow_Step2_VertexShader = DX.LoadVertexShader (shaderFolder + "\\NormalMesh_DirLight_DepthShadow_Step2VS.vso"); " is 134.
Long Statement,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The length of the statement  "	//DX.DrawCapsule3D( Location + Velocity / 2' Location + Velocity' Radius / 2' 8' control.COLOR_WHITE' control.COLOR_WHITE' DX.TRUE ); " is 133.
Long Statement,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The length of the statement  "		DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE); " is 127.
Long Statement,Common3D,Weapon,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The length of the statement  "		var rot = DX.MMult (DX.MMult (DX.MGetRotZ (-(float)Math.PI / 2)' DX.MGetRotX (-(float)Math.PI / 2 * 0.6f))' DX.MGetRotY ((float)Math.PI / 2)); " is 142.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The length of the statement  "			Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20)); " is 153.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The length of the statement  "		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE); " is 215.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The length of the statement  "				DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE); " is 215.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The length of the statement  "			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE); " is 215.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,InitLocation,The length of the statement  "		InitialLocation = new DX.VECTOR ((float)(GameControl.random.NextGaussian () * stdX)' InitialLocation.y' (float)(GameControl.random.NextGaussian () * stdZ)); " is 156.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Move,The length of the statement  "			Velocity = DX.VGet (Velocity.x - Velocity.x * Params.StopSpeed * mul' Velocity.y' Velocity.z - Velocity.z * Params.StopSpeed * mul); " is 132.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Move,The length of the statement  "					if (p.Position0.y >= oldPos.y + Params.ClimbHeight || p.Position1.y >= oldPos.y + Params.ClimbHeight || p.Position2.y >= oldPos.y + Params.ClimbHeight) { " is 153.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Flow,The length of the statement  "			Velocity = DX.VGet (Velocity.x - Velocity.x * Params.StopSpeed * mul' Velocity.y' Velocity.z - Velocity.z * Params.StopSpeed * mul); " is 132.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheck,The length of the statement  "			if (DX.HitCheck_Capsule_Triangle (DX.VGet (nowPos.x' nowPos.y + radius' nowPos.z)' DX.VGet (nowPos.x' nowPos.y + radius + height' nowPos.z)' radius' item.Position0' item.Position1' item.Position2) != DX.TRUE) { " is 210.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheck,The length of the statement  "				if (DX.HitCheck_Capsule_Triangle (DX.VGet (nowPos.x' nowPos.y + radius' nowPos.z)' DX.VGet (nowPos.x' nowPos.y + radius + height' nowPos.z)' radius' item.Position0' item.Position1' item.Position2) != DX.TRUE) { " is 210.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The length of the statement  "			lineRes = DX.HitCheck_Line_Triangle (DX.VGet (nowPos.x' nowPos.y + hitHeight' nowPos.z)' DX.VGet (nowPos.x' nowPos.y - 0.01f' nowPos.z)' item.Position0' item.Position1' item.Position2); " is 185.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The length of the statement  "			lineRes = DX.HitCheck_Line_Triangle (DX.VGet (nowPos.x' nowPos.y + hitHeight' nowPos.z)' DX.VGet (nowPos.x' nowPos.y - checkHeight' nowPos.z)' item.Position0' item.Position1' item.Position2); " is 191.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The length of the statement  "			if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) { " is 133.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheckWhileJump,The length of the statement  "			if (DX.HitCheck_Capsule_Triangle (DX.VGet (nowPos.x' nowPos.y + radius' nowPos.z)' DX.VGet (nowPos.x' nowPos.y + radius + height' nowPos.z)' radius' item.Position0' item.Position1' item.Position2) != DX.TRUE) { " is 210.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,WallHitCheckWhileJump,The length of the statement  "				if (DX.HitCheck_Capsule_Triangle (DX.VGet (nowPos.x' nowPos.y + radius' nowPos.z)' DX.VGet (nowPos.x' nowPos.y + radius + height' nowPos.z)' radius' item.Position0' item.Position1' item.Position2) != DX.TRUE) { " is 210.
Long Statement,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheckWhileJump,The length of the statement  "		lineRes = DX.HitCheck_Line_Triangle (DX.VGet (nowPos.x' nowPos.y + hitHeight / 2.0f' nowPos.z)' DX.VGet (nowPos.x' nowPos.y + hitHeight' nowPos.z)' item.Position0' item.Position1' item.Position2); " is 196.
Long Statement,Common3D,Player,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Control,The length of the statement  "		Velocity = DX.VGet (Velocity.x + moveVec.x * Params.ControlScale * control.OneFrameCountf' Velocity.y' Velocity.z + moveVec.z * Params.ControlScale * control.OneFrameCountf); " is 174.
Long Statement,Common3D,CharacterFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The length of the statement  "		Characters.Add (n++' new AnimationModel (item' animPath' 1' false' -1' true' false' false' 0.1f' false' null' (m' o) =>  { " is 122.
Long Statement,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The length of the statement  "				Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range)); " is 130.
Long Statement,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,CheckCaracterNumber,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetCharacterName,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,CheckStageNumber,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetStageName,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,CheckWeaponNumber,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetWeaponName,The length of the statement  "	FolderInfo.CreateData (control' Assembly.GetExecutingAssembly ()' "Common3D"' "MODEL.dat"' FolderInfo.GetApplicationDataFolder () + "MODEL.dat"); " is 145.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,TraceFunc,The length of the statement  "	//	CameraParam.Position = DX.VGet( CameraParam.Position.x' pos.y + tracingObject.GetHeight( )' CameraParam.Position.z ); " is 120.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,RThetaPhiFunc,The length of the statement  "	//CameraParam.Target = DX.VGet( cos * vec.x - sin * vec.z' vec.y + height / 3' sin * vec.x + cos * vec.z ) + NowCameraParam.Position; " is 133.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The length of the statement  "		DX.MV1_COLL_RESULT_POLY_DIM hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' CameraParam.Position' CameraNear / 4 + 0.1f); " is 140.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckRThetaPhi,The length of the statement  "	//	x = (float)( NowCameraParam.Radius * Math.Sin( GetPhi( NowCameraParam.Theta ) ) * Math.Cos( GetPhi( NowCameraParam.Phi ) ) ); " is 128.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckRThetaPhi,The length of the statement  "	//	y = (float)( NowCameraParam.Radius * Math.Sin( GetPhi( NowCameraParam.Theta ) ) * Math.Sin( GetPhi( NowCameraParam.Phi ) ) ); " is 128.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckRThetaPhi,The length of the statement  "	//x = (float)( CameraParam.Radius * Math.Sin( GetPhi( NowCameraParam.Theta ) ) * Math.Cos( GetPhi( NowCameraParam.Phi ) ) ); " is 124.
Long Statement,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckRThetaPhi,The length of the statement  "	//y = (float)( CameraParam.Radius * Math.Sin( GetPhi( NowCameraParam.Theta ) ) * Math.Sin( GetPhi( NowCameraParam.Phi ) ) ); " is 124.
Long Statement,Utility3D,CollisionController,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,SetCollInfo,The length of the statement  "				ConvexShape shape = new ConvexHullShape (vers [offset + p.VIndex0]' vers [offset + p.VIndex1]' vers [offset + p.VIndex2]); " is 122.
Complex Conditional,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Attach,The conditional expression  "(srcModel == null && animIndex >= GetAnimNum ()) || (srcModel != null && animIndex >= srcModel.GetAnimNum ())"  is complex.
Empty Catch Block,Common3D,CharacterFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadLoopTime,The method has an empty catch block.
Empty Catch Block,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The method has an empty catch block.
Empty Catch Block,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The method has an empty catch block.
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: DX.SetCreateGraphColorBitDepth (16);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: DepthBufferGraphHandle = DX.MakeScreen (4096' 4096' DX.FALSE);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: DepthBufferGraphHandle = DX.MakeScreen (4096' 4096' DX.FALSE);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: DX.SetCreateDrawValidGraphChannelNum (4);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: DX.SetCreateGraphColorBitDepth (32);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,BeginSetupDepthImage,The following statement contains a magic number: DX.SetBackgroundColor (255' 255' 255);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,BeginSetupDepthImage,The following statement contains a magic number: DX.SetBackgroundColor (255' 255' 255);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,BeginSetupDepthImage,The following statement contains a magic number: DX.SetBackgroundColor (255' 255' 255);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,BeginSetupDepthImage,The following statement contains a magic number: DX.SetupCamera_Ortho (500);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,BeginDrawModelWithDepthShadow,The following statement contains a magic number: DX.SetVSConstFMtx (43' LightCamera_ViewMatrix);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,BeginDrawModelWithDepthShadow,The following statement contains a magic number: DX.SetVSConstFMtx (47' LightCamera_ProjectionMatrix);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,EndDrawModelWithDepthShadow,The following statement contains a magic number: DX.ResetVSConstF (43' 8);  
Magic Number,Common3D,DrawHelper3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,EndDrawModelWithDepthShadow,The following statement contains a magic number: DX.ResetVSConstF (43' 8);  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,SetupInitialState,The following statement contains a magic number: if (AnimIndex < -1) {  	MaxAnimNumber = GetAnimNum ();  	if (MaxAnimNumber > 0) {  		Animation = new AnimationHandle[MaxAnimNumber];  		for (int i = 0; i < MaxAnimNumber; i++) {  			Animation [i] = new AnimationHandle (this' i);  		}  		AnimationMode = true;  	}  }  else {  	MaxAnimNumber = 2;  	Animation = new AnimationHandle[2];  	if (AnimIndex >= 0) {  		Animation [0] = new AnimationHandle (this' AnimIndex' false' SrcModel);  	}  }  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,SetupInitialState,The following statement contains a magic number: if (AnimIndex < -1) {  	MaxAnimNumber = GetAnimNum ();  	if (MaxAnimNumber > 0) {  		Animation = new AnimationHandle[MaxAnimNumber];  		for (int i = 0; i < MaxAnimNumber; i++) {  			Animation [i] = new AnimationHandle (this' i);  		}  		AnimationMode = true;  	}  }  else {  	MaxAnimNumber = 2;  	Animation = new AnimationHandle[2];  	if (AnimIndex >= 0) {  		Animation [0] = new AnimationHandle (this' AnimIndex' false' SrcModel);  	}  }  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,SetupInitialState,The following statement contains a magic number: MaxAnimNumber = 2;  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,SetupInitialState,The following statement contains a magic number: Animation = new AnimationHandle[2];  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: if (AnimationMode) {  	foreach (var item in Animation) {  		item.Update (frame);  	}  	return 0;  }  else {  	if (Rate < 1.0f) {  		Rate += RateDelta * frame;  		if (Rate >= 1.0f) {  			Rate = 1.0f;  			Animation [0].SetBlendRate (Rate);  			if (Animation [1] != null) {  				Animation [1].SetBlendRate (0);  				Animation [1].Detach ();  				Animation [1] = null;  			}  			if (RealTime && dt > 0) {  				PhysicsCalculation (dt);  			}  			return 2;  		}  		Animation [0].SetBlendRate (Rate);  		Animation [0].Update (frame);  		if (Animation [1] != null) {  			Animation [1].SetBlendRate (1.0f - Rate);  			Animation [1].Update (frame);  		}  		if (RealTime && dt > 0) {  			PhysicsCalculation (dt);  		}  		return 1;  	}  }  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: if (Rate < 1.0f) {  	Rate += RateDelta * frame;  	if (Rate >= 1.0f) {  		Rate = 1.0f;  		Animation [0].SetBlendRate (Rate);  		if (Animation [1] != null) {  			Animation [1].SetBlendRate (0);  			Animation [1].Detach ();  			Animation [1] = null;  		}  		if (RealTime && dt > 0) {  			PhysicsCalculation (dt);  		}  		return 2;  	}  	Animation [0].SetBlendRate (Rate);  	Animation [0].Update (frame);  	if (Animation [1] != null) {  		Animation [1].SetBlendRate (1.0f - Rate);  		Animation [1].Update (frame);  	}  	if (RealTime && dt > 0) {  		PhysicsCalculation (dt);  	}  	return 1;  }  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: if (Rate >= 1.0f) {  	Rate = 1.0f;  	Animation [0].SetBlendRate (Rate);  	if (Animation [1] != null) {  		Animation [1].SetBlendRate (0);  		Animation [1].Detach ();  		Animation [1] = null;  	}  	if (RealTime && dt > 0) {  		PhysicsCalculation (dt);  	}  	return 2;  }  
Magic Number,Common3D,AnimationModel,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: return 2;  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  	DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  }  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  	DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  }  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  	DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  }  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  	DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  }  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  	DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  }  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.SetDrawBlendMode (DX.DX_BLENDMODE_ALPHA' (int)(50 + 170.0 * i / n));  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawSphere3D (Location + Velocity * (1 + (float)i * 2 / n) / 3' tmpr' 8' control.COLOR_GRAY2' control.COLOR_GRAY2' DX.TRUE);  
Magic Number,Common3D,Bullet,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawSphere3D (Location + Velocity' Radius' 8' control.COLOR_BLACK' control.COLOR_BLACK' DX.TRUE);  
Magic Number,Common3D,Weapon,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: if (shot) {  	var move = DX.MGetTranslate (DX.VGet (0.2f' -0.1f' -0.5f));  	DX.VECTOR v = Owner.LockOn ? Owner.TargetRelativeLocation : Owner.ShotVec;  	float theta = (float)Math.Atan2 (v.y' Math.Sqrt (v.x * v.x + v.z * v.z));  	float phi = (float)Math.Atan2 (v.x' v.z);  	var rot = DX.MMult (DX.MGetRotX (theta)' DX.MGetRotY (phi + (float)Math.PI));  	float x = frameMatrix.m30;  	float y = frameMatrix.m31;  	float z = frameMatrix.m32;  	frameMatrix = DX.MGetIdent ();  	frameMatrix.m30 = x;  	frameMatrix.m31 = y;  	frameMatrix.m32 = z;  	frameMatrix = DX.MMult (DX.MMult (move' rot)' frameMatrix);  }  else {  	var move = DX.MGetTranslate (DX.VGet (0.2f' -0.1f' -0.5f));  	var rot = DX.MMult (DX.MMult (DX.MGetRotZ (-(float)Math.PI / 2)' DX.MGetRotX (-(float)Math.PI / 2 * 0.6f))' DX.MGetRotY ((float)Math.PI / 2));  	frameMatrix = DX.MMult (DX.MMult (move' rot)' frameMatrix);  }  
Magic Number,Common3D,Weapon,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: if (shot) {  	var move = DX.MGetTranslate (DX.VGet (0.2f' -0.1f' -0.5f));  	DX.VECTOR v = Owner.LockOn ? Owner.TargetRelativeLocation : Owner.ShotVec;  	float theta = (float)Math.Atan2 (v.y' Math.Sqrt (v.x * v.x + v.z * v.z));  	float phi = (float)Math.Atan2 (v.x' v.z);  	var rot = DX.MMult (DX.MGetRotX (theta)' DX.MGetRotY (phi + (float)Math.PI));  	float x = frameMatrix.m30;  	float y = frameMatrix.m31;  	float z = frameMatrix.m32;  	frameMatrix = DX.MGetIdent ();  	frameMatrix.m30 = x;  	frameMatrix.m31 = y;  	frameMatrix.m32 = z;  	frameMatrix = DX.MMult (DX.MMult (move' rot)' frameMatrix);  }  else {  	var move = DX.MGetTranslate (DX.VGet (0.2f' -0.1f' -0.5f));  	var rot = DX.MMult (DX.MMult (DX.MGetRotZ (-(float)Math.PI / 2)' DX.MGetRotX (-(float)Math.PI / 2 * 0.6f))' DX.MGetRotY ((float)Math.PI / 2));  	frameMatrix = DX.MMult (DX.MMult (move' rot)' frameMatrix);  }  
Magic Number,Common3D,Weapon,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: if (shot) {  	var move = DX.MGetTranslate (DX.VGet (0.2f' -0.1f' -0.5f));  	DX.VECTOR v = Owner.LockOn ? Owner.TargetRelativeLocation : Owner.ShotVec;  	float theta = (float)Math.Atan2 (v.y' Math.Sqrt (v.x * v.x + v.z * v.z));  	float phi = (float)Math.Atan2 (v.x' v.z);  	var rot = DX.MMult (DX.MGetRotX (theta)' DX.MGetRotY (phi + (float)Math.PI));  	float x = frameMatrix.m30;  	float y = frameMatrix.m31;  	float z = frameMatrix.m32;  	frameMatrix = DX.MGetIdent ();  	frameMatrix.m30 = x;  	frameMatrix.m31 = y;  	frameMatrix.m32 = z;  	frameMatrix = DX.MMult (DX.MMult (move' rot)' frameMatrix);  }  else {  	var move = DX.MGetTranslate (DX.VGet (0.2f' -0.1f' -0.5f));  	var rot = DX.MMult (DX.MMult (DX.MGetRotZ (-(float)Math.PI / 2)' DX.MGetRotX (-(float)Math.PI / 2 * 0.6f))' DX.MGetRotY ((float)Math.PI / 2));  	frameMatrix = DX.MMult (DX.MMult (move' rot)' frameMatrix);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Character,The following statement contains a magic number: Weapon = new Weapon[3];  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Character,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (weaponIndex [i] >= weaponFactory.Weapons.Count) {  		weaponIndex [i] = GameControl.random.Next (weaponFactory.Weapons.Count);  	}  	Weapon [i] = new Weapon (weaponFactory' this' weaponAttachFrameName' weaponIndex [i]);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetHeight,The following statement contains a magic number: if (Model.Valid && Model.LoadAsyncState == Utility.LoadAsyncState.Invalid) {  	radius = Model.CheckModelR ();  	height = Model.CheckModelHeight () - 2 * radius;  	setHeight = height > 0 && radius > 0;  }  else {  	radius = 1.4f;  	height = 17.2f;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetHeight,The following statement contains a magic number: height = Model.CheckModelHeight () - 2 * radius;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetRealHeight,The following statement contains a magic number: return GetHeight () + 2 * radius;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.LoadAsyncState == Utility.LoadAsyncState.Loading) {  	DX.VECTOR screenLoc = DX.ConvWorldPosToScreenPos (DX.VGet (Location.x' Location.y + height / 2 + radius' Location.z));  	if (screenLoc.z > 0 && screenLoc.z < 1) {  		drawDotCount += control.MilliSecond;  		while (drawDotCount >= 1400) {  			drawDotCount -= 1400;  		}  		int dot = (int)(drawDotCount / 350) + 1;  		string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  		Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  	}  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  else {  	if (Model.Valid) {  		Model.Draw ();  		if (debug) {  			DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  		}  	}  	else {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (screenLoc.z > 0 && screenLoc.z < 1) {  	drawDotCount += control.MilliSecond;  	while (drawDotCount >= 1400) {  		drawDotCount -= 1400;  	}  	int dot = (int)(drawDotCount / 350) + 1;  	string str = "Now Loading" + String.Join (""' Enumerable.Repeat ("."' dot));  	Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: while (drawDotCount >= 1400) {  	drawDotCount -= 1400;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: while (drawDotCount >= 1400) {  	drawDotCount -= 1400;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: drawDotCount -= 1400;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: Utility.DrawCenterStringToHandle (str' (int)screenLoc.x' (int)screenLoc.y - 10' DX.GetColor (208' 128' 208)' control.GetFont (FontDefines.FONT_SIZE_20));  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (Model.Valid) {  	Model.Draw ();  	if (debug) {  		DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  	}  }  else {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: if (debug) {  	DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Draw,The following statement contains a magic number: DX.DrawCapsule3D (DX.VGet (Location.x' Location.y + radius' Location.z)' DX.VGet (Location.x' Location.y + radius + height' Location.z)' radius' 10' DX.GetColor (255' 128' 64)' DX.GetColor (255' 128' 64)' DX.FALSE);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Initialize,The following statement contains a magic number: WaitTime = 10 * 1000;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Initialize,The following statement contains a magic number: WaitTime = 10 * 1000;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Initialize,The following statement contains a magic number: ClimbSTime = 0.3f * 1000;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Update,The following statement contains a magic number: Weapon [2].Update (control);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Flow,The following statement contains a magic number: if ((State & CharacterState.LANDING) == 0) {  	float vely = Velocity.y;  	vely -= Params.PlayerGrav * mul;  	if (vely < 0) {  		if ((State & CharacterState.JUMP) != 0) {  			vely = 0;  			State &= ~CharacterState.JUMP;  			State |= CharacterState.FALL;  			AttachAnimation (CharacterAnim.MOVE_JUMP_DOWN1' 0.07f);  		}  		if (vely < -Params.LongFallThreshold) {  			if ((State & CharacterState.LONG_FALL) == 0) {  				State |= CharacterState.LONG_FALL;  				AttachAnimation (CharacterAnim.MOVE_FALL1' 0.08f);  			}  			if (vely <= -Params.MaxFallSpeed) {  				vely = -Params.MaxFallSpeed;  			}  		}  	}  	Velocity = DX.VGet (Velocity.x' vely' Velocity.z);  }  else {  	LandingTime -= dt;  	if (LandingTime <= 500) {  		if ((State & CharacterState.MOVE_FILTER) != 0) {  			State &= ~CharacterState.MOVE_FILTER;  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND' 0.06f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND' 0.06f);  			}  		}  		if (LandingTime <= 0) {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND' 0.06f);  			}  			IdleTime = 0;  			State &= ~CharacterState.FLOW_FILTER;  			State &= ~CharacterState.WAIT_FILTER;  			Velocity = DX.VGet (0' Velocity.y' 0);  		}  		else {  			return false;  		}  	}  	else {  		return false;  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Flow,The following statement contains a magic number: if (LandingTime <= 500) {  	if ((State & CharacterState.MOVE_FILTER) != 0) {  		State &= ~CharacterState.MOVE_FILTER;  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND' 0.06f);  		}  		else {  			AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND' 0.06f);  		}  	}  	if (LandingTime <= 0) {  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND' 0.06f);  		}  		IdleTime = 0;  		State &= ~CharacterState.FLOW_FILTER;  		State &= ~CharacterState.WAIT_FILTER;  		Velocity = DX.VGet (0' Velocity.y' 0);  	}  	else {  		return false;  	}  }  else {  	return false;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (hit) {  	if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  		nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  	}  	else {  		if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  			if ((State & CharacterState.RUN) != 0) {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  				}  				State &= ~CharacterState.RUN;  				Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  			}  			State |= CharacterState.CLIMB_S;  			ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  			ClimbFromLocation = oldPos;  			ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  		}  		else {  			nowPos.y = maxY;  			if ((State & CharacterState.FLOW_FILTER) != 0) {  				if ((State & CharacterState.LONG_FALL) == 0) {  					Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  					State &= ~CharacterState.FLOW_FILTER;  					if ((State & CharacterState.WALK) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.StopThreshold) {  							State |= CharacterState.WALK;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  						else {  							IdleTime = 0;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  							}  						}  						State &= ~CharacterState.WAIT_FILTER;  					}  					else if ((State & CharacterState.RUN) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.WalkThreshold) {  							State |= CharacterState.RUN;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  							}  						}  						else {  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  				}  				else {  					State |= CharacterState.LANDING;  					AttachAnimation (CharacterAnim.MOVE_FALLEND1);  					float vely = Velocity.y;  					Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  					LandingTime = 233 * Math.Abs (vely);  				}  			}  		}  	}  	LastHitFloorPolyIndex = polyIndex;  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0) {  		State |= CharacterState.FALL;  		AttachAnimation (CharacterAnim.MOVE_FALL1);  		Velocity = DX.VGet (Velocity.x' Params.FallUpPower' Velocity.z);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (hit) {  	if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  		nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  	}  	else {  		if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  			if ((State & CharacterState.RUN) != 0) {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  				}  				State &= ~CharacterState.RUN;  				Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  			}  			State |= CharacterState.CLIMB_S;  			ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  			ClimbFromLocation = oldPos;  			ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  		}  		else {  			nowPos.y = maxY;  			if ((State & CharacterState.FLOW_FILTER) != 0) {  				if ((State & CharacterState.LONG_FALL) == 0) {  					Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  					State &= ~CharacterState.FLOW_FILTER;  					if ((State & CharacterState.WALK) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.StopThreshold) {  							State |= CharacterState.WALK;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  						else {  							IdleTime = 0;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  							}  						}  						State &= ~CharacterState.WAIT_FILTER;  					}  					else if ((State & CharacterState.RUN) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.WalkThreshold) {  							State |= CharacterState.RUN;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  							}  						}  						else {  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  				}  				else {  					State |= CharacterState.LANDING;  					AttachAnimation (CharacterAnim.MOVE_FALLEND1);  					float vely = Velocity.y;  					Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  					LandingTime = 233 * Math.Abs (vely);  				}  			}  		}  	}  	LastHitFloorPolyIndex = polyIndex;  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0) {  		State |= CharacterState.FALL;  		AttachAnimation (CharacterAnim.MOVE_FALL1);  		Velocity = DX.VGet (Velocity.x' Params.FallUpPower' Velocity.z);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (hit) {  	if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  		nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  	}  	else {  		if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  			if ((State & CharacterState.RUN) != 0) {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  				}  				State &= ~CharacterState.RUN;  				Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  			}  			State |= CharacterState.CLIMB_S;  			ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  			ClimbFromLocation = oldPos;  			ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  		}  		else {  			nowPos.y = maxY;  			if ((State & CharacterState.FLOW_FILTER) != 0) {  				if ((State & CharacterState.LONG_FALL) == 0) {  					Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  					State &= ~CharacterState.FLOW_FILTER;  					if ((State & CharacterState.WALK) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.StopThreshold) {  							State |= CharacterState.WALK;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  						else {  							IdleTime = 0;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  							}  						}  						State &= ~CharacterState.WAIT_FILTER;  					}  					else if ((State & CharacterState.RUN) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.WalkThreshold) {  							State |= CharacterState.RUN;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  							}  						}  						else {  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  				}  				else {  					State |= CharacterState.LANDING;  					AttachAnimation (CharacterAnim.MOVE_FALLEND1);  					float vely = Velocity.y;  					Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  					LandingTime = 233 * Math.Abs (vely);  				}  			}  		}  	}  	LastHitFloorPolyIndex = polyIndex;  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0) {  		State |= CharacterState.FALL;  		AttachAnimation (CharacterAnim.MOVE_FALL1);  		Velocity = DX.VGet (Velocity.x' Params.FallUpPower' Velocity.z);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (hit) {  	if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  		nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  	}  	else {  		if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  			if ((State & CharacterState.RUN) != 0) {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  				}  				State &= ~CharacterState.RUN;  				Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  			}  			State |= CharacterState.CLIMB_S;  			ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  			ClimbFromLocation = oldPos;  			ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  		}  		else {  			nowPos.y = maxY;  			if ((State & CharacterState.FLOW_FILTER) != 0) {  				if ((State & CharacterState.LONG_FALL) == 0) {  					Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  					State &= ~CharacterState.FLOW_FILTER;  					if ((State & CharacterState.WALK) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.StopThreshold) {  							State |= CharacterState.WALK;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  						else {  							IdleTime = 0;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  							}  						}  						State &= ~CharacterState.WAIT_FILTER;  					}  					else if ((State & CharacterState.RUN) == 0) {  						float speed = DX.VSize (Velocity);  						if (speed > Params.WalkThreshold) {  							State |= CharacterState.RUN;  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  							}  						}  						else {  							if (ReadyGun) {  								AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  							}  							else {  								AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  							}  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  				}  				else {  					State |= CharacterState.LANDING;  					AttachAnimation (CharacterAnim.MOVE_FALLEND1);  					float vely = Velocity.y;  					Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  					LandingTime = 233 * Math.Abs (vely);  				}  			}  		}  	}  	LastHitFloorPolyIndex = polyIndex;  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0) {  		State |= CharacterState.FALL;  		AttachAnimation (CharacterAnim.MOVE_FALL1);  		Velocity = DX.VGet (Velocity.x' Params.FallUpPower' Velocity.z);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  	nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  		if ((State & CharacterState.RUN) != 0) {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  			State &= ~CharacterState.RUN;  			Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  		}  		State |= CharacterState.CLIMB_S;  		ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  		ClimbFromLocation = oldPos;  		ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  	}  	else {  		nowPos.y = maxY;  		if ((State & CharacterState.FLOW_FILTER) != 0) {  			if ((State & CharacterState.LONG_FALL) == 0) {  				Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  				State &= ~CharacterState.FLOW_FILTER;  				if ((State & CharacterState.WALK) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.StopThreshold) {  						State |= CharacterState.WALK;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  					else {  						IdleTime = 0;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  						}  					}  					State &= ~CharacterState.WAIT_FILTER;  				}  				else if ((State & CharacterState.RUN) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.WalkThreshold) {  						State |= CharacterState.RUN;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  			}  			else {  				State |= CharacterState.LANDING;  				AttachAnimation (CharacterAnim.MOVE_FALLEND1);  				float vely = Velocity.y;  				Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  				LandingTime = 233 * Math.Abs (vely);  			}  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  	nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  		if ((State & CharacterState.RUN) != 0) {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  			State &= ~CharacterState.RUN;  			Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  		}  		State |= CharacterState.CLIMB_S;  		ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  		ClimbFromLocation = oldPos;  		ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  	}  	else {  		nowPos.y = maxY;  		if ((State & CharacterState.FLOW_FILTER) != 0) {  			if ((State & CharacterState.LONG_FALL) == 0) {  				Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  				State &= ~CharacterState.FLOW_FILTER;  				if ((State & CharacterState.WALK) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.StopThreshold) {  						State |= CharacterState.WALK;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  					else {  						IdleTime = 0;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  						}  					}  					State &= ~CharacterState.WAIT_FILTER;  				}  				else if ((State & CharacterState.RUN) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.WalkThreshold) {  						State |= CharacterState.RUN;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  			}  			else {  				State |= CharacterState.LANDING;  				AttachAnimation (CharacterAnim.MOVE_FALLEND1);  				float vely = Velocity.y;  				Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  				LandingTime = 233 * Math.Abs (vely);  			}  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  	nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  		if ((State & CharacterState.RUN) != 0) {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  			State &= ~CharacterState.RUN;  			Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  		}  		State |= CharacterState.CLIMB_S;  		ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  		ClimbFromLocation = oldPos;  		ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  	}  	else {  		nowPos.y = maxY;  		if ((State & CharacterState.FLOW_FILTER) != 0) {  			if ((State & CharacterState.LONG_FALL) == 0) {  				Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  				State &= ~CharacterState.FLOW_FILTER;  				if ((State & CharacterState.WALK) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.StopThreshold) {  						State |= CharacterState.WALK;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  					else {  						IdleTime = 0;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  						}  					}  					State &= ~CharacterState.WAIT_FILTER;  				}  				else if ((State & CharacterState.RUN) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.WalkThreshold) {  						State |= CharacterState.RUN;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  			}  			else {  				State |= CharacterState.LANDING;  				AttachAnimation (CharacterAnim.MOVE_FALLEND1);  				float vely = Velocity.y;  				Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  				LandingTime = 233 * Math.Abs (vely);  			}  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if (maxY - minY > Params.ClimbHeight && maxY - minY < hitHeight) {  	nowPos = DX.VGet (oldPos.x' nowPos.y' oldPos.z);  }  else {  	if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  		if ((State & CharacterState.RUN) != 0) {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  			State &= ~CharacterState.RUN;  			Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  		}  		State |= CharacterState.CLIMB_S;  		ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  		ClimbFromLocation = oldPos;  		ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  	}  	else {  		nowPos.y = maxY;  		if ((State & CharacterState.FLOW_FILTER) != 0) {  			if ((State & CharacterState.LONG_FALL) == 0) {  				Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  				State &= ~CharacterState.FLOW_FILTER;  				if ((State & CharacterState.WALK) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.StopThreshold) {  						State |= CharacterState.WALK;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  					else {  						IdleTime = 0;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  						}  					}  					State &= ~CharacterState.WAIT_FILTER;  				}  				else if ((State & CharacterState.RUN) == 0) {  					float speed = DX.VSize (Velocity);  					if (speed > Params.WalkThreshold) {  						State |= CharacterState.RUN;  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  						}  					}  					else {  						if (ReadyGun) {  							AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  						}  						else {  							AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  						}  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  			}  			else {  				State |= CharacterState.LANDING;  				AttachAnimation (CharacterAnim.MOVE_FALLEND1);  				float vely = Velocity.y;  				Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  				LandingTime = 233 * Math.Abs (vely);  			}  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  	if ((State & CharacterState.RUN) != 0) {  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  		}  		else {  			AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  		}  		State &= ~CharacterState.RUN;  		Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  	}  	State |= CharacterState.CLIMB_S;  	ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  	ClimbFromLocation = oldPos;  	ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  }  else {  	nowPos.y = maxY;  	if ((State & CharacterState.FLOW_FILTER) != 0) {  		if ((State & CharacterState.LONG_FALL) == 0) {  			Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  			State &= ~CharacterState.FLOW_FILTER;  			if ((State & CharacterState.WALK) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.StopThreshold) {  					State |= CharacterState.WALK;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  				else {  					IdleTime = 0;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  					}  				}  				State &= ~CharacterState.WAIT_FILTER;  			}  			else if ((State & CharacterState.RUN) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.WalkThreshold) {  					State |= CharacterState.RUN;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  			}  			else {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  				}  			}  		}  		else {  			State |= CharacterState.LANDING;  			AttachAnimation (CharacterAnim.MOVE_FALLEND1);  			float vely = Velocity.y;  			Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  			LandingTime = 233 * Math.Abs (vely);  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  	if ((State & CharacterState.RUN) != 0) {  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  		}  		else {  			AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  		}  		State &= ~CharacterState.RUN;  		Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  	}  	State |= CharacterState.CLIMB_S;  	ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  	ClimbFromLocation = oldPos;  	ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  }  else {  	nowPos.y = maxY;  	if ((State & CharacterState.FLOW_FILTER) != 0) {  		if ((State & CharacterState.LONG_FALL) == 0) {  			Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  			State &= ~CharacterState.FLOW_FILTER;  			if ((State & CharacterState.WALK) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.StopThreshold) {  					State |= CharacterState.WALK;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  				else {  					IdleTime = 0;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  					}  				}  				State &= ~CharacterState.WAIT_FILTER;  			}  			else if ((State & CharacterState.RUN) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.WalkThreshold) {  					State |= CharacterState.RUN;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  			}  			else {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  				}  			}  		}  		else {  			State |= CharacterState.LANDING;  			AttachAnimation (CharacterAnim.MOVE_FALLEND1);  			float vely = Velocity.y;  			Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  			LandingTime = 233 * Math.Abs (vely);  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  	if ((State & CharacterState.RUN) != 0) {  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  		}  		else {  			AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  		}  		State &= ~CharacterState.RUN;  		Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  	}  	State |= CharacterState.CLIMB_S;  	ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  	ClimbFromLocation = oldPos;  	ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  }  else {  	nowPos.y = maxY;  	if ((State & CharacterState.FLOW_FILTER) != 0) {  		if ((State & CharacterState.LONG_FALL) == 0) {  			Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  			State &= ~CharacterState.FLOW_FILTER;  			if ((State & CharacterState.WALK) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.StopThreshold) {  					State |= CharacterState.WALK;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  				else {  					IdleTime = 0;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  					}  				}  				State &= ~CharacterState.WAIT_FILTER;  			}  			else if ((State & CharacterState.RUN) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.WalkThreshold) {  					State |= CharacterState.RUN;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  			}  			else {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  				}  			}  		}  		else {  			State |= CharacterState.LANDING;  			AttachAnimation (CharacterAnim.MOVE_FALLEND1);  			float vely = Velocity.y;  			Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  			LandingTime = 233 * Math.Abs (vely);  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.FLOW_FILTER) == 0 && maxY > oldPos.y + Params.ClimbHeight / 3.0f && polyIndex != LastHitFloorPolyIndex) {  	if ((State & CharacterState.RUN) != 0) {  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  		}  		else {  			AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  		}  		State &= ~CharacterState.RUN;  		Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  	}  	State |= CharacterState.CLIMB_S;  	ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  	ClimbFromLocation = oldPos;  	ClimbToLocation = DX.VGet (nowPos.x' maxY' nowPos.z);  }  else {  	nowPos.y = maxY;  	if ((State & CharacterState.FLOW_FILTER) != 0) {  		if ((State & CharacterState.LONG_FALL) == 0) {  			Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  			State &= ~CharacterState.FLOW_FILTER;  			if ((State & CharacterState.WALK) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.StopThreshold) {  					State |= CharacterState.WALK;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  				else {  					IdleTime = 0;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  					}  				}  				State &= ~CharacterState.WAIT_FILTER;  			}  			else if ((State & CharacterState.RUN) == 0) {  				float speed = DX.VSize (Velocity);  				if (speed > Params.WalkThreshold) {  					State |= CharacterState.RUN;  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  					}  				}  				else {  					if (ReadyGun) {  						AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  					}  					else {  						AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  					}  				}  			}  			else {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  				}  			}  		}  		else {  			State |= CharacterState.LANDING;  			AttachAnimation (CharacterAnim.MOVE_FALLEND1);  			float vely = Velocity.y;  			Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  			LandingTime = 233 * Math.Abs (vely);  		}  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.RUN) != 0) {  	if (ReadyGun) {  		AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  	}  	else {  		AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  	}  	State &= ~CharacterState.RUN;  	Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.RUN) != 0) {  	if (ReadyGun) {  		AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  	}  	else {  		AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  	}  	State &= ~CharacterState.RUN;  	Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: Velocity = DX.VGet (Velocity.x / 10' Velocity.y' Velocity.z / 10);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: ClimbingSTime = ClimbSTime * (Params.ClimbHeight + maxY - oldPos.y) / (Params.ClimbHeight * 2);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.FLOW_FILTER) != 0) {  	if ((State & CharacterState.LONG_FALL) == 0) {  		Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  		State &= ~CharacterState.FLOW_FILTER;  		if ((State & CharacterState.WALK) == 0) {  			float speed = DX.VSize (Velocity);  			if (speed > Params.StopThreshold) {  				State |= CharacterState.WALK;  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  				}  			}  			else {  				IdleTime = 0;  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  				}  			}  			State &= ~CharacterState.WAIT_FILTER;  		}  		else if ((State & CharacterState.RUN) == 0) {  			float speed = DX.VSize (Velocity);  			if (speed > Params.WalkThreshold) {  				State |= CharacterState.RUN;  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  				}  			}  			else {  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  				}  			}  		}  		else {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  			}  		}  	}  	else {  		State |= CharacterState.LANDING;  		AttachAnimation (CharacterAnim.MOVE_FALLEND1);  		float vely = Velocity.y;  		Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  		LandingTime = 233 * Math.Abs (vely);  	}  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: if ((State & CharacterState.LONG_FALL) == 0) {  	Velocity = DX.VGet (Velocity.x' 0' Velocity.z);  	State &= ~CharacterState.FLOW_FILTER;  	if ((State & CharacterState.WALK) == 0) {  		float speed = DX.VSize (Velocity);  		if (speed > Params.StopThreshold) {  			State |= CharacterState.WALK;  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  		}  		else {  			IdleTime = 0;  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_STAND);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_STAND);  			}  		}  		State &= ~CharacterState.WAIT_FILTER;  	}  	else if ((State & CharacterState.RUN) == 0) {  		float speed = DX.VSize (Velocity);  		if (speed > Params.WalkThreshold) {  			State |= CharacterState.RUN;  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  			}  		}  		else {  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  		}  	}  	else {  		if (ReadyGun) {  			AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  		}  		else {  			AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  		}  	}  }  else {  	State |= CharacterState.LANDING;  	AttachAnimation (CharacterAnim.MOVE_FALLEND1);  	float vely = Velocity.y;  	Velocity = DX.VGet (Velocity.x / 10f' 0' Velocity.z / 10f);  	LandingTime = 233 * Math.Abs (vely);  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,FloorHitCheck,The following statement contains a magic number: LandingTime = 233 * Math.Abs (vely);  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: if (saAngle > Math.PI) {  	saAngle -= 2 * (float)Math.PI;  }  else if (saAngle < -Math.PI) {  	saAngle += 2 * (float)Math.PI;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: if (saAngle > Math.PI) {  	saAngle -= 2 * (float)Math.PI;  }  else if (saAngle < -Math.PI) {  	saAngle += 2 * (float)Math.PI;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: saAngle -= 2 * (float)Math.PI;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: if (saAngle < -Math.PI) {  	saAngle += 2 * (float)Math.PI;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: saAngle += 2 * (float)Math.PI;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: if (NowAngle > Math.PI) {  	NowAngle -= 2 * (float)Math.PI;  }  else if (NowAngle < -Math.PI) {  	NowAngle += 2 * (float)Math.PI;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: if (NowAngle > Math.PI) {  	NowAngle -= 2 * (float)Math.PI;  }  else if (NowAngle < -Math.PI) {  	NowAngle += 2 * (float)Math.PI;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: NowAngle -= 2 * (float)Math.PI;  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: if (NowAngle < -Math.PI) {  	NowAngle += 2 * (float)Math.PI;  }  
Magic Number,Common3D,Character,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,AngleProcess,The following statement contains a magic number: NowAngle += 2 * (float)Math.PI;  
Magic Number,Common3D,Player,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Control,The following statement contains a magic number: if (MoveFlag) {  	Velocity = DX.VGet (Velocity.x + moveVec.x * Params.ControlScale * control.OneFrameCountf' Velocity.y' Velocity.z + moveVec.z * Params.ControlScale * control.OneFrameCountf);  	NowSpeed = (float)Math.Sqrt (Velocity.x * Velocity.x + Velocity.z * Velocity.z);  	if (Math.Abs (NowSpeed) > 0.001) {  		Angle = (float)Math.Atan2 (Velocity.x' Velocity.z);  	}  	if (!LockOn && control.IsKeyInput (Keys.Dash)) {  		if (NowSpeed > Params.RunSpeed) {  			NowSpeed = Params.RunSpeed;  			Velocity = DX.VGet ((float)(NowSpeed * Math.Sin (Angle))' Velocity.y' (float)(NowSpeed * Math.Cos (Angle)));  		}  	}  	else {  		if (NowSpeed > Params.WalkSpeed) {  			NowSpeed *= Params.StopSpeed * (float)control.OneFrameCountf;  			if (NowSpeed < Params.WalkSpeed) {  				NowSpeed = Params.WalkSpeed;  				Velocity = DX.VGet ((float)(NowSpeed * Math.Sin (Angle))' Velocity.y' (float)(NowSpeed * Math.Cos (Angle)));  			}  		}  	}  	if ((State & CharacterState.FLOW_FILTER) == 0) {  		if ((State & CharacterState.WALK) == 0) {  			State |= CharacterState.WALK;  			State &= ~CharacterState.WAIT_FILTER;  			if (ReadyGun) {  				AttachAnimation (CharacterAnim.WEAPON_LOCKON_WALK' 0.3f);  			}  			else {  				AttachAnimation (CharacterAnim.WEAPON_WAIT_WALK' 0.3f);  			}  		}  		else if ((State & CharacterState.RUN) == 0) {  			moveVec = DX.VGet (Velocity.x' 0' Velocity.z);  			float speed = DX.VSize (moveVec);  			if (speed > Params.WalkThreshold) {  				State |= CharacterState.RUN;  				if (ReadyGun) {  					AttachAnimation (CharacterAnim.WEAPON_LOCKON_RUN' 0.3f);  				}  				else {  					AttachAnimation (CharacterAnim.WEAPON_WAIT_RUN' 0.3f);  				}  			}  		}  	}  }  
Magic Number,Common3D,Player,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Control,The following statement contains a magic number: if (Math.Abs (NowSpeed) > 0.001) {  	Angle = (float)Math.Atan2 (Velocity.x' Velocity.z);  }  
Magic Number,Common3D,CharacterFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadLoopTime,The following statement contains a magic number: if (fp != 0) {  	tmp.Add (0);  	while (DX.FileRead_eof (fp) == 0) {  		string str = Utility.ReadLine (fp);  		string[] split = str.Split ('\t');  		if (split.Length >= 2) {  			try {  				int add = int.Parse (split [0]);  				tmp.Add (add);  			}  			catch {  			}  		}  	}  	DX.FileRead_close (fp);  	if (tmp.Count < CHARACTER_ANIM_NUMBER) {  		return null;  	}  	return tmp.ToArray ();  }  
Magic Number,Common3D,CharacterFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadLoopTime,The following statement contains a magic number: while (DX.FileRead_eof (fp) == 0) {  	string str = Utility.ReadLine (fp);  	string[] split = str.Split ('\t');  	if (split.Length >= 2) {  		try {  			int add = int.Parse (split [0]);  			tmp.Add (add);  		}  		catch {  		}  	}  }  
Magic Number,Common3D,CharacterFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadLoopTime,The following statement contains a magic number: if (split.Length >= 2) {  	try {  		int add = int.Parse (split [0]);  		tmp.Add (add);  	}  	catch {  	}  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: RateGraph = new Utility.GraphicHandle[2];  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,Load,The following statement contains a magic number: RateGraph [1].ChangeHue (0' 0' 255);  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: for (int i = 0; ; i++) {  	string folder = weaponFolder + "WEAPON" + i + "\\";  	int fp = DX.FileRead_open (folder + "load.txt");  	bool check = false;  	if (fp != 0) {  		while (DX.FileRead_eof (fp) == 0) {  			string str = Utility.ReadLine (fp);  			if (str.StartsWith ("//"))  				continue;  			var split = str.Split ('\t');  			if (split.Length >= 8) {  				loadData.Add (folder + str);  				check = true;  				break;  			}  		}  		DX.FileRead_close (fp);  	}  	if (!check) {  		break;  	}  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: if (fp != 0) {  	while (DX.FileRead_eof (fp) == 0) {  		string str = Utility.ReadLine (fp);  		if (str.StartsWith ("//"))  			continue;  		var split = str.Split ('\t');  		if (split.Length >= 8) {  			loadData.Add (folder + str);  			check = true;  			break;  		}  	}  	DX.FileRead_close (fp);  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: while (DX.FileRead_eof (fp) == 0) {  	string str = Utility.ReadLine (fp);  	if (str.StartsWith ("//"))  		continue;  	var split = str.Split ('\t');  	if (split.Length >= 8) {  		loadData.Add (folder + str);  		check = true;  		break;  	}  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: if (split.Length >= 8) {  	loadData.Add (folder + str);  	check = true;  	break;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: foreach (var item in loadData) {  	string[] split = item.Split ('\t');  	try {  		try {  			string path = split [0];  			double interval = double.Parse (split [1]);  			int max = (int)double.Parse (split [2]);  			int cartridge = (int)double.Parse (split [3]);  			double reloadTime = double.Parse (split [4]);  			int baseDamage = (int)double.Parse (split [5]);  			double damageVar = double.Parse (split [6]);  			double range = double.Parse (split [7]);  			double extendRate;  			if (split.Length > 8) {  				extendRate = double.Parse (split [8]);  			}  			else {  				extendRate = 1;  			}  			Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  		}  		catch {  		}  	}  	catch {  	}  	index++;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	try {  		string path = split [0];  		double interval = double.Parse (split [1]);  		int max = (int)double.Parse (split [2]);  		int cartridge = (int)double.Parse (split [3]);  		double reloadTime = double.Parse (split [4]);  		int baseDamage = (int)double.Parse (split [5]);  		double damageVar = double.Parse (split [6]);  		double range = double.Parse (split [7]);  		double extendRate;  		if (split.Length > 8) {  			extendRate = double.Parse (split [8]);  		}  		else {  			extendRate = 1;  		}  		Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  	}  	catch {  	}  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: try {  	string path = split [0];  	double interval = double.Parse (split [1]);  	int max = (int)double.Parse (split [2]);  	int cartridge = (int)double.Parse (split [3]);  	double reloadTime = double.Parse (split [4]);  	int baseDamage = (int)double.Parse (split [5]);  	double damageVar = double.Parse (split [6]);  	double range = double.Parse (split [7]);  	double extendRate;  	if (split.Length > 8) {  		extendRate = double.Parse (split [8]);  	}  	else {  		extendRate = 1;  	}  	Weapons.Add (index' new WeaponData (path' (float)extendRate' interval' max' cartridge' reloadTime' baseDamage' damageVar' range));  }  catch {  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: if (split.Length > 8) {  	extendRate = double.Parse (split [8]);  }  else {  	extendRate = 1;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: if (split.Length > 8) {  	extendRate = double.Parse (split [8]);  }  else {  	extendRate = 1;  }  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,LoadWeapons,The following statement contains a magic number: extendRate = double.Parse (split [8]);  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,DrawBulletRate,The following statement contains a magic number: DX.DrawCircleGauge (draw.GraphicWidth / 2' draw.GraphicHeight / 2' percent' draw.Handle);  
Magic Number,Common3D,WeaponFactory,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,DrawBulletRate,The following statement contains a magic number: DX.DrawCircleGauge (draw.GraphicWidth / 2' draw.GraphicHeight / 2' percent' draw.Handle);  
Magic Number,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetWeaponName,The following statement contains a magic number: for (int i = 0; ; i++) {  	string folder = weaponFolder + i + "\\";  	int fp = DX.FileRead_open (folder + "load.txt");  	if (fp != 0) {  		while (DX.FileRead_eof (fp) == 0) {  			string str = Utility.ReadLine (fp);  			if (str.StartsWith ("//"))  				continue;  			var split = str.Split ('\t');  			if (split.Length >= 8) {  				ret.Add (Path.GetFileNameWithoutExtension (split [0]));  				break;  			}  		}  		DX.FileRead_close (fp);  	}  	else {  		break;  	}  }  
Magic Number,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetWeaponName,The following statement contains a magic number: if (fp != 0) {  	while (DX.FileRead_eof (fp) == 0) {  		string str = Utility.ReadLine (fp);  		if (str.StartsWith ("//"))  			continue;  		var split = str.Split ('\t');  		if (split.Length >= 8) {  			ret.Add (Path.GetFileNameWithoutExtension (split [0]));  			break;  		}  	}  	DX.FileRead_close (fp);  }  else {  	break;  }  
Magic Number,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetWeaponName,The following statement contains a magic number: while (DX.FileRead_eof (fp) == 0) {  	string str = Utility.ReadLine (fp);  	if (str.StartsWith ("//"))  		continue;  	var split = str.Split ('\t');  	if (split.Length >= 8) {  		ret.Add (Path.GetFileNameWithoutExtension (split [0]));  		break;  	}  }  
Magic Number,Common3D,ModelDataCheck,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\CommonContents3D.cs,GetWeaponName,The following statement contains a magic number: if (split.Length >= 8) {  	ret.Add (Path.GetFileNameWithoutExtension (split [0]));  	break;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MyCamera,The following statement contains a magic number: CameraParam.Radius = 30;  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MyCamera,The following statement contains a magic number: CameraParam.Theta = 90;  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,TraceFunc,The following statement contains a magic number: CameraParam.Position = DX.VGet (pos.x' pos.y + height * distRate * 3 / 4' pos.z);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,TraceFunc,The following statement contains a magic number: CameraParam.Position = DX.VGet (pos.x' pos.y + height * distRate * 3 / 4' pos.z);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,RThetaPhiFunc,The following statement contains a magic number: CameraParam.Target = DX.VGet (cos * vec.x - sin * vec.z' vec.y + height / 3' sin * vec.x + cos * vec.z) + tmp - vec;  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,RThetaPhiTargetFunc,The following statement contains a magic number: CameraParam.Target = DX.VGet (targetLoc.x' targetLoc.y + targetHeight * 2 / 3' targetLoc.z);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,RThetaPhiTargetFunc,The following statement contains a magic number: CameraParam.Target = DX.VGet (targetLoc.x' targetLoc.y + targetHeight * 2 / 3' targetLoc.z);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,RThetaPhiTargetFunc,The following statement contains a magic number: cameraDev /= 10;  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: foreach (var item in hitObj) {  	int handle = item.GetHandle ();  	//DX.MV1_COLL_RESULT_POLY_DIM hres =  	//	DX.MV1CollCheck_Capsule( handle' -1' NowCameraParam.Target' NowCameraParam.Position' CameraNear / 4 + 0.1f );  	DX.MV1_COLL_RESULT_POLY_DIM hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' CameraParam.Position' CameraNear / 4 + 0.1f);  	int hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		float notHitLen = 0.01f;  		float hitLen = distance;  		float testLen;  		DX.VECTOR testPos;  		do {  			testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  			DX.VECTOR tmp = loc + vec * testLen;  			float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  			testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  			hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  			hitNum = hres.HitNum;  			DX.MV1CollResultPolyDimTerminate (hres);  			if (hitNum > 0) {  				hitLen = testLen;  			}  			else {  				notHitLen = testLen;  			}  		}  		while (hitLen - notHitLen > 0.001f);  		CameraParam.Position = testPos;  		//NowCameraParam.Position = testPos;  	}  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: foreach (var item in hitObj) {  	int handle = item.GetHandle ();  	//DX.MV1_COLL_RESULT_POLY_DIM hres =  	//	DX.MV1CollCheck_Capsule( handle' -1' NowCameraParam.Target' NowCameraParam.Position' CameraNear / 4 + 0.1f );  	DX.MV1_COLL_RESULT_POLY_DIM hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' CameraParam.Position' CameraNear / 4 + 0.1f);  	int hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		float notHitLen = 0.01f;  		float hitLen = distance;  		float testLen;  		DX.VECTOR testPos;  		do {  			testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  			DX.VECTOR tmp = loc + vec * testLen;  			float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  			testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  			hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  			hitNum = hres.HitNum;  			DX.MV1CollResultPolyDimTerminate (hres);  			if (hitNum > 0) {  				hitLen = testLen;  			}  			else {  				notHitLen = testLen;  			}  		}  		while (hitLen - notHitLen > 0.001f);  		CameraParam.Position = testPos;  		//NowCameraParam.Position = testPos;  	}  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: foreach (var item in hitObj) {  	int handle = item.GetHandle ();  	//DX.MV1_COLL_RESULT_POLY_DIM hres =  	//	DX.MV1CollCheck_Capsule( handle' -1' NowCameraParam.Target' NowCameraParam.Position' CameraNear / 4 + 0.1f );  	DX.MV1_COLL_RESULT_POLY_DIM hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' CameraParam.Position' CameraNear / 4 + 0.1f);  	int hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		float notHitLen = 0.01f;  		float hitLen = distance;  		float testLen;  		DX.VECTOR testPos;  		do {  			testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  			DX.VECTOR tmp = loc + vec * testLen;  			float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  			testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  			hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  			hitNum = hres.HitNum;  			DX.MV1CollResultPolyDimTerminate (hres);  			if (hitNum > 0) {  				hitLen = testLen;  			}  			else {  				notHitLen = testLen;  			}  		}  		while (hitLen - notHitLen > 0.001f);  		CameraParam.Position = testPos;  		//NowCameraParam.Position = testPos;  	}  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: foreach (var item in hitObj) {  	int handle = item.GetHandle ();  	//DX.MV1_COLL_RESULT_POLY_DIM hres =  	//	DX.MV1CollCheck_Capsule( handle' -1' NowCameraParam.Target' NowCameraParam.Position' CameraNear / 4 + 0.1f );  	DX.MV1_COLL_RESULT_POLY_DIM hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' CameraParam.Position' CameraNear / 4 + 0.1f);  	int hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		float notHitLen = 0.01f;  		float hitLen = distance;  		float testLen;  		DX.VECTOR testPos;  		do {  			testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  			DX.VECTOR tmp = loc + vec * testLen;  			float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  			testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  			hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  			hitNum = hres.HitNum;  			DX.MV1CollResultPolyDimTerminate (hres);  			if (hitNum > 0) {  				hitLen = testLen;  			}  			else {  				notHitLen = testLen;  			}  		}  		while (hitLen - notHitLen > 0.001f);  		CameraParam.Position = testPos;  		//NowCameraParam.Position = testPos;  	}  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: if (hitNum > 0) {  	float notHitLen = 0.01f;  	float hitLen = distance;  	float testLen;  	DX.VECTOR testPos;  	do {  		testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  		DX.VECTOR tmp = loc + vec * testLen;  		float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  		testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  		hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  		hitNum = hres.HitNum;  		DX.MV1CollResultPolyDimTerminate (hres);  		if (hitNum > 0) {  			hitLen = testLen;  		}  		else {  			notHitLen = testLen;  		}  	}  	while (hitLen - notHitLen > 0.001f);  	CameraParam.Position = testPos;  	//NowCameraParam.Position = testPos;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: if (hitNum > 0) {  	float notHitLen = 0.01f;  	float hitLen = distance;  	float testLen;  	DX.VECTOR testPos;  	do {  		testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  		DX.VECTOR tmp = loc + vec * testLen;  		float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  		testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  		hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  		hitNum = hres.HitNum;  		DX.MV1CollResultPolyDimTerminate (hres);  		if (hitNum > 0) {  			hitLen = testLen;  		}  		else {  			notHitLen = testLen;  		}  	}  	while (hitLen - notHitLen > 0.001f);  	CameraParam.Position = testPos;  	//NowCameraParam.Position = testPos;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: if (hitNum > 0) {  	float notHitLen = 0.01f;  	float hitLen = distance;  	float testLen;  	DX.VECTOR testPos;  	do {  		testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  		DX.VECTOR tmp = loc + vec * testLen;  		float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  		testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  		hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  		hitNum = hres.HitNum;  		DX.MV1CollResultPolyDimTerminate (hres);  		if (hitNum > 0) {  			hitLen = testLen;  		}  		else {  			notHitLen = testLen;  		}  	}  	while (hitLen - notHitLen > 0.001f);  	CameraParam.Position = testPos;  	//NowCameraParam.Position = testPos;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: do {  	testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  	DX.VECTOR tmp = loc + vec * testLen;  	float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  	testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  	hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  	hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		hitLen = testLen;  	}  	else {  		notHitLen = testLen;  	}  }  while (hitLen - notHitLen > 0.001f);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: do {  	testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  	DX.VECTOR tmp = loc + vec * testLen;  	float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  	testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  	hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  	hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		hitLen = testLen;  	}  	else {  		notHitLen = testLen;  	}  }  while (hitLen - notHitLen > 0.001f);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: do {  	testLen = notHitLen + (hitLen - notHitLen) / 2.0f;  	DX.VECTOR tmp = loc + vec * testLen;  	float distRate = 1.0f / (realDist / testLen + 0.5f) + 1;  	testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  	hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  	hitNum = hres.HitNum;  	DX.MV1CollResultPolyDimTerminate (hres);  	if (hitNum > 0) {  		hitLen = testLen;  	}  	else {  		notHitLen = testLen;  	}  }  while (hitLen - notHitLen > 0.001f);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: testPos = DX.VGet (tmp.x' tmp.y + height * distRate * 3 / 4' tmp.z);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,CollideCheckXYZ,The following statement contains a magic number: hres = DX.MV1CollCheck_Capsule (handle' -1' NowCameraParam.Target' testPos' CameraNear / 4 + 0.1f);  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MoveSphere,The following statement contains a magic number: if (90 - CameraParam.Theta > CameraAngleRestrictDown) {  	CameraParam.Theta = 90 - CameraAngleRestrictDown;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MoveSphere,The following statement contains a magic number: if (90 - CameraParam.Theta > CameraAngleRestrictDown) {  	CameraParam.Theta = 90 - CameraAngleRestrictDown;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MoveSphere,The following statement contains a magic number: CameraParam.Theta = 90 - CameraAngleRestrictDown;  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MoveSphere,The following statement contains a magic number: if (CameraParam.Theta - 90 > CameraAngleRestrictUp) {  	CameraParam.Theta = 90 + CameraAngleRestrictUp;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MoveSphere,The following statement contains a magic number: if (CameraParam.Theta - 90 > CameraAngleRestrictUp) {  	CameraParam.Theta = 90 + CameraAngleRestrictUp;  }  
Magic Number,CameraControl,MyCamera,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\MyCamera.cs,MoveSphere,The following statement contains a magic number: CameraParam.Theta = 90 + CameraAngleRestrictUp;  
Magic Number,Utility3D,Math3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,NextGaussian,The following statement contains a magic number: if (Flag) {  	double x1 = random.NextDouble ();  	double x2 = random.NextDouble ();  	double amp = Math.Sqrt (-2 * Math.Log (x1));  	double phase = 2 * Math.PI * x2;  	Gauss1 = amp * Math.Cos (phase);  	Gauss2 = amp * Math.Sin (phase);  	Flag = false;  	return Gauss1;  }  else {  	Flag = true;  	return Gauss2;  }  
Magic Number,Utility3D,Math3D,C:\repos\TeruyukiTakahashi_OnlineGame\Projects\OnlineGame\Common3D\Utility3D.cs,NextGaussian,The following statement contains a magic number: if (Flag) {  	double x1 = random.NextDouble ();  	double x2 = random.NextDouble ();  	double amp = Math.Sqrt (-2 * Math.Log (x1));  	double phase = 2 * Math.PI * x2;  	Gauss1 = amp * Math.Cos (phase);  	Gauss2 = amp * Math.Sin (phase);  	Flag = false;  	return Gauss1;  }  else {  	Flag = true;  	return Gauss2;  }  
