Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Docu.Documentation,PrettyNameExtensions,C:\repos\jagregory_docu\src\Docu.Console\Documentation\PrettyNameExtensions.cs,GetSpecialName,Cyclomatic complexity of the method is 14
Complex Method,Docu.Documentation,Method,C:\repos\jagregory_docu\src\Docu.Console\Documentation\Method.cs,Resolve,Cyclomatic complexity of the method is 8
Complex Method,Docu.Documentation,DeclaredType,C:\repos\jagregory_docu\src\Docu.Console\Documentation\DeclaredType.cs,Resolve,Cyclomatic complexity of the method is 16
Complex Method,Docu.Parsing,DocumentableMemberFinder,C:\repos\jagregory_docu\src\Docu.Console\Parsing\DocumentableMemberFinder.cs,GetMembersForDocumenting,Cyclomatic complexity of the method is 9
Complex Method,Docu.Parsing.Model,Identifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\Identifier.cs,GetMethodParameters,Cyclomatic complexity of the method is 8
Long Parameter List,Docu,DocumentationGenerator,C:\repos\jagregory_docu\src\Docu.Console\DocumentationGenerator.cs,DocumentationGenerator,The method has 6 parameters. Parameters: assemblyLoader' xmlLoader' parser' writer' resourceManager' eventAggregator
Long Parameter List,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,ResolveRecursive,The method has 6 parameters. Parameters: head' tail' outputPath' templatePath' namespaces' data
Long Parameter List,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,ResolveTemplate,The method has 5 parameters. Parameters: head' outputPath' templatePath' namespaces' data
Long Parameter List,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,ResolveDirectory,The method has 5 parameters. Parameters: head' templatePath' namespaces' data' tail
Long Parameter List,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,ResolveNamespaceDirectory,The method has 5 parameters. Parameters: head' tail' templatePath' namespaces' data
Long Parameter List,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,ResolveTypeDirectory,The method has 5 parameters. Parameters: head' tail' templatePath' namespaces' data
Long Parameter List,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,AddMatch,The method has 5 parameters. Parameters: outputPath' templatePath' data' ns' type
Long Parameter List,Docu.Parsing.Comments,ICommentNodeParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\ICommentNodeParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,InlineCodeCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\InlineCodeCommentParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,InlineListCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\InlineListCommentParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,InlineTextCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\InlineTextCommentParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,MultilineCodeCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\MultilineCodeCommentParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,ParagraphCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\ParagraphCommentParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,ParameterReferenceParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\ParameterReferenceParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Comments,SeeCodeCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\SeeCodeCommentParser.cs,Parse,The method has 5 parameters. Parameters: parser' node' first' last' options
Long Parameter List,Docu.Parsing.Model,MethodIdentifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\MethodIdentifier.cs,MethodIdentifier,The method has 5 parameters. Parameters: name' parameters' isStatic' isPublic' typeId
Long Parameter List,Docu.Output.Rendering,HtmlOutputFormatter,C:\repos\jagregory_docu\src\Docu.Console\Output\Rendering\HtmlOutputFormatter.cs,formatInlineList,The method has 5 parameters. Parameters: items' outerTagFormat' itemFormat' termFormat' definitionFormat
Long Identifier,Docu.Parsing.Model,Identifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\Identifier.cs,GetMethodParameters,The length of the parameter lengthOfGenericArgumentsSection is 31.
Long Identifier,Docu.Parsing.Model,Identifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\Identifier.cs,GetMethodParameters,The length of the parameter countOfGenericParametersForType is 31.
Long Statement,Docu.Console,ConsoleApplication,C:\repos\jagregory_docu\src\Docu.Console\Console\ConsoleApplication.cs,VerifyArguments,The length of the statement  "                if (isAssemblyArgument(argument) || Path.GetExtension(argument).Equals(".xml"' StringComparison.OrdinalIgnoreCase)) continue; " is 125.
Long Statement,Docu.Console,ConsoleApplication,C:\repos\jagregory_docu\src\Docu.Console\Console\ConsoleApplication.cs,isAssemblyArgument,The length of the statement  "            return fileExtension.Equals(".dll"' StringComparison.InvariantCultureIgnoreCase) || fileExtension.Equals(".exe"' StringComparison.InvariantCultureIgnoreCase); " is 158.
Long Statement,Docu.Documentation,PropertyGenerator,C:\repos\jagregory_docu\src\Docu.Console\Documentation\Generators\PropertyGenerator.cs,Add,The length of the statement  "            var doc = Property.Unresolved(Identifier.FromProperty(association.Property' association.TargetType)' type' propertyReturnType); " is 127.
Long Statement,Docu.Output,PatternTemplateResolver,C:\repos\jagregory_docu\src\Docu.Console\Output\PatternTemplateResolver.cs,Resolve,The length of the statement  "            return ResolveRecursive(head' parts.ToTail()' path' path' namespaces' new ViewData { Namespaces = namespaces' Assemblies = new List<Assembly>(usedAssemblies) }); " is 161.
Long Statement,Docu.Parsing.Comments,SeeCodeCommentParser,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Comments\SeeCodeCommentParser.cs,Parse,The length of the statement  "                reference = DeclaredType.Unresolved((TypeIdentifier)referenceTarget' Namespace.Unresolved(referenceTarget.CloneAsNamespace())); " is 127.
Long Statement,Docu.Parsing,DocumentationXmlMatcher,C:\repos\jagregory_docu\src\Docu.Console\Parsing\DocumentationXmlMatcher.cs,ParseType,The length of the statement  "                members[positionOfUndocumentedType] = new DocumentedType(identifier' node' members[positionOfUndocumentedType].TargetType); " is 123.
Long Statement,Docu.Output.Rendering,HtmlOutputFormatter,C:\repos\jagregory_docu\src\Docu.Console\Output\Rendering\HtmlOutputFormatter.cs,formatInlineList,The length of the statement  "                if (listItem.Definition != null) definition = String.Format(definitionFormat' FormatGeneralContainer(listItem.Definition)); " is 123.
Complex Conditional,Docu.Parsing.Model,FieldIdentifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\FieldIdentifier.cs,CompareTo,The conditional expression  "other is TypeIdentifier || other is NamespaceIdentifier                  || other is MethodIdentifier || other is PropertyIdentifier"  is complex.
Magic Number,Docu.Documentation,PrettyNameExtensions,C:\repos\jagregory_docu\src\Docu.Console\Documentation\PrettyNameExtensions.cs,GetPrettyName,The following statement contains a magic number: if (type.IsGenericType)              {                  var sb = new StringBuilder();                    sb.Append(type.Name.Substring(0' type.Name.IndexOf('`')));                  sb.Append("<");                    foreach (Type argument in type.GetGenericArguments())                  {                      sb.Append(argument.GetPrettyName());                      sb.Append("' ");                  }                    sb.Length -= 2;                  sb.Append(">");                    return sb.ToString();              }
Magic Number,Docu.Documentation,PrettyNameExtensions,C:\repos\jagregory_docu\src\Docu.Console\Documentation\PrettyNameExtensions.cs,GetPrettyName,The following statement contains a magic number: if (method.IsGenericMethod)              {                  var sb = new StringBuilder();                  string name = method.Name;                    if (name.Contains("`"))                      name = method.Name.Substring(0' method.Name.IndexOf('`'));                    sb.Append(name);                  sb.Append("<");                    foreach (Type argument in method.GetGenericArguments())                  {                      sb.Append(argument.Name);                      sb.Append("' ");                  }                    sb.Length -= 2;                  sb.Append(">");                    return sb.ToString();              }
Magic Number,Docu.Parsing,DocumentationXmlMatcher,C:\repos\jagregory_docu\src\Docu.Console\Parsing\DocumentationXmlMatcher.cs,ParseMethod,The following statement contains a magic number: string name = node.Attributes["name"].Value.Substring(2);
Magic Number,Docu.Parsing.Model,Identifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\Identifier.cs,FromString,The following statement contains a magic number: var trimmedName = name.Substring(2);
Magic Number,Docu.Parsing.Model,Identifier,C:\repos\jagregory_docu\src\Docu.Console\Parsing\Model\Identifier.cs,GetMethodParameters,The following statement contains a magic number: foreach (var paramName in ParseMethodParameterList(paramList))              {                  if (IsGenericArgument(paramName))                  {                      parameters.Add(new TypeIdentifier(paramName' GENERIC_TYPE_NAMESPACE));                      continue;                  }                  var typeNameToFind = paramName;                  var startOfGenericArguments = paramName.IndexOf(START_GENERIC_ARGUMENTS);                  if (startOfGenericArguments > 0)                  {                      var nonGenericPartOfTypeName = paramName.Substring(0' startOfGenericArguments);                      var endOfGenericArguments = paramName.LastIndexOf(END_GENERIC_ARGUMENTS);                      var lengthOfGenericArgumentsSection = endOfGenericArguments - startOfGenericArguments - 1;                      var genericArgumentsSection = paramName.Substring(startOfGenericArguments + 1' lengthOfGenericArgumentsSection);                      var countOfGenericParametersForType = countOfGenericArguments(genericArgumentsSection);                      typeNameToFind = nonGenericPartOfTypeName + GENERIC_RANK_PREFIX + countOfGenericParametersForType;                  }                  Type paramType;                  var isArray = typeNameToFind.EndsWith(ARRAY_TYPE_SUFFIX);                  if (isArray) typeNameToFind = typeNameToFind.Substring(0' typeNameToFind.Length - 2);                  if (nameToType.TryGetValue(typeNameToFind' out paramType))                  {                      if (isArray) paramType = paramType.MakeArrayType();                      parameters.Add(FromType(paramType));                  }              }
Magic Number,Docu.Output.Rendering,SparkTemplateBase,C:\repos\jagregory_docu\src\Docu.Console\Output\Rendering\SparkTemplateBase.cs,WriteInterfaces,The following statement contains a magic number: if (sb.Length > 0)                  sb.Length -= 2;
Magic Number,Docu.Output.Rendering,SparkTemplateBase,C:\repos\jagregory_docu\src\Docu.Console\Output\Rendering\SparkTemplateBase.cs,OutputMethodParams,The following statement contains a magic number: if (sb.Length > 0)                  sb.Length -= 2;
