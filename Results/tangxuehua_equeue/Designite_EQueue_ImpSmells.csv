Implementation smell,Namespace,Class,File,Method,Description
Long Method,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The method has 137 lines of code.
Long Method,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessage,The method has 122 lines of code.
Complex Method,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,HandleRequest,Cyclomatic complexity of the method is 9
Complex Method,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,Cyclomatic complexity of the method is 12
Complex Method,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,ProcessPullResponse,Cyclomatic complexity of the method is 9
Complex Method,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,UpdatePullRequestDict,Cyclomatic complexity of the method is 8
Complex Method,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,BatchSendAsync,Cyclomatic complexity of the method is 8
Complex Method,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,GetTopicRouteInfo,Cyclomatic complexity of the method is 9
Complex Method,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,GetTopicAccumulateInfoList,Cyclomatic complexity of the method is 9
Complex Method,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,ScanNotActiveBroker,Cyclomatic complexity of the method is 8
Long Parameter List,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The method has 14 parameters. Parameters: isMessageStoreMemoryMode' chunkFileStoreRootPath' messageChunkDataSize' chunkFlushInterval' chunkCacheMaxCount' chunkCacheMinCount' maxLogRecordSize' chunkWriteBuffer' chunkReadBuffer' syncFlush' flushOption' enableCache' messageChunkLocalCacheSize' queueChunkLocalCacheSize
Long Parameter List,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,StoreMessageAsync,The method has 5 parameters. Parameters: queue' message' callback' parameter' producerAddress
Long Parameter List,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,BatchStoreMessageAsync,The method has 5 parameters. Parameters: queue' messages' callback' parameter' producerAddress
Long Parameter List,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,DefaultQueueStore,The method has 5 parameters. Parameters: messageStore' consumeOffsetStore' scheduleService' tpsStatisticService' loggerFactory
Long Parameter List,EQueue.Broker,IMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\IMessageStore.cs,StoreMessageAsync,The method has 5 parameters. Parameters: queue' message' callback' parameter' producerAddress
Long Parameter List,EQueue.Broker,IMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\IMessageStore.cs,BatchStoreMessageAsync,The method has 5 parameters. Parameters: queue' messages' callback' parameter' producerAddress
Long Parameter List,EQueue.Broker,MessageLogRecord,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\MessageLogRecord.cs,MessageLogRecord,The method has 11 parameters. Parameters: topic' code' body' queueId' queueOffset' createdTime' storedTime' tag' producerAddress' callback' parameter
Long Parameter List,EQueue.Broker.Client,ConsumerManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerManager.cs,RegisterConsumer,The method has 5 parameters. Parameters: groupName' consumerId' subscriptionTopics' consumingQueues' connection
Long Parameter List,EQueue.Broker.LongPolling,PullRequest,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\LongPolling\PullRequest.cs,PullRequest,The method has 9 parameters. Parameters: remotingRequest' pullMessageRequest' requestHandlerContext' suspendStartTime' suspendMilliseconds' newMessageArrivedAction' timeoutAction' noNewMessageAction' replacedAction
Long Parameter List,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The method has 5 parameters. Parameters: topic' tags' queueId' pullOffset' maxPullSize
Long Parameter List,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,GetNextConsumeOffset,The method has 5 parameters. Parameters: topic' queueId' consumerGroup' consumerFromWhere' ignoreLastConsumedOffset
Long Parameter List,EQueue.Clients.Consumers,PullRequest,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullRequest.cs,PullRequest,The method has 5 parameters. Parameters: consumerId' groupName' messageQueue' nextConsumeOffset' tags
Long Parameter List,EQueue.Protocols,BatchMessageItemResult,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\BatchMessageItemResult.cs,BatchMessageItemResult,The method has 6 parameters. Parameters: messageId' code' queueOffset' createdTime' storedTime' tag
Long Parameter List,EQueue.Protocols,Message,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Message.cs,Message,The method has 5 parameters. Parameters: topic' code' body' createdTime' tag
Long Parameter List,EQueue.Protocols,MessageStoreResult,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\MessageStoreResult.cs,MessageStoreResult,The method has 8 parameters. Parameters: messageId' code' topic' queueId' queueOffset' createdTime' storedTime' tag
Long Parameter List,EQueue.Protocols,QueueMessage,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\QueueMessage.cs,QueueMessage,The method has 10 parameters. Parameters: messageId' topic' code' body' queueId' queueOffset' createdTime' storedTime' tag' producerAddress
Long Parameter List,EQueue.Protocols.Brokers,BrokerInfo,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Brokers\BrokerInfo.cs,BrokerInfo,The method has 7 parameters. Parameters: name' groupName' clusterName' role' producerAddress' consumerAddress' adminAddress
Long Identifier,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,,The length of the parameter _getTopicConsumeInfoListService is 31.
Long Identifier,EQueue.Broker.DeleteMessageStrategies,DeleteMessageByCountStrategy,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DeleteMessageStrategies\DeleteMessageByCountStrategy.cs,GetAllowDeleteChunks,The length of the parameter getMinConsumedMessagePositionFunc is 33.
Long Identifier,EQueue.Broker.DeleteMessageStrategies,DeleteMessageByCountStrategy,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DeleteMessageStrategies\DeleteMessageByCountStrategy.cs,CheckMessageConsumeOffset,The length of the parameter getMinConsumedMessagePositionFunc is 33.
Long Identifier,EQueue.Broker.DeleteMessageStrategies,DeleteMessageByTimeStrategy,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DeleteMessageStrategies\DeleteMessageByTimeStrategy.cs,GetAllowDeleteChunks,The length of the parameter getMinConsumedMessagePositionFunc is 33.
Long Identifier,EQueue.Broker.DeleteMessageStrategies,DeleteMessageByTimeStrategy,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DeleteMessageStrategies\DeleteMessageByTimeStrategy.cs,CheckMessageConsumeOffset,The length of the parameter getMinConsumedMessagePositionFunc is 33.
Long Identifier,EQueue.Broker.DeleteMessageStrategies,IDeleteMessageStrategy,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DeleteMessageStrategies\IDeleteMessageStrategy.cs,GetAllowDeleteChunks,The length of the parameter getMinConsumedMessagePositionFunc is 33.
Long Identifier,EQueue.Broker.RequestHandlers.Admin,GetTopicConsumeInfoRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\Admin\GetTopicConsumeInfoRequestHandler.cs,,The length of the parameter _getTopicConsumeInfoListService is 31.
Long Identifier,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,,The length of the parameter BatchSendMessageRequestHandler is 30.
Long Identifier,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessages,The length of the parameter timeoutCancellationTokenSource is 30.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,Clean,The length of the statement  "                    _logger.InfoFormat("Broker clean success' timeSpent:{0}ms' producer:[{1}]' consumer:[{2}]' admin:[{3}]"' watch.ElapsedMilliseconds' Setting.BrokerInfo.ProducerAddress' Setting.BrokerInfo.ConsumerAddress' Setting.BrokerInfo.AdminAddress); " is 237.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,Start,The length of the statement  "            _scheduleService.StartTask("RegisterBrokerToAllNameServers"' async () => await RegisterBrokerToAllNameServers()' 1000' Setting.RegisterBrokerToNameServerInterval); " is 163.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,Start,The length of the statement  "            _logger.InfoFormat("Broker started' timeSpent:{0}ms' producer:[{1}]' consumer:[{2}]' admin:[{3}]"' watch.ElapsedMilliseconds' Setting.BrokerInfo.ProducerAddress' Setting.BrokerInfo.ConsumerAddress' Setting.BrokerInfo.AdminAddress); " is 231.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,Shutdown,The length of the statement  "                _logger.InfoFormat("Broker starting to shutdown' producer:[{0}]' consumer:[{1}]' admin:[{2}]"' Setting.BrokerInfo.ProducerAddress' Setting.BrokerInfo.ConsumerAddress' Setting.BrokerInfo.AdminAddress); " is 200.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _producerSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.ProducerHeartbeat' new ProducerHeartbeatRequestHandler(this)); " is 138.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _producerSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.SendMessage' new SendMessageRequestHandler(this)); " is 126.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _producerSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.BatchSendMessage' new BatchSendMessageRequestHandler(this)); " is 136.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _consumerSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.ConsumerHeartbeat' new ConsumerHeartbeatRequestHandler(this)); " is 138.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _consumerSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.PullMessage' new PullMessageRequestHandler()); " is 122.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetConsumerIdsForTopic' new GetConsumerIdsForTopicRequestHandler()); " is 141.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.UpdateQueueConsumeOffsetRequest' new UpdateQueueConsumeOffsetRequestHandler()); " is 152.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetTopicConsumeInfo' new GetTopicConsumeInfoRequestHandler()); " is 135.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetBrokerStatisticInfo' new GetBrokerStatisticInfoRequestHandler()); " is 141.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetTopicQueueInfo' new GetTopicQueueInfoRequestHandler()); " is 131.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetProducerList' new GetProducerListRequestHandler()); " is 127.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetConsumerList' new GetConsumerListRequestHandler()); " is 127.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.SetQueueProducerVisible' new SetQueueProducerVisibleRequestHandler()); " is 143.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.SetQueueConsumerVisible' new SetQueueConsumerVisibleRequestHandler()); " is 143.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetMessageDetail' new GetMessageDetailRequestHandler()); " is 129.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetMessageDetailByQueueOffset' new GetMessageDetailByQueueOffsetRequestHandler()); " is 155.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.SetQueueNextConsumeOffset' new SetQueueNextConsumeOffsetRequestHandler()); " is 147.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.DeleteConsumerGroup' new DeleteConsumerGroupRequestHandler()); " is 135.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterRequestHandlers,The length of the statement  "            _adminSocketRemotingServer.RegisterRequestHandler((int)BrokerRequestCode.GetLastestMessages' new GetBrokerLatestSendMessagesRequestHandler()); " is 142.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterBrokerToNameServer,The length of the statement  "                    _logger.ErrorFormat("Register broker to name server failed' brokerInfo: {0}' nameServerAddress: {1}' remoting response code: {2}' errorMessage: {3}"' request.BrokerInfo' nameServerAddress' remotingResponse.ResponseCode' Encoding.UTF8.GetString(remotingResponse.ResponseBody)); " is 276.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterBrokerToNameServer,The length of the statement  "                    _logger.InfoFormat("Register broker to name server success' brokerInfo: {0}' nameServerAddress: {1}"' request.BrokerInfo' nameServerAddress); " is 141.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterBrokerToNameServer,The length of the statement  "                _logger.Error(string.Format("Register broker to name server has exception' brokerInfo: {0}' nameServerAddress: {1}"' request.BrokerInfo' nameServerAddress)' ex); " is 161.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,UnregisterBrokerToNameServer,The length of the statement  "                    _logger.Error(string.Format("Unregister broker from name server failed' brokerInfo: {0}' nameServerAddress: {1}' remoting response code: {2}' errorMessage: {3}"' request.BrokerInfo' nameServerAddress' remotingResponse.ResponseCode' Encoding.UTF8.GetString(remotingResponse.ResponseBody))); " is 289.
Long Statement,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,UnregisterBrokerToNameServer,The length of the statement  "                _logger.Error(string.Format("Unregister broker from name server has exception' brokerInfo: {0}' nameServerAddress: {1}"' request.BrokerInfo' nameServerAddress)' ex); " is 165.
Long Statement,EQueue.Broker,DefaultConsumeOffsetStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultConsumeOffsetStore.cs,Start,The length of the statement  "            _scheduleService.StartTask("PersistConsumeOffsetInfo"' PersistConsumeOffsetInfo' 1000 * 5' BrokerController.Instance.Setting.PersistConsumeOffsetInterval); " is 155.
Long Statement,EQueue.Broker,DefaultConsumeOffsetStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultConsumeOffsetStore.cs,LoadConsumeOffsetInfo,The length of the statement  "                            var dict = _jsonSerializer.Deserialize<ConcurrentDictionary<string' ConcurrentDictionary<string' ConcurrentDictionary<int' long>>>>(json); " is 138.
Long Statement,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,Load,The length of the statement  "            _bufferQueue = new BufferQueue<MessageLogRecord>("MessageBufferQueue"' BrokerController.Instance.Setting.MessageWriteQueueThreshold' PersistMessages' _logger); " is 159.
Long Statement,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,Load,The length of the statement  "            _batchMessageBufferQueue = new BufferQueue<BatchMessageLogRecord>("BatchMessageBufferQueue"' BrokerController.Instance.Setting.BatchMessageWriteQueueThreshold' BatchPersistMessages' _logger); " is 191.
Long Statement,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,Load,The length of the statement  "            _chunkManager = new ChunkManager("MessageChunk"' BrokerController.Instance.Setting.MessageChunkConfig' BrokerController.Instance.Setting.IsMessageStoreMemoryMode); " is 163.
Long Statement,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,Start,The length of the statement  "            _scheduleService.StartTask("DeleteMessages"' DeleteMessages' 5 * 1000' BrokerController.Instance.Setting.DeleteMessagesInterval); " is 129.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,Start,The length of the statement  "            _scheduleService.StartTask("DeleteQueueMessages"' DeleteQueueMessages' 5 * 1000' BrokerController.Instance.Setting.DeleteQueueMessagesInterval); " is 144.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,CreateTopic,The length of the statement  "                    throw new ArgumentException(string.Format("Initial queue count {0} cannot bigger than max queue count {1}."' initialQueueCount' BrokerController.Instance.Setting.TopicMaxQueueCount)); " is 183.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,AddQueue,The length of the statement  "                    throw new ArgumentException(string.Format("Queue count cannot bigger than {0}."' BrokerController.Instance.Setting.TopicMaxQueueCount)); " is 136.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,GetMinConusmedMessagePosition,The length of the statement  "            var hasConsumerQueues = _queueDict.Values.Where(x => BrokerController.Instance.ConsumerManager.IsConsumerExistForQueue(x.Topic' x.QueueId)).ToList(); " is 149.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,CheckQueueAllowToDelete,The length of the statement  "                throw new Exception(string.Format("Queue[topic:{0}'queueId:{1}] is visible to producer or consumer' cannot be delete."' queue.Topic' queue.QueueId)); " is 149.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,CheckQueueAllowToDelete,The length of the statement  "                throw new Exception(string.Format("Queue[topic:{0}'queueId:{1}] is not allowed to delete as there are messages haven't been consumed' not consumed messageCount: {2}"' queue.Topic' queue.QueueId' queueCurrentOffset - minConsumedOffset)); " is 236.
Long Statement,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,DeleteQueueMessages,The length of the statement  "                            _logger.Error(string.Format("Delete queue (topic: {0}' queueId: {1}) messages has exception."' queue.Topic' queue.QueueId)' ex); " is 128.
Long Statement,EQueue.Broker,Queue,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Queue.cs,DeleteMessages,The length of the statement  "                        _logger.InfoFormat("Queue (topic: {0}' queueId: {1}) chunk #{2} is deleted' chunkLastMessagePosition: {3}' messageStoreMinMessagePosition: {4}"' Topic' QueueId' chunk.ChunkHeader.ChunkNumber' chunkLastMessagePosition' minMessagePosition); " is 238.
Long Statement,EQueue.Broker,Queue,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Queue.cs,LoadQueueSetting,The length of the statement  "            using (var stream = new FileStream(_queueSettingFile' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite)) " is 120.
Long Statement,EQueue.Broker.Client,ConsumerGroup,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerGroup.cs,RegisterConsumer,The length of the statement  "                _logger.InfoFormat("Consumer registered' groupName: {0}' consumerId: {1}' connectionId: {2}' subscriptionTopics: {3}' consumingQueues: {4}"' _groupName' consumerId' key' string.Join("|"' subscriptionTopics)' string.Join("|"' consumingMessageQueues)); " is 250.
Long Statement,EQueue.Broker.Client,ConsumerGroup,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerGroup.cs,RegisterConsumer,The length of the statement  "                    _logger.InfoFormat("Consumer subscriptionTopics changed. groupName: {0}' consumerId: {1}' connectionId: {2}' old: {3}' new: {4}"' _groupName' consumerId' key' string.Join("|"' oldSubscriptionList)' string.Join("|"' newSubscriptionList)); " is 237.
Long Statement,EQueue.Broker.Client,ConsumerGroup,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerGroup.cs,RegisterConsumer,The length of the statement  "                    _logger.InfoFormat("Consumer consumingQueues changed. groupName: {0}' consumerId: {1}' connectionId: {2}' old: {3}' new: {4}"' _groupName' consumerId' key' string.Join("|"' oldConsumingQueues)' string.Join("|"' newConsumingQueues)); " is 232.
Long Statement,EQueue.Broker.Client,ConsumerGroup,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerGroup.cs,RemoveConsumer,The length of the statement  "                    _logger.Error(string.Format("Close connection for consumer failed' consumerId: {0}' connectionId: {1}"' consumerInfo.ConsumerId' connectionId)' ex); " is 148.
Long Statement,EQueue.Broker.Client,ConsumerGroup,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerGroup.cs,RemoveConsumer,The length of the statement  "                _logger.InfoFormat("Consumer removed' groupName: {0}' consumerId: {1}' connectionId: {2}' lastHeartbeat: {3}' subscriptionTopics: {4}' consumingQueues: {5}"' " is 157.
Long Statement,EQueue.Broker.Client,GetConsumerListService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\GetConsumerListService.cs,BuildConsumerInfo,The length of the statement  "            consumerInfo.ConsumedOffset = _consumeOffsetStore.GetConsumeOffset(messageQueue.Topic' messageQueue.QueueId' groupName); " is 120.
Long Statement,EQueue.Broker.Client,GetTopicConsumeInfoListService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\GetTopicConsumeInfoListService.cs,GetAllTopicConsumeInfoList,The length of the statement  "                topicConsumeInfo.ClientCachedMessageCount = _consumerManager.GetClientCacheMessageCount(topicConsumeInfo.ConsumerGroup' topicConsumeInfo.Topic' topicConsumeInfo.QueueId); " is 170.
Long Statement,EQueue.Broker.Client,GetTopicConsumeInfoListService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\GetTopicConsumeInfoListService.cs,GetAllTopicConsumeInfoList,The length of the statement  "                topicConsumeInfo.ConsumeThroughput = _tpsStatisticService.GetTopicConsumeThroughput(topicConsumeInfo.Topic' topicConsumeInfo.QueueId' topicConsumeInfo.ConsumerGroup); " is 166.
Long Statement,EQueue.Broker.Client,GetTopicConsumeInfoListService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\GetTopicConsumeInfoListService.cs,GetTopicConsumeInfoList,The length of the statement  "                topicConsumeInfo.ClientCachedMessageCount = _consumerManager.GetClientCacheMessageCount(topicConsumeInfo.ConsumerGroup' topicConsumeInfo.Topic' topicConsumeInfo.QueueId); " is 170.
Long Statement,EQueue.Broker.Client,GetTopicConsumeInfoListService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\GetTopicConsumeInfoListService.cs,GetTopicConsumeInfoList,The length of the statement  "                topicConsumeInfo.ConsumeThroughput = _tpsStatisticService.GetTopicConsumeThroughput(topicConsumeInfo.Topic' topicConsumeInfo.QueueId' topicConsumeInfo.ConsumerGroup); " is 166.
Long Statement,EQueue.Broker.Client,ProducerManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ProducerManager.cs,RemoveProducer,The length of the statement  "                    _logger.Error(string.Format("Close connection for producer failed' producerId: {0}' connectionId: {1}"' producerInfo.ProducerId' connectionId)' ex); " is 148.
Long Statement,EQueue.Broker.LongPolling,SuspendedPullRequestManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\LongPolling\SuspendedPullRequestManager.cs,SuspendPullRequest,The length of the statement  "            var key = BuildKey(pullMessageRequest.MessageQueue.Topic' pullMessageRequest.MessageQueue.QueueId' pullMessageRequest.ConsumerGroup); " is 133.
Long Statement,EQueue.Broker.LongPolling,SuspendedPullRequestManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\LongPolling\SuspendedPullRequestManager.cs,StartCheckBlockingPullRequestTask,The length of the statement  "            _scheduleService.StartTask("CheckBlockingPullRequest"' CheckBlockingPullRequest' 1000 * 5' BrokerController.Instance.Setting.CheckBlockingPullRequestMilliseconds); " is 163.
Long Statement,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,OnComplete,The length of the statement  "                        messageResults.Add(new BatchMessageItemResult(record.MessageId' record.Code' record.QueueOffset' record.CreatedTime' record.StoredTime' record.Tag)); " is 149.
Long Statement,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,OnComplete,The length of the statement  "                        BatchSendMessageRequestHandler._suspendedPullRequestManager.NotifyNewMessage(Queue.Topic' Queue.QueueId' BatchMessageLogRecord.Records.First().QueueOffset); " is 156.
Long Statement,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,OnComplete,The length of the statement  "                        BatchSendMessageRequestHandler._brokerController.AddLatestMessage(lastRecord.MessageId' lastRecord.CreatedTime' lastRecord.StoredTime); " is 135.
Long Statement,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,OnComplete,The length of the statement  "                    var response = RemotingResponseFactory.CreateResponse(RemotingRequest' ResponseCode.Failed' Encoding.UTF8.GetBytes(SendMessageFailedText)); " is 139.
Long Statement,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,OnComplete,The length of the statement  "                        SendMessageRequestHandler._suspendedPullRequestManager.NotifyNewMessage(MessageLogRecord.Topic' result.QueueId' result.QueueOffset); " is 132.
Long Statement,EQueue.Broker.RequestHandlers,StoreContext,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\BatchSendMessageRequestHandler.cs,OnComplete,The length of the statement  "                    var response = RemotingResponseFactory.CreateResponse(RemotingRequest' ResponseCode.Failed' Encoding.UTF8.GetBytes(SendMessageFailedText)); " is 139.
Long Statement,EQueue.Broker.RequestHandlers,ConsumerHeartbeatRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\ConsumerHeartbeatRequestHandler.cs,HandleRequest,The length of the statement  "            _consumerManager.RegisterConsumer(consumerData.GroupName' consumerData.ConsumerId' consumerData.SubscriptionTopics' consumerData.ConsumingQueues' context.Connection); " is 166.
Long Statement,EQueue.Broker.RequestHandlers,GetConsumerIdsForTopicRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\GetConsumerIdsForTopicRequestHandler.cs,HandleRequest,The length of the statement  "            return RemotingResponseFactory.CreateResponse(remotingRequest' Encoding.UTF8.GetBytes(string.Join("'"' consumerIdList))); " is 121.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,HandleRequest,The length of the statement  "                nextConsumeOffset = GetNextConsumeOffset(topic' queueId' request.ConsumerGroup' request.ConsumeFromWhere' request.IgnoreLastConsumedOffset); " is 140.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The length of the statement  "                    _logger.Error(string.Format("Queue chunk read failed' topic: {0}' queueId: {1}' queueOffset: {2}"' topic' queueId' queueOffset)' ex); " is 133.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The length of the statement  "                    _logger.Error(string.Format("Message chunk read failed' topic: {0}' queueId: {1}' queueOffset: {2}"' topic' queueId' queueOffset)' ex); " is 135.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The length of the statement  "                _logger.InfoFormat("Reset next pullOffset to queueMinOffset' [topic: {0}' queueId: {1}' pullOffset: {2}' queueMinOffset: {3}]"' topic' queueId' pullOffset' queueMinOffset); " is 172.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The length of the statement  "                _logger.InfoFormat("Reset next pullOffset to queueCurrentOffset' [topic: {0}' queueId: {1}' pullOffset: {2}' queueCurrentOffset: {3}]"' topic' queueId' pullOffset' queueCurrentOffset); " is 184.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,PullMessages,The length of the statement  "                _logger.InfoFormat("Reset next pullOffset to calculatedNextPullOffset' [topic: {0}' queueId: {1}' pullOffset: {2}' calculatedNextPullOffset: {3}]"' topic' queueId' pullOffset' nextPullOffset); " is 192.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,ExecutePullRequest,The length of the statement  "            var pullResult = PullMessages(topic' pullMessageRequest.Tags' queueId' pullOffset' pullMessageRequest.PullMessageBatchSize); " is 124.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,IsPullRequestValid,The length of the statement  "                return _consumerManager.IsConsumerActive(pullRequest.PullMessageRequest.ConsumerGroup' pullRequest.PullMessageRequest.ConsumerId); " is 130.
Long Statement,EQueue.Broker.RequestHandlers,PullMessageRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\RequestHandlers\PullMessageRequestHandler.cs,BuildNextOffsetResetResponse,The length of the statement  "            return RemotingResponseFactory.CreateResponse(remotingRequest' (short)PullStatus.NextOffsetReset' BitConverter.GetBytes(nextOffset)); " is 133.
Long Statement,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,Start,The length of the statement  "            _scheduleService.StartTask("SendHeartbeatToAllBrokers"' SendHeartbeatToAllBrokers' 1000' _setting.SendHeartbeatInterval); " is 121.
Long Statement,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,GetClusterBrokerListAsync,The length of the statement  "                throw new Exception(string.Format("Get cluster brokers from name server failed' clusterName: {0}' nameServerAddress: {1}' remoting response code: {2}' errorMessage: {3}"' request.ClusterName' nameServerRemotingClient.ServerEndPoint.ToAddress()' remotingResponse.ResponseCode' Encoding.UTF8.GetString(remotingResponse.ResponseBody))); " is 333.
Long Statement,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,RefreshClusterBrokers,The length of the statement  "                    var addedBrokerInfoList = newBrokerInfoList.Where(x => !_brokerConnectionDict.Any(y => y.Key == x.BrokerName)).ToList(); " is 120.
Long Statement,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,RefreshClusterBrokers,The length of the statement  "                    var removedBrokerServiceList = _brokerConnectionDict.Values.Where(x => !newBrokerInfoList.Any(y => y.BrokerName == x.BrokerInfo.BrokerName)).ToList(); " is 150.
Long Statement,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,RefreshTopicRouteInfo,The length of the statement  "                        _logger.InfoFormat("Topic routeInfo changed' topic: {0}' newRouteInfo: {1}' oldRouteInfo: {2}"' topic' newMessageQueueJson' oldMessageQueueJson); " is 145.
Long Statement,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,GetTopicRouteInfoListAsync,The length of the statement  "                throw new Exception(string.Format("Get topic route info from name server failed' topic: {0}' nameServerAddress: {1}' remoting response code: {2}' errorMessage: {3}"' topic' nameServerRemotingClient.ServerEndPoint.ToAddress()' remotingResponse.ResponseCode' Encoding.UTF8.GetString(remotingResponse.ResponseBody))); " is 314.
Long Statement,EQueue.Clients.Consumers,AverageAllocateMessageQueueStrategy,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\AverageAllocateMessageQueueStrategy.cs,Allocate,The length of the statement  "            var averageSize = totalMessageQueueCount <= totalConsumerCount ? 1 : (mod > 0 && index < mod ? totalMessageQueueCount / totalConsumerCount + 1 : totalMessageQueueCount / totalConsumerCount); " is 190.
Long Statement,EQueue.Clients.Consumers,CommitConsumeOffsetService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\CommitConsumeOffsetService.cs,CommitConsumeOffset,The length of the statement  "                    return new ConsumeOffsetInfo { MessageQueue = new MessageQueue(brokerName' topic' queueId)' ConsumeOffset = consumeOffset }; " is 124.
Long Statement,EQueue.Clients.Consumers,CommitConsumeOffsetService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\CommitConsumeOffsetService.cs,CommitConsumeOffset,The length of the statement  "                _logger.ErrorFormat("CommitConsumeOffset failed as the target broker connection not found' messageQueue:{0}"' messageQueue); " is 124.
Long Statement,EQueue.Clients.Consumers,CommitConsumeOffsetService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\CommitConsumeOffsetService.cs,CommitConsumeOffset,The length of the statement  "            var remotingRequest = new RemotingRequest((int)BrokerRequestCode.UpdateQueueConsumeOffsetRequest' _binarySerializer.Serialize(request)); " is 136.
Long Statement,EQueue.Clients.Consumers,CommitConsumeOffsetService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\CommitConsumeOffsetService.cs,CommitConsumeOffset,The length of the statement  "                    _logger.DebugFormat("CommitConsumeOffset success' consumerGroup:{0}' consumerId:{1}' messageQueue:{2}' consumeOffset:{3}' brokerAddress:{4}"' " is 141.
Long Statement,EQueue.Clients.Consumers,CommitConsumeOffsetService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\CommitConsumeOffsetService.cs,CommitConsumeOffset,The length of the statement  "                    _logger.Error(string.Format("CommitConsumeOffset has exception' consumerGroup:{0}' consumerId:{1}' messageQueue:{2}' consumeOffset:{3}' brokerAddress:{4}"' " is 155.
Long Statement,EQueue.Clients.Consumers,Consumer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\Consumer.cs,SendHeartbeat,The length of the statement  "                        _logger.Error(string.Format("Send consumer heartbeat has exception' brokerInfo: {0}"' brokerConnection.BrokerInfo)' ex); " is 120.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessages,The length of the statement  "            var timeoutCancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellation' new CancellationTokenSource(timeoutMilliseconds).Token); " is 155.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessage,The length of the statement  "                            _logger.Error(string.Format("Process pull result has exception' pullRequest:{0}' remotingResponseBodyLength:{1}"' pullRequest' remotingResponseBodyLength)' ex); " is 160.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,ProcessPullResponse,The length of the statement  "                _logger.ErrorFormat("Pull message failed' pullRequest:{0}' errorMsg:{1}"' pullRequest' Encoding.UTF8.GetString(remotingResponse.ResponseBody)); " is 143.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,HandleMessage,The length of the statement  "                _messageHandler.Handle(consumingMessage.Message' new MessageContext(currentQueueMessage => RemoveHandledMessage(consumingMessage))); " is 132.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,LogMessageHandlingException,The length of the statement  "                "Message handling has exception' message info:[messageId:{0}' topic:{1}' queueId:{2}' queueOffset:{3}' createdTime:{4}' storedTime:{5}' brokerName:{6}' consumerGroup:{7}]"' " is 172.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,ResetNextConsumeOffset,The length of the statement  "                _logger.ErrorFormat("Reset nextConsumeOffset failed as broker is unavailable' pullRequest: {0}' newOffset: {1}"' pullRequest' newOffset); " is 137.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,ResetNextConsumeOffset,The length of the statement  "                var remotingRequest = new RemotingRequest((int)BrokerRequestCode.UpdateQueueConsumeOffsetRequest' _binarySerializer.Serialize(request)); " is 136.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,ResetNextConsumeOffset,The length of the statement  "                _logger.InfoFormat("Resetted nextConsumeOffset' [pullRequest:{0}' oldOffset:{1}' newOffset:{2}]"' pullRequest' oldOffset' newOffset); " is 133.
Long Statement,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,ResetNextConsumeOffset,The length of the statement  "                    _logger.Error(string.Format("Reset nextConsumeOffset failed' pullRequest: {0}' newOffset: {1}"' pullRequest' newOffset)' ex); " is 125.
Long Statement,EQueue.Clients.Consumers,PullRequest,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullRequest.cs,ToString,The length of the statement  "            return string.Format("[ConsumerId={0}' Group={1}' MessageQueue={2}' NextConsumeOffset={3}' Tags={4}' IsDropped={5}]"' ConsumerId' GroupName' MessageQueue' NextConsumeOffset' string.Join("|"' Tags)' IsDropped); " is 209.
Long Statement,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,Start,The length of the statement  "            _scheduleService.StartTask("RebalanceAsync"' async () => await RebalanceAsync()' 1000' _consumer.Setting.RebalanceInterval); " is 124.
Long Statement,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,RebalanceAsync,The length of the statement  "                    _logger.Error(string.Format("RebalanceClusteringAsync has exception' consumerGroup: {0}' consumerId: {1}' topic: {2}"' _consumer.GroupName' _clientId' topic)' ex); " is 163.
Long Statement,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,RebalanceClusteringAsync,The length of the statement  "                var allocatedMessageQueueList = _allocateMessageQueueStragegy.Allocate(_clientId' messageQueueList' consumerIdList).ToList(); " is 125.
Long Statement,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,RebalanceClusteringAsync,The length of the statement  "                _logger.Error(string.Format("RebalanceClustering has exception' consumerGroup: {0}' consumerId: {1}' topic: {2}"' _consumer.GroupName' _clientId' topic)' ex); " is 158.
Long Statement,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,GetConsumerIdsForTopic,The length of the statement  "                throw new Exception(string.Format("GetConsumerIdsForTopic has exception' consumerGroup: {0}' topic: {1}' brokerAddress: {2}' remoting response code: {3}' errorMessage: {4}"' " is 173.
Long Statement,EQueue.Clients.Producers,BatchSendResult,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\BatchSendResult.cs,ToString,The length of the statement  "            return string.Format("[SendStatus:{0}'MessageStoreResult:{1}'ErrorMessage:{2}]"' SendStatus' MessageStoreResult' ErrorMessage); " is 127.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,SendAsync,The length of the statement  "                    var remotingResponse = await messageQueueInfo.BrokerConnection.RemotingClient.InvokeAsync(remotingRequest' timeoutMilliseconds).ConfigureAwait(false); " is 150.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,SendAsync,The length of the statement  "                        sendResult = new SendResult(SendStatus.Timeout' null' string.Format("Send message timeout' message: {0}' routingKey: {1}' timeoutMilliseconds: {2}' brokerInfo: {3}"' message' routingKey' timeoutMilliseconds' brokerConnection.BrokerInfo)); " is 238.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,SendAsync,The length of the statement  "                    _logger.ErrorFormat("Send message failed' queue: {0}' broker: {1}' sendResult: {2}' retryTimes: {3}"' messageQueue' brokerConnection.BrokerInfo' sendResult' retryCount); " is 169.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,SendAsync,The length of the statement  "                    _logger.ErrorFormat("Send message failed' queue: {0}' broker: {1}' sendResult: {2}"' messageQueue' brokerConnection.BrokerInfo' sendResult); " is 140.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,BatchSendAsync,The length of the statement  "                    var remotingResponse = await brokerConnection.RemotingClient.InvokeAsync(remotingRequest' timeoutMilliseconds).ConfigureAwait(false); " is 133.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,BatchSendAsync,The length of the statement  "                        sendResult = new BatchSendResult(SendStatus.Timeout' null' string.Format("Batch send message timeout' queue: {0}' routingKey: {1}' timeoutMilliseconds: {2}' brokerInfo: {3}"' messageQueue' routingKey' timeoutMilliseconds' brokerConnection.BrokerInfo)); " is 252.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,BatchSendAsync,The length of the statement  "                    _logger.ErrorFormat("Batch send message failed' queue: {0}' routingKey: {1}' broker: {2}' sendResult: {3}' retryTimes: {4}"' messageQueue' routingKey' brokerConnection.BrokerInfo' sendResult' retryCount); " is 204.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,BatchSendAsync,The length of the statement  "                    _logger.ErrorFormat("Batch send message failed' queue: {0}' routingKey: {1}' broker: {2}' sendResult: {3}"' messageQueue' routingKey' brokerConnection.BrokerInfo' sendResult); " is 175.
Long Statement,EQueue.Clients.Producers,Producer,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\Producer.cs,SendHeartbeat,The length of the statement  "                        _logger.Error(string.Format("Send producer heartbeat has exception' brokerInfo: {0}"' brokerConnection.BrokerInfo)' ex); " is 120.
Long Statement,EQueue.Clients.Producers,SendResult,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\SendResult.cs,ToString,The length of the statement  "            return string.Format("[SendStatus:{0}'MessageStoreResult:{1}'ErrorMessage:{2}]"' SendStatus' MessageStoreResult' ErrorMessage); " is 127.
Long Statement,EQueue.NameServer,BrokerRequestService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\BrokerRequestService.cs,ExecuteActionToAllClusterBrokers,The length of the statement  "            var endpointList = _nameServerController.ClusterManager.GetClusterBrokers(request).Select(x => x.AdminAddress.ToEndPoint()); " is 124.
Long Statement,EQueue.NameServer,BrokerRequestService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\BrokerRequestService.cs,ExecuteActionToAllClusterBrokers,The length of the statement  "            var remotingClientList = endpointList.ToRemotingClientList(_nameServerController.Setting.Name' _nameServerController.Setting.SocketSetting); " is 140.
Long Statement,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,GetTopicConsumeInfo,The length of the statement  "                        var topicConsumeInfoList = broker.TopicConsumeInfoList.Where(x => x.Topic == request.Topic && x.ConsumerGroup == request.ConsumerGroup).ToList(); " is 145.
Long Statement,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,GetConsumerList,The length of the statement  "                        var consumerList = broker.ConsumerList.Where(x => x.Topic == request.Topic && x.ConsumerGroup == request.ConsumerGroup).ToList(); " is 129.
Long Statement,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,CreateTopicOnBroker,The length of the statement  "            var adminRemotingClient = new SocketRemotingClient(_nameServerController.Setting.Name' brokerAdminEndpoint' _nameServerController.Setting.SocketSetting).Start(); " is 161.
Long Statement,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,CreateTopicOnBroker,The length of the statement  "                throw new Exception(string.Format("AutoCreateTopicOnBroker failed' errorMessage: {0}"' Encoding.UTF8.GetString(remotingResponse.ResponseBody))); " is 144.
Long Statement,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,ScanNotActiveBroker,The length of the statement  "                                    _logger.InfoFormat("Removed timeout broker' brokerInfo: {0}' lastActiveTime: {1}"' _jsonSerializer.Serialize(removed.BrokerInfo)' removed.LastActiveTime); " is 154.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,Start,The length of the statement  "            _logger.InfoFormat("NameServer started' timeSpent: {0}ms' bindingAddress: {1}"' watch.ElapsedMilliseconds' Setting.BindingAddress); " is 131.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.RegisterBroker' new RegisterBrokerRequestHandler(this)); " is 128.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.UnregisterBroker' new UnregisterBrokerRequestHandler(this)); " is 132.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetAllClusters' new GetAllClustersRequestHandler(this)); " is 128.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetClusterBrokers' new GetClusterBrokersRequestHandler(this)); " is 134.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetClusterBrokerStatusInfoList' new GetClusterBrokerStatusInfoListRequestHandler(this)); " is 160.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetTopicRouteInfo' new GetTopicRouteInfoRequestHandler(this)); " is 134.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetTopicQueueInfo' new GetTopicQueueInfoRequestHandler(this)); " is 134.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetTopicConsumeInfo' new GetTopicConsumeInfoRequestHandler(this)); " is 138.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetProducerList' new GetProducerListRequestHandler(this)); " is 130.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetConsumerList' new GetConsumerListRequestHandler(this)); " is 130.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.CreateTopic' new CreateTopicForClusterRequestHandler(this)); " is 132.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.DeleteTopic' new DeleteTopicForClusterRequestHandler(this)); " is 132.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.AddQueue' new AddQueueForClusterRequestHandler(this)); " is 126.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.DeleteQueue' new DeleteQueueForClusterRequestHandler(this)); " is 132.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.SetQueueProducerVisible' new SetQueueProducerVisibleForClusterRequestHandler(this)); " is 156.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.SetQueueConsumerVisible' new SetQueueConsumerVisibleForClusterRequestHandler(this)); " is 156.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.SetQueueNextConsumeOffset' new SetQueueNextConsumeOffsetForClusterRequestHandler(this)); " is 160.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.DeleteConsumerGroup' new DeleteConsumerGroupForClusterRequestHandler(this)); " is 148.
Long Statement,EQueue.NameServer,NameServerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerController.cs,RegisterRequestHandlers,The length of the statement  "            _socketRemotingServer.RegisterRequestHandler((int)NameServerRequestCode.GetTopicAccumulateInfoList' new GetTopicAccumulateInfoListRequestHandler(this)); " is 152.
Long Statement,EQueue.Configurations,ConfigurationExtensions,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\Configurations\ConfigurationExtensions.cs,UseDeleteMessageByTimeStrategy,The length of the statement  "            configuration.SetDefault<IDeleteMessageStrategy' DeleteMessageByTimeStrategy>(new DeleteMessageByTimeStrategy(maxStorageHours)); " is 128.
Long Statement,EQueue.Configurations,ConfigurationExtensions,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\Configurations\ConfigurationExtensions.cs,UseDeleteMessageByCountStrategy,The length of the statement  "            configuration.SetDefault<IDeleteMessageStrategy' DeleteMessageByCountStrategy>(new DeleteMessageByCountStrategy(maxChunkCount)); " is 128.
Long Statement,EQueue.NameServer.RequestHandlers,AddQueueForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\AddQueueForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.AddQueue' requestData)' 30000); " is 130.
Long Statement,EQueue.NameServer.RequestHandlers,CreateTopicForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\CreateTopicForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.CreateTopic' requestData)' 30000); " is 133.
Long Statement,EQueue.NameServer.RequestHandlers,DeleteConsumerGroupForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\DeleteConsumerGroupForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.DeleteConsumerGroup' requestData)' 30000); " is 141.
Long Statement,EQueue.NameServer.RequestHandlers,DeleteQueueForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\DeleteQueueForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.DeleteQueue' requestData)' 30000); " is 133.
Long Statement,EQueue.NameServer.RequestHandlers,DeleteTopicForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\DeleteTopicForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.DeleteTopic' requestData)' 30000); " is 133.
Long Statement,EQueue.NameServer.RequestHandlers,SetQueueConsumerVisibleForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueConsumerVisibleForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var requestData = _binarySerializer.Serialize(new SetQueueConsumerVisibleRequest(request.Topic' request.QueueId' request.Visible)); " is 131.
Long Statement,EQueue.NameServer.RequestHandlers,SetQueueConsumerVisibleForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueConsumerVisibleForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.SetQueueConsumerVisible' requestData)' 30000); " is 145.
Long Statement,EQueue.NameServer.RequestHandlers,SetQueueNextConsumeOffsetForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueNextConsumeOffsetForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var requestData = _binarySerializer.Serialize(new SetQueueNextConsumeOffsetRequest(request.ConsumerGroup' request.Topic' request.QueueId' request.NextOffset)); " is 159.
Long Statement,EQueue.NameServer.RequestHandlers,SetQueueNextConsumeOffsetForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueNextConsumeOffsetForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.SetQueueNextConsumeOffset' requestData)' 30000); " is 147.
Long Statement,EQueue.NameServer.RequestHandlers,SetQueueProducerVisibleForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueProducerVisibleForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var requestData = _binarySerializer.Serialize(new SetQueueProducerVisibleRequest(request.Topic' request.QueueId' request.Visible)); " is 131.
Long Statement,EQueue.NameServer.RequestHandlers,SetQueueProducerVisibleForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueProducerVisibleForClusterRequestHandler.cs,HandleRequest,The length of the statement  "                var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.SetQueueProducerVisible' requestData)' 30000); " is 145.
Long Statement,EQueue.Protocols,BatchMessageItemResult,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\BatchMessageItemResult.cs,ToString,The length of the statement  "            return string.Format("[MessageId={0}'Code={1}'QueueOffset={2}'CreatedTime={3}'StoredTime={4}'Tag={5}]"' MessageId' Code' QueueOffset' CreatedTime' StoredTime' Tag); " is 164.
Long Statement,EQueue.Protocols,Message,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Message.cs,ToString,The length of the statement  "            return string.Format("[Topic={0}'Code={1}'Tag={2}'CreatedTime={3}'BodyLength={4}]"' Topic' Code' Tag' CreatedTime' Body.Length); " is 128.
Long Statement,EQueue.Protocols,MessageQueueEx,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\MessageQueueEx.cs,ToString,The length of the statement  "            return string.Format("[BrokerName={0}' Topic={1}' QueueId={2}' ClientCachedMessageCount={3}]"' BrokerName' Topic' QueueId' ClientCachedMessageCount); " is 149.
Long Statement,EQueue.Protocols,MessageStoreResult,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\MessageStoreResult.cs,ToString,The length of the statement  "            return string.Format("[MessageId:{0}' Code:{1}' Topic:{2}' QueueId:{3}' QueueOffset:{4}' Tag:{5}' CreatedTime:{6}' StoredTime:{7}]"' " is 132.
Long Statement,EQueue.Protocols,QueueMessage,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\QueueMessage.cs,ToString,The length of the statement  "            return string.Format("[Topic={0}'QueueId={1}'QueueOffset={2}'MessageId={3}'LogPosition={4}'Code={5}'CreatedTime={6}'StoredTime={7}'BodyLength={8}'Tag={9}'ProducerAddress={10}]"' " is 177.
Long Statement,EQueue.Protocols.Brokers,BrokerInfo,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Brokers\BrokerInfo.cs,ToString,The length of the statement  "            return string.Format("[BrokerName={0}'GroupName={1}'ClusterName={2}'BrokerRole={3}'ProducerAddress={4}'ConsumerAddress={5}'AdminAddress={6}]"' " is 142.
Long Statement,EQueue.Protocols.Brokers,ConsumerHeartbeatData,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Brokers\ConsumerHeartbeatData.cs,ToString,The length of the statement  "            return string.Format("[ConsumerId:{0}' GroupName:{1}' SubscriptionTopics:{2}' ConsumingQueues:{3}]"' ConsumerId' GroupName' string.Join("|"' SubscriptionTopics)' string.Join("|"' ConsumingQueues)); " is 197.
Long Statement,EQueue.Protocols.Brokers.Requests,SetQueueNextConsumeOffsetRequest,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Brokers\Requests\SetQueueNextConsumeOffsetRequest.cs,ToString,The length of the statement  "            return string.Format("[ConsumerGroup:{0}' Topic:{1}' QueueId:{2}' NextOffset:{3}]"' ConsumerGroup' Topic' QueueId' NextOffset); " is 127.
Long Statement,EQueue.Protocols.Brokers.Requests,UpdateQueueOffsetRequest,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Protocols\Brokers\Requests\UpdateQueueOffsetRequest.cs,ToString,The length of the statement  "            return string.Format("[ConsumerGroup:{0}' MessageQueue:{1}' QueueOffset:{2}]"' ConsumerGroup' MessageQueue' QueueOffset); " is 121.
Long Statement,EQueue.Utils,BatchMessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\BatchMessageUtils.cs,EncodeSendMessageRequest,The length of the statement  "                bytesList.AddRange(new byte[][] { topicLengthBytes' topicBytes' messageCodeBytes' messageCreatedTimeTicksBytes' tagLengthBytes' tagBytes' bodyLengthBytes' message.Body }); " is 171.
Long Statement,EQueue.Utils,BatchMessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\BatchMessageUtils.cs,EncodeMessageStoreResult,The length of the statement  "                bytesList.AddRange(new byte[][] { messageIdLengthBytes' messageIdBytes' codeBytes' queueOffsetBytes' createdTimeTicksBytes' storedTimeTicksBytes' tagLengthBytes' tagBytes }); " is 174.
Long Statement,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The length of the statement  "            return new SendMessageRequest { QueueId = queueId' Message = new Message(topic' code' bodyBytes' createdTime' tag)' ProducerAddress = producerAddress }; " is 152.
Complex Conditional,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessages,The conditional expression  "!timeoutCancellationTokenSource.IsCancellationRequested                      && totalMessages.Count < maxCount                      && (_pulledMessageQueue.Count > 0 || totalMessages.Count == 0)"  is complex.
Magic Number,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("RegisterBrokerToAllNameServers"' async () => await RegisterBrokerToAllNameServers()' 1000' Setting.RegisterBrokerToNameServerInterval);
Magic Number,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterBrokerToNameServer,The following statement contains a magic number: var remotingResponse = await remotingClient.InvokeAsync(remotingRequest' 10 * 1000);
Magic Number,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,RegisterBrokerToNameServer,The following statement contains a magic number: var remotingResponse = await remotingClient.InvokeAsync(remotingRequest' 10 * 1000);
Magic Number,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,UnregisterBrokerToNameServer,The following statement contains a magic number: var remotingResponse = await remotingClient.InvokeAsync(remotingRequest' 10 * 1000);
Magic Number,EQueue.Broker,BrokerController,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerController.cs,UnregisterBrokerToNameServer,The following statement contains a magic number: var remotingResponse = await remotingClient.InvokeAsync(remotingRequest' 10 * 1000);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: BrokerInfo = new BrokerInfo(                  "DefaultBroker"'                  "DefaultGroup"'                  "DefaultCluster"'                  BrokerRole.Master'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5000).ToAddress()'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5001).ToAddress()'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5002).ToAddress());
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: BrokerInfo = new BrokerInfo(                  "DefaultBroker"'                  "DefaultGroup"'                  "DefaultCluster"'                  BrokerRole.Master'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5000).ToAddress()'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5001).ToAddress()'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5002).ToAddress());
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: BrokerInfo = new BrokerInfo(                  "DefaultBroker"'                  "DefaultGroup"'                  "DefaultCluster"'                  BrokerRole.Master'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5000).ToAddress()'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5001).ToAddress()'                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 5002).ToAddress());
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: NameServerList = new List<IPEndPoint>()              {                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 9493)              };
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: RegisterBrokerToNameServerInterval = 1000 * 5;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: RegisterBrokerToNameServerInterval = 1000 * 5;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: DeleteMessagesInterval = 1000 * 10;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: DeleteMessagesInterval = 1000 * 10;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: DeleteQueueMessagesInterval = 1000 * 10;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: DeleteQueueMessagesInterval = 1000 * 10;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: PersistConsumeOffsetInterval = 1000 * 1;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: CheckBlockingPullRequestMilliseconds = 1000 * 1;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: ProducerExpiredTimeout = 1000 * 30;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: ProducerExpiredTimeout = 1000 * 30;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: ConsumerExpiredTimeout = 1000 * 30;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: ConsumerExpiredTimeout = 1000 * 30;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: TopicDefaultQueueCount = 4;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: TopicMaxQueueCount = 256;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageMaxSize = 1024 * 1024 * 4;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageMaxSize = 1024 * 1024 * 4;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageMaxSize = 1024 * 1024 * 4;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageWriteQueueThreshold = 2 * 10000;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageWriteQueueThreshold = 2 * 10000;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: BatchMessageWriteQueueThreshold = 1 * 10000;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: LatestMessageShowCount = 100;
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"message-chunks")'                  new DefaultFileNamingStrategy("message-chunk-")'                  messageChunkDataSize'                  0'                  0'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 8'                  maxLogRecordSize'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  messageChunkLocalCacheSize'                  true);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: MessageChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"message-chunks")'                  new DefaultFileNamingStrategy("message-chunk-")'                  messageChunkDataSize'                  0'                  0'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 8'                  maxLogRecordSize'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  messageChunkLocalCacheSize'                  true);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: QueueChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"queue-chunks")'                  new DefaultFileNamingStrategy("queue-chunk-")'                  0'                  12'                  1000000'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 2'                  12'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  queueChunkLocalCacheSize'                  false);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: QueueChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"queue-chunks")'                  new DefaultFileNamingStrategy("queue-chunk-")'                  0'                  12'                  1000000'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 2'                  12'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  queueChunkLocalCacheSize'                  false);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: QueueChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"queue-chunks")'                  new DefaultFileNamingStrategy("queue-chunk-")'                  0'                  12'                  1000000'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 2'                  12'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  queueChunkLocalCacheSize'                  false);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: QueueChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"queue-chunks")'                  new DefaultFileNamingStrategy("queue-chunk-")'                  0'                  12'                  1000000'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 2'                  12'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  queueChunkLocalCacheSize'                  false);
Magic Number,EQueue.Broker,BrokerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BrokerSetting.cs,BrokerSetting,The following statement contains a magic number: QueueChunkConfig = new ChunkManagerConfig(                  Path.Combine(chunkFileStoreRootPath' @"queue-chunks")'                  new DefaultFileNamingStrategy("queue-chunk-")'                  0'                  12'                  1000000'                  chunkFlushInterval'                  enableCache'                  syncFlush'                  flushOption'                  Environment.ProcessorCount * 2'                  12'                  chunkWriteBuffer'                  chunkReadBuffer'                  chunkCacheMaxCount'                  chunkCacheMinCount'                  1'                  5'                  queueChunkLocalCacheSize'                  false);
Magic Number,EQueue.Broker,BufferLogRecord,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BufferLogRecord.cs,ReadFrom,The following statement contains a magic number: RecordBuffer = new byte[4 + recordBuffer.Length];
Magic Number,EQueue.Broker,BufferLogRecord,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BufferLogRecord.cs,ReadFrom,The following statement contains a magic number: Buffer.BlockCopy(BitConverter.GetBytes(recordBuffer.Length)' 0' RecordBuffer' 0' 4);
Magic Number,EQueue.Broker,BufferLogRecord,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\BufferLogRecord.cs,ReadFrom,The following statement contains a magic number: Buffer.BlockCopy(recordBuffer' 0' RecordBuffer' 4' recordBuffer.Length);
Magic Number,EQueue.Broker,DefaultConsumeOffsetStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultConsumeOffsetStore.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("PersistConsumeOffsetInfo"' PersistConsumeOffsetInfo' 1000 * 5' BrokerController.Instance.Setting.PersistConsumeOffsetInterval);
Magic Number,EQueue.Broker,DefaultConsumeOffsetStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultConsumeOffsetStore.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("PersistConsumeOffsetInfo"' PersistConsumeOffsetInfo' 1000 * 5' BrokerController.Instance.Setting.PersistConsumeOffsetInterval);
Magic Number,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("DeleteMessages"' DeleteMessages' 5 * 1000' BrokerController.Instance.Setting.DeleteMessagesInterval);
Magic Number,EQueue.Broker,DefaultMessageStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultMessageStore.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("DeleteMessages"' DeleteMessages' 5 * 1000' BrokerController.Instance.Setting.DeleteMessagesInterval);
Magic Number,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("DeleteQueueMessages"' DeleteQueueMessages' 5 * 1000' BrokerController.Instance.Setting.DeleteQueueMessagesInterval);
Magic Number,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("DeleteQueueMessages"' DeleteQueueMessages' 5 * 1000' BrokerController.Instance.Setting.DeleteQueueMessagesInterval);
Magic Number,EQueue.Broker,DefaultQueueStore,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultQueueStore.cs,LoadQueues,The following statement contains a magic number: var topic = items[items.Length - 2];
Magic Number,EQueue.Broker,DefaultTpsStatisticService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultTpsStatisticService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("CalculateSendThroughput"' () =>              {                  foreach (var entry in _sendTpsDict)                  {                      entry.Value.CalculateThroughput();                  }              }' 1000' 1000);
Magic Number,EQueue.Broker,DefaultTpsStatisticService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultTpsStatisticService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("CalculateSendThroughput"' () =>              {                  foreach (var entry in _sendTpsDict)                  {                      entry.Value.CalculateThroughput();                  }              }' 1000' 1000);
Magic Number,EQueue.Broker,DefaultTpsStatisticService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultTpsStatisticService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("CalculateConsumeThroughput"' () =>              {                  foreach (var entry in _consumeTpsDict)                  {                      entry.Value.CalculateThroughput();                  }              }' 1000' ConsumeTpsStatInterval * 1000);
Magic Number,EQueue.Broker,DefaultTpsStatisticService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\DefaultTpsStatisticService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("CalculateConsumeThroughput"' () =>              {                  foreach (var entry in _consumeTpsDict)                  {                      entry.Value.CalculateThroughput();                  }              }' 1000' ConsumeTpsStatInterval * 1000);
Magic Number,EQueue.Broker,QueueLogRecord,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\QueueLogRecord.cs,ReadFrom,The following statement contains a magic number: TagCode = BitConverter.ToInt32(recordBuffer' 8);
Magic Number,EQueue.Broker.Client,ConsumerManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerManager.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("ScanNotActiveConsumer"' ScanNotActiveConsumer' 1000' 1000);
Magic Number,EQueue.Broker.Client,ConsumerManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ConsumerManager.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("ScanNotActiveConsumer"' ScanNotActiveConsumer' 1000' 1000);
Magic Number,EQueue.Broker.Client,ProducerManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ProducerManager.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("ScanNotActiveProducer"' ScanNotActiveProducer' 1000' 1000);
Magic Number,EQueue.Broker.Client,ProducerManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\Client\ProducerManager.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("ScanNotActiveProducer"' ScanNotActiveProducer' 1000' 1000);
Magic Number,EQueue.Broker.LongPolling,SuspendedPullRequestManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\LongPolling\SuspendedPullRequestManager.cs,StartCheckBlockingPullRequestTask,The following statement contains a magic number: _scheduleService.StartTask("CheckBlockingPullRequest"' CheckBlockingPullRequest' 1000 * 5' BrokerController.Instance.Setting.CheckBlockingPullRequestMilliseconds);
Magic Number,EQueue.Broker.LongPolling,SuspendedPullRequestManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\LongPolling\SuspendedPullRequestManager.cs,StartCheckBlockingPullRequestTask,The following statement contains a magic number: _scheduleService.StartTask("CheckBlockingPullRequest"' CheckBlockingPullRequest' 1000 * 5' BrokerController.Instance.Setting.CheckBlockingPullRequestMilliseconds);
Magic Number,EQueue.Broker.LongPolling,SuspendedPullRequestManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Broker\LongPolling\SuspendedPullRequestManager.cs,CheckBlockingPullRequest,The following statement contains a magic number: timeSpent > 1000
Magic Number,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("SendHeartbeatToAllBrokers"' SendHeartbeatToAllBrokers' 1000' _setting.SendHeartbeatInterval);
Magic Number,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("RefreshBrokerAndTopicRouteInfo"' async () =>              {                  await RefreshClusterBrokers();                  await RefreshTopicRouteInfo();              }' 1000' _setting.RefreshBrokerAndTopicRouteInfoInterval);
Magic Number,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,GetClusterBrokerListAsync,The following statement contains a magic number: var remotingResponse = await nameServerRemotingClient.InvokeAsync(remotingRequest' 5 * 1000);
Magic Number,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,GetClusterBrokerListAsync,The following statement contains a magic number: var remotingResponse = await nameServerRemotingClient.InvokeAsync(remotingRequest' 5 * 1000);
Magic Number,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,GetTopicRouteInfoListAsync,The following statement contains a magic number: var remotingResponse = await nameServerRemotingClient.InvokeAsync(remotingRequest' 5 * 1000);
Magic Number,EQueue.Clients,ClientService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\ClientService.cs,GetTopicRouteInfoListAsync,The following statement contains a magic number: var remotingResponse = await nameServerRemotingClient.InvokeAsync(remotingRequest' 5 * 1000);
Magic Number,EQueue.Clients.Consumers,CommitConsumeOffsetService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\CommitConsumeOffsetService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("CommitOffsets"' CommitOffsets' 1000' _consumer.Setting.CommitConsumerOffsetInterval);
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: NameServerList = new List<IPEndPoint>()              {                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 9493)              };
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: RebalanceInterval = 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: HeartbeatBrokerInterval = 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: RefreshBrokerAndTopicRouteInfoInterval = 1000 * 5;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: RefreshBrokerAndTopicRouteInfoInterval = 1000 * 5;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: CommitConsumerOffsetInterval = 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: PullMessageFlowControlThreshold = 10000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: SuspendPullRequestMilliseconds = 60 * 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: SuspendPullRequestMilliseconds = 60 * 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: PullRequestTimeoutMilliseconds = 70 * 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: PullRequestTimeoutMilliseconds = 70 * 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: RetryMessageInterval = 1000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: PullMessageBatchSize = 64;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: ManualPullLocalMessageQueueMaxSize = 10 * 10000;
Magic Number,EQueue.Clients.Consumers,ConsumerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\ConsumerSetting.cs,ConsumerSetting,The following statement contains a magic number: ManualPullLocalMessageQueueMaxSize = 10 * 10000;
Magic Number,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("RetryMessage"' RetryMessage' 1000' _consumer.Setting.RetryMessageInterval);
Magic Number,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessage,The following statement contains a magic number: Task.Factory.StartDelayedTask(5 * 1000' () => SchedulePullRequest(pullRequest));
Magic Number,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,PullMessage,The following statement contains a magic number: Task.Factory.StartDelayedTask(5 * 1000' () => SchedulePullRequest(pullRequest));
Magic Number,EQueue.Clients.Consumers,PullMessageService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\PullMessageService.cs,DecodeMessages,The following statement contains a magic number: buffer == null || buffer.Length <= 4
Magic Number,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("RebalanceAsync"' async () => await RebalanceAsync()' 1000' _consumer.Setting.RebalanceInterval);
Magic Number,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("CommitOffsets"' CommitOffsets' 1000' _consumer.Setting.CommitConsumerOffsetInterval);
Magic Number,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,GetConsumerIdsForTopic,The following statement contains a magic number: var remotingResponse = await brokerConnection.AdminRemotingClient.InvokeAsync(remotingRequest' 1000 * 5);
Magic Number,EQueue.Clients.Consumers,RebalanceService,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Consumers\RebalanceService.cs,GetConsumerIdsForTopic,The following statement contains a magic number: var remotingResponse = await brokerConnection.AdminRemotingClient.InvokeAsync(remotingRequest' 1000 * 5);
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: NameServerList = new List<IPEndPoint>()              {                  new IPEndPoint(SocketUtils.GetLocalIPV4()' 9493)              };
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: RefreshBrokerAndTopicRouteInfoInterval = 1000 * 5;
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: RefreshBrokerAndTopicRouteInfoInterval = 1000 * 5;
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: HeartbeatBrokerInterval = 1000;
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: MessageMaxSize = 1024 * 1024 * 4;
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: MessageMaxSize = 1024 * 1024 * 4;
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: MessageMaxSize = 1024 * 1024 * 4;
Magic Number,EQueue.Clients.Producers,ProducerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\ProducerSetting.cs,ProducerSetting,The following statement contains a magic number: SendMessageMaxRetryCount = 5;
Magic Number,EQueue.Clients.Producers,QueueHashSelector,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\QueueHashSelector.cs,SelectMessageQueue,The following statement contains a magic number: int hash = 23;
Magic Number,EQueue.Clients.Producers,QueueHashSelector,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Clients\Producers\QueueHashSelector.cs,SelectMessageQueue,The following statement contains a magic number: hash = (hash << 5) - hash + c;
Magic Number,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("ScanNotActiveBroker"' ScanNotActiveBroker' 1000' 1000);
Magic Number,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,Start,The following statement contains a magic number: _scheduleService.StartTask("ScanNotActiveBroker"' ScanNotActiveBroker' 1000' 1000);
Magic Number,EQueue.NameServer,ClusterManager,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\ClusterManager.cs,CreateTopicOnBroker,The following statement contains a magic number: var remotingResponse = await adminRemotingClient.InvokeAsync(remotingRequest' 30000);
Magic Number,EQueue.NameServer,NameServerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerSetting.cs,NameServerSetting,The following statement contains a magic number: BrokerInactiveMaxMilliseconds = 30 * 1000;
Magic Number,EQueue.NameServer,NameServerSetting,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\NameServerSetting.cs,NameServerSetting,The following statement contains a magic number: BrokerInactiveMaxMilliseconds = 30 * 1000;
Magic Number,EQueue.NameServer.RequestHandlers,AddQueueForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\AddQueueForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new AddQueueRequest(request.Topic));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.AddQueue' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,CreateTopicForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\CreateTopicForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new CreateTopicRequest(request.Topic' request.InitialQueueCount));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.CreateTopic' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,DeleteConsumerGroupForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\DeleteConsumerGroupForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new DeleteConsumerGroupRequest(request.GroupName));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.DeleteConsumerGroup' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,DeleteQueueForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\DeleteQueueForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new DeleteQueueRequest(request.Topic' request.QueueId));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.DeleteQueue' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,DeleteTopicForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\DeleteTopicForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new DeleteTopicRequest(request.Topic));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.DeleteTopic' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,SetQueueConsumerVisibleForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueConsumerVisibleForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new SetQueueConsumerVisibleRequest(request.Topic' request.QueueId' request.Visible));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.SetQueueConsumerVisible' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,SetQueueNextConsumeOffsetForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueNextConsumeOffsetForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new SetQueueNextConsumeOffsetRequest(request.ConsumerGroup' request.Topic' request.QueueId' request.NextOffset));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.SetQueueNextConsumeOffset' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.NameServer.RequestHandlers,SetQueueProducerVisibleForClusterRequestHandler,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\NameServer\RequestHandlers\SetQueueProducerVisibleForClusterRequestHandler.cs,HandleRequest,The following statement contains a magic number: requestService.ExecuteActionToAllClusterBrokers(request.ClusterName' async remotingClient =>              {                  var requestData = _binarySerializer.Serialize(new SetQueueProducerVisibleRequest(request.Topic' request.QueueId' request.Visible));                  var remotingResponse = await remotingClient.InvokeAsync(new RemotingRequest((int)BrokerRequestCode.SetQueueProducerVisible' requestData)' 30000);                  context.SendRemotingResponse(remotingResponse);              });
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: var ipBytes = new byte[4];
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: var portBytes = new byte[4];
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: var messagePositionBytes = new byte[8];
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: Buffer.BlockCopy(messageIdBytes' 0' ipBytes' 0' 4);
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: Buffer.BlockCopy(messageIdBytes' 4' portBytes' 0' 4);
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: Buffer.BlockCopy(messageIdBytes' 4' portBytes' 0' 4);
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: Buffer.BlockCopy(messageIdBytes' 8' messagePositionBytes' 0' 8);
Magic Number,EQueue.Utils,MessageIdUtil,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageIdUtil.cs,ParseMessageId,The following statement contains a magic number: Buffer.BlockCopy(messageIdBytes' 8' messagePositionBytes' 0' 8);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: var queueIdBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: var messageCodeBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: var messageCreatedTimeTicksBytes = new byte[8];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: var topicLengthBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: var tagLengthBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: var producerAddressLengthBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: Buffer.BlockCopy(messageBuffer' srcOffset' queueIdBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: Buffer.BlockCopy(messageBuffer' srcOffset' messageCodeBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: Buffer.BlockCopy(messageBuffer' srcOffset' messageCreatedTimeTicksBytes' 0' 8);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: srcOffset += 8;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: Buffer.BlockCopy(messageBuffer' srcOffset' topicLengthBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: Buffer.BlockCopy(messageBuffer' srcOffset' tagLengthBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: Buffer.BlockCopy(messageBuffer' srcOffset' producerAddressLengthBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeSendMessageRequest,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var messageCodeBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var queueIdBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var queueOffsetBytes = new byte[8];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var messageIdLengthBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var topicLengthBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var tagLengthBytes = new byte[4];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var createdTimeTicksBytes = new byte[8];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: var storedTimeTicksBytes = new byte[8];
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' messageCodeBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' queueIdBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' queueOffsetBytes' 0' 8);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 8;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' messageIdLengthBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' topicLengthBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' tagLengthBytes' 0' 4);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 4;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' createdTimeTicksBytes' 0' 8);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 8;
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: Buffer.BlockCopy(buffer' srcOffset' storedTimeTicksBytes' 0' 8);
Magic Number,EQueue.Utils,MessageUtils,D:\research\architectureSmells\repos1\tangxuehua_equeue\src\EQueue\Utils\MessageUtils.cs,DecodeMessageStoreResult,The following statement contains a magic number: srcOffset += 8;
