Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,SingleThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\SingleThreadedTests.cs,AddRemoveAndDirtyCheckReferenceTypesTest,Cyclomatic complexity of the method is 11
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: int testInt = 153;
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: long testLong = 123456L;
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: double testDouble = 123456.756D;
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: float testFloat = 1234.8564F;
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: int[] testIntArr = new int[] { 1' 2' 3 };
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: int[] testIntArr = new int[] { 1' 2' 3 };
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: TestSerializableClass tClass = new TestSerializableClass()               {                   Prop1 = "first"'                  Prop2 = 2'                  Prop3 = null              };
Magic Number,RedisSessionProviderUnitTests.RedisJSONSerializerTests,SeriousTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisJSONSerializerTests\SeriousTests.cs,BasicCorrectnessTest,The following statement contains a magic number: TestSubclass subTClass = new TestSubclass()              {                  Prop1 = "second"'                  Prop2 = 42'                  Prop3 = new List<string>                   {                       "a"'                      "b"                  }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: int numIterations = 1000000;
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Parallel.For(0' 4' (int index) => {                  int offset = index * 10;                  for(int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if(index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Parallel.For(0' 4' (int index) => {                  int offset = index * 10;                  for(int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if(index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Parallel.For(0' 4' (int index) => {                  int offset = index * 10;                  for(int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if(index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["a"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["b"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["c"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["d"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["e"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["f"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiAddAndRemove,The following statement contains a magic number: Assert.Contains(this.items["g"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: List<Action> AddRemoveOrder = new List<Action> {                   () => { this.items["a"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["g"] = 1; }'                    () => { this.items.Remove("a"); }'                  () => { this.items.Remove("b"); }'                  () => { this.items.Remove("c"); }'                  () => { this.items.Remove("d"); }'                  () => { this.items.Remove("e"); }'                  () => { this.items.Remove("f"); }'                  () => { this.items.Remove("g"); }'                    () => { this.items["a"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["g"] = 2; }'                    () => { this.items["g"] = 1; }'                  () => { this.items["f"] = 1; }'                  () => { this.items["e"] = 1; }'                  () => { this.items["d"] = 1; }'                  () => { this.items["c"] = 1; }'                  () => { this.items["b"] = 1; }'                  () => { this.items["a"] = 1; }'                    () => { this.items["g"] = null; }'                  () => { this.items["f"] = null; }'                  () => { this.items["e"] = null; }'                  () => { this.items["d"] = null; }'                  () => { this.items["c"] = null; }'                  () => { this.items["b"] = null; }'                  () => { this.items["a"] = null; }'                    () => { this.items["g"] = 2; }'                  () => { this.items["f"] = 2; }'                  () => { this.items["e"] = 2; }'                  () => { this.items["d"] = 2; }'                  () => { this.items["c"] = 2; }'                  () => { this.items["b"] = 2; }'                  () => { this.items["a"] = 2; }              };
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: int numIterations = 10000;
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: int numIterationsPerEnumeration = 100;
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Parallel.For(0' 4' (int index) =>              {                  int offset = index * 10;                  for (int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if (index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                        // if we are at a point that we should enumerate' do so. Should                       //      not throw any exceptions                      if(i > numIterationsPerEnumeration &&                           ((i % numIterationsPerEnumeration) == (2 * index)))                      {                          Debug.WriteLine("Thread {0} enumerating session items"' index);                            foreach(KeyValuePair<string' string> changedObj in                               this.items.GetChangedObjectsEnumerator())                          {                              if (changedObj.Value != null)                              {                                  Assert.Contains(                                      this.srsly.DeserializeOne(changedObj.Value)'                                      new object[] { 1' 2 });                              }                          }                      }                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Parallel.For(0' 4' (int index) =>              {                  int offset = index * 10;                  for (int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if (index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                        // if we are at a point that we should enumerate' do so. Should                       //      not throw any exceptions                      if(i > numIterationsPerEnumeration &&                           ((i % numIterationsPerEnumeration) == (2 * index)))                      {                          Debug.WriteLine("Thread {0} enumerating session items"' index);                            foreach(KeyValuePair<string' string> changedObj in                               this.items.GetChangedObjectsEnumerator())                          {                              if (changedObj.Value != null)                              {                                  Assert.Contains(                                      this.srsly.DeserializeOne(changedObj.Value)'                                      new object[] { 1' 2 });                              }                          }                      }                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Parallel.For(0' 4' (int index) =>              {                  int offset = index * 10;                  for (int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if (index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                        // if we are at a point that we should enumerate' do so. Should                       //      not throw any exceptions                      if(i > numIterationsPerEnumeration &&                           ((i % numIterationsPerEnumeration) == (2 * index)))                      {                          Debug.WriteLine("Thread {0} enumerating session items"' index);                            foreach(KeyValuePair<string' string> changedObj in                               this.items.GetChangedObjectsEnumerator())                          {                              if (changedObj.Value != null)                              {                                  Assert.Contains(                                      this.srsly.DeserializeOne(changedObj.Value)'                                      new object[] { 1' 2 });                              }                          }                      }                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Parallel.For(0' 4' (int index) =>              {                  int offset = index * 10;                  for (int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if (index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                        // if we are at a point that we should enumerate' do so. Should                       //      not throw any exceptions                      if(i > numIterationsPerEnumeration &&                           ((i % numIterationsPerEnumeration) == (2 * index)))                      {                          Debug.WriteLine("Thread {0} enumerating session items"' index);                            foreach(KeyValuePair<string' string> changedObj in                               this.items.GetChangedObjectsEnumerator())                          {                              if (changedObj.Value != null)                              {                                  Assert.Contains(                                      this.srsly.DeserializeOne(changedObj.Value)'                                      new object[] { 1' 2 });                              }                          }                      }                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Parallel.For(0' 4' (int index) =>              {                  int offset = index * 10;                  for (int i = 0; i < numIterations; i++)                  {                      // proceed thru the list of actions starting at an offset                      int actionIndex = (i + offset) % AddRemoveOrder.Count;                      // if odd index' go in reverse order                      if (index % 2 == 1)                      {                          actionIndex = Math.Abs((i - offset)) % AddRemoveOrder.Count;                      }                        AddRemoveOrder[actionIndex]();                        // if we are at a point that we should enumerate' do so. Should                       //      not throw any exceptions                      if(i > numIterationsPerEnumeration &&                           ((i % numIterationsPerEnumeration) == (2 * index)))                      {                          Debug.WriteLine("Thread {0} enumerating session items"' index);                            foreach(KeyValuePair<string' string> changedObj in                               this.items.GetChangedObjectsEnumerator())                          {                              if (changedObj.Value != null)                              {                                  Assert.Contains(                                      this.srsly.DeserializeOne(changedObj.Value)'                                      new object[] { 1' 2 });                              }                          }                      }                  }              });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["a"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["b"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["c"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["d"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["e"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["f"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,MultiThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\MultiThreadedTests.cs,MultiIterator,The following statement contains a magic number: Assert.Contains(this.items["g"]' new object[] { 1' 2' null });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,SingleThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\SingleThreadedTests.cs,RedisItemsCollectionAddTest,The following statement contains a magic number: Assert.Throws<NotImplementedException>(                  () => {                      var x = this.items[3];                  });
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,SingleThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\SingleThreadedTests.cs,RedisItemsCollectionRemoveTest,The following statement contains a magic number: Assert.AreEqual(4' this.items.Count);
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,SingleThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\SingleThreadedTests.cs,RedisItemsCollectionRemoveTest,The following statement contains a magic number: Assert.AreEqual(4' this.items.Count);
Magic Number,RedisSessionProviderUnitTests.RedisSessionStateItemCollectionTests,SingleThreadedTests,D:\research\architectureSmells\repos\welegan_RedisSessionProvider\RedisSessionProviderUnitTests\RedisSessionStateItemCollectionTests\SingleThreadedTests.cs,RedisItemsChangedObjsEnumeratorTest,The following statement contains a magic number: Assert.AreEqual(3' changedObjs.Count);
