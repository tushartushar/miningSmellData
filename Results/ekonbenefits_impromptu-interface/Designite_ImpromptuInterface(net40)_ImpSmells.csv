Implementation smell,Namespace,Class,File,Method,Description
Long Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The method has 116 lines of code.
Long Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakePropertyHelper,The method has 100 lines of code.
Long Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitProperty,The method has 106 lines of code.
Complex Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,ReplaceTypeWithGenericBuilder,Cyclomatic complexity of the method is 9
Complex Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,Cyclomatic complexity of the method is 12
Complex Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,Cyclomatic complexity of the method is 9
Complex Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakePropertyHelper,Cyclomatic complexity of the method is 12
Complex Method,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitProperty,Cyclomatic complexity of the method is 11
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakePropertyDescribedProperty,The method has 5 parameters. Parameters: builder' typeBuilder' contextType' tName' tReturnType
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The method has 6 parameters. Parameters: builder' info' typeBuilder' contextType' nonRecursive' defaultImp
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeProperty,The method has 6 parameters. Parameters: builder' info' typeBuilder' contextType' nonRecursive' defaultImp
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The method has 5 parameters. Parameters: builder' info' typeBuilder' contextType' defaultImp
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitRemoveEvent,The method has 8 parameters. Parameters: tMp' tRemoveBuilder' info' tRemoveMethod' tGetField' tSetField' tIsEventField' tEmitInfo
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitAddEvent,The method has 8 parameters. Parameters: tMp' tAddBuilder' info' tAddMethod' tGetField' tSetField' tIsEventField' tEmitInfo
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitProperty,The method has 6 parameters. Parameters: typeBuilder' getMethodBuilder' tMp' info' setMethodBuilder' emitInfo
Long Parameter List,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,DefineCallsiteFieldForMethod,The method has 5 parameters. Parameters: builder' name' returnType' argTypes' info
Long Parameter List,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicMethodInvokeBinder,The method has 7 parameters. Parameters: generator' flag' name' genericParms' context' argInfo' argNames
Long Parameter List,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinder,The method has 5 parameters. Parameters: generator' flag' name' context' argTypes
Long Parameter List,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinderDynamicParams,The method has 5 parameters. Parameters: generator' flag' name' context' argTypes
Long Parameter List,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicBinaryOpBinder,The method has 5 parameters. Parameters: generator' flag' exprType' context' argTypes
Long Parameter List,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicGetBinder,The method has 5 parameters. Parameters: generator' flag' name' context' argTypes
Long Parameter List,ImpromptuInterface.Optimization,BinderHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,BinderHash,The method has 8 parameters. Parameters: delegateType' name' context' argNames' binderType' staticContext' isEvent' knownBinder
Long Parameter List,ImpromptuInterface.Optimization,BinderHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,Create,The method has 8 parameters. Parameters: delType' name' context' argNames' binderType' staticContext' isEvent' knownBinder
Long Parameter List,ImpromptuInterface.Optimization,GenericBinderHashBase,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,GenericBinderHashBase,The method has 8 parameters. Parameters: delegateType' name' context' argNames' binderType' staticContext' isEvent' knownBinder
Long Parameter List,ImpromptuInterface.Optimization,BinderHash<T>,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,Create,The method has 7 parameters. Parameters: name' context' argNames' binderType' staticContext' isEvent' knownBinder
Long Parameter List,ImpromptuInterface.Optimization,BinderHash<T>,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,BinderHash,The method has 7 parameters. Parameters: name' context' argNames' binderType' staticContext' isEvent' knownBinder
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,PreLoadProxy,The length of the statement  "                attribute = proxyType.GetCustomAttributes(typeof(ActLikeProxyAttribute)' inherit: false).Cast<ActLikeProxyAttribute>().FirstOrDefault(); " is 136.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                string.Format("ActLike_{0}_{1}"' "InformalInterface"' Guid.NewGuid().ToString("N"))' TypeAttributes.Public | TypeAttributes.Class' " is 130.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakePropertyDescribedProperty,The length of the statement  "                                {Name = tName' GetName = tGetName' DefaultInterfaceImplementation = true' ContextType =  contextType' ResolveReturnType =  tReturnType}; " is 136.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                string.Format("ActLike_{0}_{1}"' tInterfacesMainList.First().Name' Guid.NewGuid().ToString("N"))' TypeAttributes.Public | TypeAttributes.Class' " is 143.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                new CustomAttributeBuilder(typeof(ActLikeProxyAttribute).GetConstructor(new[]{typeof(Type).MakeArrayType()'typeof(Type)})' " is 122.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "            tB.SetCustomAttribute(new CustomAttributeBuilder(typeof(SerializableAttribute).GetConstructor(Type.EmptyTypes)'new object[]{})); " is 128.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                        foreach (var tCustomAttribute in tCustomAttributes.Where(it=>typeof(DefaultMemberAttribute).IsAssignableFrom(it.Constructor.DeclaringType))) " is 140.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                     MakeProperty(builder' tInfo' tB' contextType' nonRecursive: tNonRecursiveProp' defaultImp: tPropertyNameHash.Add(tInfo.Name)); " is 126.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                foreach (var tInfo in tInterface.GetMethods(BindingFlags.Public | BindingFlags.Instance).Where(it => !it.IsSpecialName)) " is 120.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The length of the statement  "                    MakeMethod(builder' tInfo' tB' contextType' nonRecursive: tNonRecursiveMeth' defaultImp: tMethodHashSet.Add(new MethodSigHash(tInfo))); " is 135.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "            var tEmitInfo = new MethodEmitInfo {Name = info.Name' DefaultInterfaceImplementation = defaultImp' NonRecursive = nonRecursive}; " is 128.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "                    : Enumerable.Repeat(default(string)' tParam.i).Concat(tParamAttri.Skip(Math.Min(tParam.i - 1' 0)).Select(it => it.Name)).ToList(); " is 130.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "            var tInvokeFuncType = tCStp.DefineCallsiteFieldForMethod(tInvokeMethod' tReturnType != typeof(void) ? typeof(object) : typeof(void)' tParamTypes' info); " is 152.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "                                                tPublicPrivate | MethodAttributes.HideBySig | MethodAttributes.Virtual | MethodAttributes.Final | MethodAttributes.NewSlot); " is 124.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "                tInvokeFuncType = UpdateCallsiteFuncType(tInvokeFuncType' tReturnType != typeof(void) ? typeof(object) : typeof(void)' tReducedParams); " is 135.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "                    tParamBuilder.SetCustomAttribute(new CustomAttributeBuilder(typeof(ParamArrayAttribute).GetConstructor(Type.EmptyTypes)'new object[]{})); " is 137.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The length of the statement  "                    tParamBuilder.SetCustomAttribute(new CustomAttributeBuilder(typeof(DynamicAttribute).GetConstructor(new[]{typeof(bool[])} " is 121.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GetParamTypes,The length of the statement  "                .Distinct().ToDictionary(it => it.GenericParameterPosition' it => new { Type = it' Gen = default(GenericTypeParameterBuilder) }); " is 129.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GetParamTypes,The length of the statement  "            var tReturnParameters = FlattenGenericParameters(returnType).Where(it => !tParams.ContainsKey(it.GenericParameterPosition)); " is 124.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GetParamTypes,The length of the statement  "                tGenericParams.Add(tReParm.GenericParameterPosition' new { Type = tReParm' Gen = default(GenericTypeParameterBuilder) }); " is 121.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitMethodBody,The length of the statement  "                tIlGen.Emit(OpCodes.Ldfld' typeof(CallSite<>).MakeGenericType(emitInfo.CallSiteConvertFuncType).GetFieldEvenIfGeneric("Target")); " is 129.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitMethodBody,The length of the statement  "            tIlGen.Emit(OpCodes.Ldfld' typeof(CallSite<>).MakeGenericType(emitInfo.CallSiteInvokeFuncType).GetFieldEvenIfGeneric("Target")); " is 128.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitMethodBody,The length of the statement  "                tIlGen.Emit(OpCodes.Ldfld' typeof(CallSite<>).MakeGenericType(emitInfo.CallSiteConvertFuncType).GetFieldEvenIfGeneric("Target")); " is 129.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The length of the statement  "            tEmitInfo.CallSiteAddAssignFuncType = tCStp.DefineCallsiteField(tEmitInfo.CallSiteAddAssignName' typeof(object)' tEmitInfo.ResolveReturnType); " is 142.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The length of the statement  "            tEmitInfo.CallSiteSubtractAssignFuncType = tCStp.DefineCallsiteField(tEmitInfo.CallSiteSubtractAssignName' typeof(object)' tEmitInfo.ResolveReturnType); " is 152.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The length of the statement  "            tEmitInfo.CallSiteAddFuncType = tCStp.DefineCallsiteField(tEmitInfo.CallSiteAddName' typeof(object)' tEmitInfo.ResolvedAddParamTypes); " is 134.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The length of the statement  "            tEmitInfo.CallSiteRemoveFuncType = tCStp.DefineCallsiteField(tEmitInfo.CallSiteRemoveName' typeof(object)' tEmitInfo.ResolvedRemoveParamTypes); " is 143.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The length of the statement  "            tEmitInfo.CallSiteInvokeSetFuncType = tCStp.DefineCallsiteField(tEmitInfo.CallSiteInvokeSetName' typeof(object)' typeof(object)); " is 129.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeEvent,The length of the statement  "                                                             tPublicPrivate | MethodAttributes.SpecialName | MethodAttributes.HideBySig | MethodAttributes.Virtual | MethodAttributes.Final | MethodAttributes.NewSlot' " is 154.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitRemoveEvent,The length of the statement  "                    tIlGen.EmitDynamicSetBinderDynamicParams(CSharpBinderFlags.ValueFromCompoundAssignment' tEmitInfo.Alias ?? tEmitInfo.Name' " is 122.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitAddEvent,The length of the statement  "                    tIlGen.EmitDynamicSetBinderDynamicParams(CSharpBinderFlags.ValueFromCompoundAssignment' tEmitInfo.Alias ?? tEmitInfo.Name' " is 122.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakePropertyHelper,The length of the statement  "                emitInfo.CallSiteInvokeGetFuncType = tCStp.DefineCallsiteField(tInvokeGet' typeof(object)' emitInfo.ResolvedIndexParamTypes); " is 125.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakePropertyHelper,The length of the statement  "                emitInfo.CallSiteInvokeSetFuncType = tCStp.DefineCallsiteField(tInvokeSet' typeof(object)' emitInfo.ResolvedParamTypes); " is 120.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitProperty,The length of the statement  "            if (emitInfo.ResolvedIndexParamTypes == null) throw new ArgumentNullException("emitInfo"'"ResolvedIndexParams can't be null"); " is 126.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitProperty,The length of the statement  "                    tIlGen.EmitDynamicGetBinder(CSharpBinderFlags.None' emitInfo.Alias ?? emitInfo.Name' emitInfo.ContextType' emitInfo.ResolvedIndexParamTypes); " is 141.
Long Statement,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,EmitProperty,The length of the statement  "                    tIlGen.EmitDynamicSetBinder(CSharpBinderFlags.None' emitInfo.Alias ?? emitInfo.Name' emitInfo.ContextType' emitInfo.ResolvedParamTypes); " is 136.
Long Statement,ImpromptuInterface.Build,MethodSigHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,Equals,The length of the statement  "                return Equals(other.Name' Name) && StructuralComparisons.StructuralEqualityComparer.Equals(other.Parameters' Parameters); " is 121.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitCallsiteCreate,The length of the statement  "            generator.Emit(OpCodes.Call' typeof(CallSite<>).MakeGenericType(funcType).GetMethodEvenIfGeneric("Create"' new[] { typeof(CallSiteBinder) })); " is 142.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicMethodInvokeBinder,The length of the statement  "                generator.EmitArray(typeof(Type)' genericParms.Select(arg => (Action<ILGenerator>)(gen => gen.EmitTypeOf(arg))).ToList()); " is 122.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicMethodInvokeBinder,The length of the statement  "            generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("InvokeMember"' new[] { typeof(CSharpBinderFlags)' typeof(string)' typeof(IEnumerable<Type>)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 195.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinder,The length of the statement  "            tList.AddRange(argTypes.Select(tArg => (Action<ILGenerator>)(gen => gen.EmitCreateCSharpArgumentInfo(CSharpArgumentInfoFlags.UseCompileTimeType)))); " is 148.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinder,The length of the statement  "                generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("SetMember"' new[] { typeof(CSharpBinderFlags)' typeof(string)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 165.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinder,The length of the statement  "                generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("SetIndex"' new[] { typeof(CSharpBinderFlags)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 148.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinderDynamicParams,The length of the statement  "            tList.AddRange(argTypes.Select(tArg => (Action<ILGenerator>)(gen => gen.EmitCreateCSharpArgumentInfo(CSharpArgumentInfoFlags.None)))); " is 134.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinderDynamicParams,The length of the statement  "                generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("SetMember"' new[] { typeof(CSharpBinderFlags)' typeof(string)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 165.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicSetBinderDynamicParams,The length of the statement  "                generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("SetIndex"' new[] { typeof(CSharpBinderFlags)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 148.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicBinaryOpBinder,The length of the statement  "            tList.AddRange(argTypes.Select(tArg => (Action<ILGenerator>)(gen => gen.EmitCreateCSharpArgumentInfo(CSharpArgumentInfoFlags.UseCompileTimeType)))); " is 148.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicBinaryOpBinder,The length of the statement  "            generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("BinaryOperation"' new[] { typeof(CSharpBinderFlags)' typeof(ExpressionType)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 179.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicGetBinder,The length of the statement  "            tList.AddRange(argTypes.Select(tArg => (Action<ILGenerator>)(gen => gen.EmitCreateCSharpArgumentInfo(CSharpArgumentInfoFlags.UseCompileTimeType)))); " is 148.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicGetBinder,The length of the statement  "                generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("GetMember"' new[] { typeof(CSharpBinderFlags)' typeof(string)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 165.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicGetBinder,The length of the statement  "                generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("GetIndex"' new[] { typeof(CSharpBinderFlags)' typeof(Type)' typeof(CSharpArgumentInfo[]) })); " is 148.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitCreateCSharpArgumentInfo,The length of the statement  "            generator.Emit(OpCodes.Call' typeof(CSharpArgumentInfo).GetMethod("Create"' new[] { typeof(CSharpArgumentInfoFlags)' typeof(string) })); " is 136.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicConvertBinder,The length of the statement  "            generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("Convert"' new[] { typeof(CSharpBinderFlags)' typeof(Type)' typeof(Type) })); " is 131.
Long Statement,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitDynamicIsEventBinder,The length of the statement  "            generator.Emit(OpCodes.Call' typeof(Binder).GetMethod("IsEvent"' new[] { typeof(CSharpBinderFlags)' typeof(string)' typeof(Type) })); " is 133.
Complex Conditional,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GenerateCallSiteFuncType,The conditional expression  "tList.Any(it => it.IsByRef)                      || (tIsFunc && tList.Count >= 16)                      || (!tIsFunc && tList.Count >= 16)"  is complex.
Empty Catch Block,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,BuildTypeHelper,The method has an empty catch block.
Empty Catch Block,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,MakeMethod,The method has an empty catch block.
Magic Number,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GenerateCallSiteFuncType,The following statement contains a magic number: (tList.Any(it => it.IsByRef) || tList.Count > 16) && methodInfo !=null
Magic Number,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GenerateCallSiteFuncType,The following statement contains a magic number: tList.Any(it => it.IsByRef)                      || (tIsFunc && tList.Count >= 16)                      || (!tIsFunc && tList.Count >= 16)
Magic Number,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GenerateCallSiteFuncType,The following statement contains a magic number: tList.Any(it => it.IsByRef)                      || (tIsFunc && tList.Count >= 16)                      || (!tIsFunc && tList.Count >= 16)
Magic Number,ImpromptuInterface.Build,BuildProxy,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GenerateFullDelegate,The following statement contains a magic number: tMethod.DefineParameter(tParam.Position + 3' AttributesForParam(tParam)' tParam.Name);
Magic Number,ImpromptuInterface.Build,MethodSigHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\BuildProxy.cs,GetHashCode,The following statement contains a magic number: return (Name.GetHashCode() * 397) ^ StructuralComparisons.StructuralEqualityComparer.GetHashCode(Parameters);
Magic Number,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitStoreLocation,The following statement contains a magic number: switch (location)              {                  case 0:                      generator.Emit(OpCodes.Stloc_0);                      return;                  case 1:                      generator.Emit(OpCodes.Stloc_1);                      return;                  case 2:                      generator.Emit(OpCodes.Stloc_2);                      return;                  case 3:                      generator.Emit(OpCodes.Stloc_3);                      return;                  default:                      generator.Emit(OpCodes.Stloc' location);                      return;              }
Magic Number,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitStoreLocation,The following statement contains a magic number: switch (location)              {                  case 0:                      generator.Emit(OpCodes.Stloc_0);                      return;                  case 1:                      generator.Emit(OpCodes.Stloc_1);                      return;                  case 2:                      generator.Emit(OpCodes.Stloc_2);                      return;                  case 3:                      generator.Emit(OpCodes.Stloc_3);                      return;                  default:                      generator.Emit(OpCodes.Stloc' location);                      return;              }
Magic Number,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitLoadArgument,The following statement contains a magic number: switch (location)              {                  case 0:                      generator.Emit(OpCodes.Ldarg_0);                      return;                  case 1:                      generator.Emit(OpCodes.Ldarg_1);                      return;                  case 2:                      generator.Emit(OpCodes.Ldarg_2);                      return;                  case 3:                      generator.Emit(OpCodes.Ldarg_3);                      return;                  default:                      generator.Emit(OpCodes.Ldarg' location);                      return;              }
Magic Number,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitLoadArgument,The following statement contains a magic number: switch (location)              {                  case 0:                      generator.Emit(OpCodes.Ldarg_0);                      return;                  case 1:                      generator.Emit(OpCodes.Ldarg_1);                      return;                  case 2:                      generator.Emit(OpCodes.Ldarg_2);                      return;                  case 3:                      generator.Emit(OpCodes.Ldarg_3);                      return;                  default:                      generator.Emit(OpCodes.Ldarg' location);                      return;              }
Magic Number,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitLoadLocation,The following statement contains a magic number: switch (location)              {                  case 0:                      generator.Emit(OpCodes.Ldloc_0);                      return;                  case 1:                      generator.Emit(OpCodes.Ldloc_1);                      return;                  case 2:                      generator.Emit(OpCodes.Ldloc_2);                      return;                  case 3:                      generator.Emit(OpCodes.Ldloc_3);                      return;                  default:                      generator.Emit(OpCodes.Ldloc' location);                      return;              }
Magic Number,ImpromptuInterface.Build,EmitExtensions,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\EmitExtensions.cs,EmitLoadLocation,The following statement contains a magic number: switch (location)              {                  case 0:                      generator.Emit(OpCodes.Ldloc_0);                      return;                  case 1:                      generator.Emit(OpCodes.Ldloc_1);                      return;                  case 2:                      generator.Emit(OpCodes.Ldloc_2);                      return;                  case 3:                      generator.Emit(OpCodes.Ldloc_3);                      return;                  default:                      generator.Emit(OpCodes.Ldloc' location);                      return;              }
Magic Number,ImpromptuInterface.Build,TypeHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\TypeHash.cs,GetHashCode,The following statement contains a magic number: Types.Length > 16
Magic Number,ImpromptuInterface.Build,TypeHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\TypeHash.cs,GetHashCode,The following statement contains a magic number: var tReturn = Types.Aggregate(1' (current' type) => (current * 397) ^ type.GetHashCode());
Magic Number,ImpromptuInterface.Build,TypeHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\EmitProxy\TypeHash.cs,GetHashCode,The following statement contains a magic number: tReturn = InformalInterface.Aggregate(tReturn' (current' type) => (current * 397) ^ type.GetHashCode());
Magic Number,ImpromptuInterface.Optimization,BinderHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,GetHashCode,The following statement contains a magic number: int result = (tArgNames == null ? 0 : tArgNames.Length * 397);
Magic Number,ImpromptuInterface.Optimization,BinderHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ DelegateType.GetHashCode();
Magic Number,ImpromptuInterface.Optimization,BinderHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Context.GetHashCode();
Magic Number,ImpromptuInterface.Optimization,BinderHash,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\ImpromptuInterface\src\Optimization\BinderHash.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Name.GetHashCode();
