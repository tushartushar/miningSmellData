Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,UnitTestImpromptuInterface,OverloadingMethPoco,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Support\SupportDefinitions.cs,Func,The method has 6 parameters. Parameters: arg' arg2' arg3' arg4' arg5' arg6
Long Statement,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,MethodCollisionTest,The length of the statement  "            ISimpleStringMethodCollision tActsLike2 = Impromptu.ActLike<ISimpleStringMethod>(tNew2' typeof(ISimpleStringMethodCollision)); " is 126.
Long Statement,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,EventDynamicPropertyTest,The length of the statement  "            object tPoco = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args))); " is 144.
Long Statement,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,EventDynamicPropertyTest2,The length of the statement  "            object tPoco = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args))); " is 144.
Long Statement,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry3,The length of the statement  "            var tFormat = Enumerable.Range(0' 100).Aggregate(new StringBuilder()' (result' each) => result.Append("{" + each + "}")).ToString(); " is 132.
Long Statement,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestLateLibrarybind,The length of the statement  "            dynamic tBigIntType = new LateType("System.Numerics.BigInteger' System.Numerics' Version=4.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089"); " is 149.
Long Statement,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,HelperFormatType,The length of the statement  "                return String.Format("{0}<{1}>"' it.Name.Substring(0' it.Name.IndexOf("`"))' String.Join("'"' it.GetGenericArguments().Select(a => HelperFormatType(a)))); " is 154.
Long Statement,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,HelperMakeName,The length of the statement  "            return String.Format("{0} {1}{2}({3});"' HelperReturnTypeSub(it.ReturnType)' it.Name' HelperGenericParams(it.GetGenericArguments())' HelperGetParams(it.GetParameters())); " is 170.
Long Statement,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,HelperMakeNameDebug,The length of the statement  "            return String.Format("{0} {1}{2}({3});"' HelperReturnTypeSub(it.ReturnType)' it.Name' HelperGenericParams(it.GetGenericArguments())' HelperGetParamsDebug(it.GetParameters())); " is 175.
Long Statement,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Call_Method_With_Parameters,The length of the statement  "            dynamic result = mimic.I().Can().Call().Any().Method().I().Want().And().It().Wont().Blow().Up("And"' "Any"' "Parameter"' "I"' "Want"' 1' 2' 3' 44.99m); " is 151.
Long Statement,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestCacheableExposePrivateMethodViaType,The length of the statement  "            var tCachedInvoke = new CacheableInvocation(InvocationKind.InvokeMember' "Test"' context:typeof(TestWithPrivateMethod)); " is 120.
Long Statement,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableStaticCall,The length of the statement  "            var tCached = new CacheableInvocation(InvocationKind.InvokeMember' new InvokeMemberName("Create"' typeof(bool))' argCount: 1' " is 125.
Long Statement,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicAddAssign,The length of the statement  "             var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args))); " is 144.
Long Statement,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicAddAssign,The length of the statement  "             var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args))); " is 144.
Long Statement,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicSubtractAssign,The length of the statement  "             var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args))); " is 144.
Long Statement,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicSubtractAssign,The length of the statement  "             var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args))); " is 144.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestSetTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableSetTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestSetNullTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableSetNullTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestPropPocoGetValueTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableGetValueTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableConstructorTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorNoARgTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachableConstructorNoARgTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorValueTypeTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValueTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValueTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestGetStaticTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableGetStaticTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodStaticMethodValueTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodStaticMethodValueTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValuePassNullTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValuePassNullTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValuePassNullDoubleCallTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValuePassNullDoubleCallTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The length of the statement  "            var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeMember(tValue' "IndexOf"' "45"' 0' 14' StringComparison.InvariantCulture); }' 500000); " is 142.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The length of the statement  "            var tMethodInfo = tValue.GetType().GetMethod("IndexOf"' new Type[] { typeof(string)' typeof(int)' typeof(int)' typeof(StringComparison) }); " is 139.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The length of the statement  "            var tMethodInfo = tValue.GetType().GetMethod("IndexOf"' new Type[] { typeof(string)' typeof(int)' typeof(int)' typeof(StringComparison) }); " is 139.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoVoidTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoVoidTimed,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tWatch2.Elapsed.Ticks / tWatch.Elapsed.Ticks); " is 121.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvoke,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tStopWatch2.Elapsed.Ticks / tStopWatch1.Elapsed.Ticks); " is 130.
Long Statement,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvokeAction,The length of the statement  "            TestContext.WriteLine("Impromptu VS Reflection: {0:0.0} x faster"' (double)tStopWatch2.Elapsed.Ticks / tStopWatch1.Elapsed.Ticks); " is 130.
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,AnonPropertyTest,The following statement contains a magic number: var tAnon = new { Prop1 = "Test"' Prop2 = 42L' Prop3 = Guid.NewGuid() };
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,CacheTest,The following statement contains a magic number: var tAnon = new { Prop1 = "Test 1"' Prop2 = 42L' Prop3 = Guid.NewGuid() };
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,CacheTest,The following statement contains a magic number: var tAnon2 = new { Prop1 = "Test 2"' Prop2 = 43L' Prop3 = Guid.NewGuid() };
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,AnonEqualsTest,The following statement contains a magic number: var tAnon = new { Prop1 = "Test 1"' Prop2 = 42L' Prop3 = Guid.NewGuid() };
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,ExpandoPropertyTest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,ExpandoSEtPropertyTest,The following statement contains a magic number: var prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,ImpromptuConversionPropertyTest,The following statement contains a magic number: Assert.AreEqual(42L' tActsLike.Prop2);
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,DoubleInterfacetest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,NestedInterfaceMethodtest,The following statement contains a magic number: tNew.Nested(1' 2).NameLevel2 = "two";
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,NestedInterfaceMethodtest,The following statement contains a magic number: Assert.AreEqual(tNew.Nested(1'2).NameLevel2' tActsLike.Nested(1'2).NameLevel2);
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,NestedInterfaceMethodtest,The following statement contains a magic number: Assert.AreEqual(tNew.Nested(1'2).NameLevel2' tActsLike.Nested(1'2).NameLevel2);
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,DoublePropertyTest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,EventPropertyCollisionTest,The following statement contains a magic number: tNew.Event = 3;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,MethodCollisionTest,The following statement contains a magic number: tNew2.StartsWith = new Func<string' int>(x => 5);
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,EventDynamicPropertyTest,The following statement contains a magic number: object tPoco = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args)));
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,EventDynamicPropertyTest2,The following statement contains a magic number: object tPoco = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args)));
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,DynamicArgMethodTest2,The following statement contains a magic number: Assert.AreEqual(DynamicArgsHelper(tPoco' new[] { 1' 2' 3 })' tActsLike.Params(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,DynamicArgMethodTest2,The following statement contains a magic number: Assert.AreEqual(DynamicArgsHelper(tPoco' new[] { 1' 2' 3 })' tActsLike.Params(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,DynamicArgMethodTest2,The following statement contains a magic number: Assert.AreEqual(DynamicArgsHelper(tPoco' new[] { 1' 2' 3 })' tActsLike.Params(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,DynamicArgMethodTest2,The following statement contains a magic number: Assert.AreEqual(DynamicArgsHelper(tPoco' new[] { 1' 2' 3 })' tActsLike.Params(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,InformalPropTest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,OutMethodTest3,The following statement contains a magic number: int tResult = 3;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,GenericOutMethodTest,The following statement contains a magic number: int tResult = 3;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,RefMethodTest,The following statement contains a magic number: Assert.AreEqual(3' tResult);
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,RefMethodTest,The following statement contains a magic number: int tResult2 = 2;
Magic Number,UnitTestImpromptuInterface,Basic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Basic.cs,RefMethodTest,The following statement contains a magic number: Assert.AreEqual(4' tResult2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicDelegateCurry,The following statement contains a magic number: var tCurriedAdd4 = Dynamic.Curry(tAdd)(4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicDelegateCurry,The following statement contains a magic number: var tResult = tCurriedAdd4(6);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicDelegateCurry,The following statement contains a magic number: Assert.AreEqual(10' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicNamedCurry,The following statement contains a magic number: var tCurriedSub7 = Dynamic.Curry(tSub)(arg2: 7);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicNamedCurry,The following statement contains a magic number: var tResult = tCurriedSub7(arg1: 10);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicNamedCurry,The following statement contains a magic number: Assert.AreEqual(3' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertDelegateCurryReturnValueType,The following statement contains a magic number: Assert.AreEqual(14' tResult2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertDelegateCurryParamValueType,The following statement contains a magic number: var tCurriedAdd4 = Dynamic.Curry(tAdd)(4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertDelegateCurryParamValueType,The following statement contains a magic number: var tResult2 = tCastToFunc(10);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertDelegateCurryParamValueType,The following statement contains a magic number: Assert.AreEqual(14' tResult2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreCurryParamValueType,The following statement contains a magic number: Func<int' Func<int' int>> Curry1 = Dynamic.Curry(tAdd)(4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreCurryParamValueType,The following statement contains a magic number: Func<int' int> Curry2 = Curry1(6);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreCurryParamValueType,The following statement contains a magic number: int tResult = Curry2(10);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreCurryParamValueType,The following statement contains a magic number: Assert.AreEqual(20' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreMoreCurryParamValueType,The following statement contains a magic number: var Curry1 = Curry0(4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreMoreCurryParamValueType,The following statement contains a magic number: var Curry2 = Curry1(5);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreMoreCurryParamValueType,The following statement contains a magic number: var Curry3 = Curry2(6);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreMoreCurryParamValueType,The following statement contains a magic number: var tResult = Curry3(20);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestBasicConvertMoreMoreCurryParamValueType,The following statement contains a magic number: Assert.AreEqual(35' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodCurry,The following statement contains a magic number: var tCurry = Dynamic.Curry(tNewObj).Add(4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodCurry,The following statement contains a magic number: var tResult = tCurry(10);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodCurry,The following statement contains a magic number: Assert.AreEqual(14' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodCurry,The following statement contains a magic number: var tResult2 = tCurry(30);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodCurry,The following statement contains a magic number: Assert.AreEqual(34' tResult2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry,The following statement contains a magic number: var curry = Dynamic.Curry((StaticContext)typeof(string)' 5).Format();
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry2,The following statement contains a magic number: object curriedJoin = Dynamic.Curry((StaticContext)typeof(string)' 51).Join("'");
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry2,The following statement contains a magic number: string final = Enumerable.Range(1' 100)                  .Where(i => i % 2 == 0)                  .Aggregate(curriedJoin' applyFunc);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry2,The following statement contains a magic number: string final = Enumerable.Range(1' 100)                  .Where(i => i % 2 == 0)                  .Aggregate(curriedJoin' applyFunc);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry3,The following statement contains a magic number: var tFormat = Enumerable.Range(0' 100).Aggregate(new StringBuilder()' (result' each) => result.Append("{" + each + "}")).ToString();
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry3,The following statement contains a magic number: dynamic curriedWrite = Dynamic.Curry(Console.Out' 101).WriteLine(tFormat);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestStaticMethodCurry3,The following statement contains a magic number: Enumerable.Range(0' 100).Aggregate((object)curriedWrite' applyArgs);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestDynamicMethodCurry,The following statement contains a magic number: var tCurry = Dynamic.Curry(tNewObj).Add(4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestDynamicMethodCurry,The following statement contains a magic number: var tResult = tCurry(10);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestDynamicMethodCurry,The following statement contains a magic number: Assert.AreEqual(14' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestDynamicMethodCurry,The following statement contains a magic number: var tResult2 = tCurry(30);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestDynamicMethodCurry,The following statement contains a magic number: Assert.AreEqual(34' tResult2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedCurry,The following statement contains a magic number: var tResult = tCurriedNewObject(Two: 2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedCurry,The following statement contains a magic number: Assert.AreEqual(2' tResult.Two);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedCurryCont,The following statement contains a magic number: tNewObject = Dynamic.Curry(tNewObject)(Two: 2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedCurryCont,The following statement contains a magic number: var tResult = tNewObject(Three: 3);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedCurryCont,The following statement contains a magic number: Assert.AreEqual(2' tResult.Two);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedCurryCont,The following statement contains a magic number: Assert.AreEqual(3' tResult.Three);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BoundedCurryCont,The following statement contains a magic number: var tNewObject = Dynamic.Curry(Build.NewObject' 3);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BoundedCurryCont,The following statement contains a magic number: tNewObject = tNewObject(Two: 2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BoundedCurryCont,The following statement contains a magic number: var tResult = tNewObject(Three: 3);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BoundedCurryCont,The following statement contains a magic number: Assert.AreEqual(2' tResult.Two);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BoundedCurryCont,The following statement contains a magic number: Assert.AreEqual(3' tResult.Three);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestCurryNamedMethods,The following statement contains a magic number: Assert.Throws<NotImplementedException>(() => jump(cheer: "yay"' height: (uint)3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodPartialApply,The following statement contains a magic number: var tCurry = Dynamic.Curry(tNewObj).Add(4' 6);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodPartialApply,The following statement contains a magic number: var tCurry = Dynamic.Curry(tNewObj).Add(4' 6);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,TestPococMethodPartialApply,The following statement contains a magic number: Assert.AreEqual(10' tResult);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedPartialApply,The following statement contains a magic number: tNewObject = tNewObject(One: 1' Two: 2);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedPartialApply,The following statement contains a magic number: var tResult = tNewObject(Three: 3' Four: 4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedPartialApply,The following statement contains a magic number: var tResult = tNewObject(Three: 3' Four: 4);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedPartialApply,The following statement contains a magic number: Assert.AreEqual(2' tResult.Two);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedPartialApply,The following statement contains a magic number: Assert.AreEqual(3' tResult.Three);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,UnboundedPartialApply,The following statement contains a magic number: Assert.AreEqual(4' tResult.Four);
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1' 2' 3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1' 2)(3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1' 2)(3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1' 2)(3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1)(2' 3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1)(2' 3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6' curried(1)(2' 3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6'curried(1)(2)(3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6'curried(1)(2)(3));
Magic Number,UnitTestImpromptuInterface,Curry,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Curry.cs,BasicCurryTest,The following statement contains a magic number: Assert.AreEqual(6'curried(1)(2)(3));
Magic Number,UnitTestImpromptuInterface,Generics,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Generics.cs,TestGenericMeth,The following statement contains a magic number: GenericMethHelper(3' "3");
Magic Number,UnitTestImpromptuInterface,Generics,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Generics.cs,TestGenericMeth,The following statement contains a magic number: GenericMethHelper(4' "4");
Magic Number,UnitTestImpromptuInterface,Generics,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Generics.cs,TestGenericMeth,The following statement contains a magic number: GenericMethHelper2(3);
Magic Number,UnitTestImpromptuInterface,Generics,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Generics.cs,TestGenericMeth,The following statement contains a magic number: GenericMethHelper2(4);
Magic Number,UnitTestImpromptuInterface,Generics,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Generics.cs,TestGenericType,The following statement contains a magic number: GenericHelper(3' "3");
Magic Number,UnitTestImpromptuInterface,Generics,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Generics.cs,TestGenericType,The following statement contains a magic number: GenericHelper(4' "4");
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DictionaryPropertyTest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,GetterAnonTest,The following statement contains a magic number: var tAnon = new { Prop1 = "Test"' Prop2 = 42L' Prop3 = Guid.NewGuid() };
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,GetterArrayTest,The following statement contains a magic number: var tArray = new int[]{1'2'3};
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,GetterArrayTest,The following statement contains a magic number: var tArray = new int[]{1'2'3};
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,GetterArrayTest,The following statement contains a magic number: Assert.AreEqual(tArray[2].ToString()' tTest[2]);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,GetterArrayTest,The following statement contains a magic number: Assert.AreEqual(tArray[2].ToString()' tTest[2]);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,GetterDynamicTest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,ForwardAnonTest,The following statement contains a magic number: var tAnon = new { Prop1 = "Test"' Prop2 = 42L' Prop3 = Guid.NewGuid() };
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,ForwardDynamicTest,The following statement contains a magic number: tNew.Prop2 = 42L;
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DictionaryMethodsTest,The following statement contains a magic number: Assert.AreEqual("test4"' tActsLike.Action4(4));
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,ForwardMethodsTest,The following statement contains a magic number: Assert.AreEqual("test4"' tFwd.Action4(4));
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,ForwardGenericMethodsTest,The following statement contains a magic number: Assert.AreEqual("test99"' tFwd.Create<ForwardGenericMethodsTestClass>(99).Value);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DynamicDictionaryWrappedTest,The following statement contains a magic number: var tDictionary = new Dictionary<string' object>                                    {                                        {"Test1"' 1}'                                        {"Test2"' 2}'                                        {"TestD"'  new Dictionary<string'object>()                                                       {                                                           {"TestA"'"A"}'                                                           {"TestB"'"B"}                                                       }                                        }                                    };
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DynamicDictionaryWrappedTest,The following statement contains a magic number: Assert.AreEqual(2' tNew.Test2);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,InterfaceDictionaryWrappedTest,The following statement contains a magic number: var tDictionary = new Dictionary<string' object>                                    {                                        {"Test1"' 1}'                                        {"Test2"' 2L}'                                        {"Test3"'1}'                                        {"Test4"'"Two"}'                                        {"TestD"'  new Dictionary<string'object>()                                                       {                                                           {"TestA"'"A"}'                                                           {"TestB"'"B"}                                                       }                                        }                                    };
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,InterfaceDictionaryWrappedTest,The following statement contains a magic number: Assert.AreEqual(2L' tDynamic.Test2);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,InterfaceDictionaryWrappedTest,The following statement contains a magic number: Assert.AreEqual(2L' tNotDynamic.Test2);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DynamicObjectEqualsTest,The following statement contains a magic number: var tDictionary = new Dictionary<string' object>                                    {                                        {"Test1"' 1}'                                        {"Test2"' 2}'                                        {"TestD"'  new Dictionary<string'object>()                                                       {                                                           {"TestA"'"A"}'                                                           {"TestB"'"B"}                                                       }                                        }                                    };
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DynamicAnnonymousWrapper,The following statement contains a magic number: dynamic tDyn = new Get(new                                                 {                                                     Test1 = 1'                                                     Test2 = "2"'                                                     IsGreaterThan5 = Return<bool>.Arguments<int>(it => it > 5)'                                                     ClearData = ReturnVoid.Arguments(() => tData.Clear())                                                 });
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DynamicAnnonymousWrapper,The following statement contains a magic number: Assert.AreEqual(true' tDyn.IsGreaterThan5(6));
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,DynamicAnnonymousWrapper,The following statement contains a magic number: Assert.AreEqual(false' tDyn.IsGreaterThan5(4));
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestAnonInterface,The following statement contains a magic number: var tInterface = Impromptu.Create<Get'ICollection>(new                                                                    {                                                                       CopyArray = ReturnVoid.Arguments<Array'int>((ar'i) => Enumerable.Range(1'10))'                                                                       Count =  10'                                                                       IsSynchronized = false'                                                                       SyncRoot = this'                                                                       GetEnumerator = Return<IEnumerator>.Arguments(()=>Enumerable.Range(1' 10).GetEnumerator())                                                                    });
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestAnonInterface,The following statement contains a magic number: var tInterface = Impromptu.Create<Get'ICollection>(new                                                                    {                                                                       CopyArray = ReturnVoid.Arguments<Array'int>((ar'i) => Enumerable.Range(1'10))'                                                                       Count =  10'                                                                       IsSynchronized = false'                                                                       SyncRoot = this'                                                                       GetEnumerator = Return<IEnumerator>.Arguments(()=>Enumerable.Range(1' 10).GetEnumerator())                                                                    });
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestAnonInterface,The following statement contains a magic number: var tInterface = Impromptu.Create<Get'ICollection>(new                                                                    {                                                                       CopyArray = ReturnVoid.Arguments<Array'int>((ar'i) => Enumerable.Range(1'10))'                                                                       Count =  10'                                                                       IsSynchronized = false'                                                                       SyncRoot = this'                                                                       GetEnumerator = Return<IEnumerator>.Arguments(()=>Enumerable.Range(1' 10).GetEnumerator())                                                                    });
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestAnonInterface,The following statement contains a magic number: Assert.AreEqual(10' tInterface.Count);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestQuicListSyntax,The following statement contains a magic number: Assert.AreEqual("three"' tList2[3]);
Magic Number,UnitTestImpromptuInterface,ImpromptuDynamic,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\ImpromptuDynamic.cs,TestLateLibrarybind,The following statement contains a magic number: var two = tBigIntType.@new(2);
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinq,The following statement contains a magic number: ILinq<int> linq = Impromptu.ActLike(Dynamic.Linq(Enumerable.Range(1' 10)));
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinq,The following statement contains a magic number: var actual = linq.Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinq,The following statement contains a magic number: var actual = linq.Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,MoreGenericsLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Select(i=> Tuple.Create(1'i)).Aggregate(0'(accum'each)=> each.Item2);
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,MoreGenericsLinq,The following statement contains a magic number: ILinq<int> linq = Impromptu.ActLike(Dynamic.Linq(Enumerable.Range(1' 10)));
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinqDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinqDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinqDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(i => i > 5).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinqDynamicLinq,The following statement contains a magic number: var actual = Dynamic.Linq(Enumerable.Range(1' 10)).Where(new Func<int'bool>(i => i > 5)).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinqDynamicLinq,The following statement contains a magic number: var actual = Dynamic.Linq(Enumerable.Range(1' 10)).Where(new Func<int'bool>(i => i > 5)).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,SimpleLinqDynamicLinq,The following statement contains a magic number: var actual = Dynamic.Linq(Enumerable.Range(1' 10)).Where(new Func<int'bool>(i => i > 5)).Skip(1).Take(2).Max();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,MoreGenericsDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Select(i => Tuple.Create(1' i)).Aggregate(0' (accum' each) => each.Item2);
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,MoreGenericsDynamicLinq,The following statement contains a magic number: var actual = Dynamic.Linq(Enumerable.Range(1' 10))                  .Select(new Func<int'Tuple<int'int>>(i => Tuple.Create(1' i)))                  .Aggregate(0' new Func<int'Tuple<int'int>'int>((accum' each) => each.Item2));
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(x=> x < 5).OrderBy(x => 10 - x).First();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(x=> x < 5).OrderBy(x => 10 - x).First();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(x=> x < 5).OrderBy(x => 10 - x).First();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonLinq,The following statement contains a magic number: ILinq<int> linq = Impromptu.ActLike(Dynamic.Linq(Enumerable.Range(1' 10)));
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonLinqGenericArgs,The following statement contains a magic number: var start = new Object[] {1' "string"' 4' Guid.Empty' 6};
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonLinqGenericArgs,The following statement contains a magic number: var start = new Object[] {1' "string"' 4' Guid.Empty' 6};
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonDynamicLinqGenericArgs,The following statement contains a magic number: var start = new Object[] { 1' "string"' 4' Guid.Empty' 6 };
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonDynamicLinqGenericArgs,The following statement contains a magic number: var start = new Object[] { 1' "string"' 4' Guid.Empty' 6 };
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(x => x < 5).OrderBy(x => 10 - x).First();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(x => x < 5).OrderBy(x => 10 - x).First();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonDynamicLinq,The following statement contains a magic number: var expected = Enumerable.Range(1' 10).Where(x => x < 5).OrderBy(x => 10 - x).First();
Magic Number,UnitTestImpromptuInterface,Linq,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Linq.cs,PythonDynamicLinq,The following statement contains a magic number: var actual = RunPythonHelper(Dynamic.Linq(Enumerable.Range(1' 10))'                                             @"  import System  result = linq.Where.Overloads[System.Func[int' bool]](lambda x: x < 5).OrderBy(lambda x: 10-x).First()    ");
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Call_Method_With_Parameters,The following statement contains a magic number: dynamic result = mimic.I().Can().Call().Any().Method().I().Want().And().It().Wont().Blow().Up("And"' "Any"' "Parameter"' "I"' "Want"' 1' 2' 3' 44.99m);
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Call_Method_With_Parameters,The following statement contains a magic number: dynamic result = mimic.I().Can().Call().Any().Method().I().Want().And().It().Wont().Blow().Up("And"' "Any"' "Parameter"' "I"' "Want"' 1' 2' 3' 44.99m);
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Call_Method_With_Parameters,The following statement contains a magic number: dynamic result = mimic.I().Can().Call().Any().Method().I().Want().And().It().Wont().Blow().Up("And"' "Any"' "Parameter"' "I"' "Want"' 1' 2' 3' 44.99m);
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Unary,The following statement contains a magic number: result = mimic /= 2;
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Unary,The following statement contains a magic number: result = mimic *= 4;
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Unary,The following statement contains a magic number: result = mimic %= 5;
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Inheritance_Int,The following statement contains a magic number: int result = mimic.Add(2' 2);
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Inheritance_Int,The following statement contains a magic number: int result = mimic.Add(2' 2);
Magic Number,UnitTestImpromptuInterface,MimicTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\MimicTest.cs,Inheritance_Int,The following statement contains a magic number: Assert.AreEqual(4' result);
Magic Number,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestExposePrivateMethod,The following statement contains a magic number: Assert.AreEqual(3' tExposed.Test());
Magic Number,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestInvokePrivateMethod,The following statement contains a magic number: Assert.AreEqual(3' Dynamic.InvokeMember(tTest'"Test"));
Magic Number,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestInvokePrivateMethodAcrossAssemblyBoundries,The following statement contains a magic number: Assert.AreEqual(true' Dynamic.InvokeMember(tTest' "PrivateMethod"' 3));
Magic Number,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestInvokeInternalTypeMethodAcrossAssemblyBoundries,The following statement contains a magic number: Assert.AreEqual(true' Dynamic.InvokeMember(tTest' "InternalMethod"' 3));
Magic Number,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestCacheableExposePrivateMethodViaInstance,The following statement contains a magic number: Assert.AreEqual(3' tCachedInvoke.Invoke(tTest));
Magic Number,UnitTestImpromptuInterface,PrivateTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,TestCacheableExposePrivateMethodViaType,The following statement contains a magic number: Assert.AreEqual(3' tCachedInvoke.Invoke(tTest));
Magic Number,UnitTestImpromptuInterface,TestWithPrivateMethod,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\PrivateTest.cs,Test,The following statement contains a magic number: return 3;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConvert,The following statement contains a magic number: Assert.AreEqual(45'tCast);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConvertCacheable,The following statement contains a magic number: Assert.AreEqual(45' tCast);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConstructValueType,The following statement contains a magic number: var tCast = Dynamic.InvokeConstructor(typeof(DateTime)' 2009'1'20);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConstructValueType,The following statement contains a magic number: var tCast = Dynamic.InvokeConstructor(typeof(DateTime)' 2009'1'20);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConstructValueType,The following statement contains a magic number: Assert.AreEqual(20' tCast.Day);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableConstructValueType,The following statement contains a magic number: var tCachedInvoke = new CacheableInvocation(InvocationKind.Constructor' argCount: 3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableConstructValueType,The following statement contains a magic number: dynamic tCast = tCachedInvoke.Invoke(typeof(DateTime)' 2009' 1' 20);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableConstructValueType,The following statement contains a magic number: dynamic tCast = tCachedInvoke.Invoke(typeof(DateTime)' 2009' 1' 20);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableConstructValueType,The following statement contains a magic number: Assert.AreEqual(20' tCast.Day);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConstructValueTypeJustDynamic,The following statement contains a magic number: dynamic day =20;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConstructValueTypeJustDynamic,The following statement contains a magic number: dynamic year =2009;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestConstructValueTypeJustDynamic,The following statement contains a magic number: Assert.AreEqual(20' tDate.Day);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestImplicitConvert,The following statement contains a magic number: var tEl = 45;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableImplicitConvert,The following statement contains a magic number: var tEl = 45;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestGetIndexerValue,The following statement contains a magic number: var tAnon = new int[] { 1' 2};
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestGetLengthArray,The following statement contains a magic number: Assert.AreEqual(2' tOut);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableIndexer,The following statement contains a magic number: var tInts = new int[] { 3' 4 };
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableIndexer,The following statement contains a magic number: var tInts = new int[] { 3' 4 };
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableSetIndexer,The following statement contains a magic number: var tCachedInvoke = new CacheableInvocation(InvocationKind.SetIndex' argCount:2);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllDict,The following statement contains a magic number: Dynamic.InvokeSetAll(tExpando' new Dictionary<string' object> {{"Test.Test2.Test3"' tSetValue}'{"One"'1}'{"Two"'2}});
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllDict,The following statement contains a magic number: Assert.AreEqual(2' tExpando.Two);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllAnonymous,The following statement contains a magic number: Dynamic.InvokeSetAll(tExpando' new{One=1'Two=2'Three=3});
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllAnonymous,The following statement contains a magic number: Dynamic.InvokeSetAll(tExpando' new{One=1'Two=2'Three=3});
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllAnonymous,The following statement contains a magic number: Assert.AreEqual(2' tExpando.Two);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllAnonymous,The following statement contains a magic number: Assert.AreEqual(3' tExpando.Three);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllNamed,The following statement contains a magic number: Dynamic.InvokeSetAll(tExpando'  One:1' Two:2' Three:3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllNamed,The following statement contains a magic number: Dynamic.InvokeSetAll(tExpando'  One:1' Two:2' Three:3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllNamed,The following statement contains a magic number: Assert.AreEqual(2' tExpando.Two);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestSetDynamicAllNamed,The following statement contains a magic number: Assert.AreEqual(3' tExpando.Three);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestStaticSet,The following statement contains a magic number: int tValue = 12;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableStaticSet,The following statement contains a magic number: int tValue = 12;
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestStaticDateTimeMethod,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009'1'20)' tDate);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestStaticDateTimeMethod,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009'1'20)' tDate);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableStaticDateTimeMethod,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 1' 20)' tDate);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableStaticDateTimeMethod,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 1' 20)' tDate);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestPocoAddAssign,The following statement contains a magic number: var tPoco2 = new PropPoco() { Prop2 = 3 };
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestPocoAddAssign,The following statement contains a magic number: Dynamic.InvokeAddAssignMember(tPoco2' "Prop2"' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestPocoAddAssign,The following statement contains a magic number: Assert.AreEqual(7L' tPoco2.Prop2);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheablePocoAddAssign,The following statement contains a magic number: var tPoco2 = new PropPoco() { Event = 3 };
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheablePocoAddAssign,The following statement contains a magic number: tCachedInvoke.Invoke(tPoco2' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheablePocoAddAssign,The following statement contains a magic number: Assert.AreEqual(7L' tPoco2.Event);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestPocoSubtractAssign,The following statement contains a magic number: var tPoco2 = new PropPoco() {Prop2 = 3};
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestPocoSubtractAssign,The following statement contains a magic number: Dynamic.InvokeSubtractAssignMember(tPoco2' "Prop2"' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheablePocoSubtractAssign,The following statement contains a magic number: var tPoco2 = new PropPoco() { Event = 3 };
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheablePocoSubtractAssign,The following statement contains a magic number: tCachedInvoke.Invoke(tPoco2' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicAddAssign,The following statement contains a magic number: var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args)));
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicAddAssign,The following statement contains a magic number: Dynamic.InvokeAddAssignMember(tDynamic' "Prop2"' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicAddAssign,The following statement contains a magic number: Assert.AreEqual(7L' tDynamic.Prop2);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicAddAssign,The following statement contains a magic number: var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args)));
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicAddAssign,The following statement contains a magic number: var tDynamic2 = Build.NewObject(Event: 3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicAddAssign,The following statement contains a magic number: tCachedInvoke.Invoke((object)tDynamic2' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicAddAssign,The following statement contains a magic number: Assert.AreEqual(7' tDynamic2.Event);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicSubtractAssign,The following statement contains a magic number: var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args)));
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicSubtractAssign,The following statement contains a magic number: Dynamic.InvokeSubtractAssignMember(tDynamic' "Prop2"' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicSubtractAssign,The following statement contains a magic number: var tDynamic = Build.NewObject(Prop2: 3' Event: null' OnEvent: new ThisAction<object' EventArgs>((@this' obj' args) => @this.Event(obj' args)));
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicSubtractAssign,The following statement contains a magic number: var tDynamic2 = Build.NewObject(Event: 3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestCacheableDynamicSubtractAssign,The following statement contains a magic number: tCachedInvoke.Invoke((object)tDynamic2' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestDynamicMemberNamesImpromput,The following statement contains a magic number: Dictionary tDict = Build.NewObject(Two: 2);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestInvokeAdd,The following statement contains a magic number: Assert.AreEqual(Dynamic.InvokeBinaryOperator(1' ExpressionType.Add' 2)' 3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestInvokeAdd,The following statement contains a magic number: Assert.AreEqual(Dynamic.InvokeBinaryOperator(1' ExpressionType.Add' 2)' 3);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestInvokeAddDynamic,The following statement contains a magic number: Dynamic.InvokeBinaryOperator(tMock' ExpressionType.Add' 4);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestInvokeSubtract,The following statement contains a magic number: Assert.AreEqual(Dynamic.InvokeBinaryOperator(1' ExpressionType.Subtract' 2)' -1);
Magic Number,UnitTestImpromptuInterface,SingleMethodInvoke,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SingleMethodInvoke.cs,TestInvokeSubtractDynamic,The following statement contains a magic number: Dynamic.InvokeBinaryOperator(tMock' tType' 4);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestSetTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => Dynamic.InvokeSet(tPoco' "Prop1"' tSetValue)' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestSetTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() => tPropertyInfo.SetValue(tPoco' tSetValue' new object[] { })' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableSetTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => tCacheable.Invoke(tPoco' tSetValue)' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableSetTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() => tPropertyInfo.SetValue(tPoco' tSetValue' new object[] { })' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestSetNullTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => Dynamic.InvokeSet(tPoco' "Prop1"' tSetValue)' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestSetNullTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() => tPropertyInfo.SetValue(tPoco' tSetValue' new object[] { })' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableSetNullTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => tCachedInvoke.Invoke(tPoco' tSetValue)' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableSetNullTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() => tPropertyInfo.SetValue(tPoco' tSetValue' new object[] { })' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestPropPocoGetValueTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeGet(tAnon' "Test"); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestPropPocoGetValueTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>                                          {                                              var tOut = tPropertyInfo.GetValue(tAnon' null);                                          }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableGetValueTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = tInvoke.Invoke(tAnon); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableGetValueTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tPropertyInfo.GetValue(tAnon' null);              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorValueTypeTimed,The following statement contains a magic number: var tIter = 1000000;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorValueTypeTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeConstructor(typeof(DateTime)' 2010' 1' 20); }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorValueTypeTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeConstructor(typeof(DateTime)' 2010' 1' 20); }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorValueTypeTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = Activator.CreateInstance(typeof(DateTime)' 2010' 1' 20);              }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestConstructorValueTypeTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = Activator.CreateInstance(typeof(DateTime)' 2010' 1' 20);              }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The following statement contains a magic number: var tIter = 1000000;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The following statement contains a magic number: var tCachedInvoke = new CacheableInvocation(InvocationKind.Constructor' argCount: 3);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = tCachedInvoke.Invoke(typeof(DateTime)' 2010' 1' 20); }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = tCachedInvoke.Invoke(typeof(DateTime)' 2010' 1' 20); }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = Activator.CreateInstance(typeof(DateTime)' 2010' 1' 20);              }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCachedConstructorValueTypeTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = Activator.CreateInstance(typeof(DateTime)' 2010' 1' 20);              }' tIter);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValueTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeMember(tValue' "ToString"); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValueTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>                                          {                                              var tOut = tMethodInfo.Invoke(tValue' new object[] { });                                          }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValueTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = tCachedInvoke.Invoke(tValue); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValueTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tValue' new object[] { });              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestGetStaticTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeGet(tTarget' "Today"); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestGetStaticTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tStaticType' new object[] { });              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableGetStaticTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() =>                                         {                                             var tOut = tCachedInvoke.Invoke(tStaticType);                                         }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableGetStaticTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tStaticType' new object[] { });              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodStaticMethodValueTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeMember(tTarget' "Parse"' tDate); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodStaticMethodValueTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tStaticType'new object[]{tDate});              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodStaticMethodValueTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = tCachedInvoke.Invoke(tStaticType' tDate); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodStaticMethodValueTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tStaticType' new object[] { tDate });              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValuePassNullTimed,The following statement contains a magic number: var tInteration = 1000000;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValuePassNullTimed,The following statement contains a magic number: var tInteration = 1000000;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValuePassNullDoubleCallTimed,The following statement contains a magic number: var tInteration = 500000;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValuePassNullDoubleCallTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => {                   var tOut = Dynamic.InvokeMember(tValue' "Func"' null);                   var tOut2 = Dynamic.InvokeMember(tValue' "Func"' 2); }' tInteration);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValuePassNullDoubleCallTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tValue' new object[] { null });                  var tOut2 = tMethodInfo2.Invoke(tValue' new object[] { 2 });              }' tInteration);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValuePassNullDoubleCallTimed,The following statement contains a magic number: var tInteration = 500000;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValuePassNullDoubleCallTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() =>              {                  var tOut = tCachedInvoke.Invoke(tValue' null);                  var tOut2 = tCachedInvoke.Invoke(tValue' 2);              }' tInteration);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValuePassNullDoubleCallTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tValue' new object[] { null });                  var tOut2 = tMethodInfo2.Invoke(tValue' new object[] { 2 });              }' tInteration);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeMember(tValue' "IndexOf"' "45"' 0' 14' StringComparison.InvariantCulture); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => { var tOut = Dynamic.InvokeMember(tValue' "IndexOf"' "45"' 0' 14' StringComparison.InvariantCulture); }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>                                          {                                              var tOut = tMethodInfo.Invoke(tValue' new object[] { "45"' 0' 14' StringComparison.InvariantCulture });                                          }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>                                          {                                              var tOut = tMethodInfo.Invoke(tValue' new object[] { "45"' 0' 14' StringComparison.InvariantCulture });                                          }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tCachedInvoke = new CacheableInvocation(InvocationKind.InvokeMember' "IndexOf"' 4);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() =>                                         {                                             var tOut = tCachedInvoke.Invoke(tValue'"45"' 0' 14' StringComparison.InvariantCulture);                                         }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() =>                                         {                                             var tOut = tCachedInvoke.Invoke(tValue'"45"' 0' 14' StringComparison.InvariantCulture);                                         }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tValue' new object[] { "45"' 0' 14' StringComparison.InvariantCulture });              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestCacheableMethodPocoGetValue4argsTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() =>              {                  var tOut = tMethodInfo.Invoke(tValue' new object[] { "45"' 0' 14' StringComparison.InvariantCulture });              }' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoVoidTimed,The following statement contains a magic number: var tWatch = TimeIt.Go(() => Dynamic.InvokeMemberAction(tValue' "Clear")' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestMethodPocoVoidTimed,The following statement contains a magic number: var tWatch2 = TimeIt.Go(() => tMethodInfo.Invoke(tValue' new object[] { })' 500000);
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvoke,The following statement contains a magic number: Func<int' bool> tFunc = it => it > 10;
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvoke,The following statement contains a magic number: var tStopWatch1 = TimeIt.Go(() => tFunc.FastDynamicInvoke(5));
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvoke,The following statement contains a magic number: var tStopWatch2 = TimeIt.Go(() => tFunc.DynamicInvoke(5));
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvokeAction,The following statement contains a magic number: var tStopWatch1 = TimeIt.Go(() => tFunc.FastDynamicInvoke(5));
Magic Number,UnitTestImpromptuInterface,SpeedTest,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\SpeedTest.cs,TestFastDynamicInvokeAction,The following statement contains a magic number: var tStopWatch2 = TimeIt.Go(() => tFunc.DynamicInvoke(5));
Magic Number,UnitTestImpromptuInterface,MethRefPoco,D:\research\architectureSmells\repos\ekonbenefits_impromptu-interface\Tests\UnitTestImpromptuInterface\Support\SupportDefinitions.cs,Func,The following statement contains a magic number: result = result + 2;
