Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,SetupCopyOEMInf,The method has 8 parameters. Parameters: SourceInfFileName' OEMSourceMediaLocation' OEMSourceMediaType' CopyStyle' DestinationInfFileName' DestinationInfFileNameSize' RequiredSize' DestinationInfFileNameComponent
Long Identifier,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,SetupCopyOEMInf,The length of the parameter DestinationInfFileNameComponent is 31.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,GenerateCACertificate,The length of the statement  "            certificateGenerator.AddExtension(X509Extensions.AuthorityKeyIdentifier' true' new AuthorityKeyIdentifier(SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(subjectKeyPair.Public)' new GeneralNames(new GeneralName(issuerDN))' serialNumber)); " is 245.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,installDriver,The length of the statement  "            //String manifest = "{\r\n\"name\": \"com.clockworkmod.adb\"'\r\n\"description\": \"Vysor\"'\r\n\"path\": \"EXE_PATH\"'\r\n\"type\": \"stdio\"'\r\n\"allowed_origins\": [\r\n\"chrome-extension://kplbohaahpapodpbeolplkdkaddmlokj/\"'\r\n\"chrome-extension://ejlfdbijieaifbpalholclojlhhlabdc/\"'\r\n\"chrome-extension://pifcolcddlhpoafkkcelddpijgekcdgl/\"\r\n]\r\n}"; " is 363.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,installDriver,The length of the statement  "            //manifest = manifest.Replace("EXE_PATH"' Path.Combine(GetExecutablePath()' "AdbNativeMessaging.exe").Replace("\\"' "\\\\")); " is 125.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,installDriver,The length of the statement  "            psi = new ProcessStartInfo(Path.Combine(GetExecutablePath()' "makecert.exe")' "-r -pe -ss PrivateCertStore -n CN=UniversalADB \"" + cerPath + "\""); " is 148.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,installDriver,The length of the statement  "            psi = new ProcessStartInfo(Path.Combine(GetExecutablePath()' "signtool.exe")' "sign /v /s PrivateCertStore /n UniversalADB /t http://timestamp.verisign.com/scripts/timstamp.dll usb_driver\\androidwinusb86.cat"); " is 211.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,installDriver,The length of the statement  "            psi = new ProcessStartInfo(Path.Combine(GetExecutablePath()' "signtool.exe")' "sign /v /s PrivateCertStore /n UniversalADB /t http://timestamp.verisign.com/scripts/timstamp.dll usb_driver\\androidwinusba64.cat"); " is 212.
Long Statement,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,installDriver,The length of the statement  "            SetupCopyOEMInf(Path.Combine(GetExecutablePath()' "usb_driver\\android_winusb.inf")' Path.Combine(GetExecutablePath()' "usb_driver")' (uint)OemSourcEMediaType.SPOST_PATH' 0' IntPtr.Zero' 0' IntPtr.Zero' IntPtr.Zero); " is 216.
Empty Catch Block,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,clearCerts,The method has an empty catch block.
Magic Number,UniveralAdbDriverInstaller,Program,D:\research\architectureSmells\repos\koush_UniversalAdbDriver\UniversalAdbDriverInstaller\Program.cs,GenerateCACertificate,The following statement contains a magic number: var notAfter = notBefore.AddYears(2);
