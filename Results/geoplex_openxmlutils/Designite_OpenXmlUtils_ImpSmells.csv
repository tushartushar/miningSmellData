Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The method has 149 lines of code.
Complex Method,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,AppendTotalsRow,Cyclomatic complexity of the method is 10
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateSheetData,The method has 8 parameters.
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateTable,The method has 8 parameters.
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateHyperlinkCell,The method has 5 parameters.
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateDecimalNumberCell,The method has 5 parameters.
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,AppendTotalsRow,The method has 8 parameters.
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateRowTotalFomulaCell,The method has 6 parameters.
Long Parameter List,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateFormulaCell,The method has 7 parameters.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateSheet,The length of the statement  "	var sheetData = CreateSheetData (def.Objects' def.Fields' headerCols' def.IncludeTotalsRow' def.Title' def.SubTitle' out firstTableRow); " is 136.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateSheet,The length of the statement  "		Reference = String.Format ("{0}{1}:{2}{3}"' headerCols.First ()' firstTableRow - 1' headerCols.Last ()' numRows + titleRowCount + 1) " is 132.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateHyperlinkCell,The length of the statement  "	return new FormulaCell (headers [col].ToString ()' String.Format (@"HYPERLINK(""{0}""' ""{1}"")"' columnObj' displayColumnObj)' rowIndex) { " is 139.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,AppendTotalsRow,The length of the statement  "			total.AppendChild (CreateRowTotalFomulaCell (rowIndex' firstTableRow' headers' col' (UInt32)CustomStylesheet.CustomCellFormats.TotalsNumber' true)); " is 148.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,AppendTotalsRow,The length of the statement  "			total.AppendChild (CreateRowTotalFomulaCell (rowIndex' firstTableRow' headers' col' (UInt32)CustomStylesheet.CustomCellFormats.TotalsNumber2DecimalPlace)); " is 155.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,AppendTotalsRow,The length of the statement  "			total.AppendChild (CreateRowTotalFomulaCell (rowIndex' firstTableRow' headers' col' (UInt32)CustomStylesheet.CustomCellFormats.TotalsDuration)); " is 144.
Long Statement,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,AppendTotalsRow,The length of the statement  "				total.AppendChild (CreateRowTotalFomulaCell (rowIndex' firstTableRow' headers' col' (UInt32)CustomStylesheet.CustomCellFormats.TotalsNumber)); " is 142.
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.NumberFormatId = 14;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.NumberFormatId = 4;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FillId = 2;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FillId = 3;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.BorderId = 2;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.NumberFormatId = 4;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FillId = 3;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.BorderId = 2;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.NumberFormatId = 49;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FillId = 3;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.BorderId = 2;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FontId = 2;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FontId = 3;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FillId = 3;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.BorderId = 2;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateCellFormats,The following statement contains a magic number: cf.FontId = 4;  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateFonts,The following statement contains a magic number: ftsz = new FontSize {  	Val = DoubleValue.FromDouble (12)  };  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateFonts,The following statement contains a magic number: ftsz = new FontSize {  	Val = DoubleValue.FromDouble (18)  };  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateFonts,The following statement contains a magic number: ftsz = new FontSize {  	Val = DoubleValue.FromDouble (14)  };  
Magic Number,OpenXmlUtils,CustomStylesheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\CustomStylesheet.cs,CreateFonts,The following statement contains a magic number: ftsz = new FontSize {  	Val = DoubleValue.FromDouble (11)  };  
Magic Number,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateCell,The following statement contains a magic number: if (columnObj is string) {  	cell = new TextCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  }  else if (columnObj is bool) {  	var value = (bool)columnObj ? "Yes" : "No";  	cell = new TextCell (headers [col].ToString ()' value' rowIndex);  }  else if (columnObj is DateTime) {  	cell = new DateCell (headers [col].ToString ()' (DateTime)columnObj' rowIndex);  }  else if (columnObj is TimeSpan) {  	var ts = (TimeSpan)columnObj;  	// excel stores time as "fraction of hours in a day"  	cell = new NumberCell (headers [col].ToString ()' (ts.TotalHours / 24).ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.Duration  	};  }  else if (columnObj is decimal || columnObj is double) {  	cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.DefaultNumber2DecimalPlace  	};  }  else {  	long value;  	if (long.TryParse (columnObj.ToString ()' out value)) {  		cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  	else {  		cell = new TextCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  }  
Magic Number,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateCell,The following statement contains a magic number: if (columnObj is bool) {  	var value = (bool)columnObj ? "Yes" : "No";  	cell = new TextCell (headers [col].ToString ()' value' rowIndex);  }  else if (columnObj is DateTime) {  	cell = new DateCell (headers [col].ToString ()' (DateTime)columnObj' rowIndex);  }  else if (columnObj is TimeSpan) {  	var ts = (TimeSpan)columnObj;  	// excel stores time as "fraction of hours in a day"  	cell = new NumberCell (headers [col].ToString ()' (ts.TotalHours / 24).ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.Duration  	};  }  else if (columnObj is decimal || columnObj is double) {  	cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.DefaultNumber2DecimalPlace  	};  }  else {  	long value;  	if (long.TryParse (columnObj.ToString ()' out value)) {  		cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  	else {  		cell = new TextCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  }  
Magic Number,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateCell,The following statement contains a magic number: if (columnObj is DateTime) {  	cell = new DateCell (headers [col].ToString ()' (DateTime)columnObj' rowIndex);  }  else if (columnObj is TimeSpan) {  	var ts = (TimeSpan)columnObj;  	// excel stores time as "fraction of hours in a day"  	cell = new NumberCell (headers [col].ToString ()' (ts.TotalHours / 24).ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.Duration  	};  }  else if (columnObj is decimal || columnObj is double) {  	cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.DefaultNumber2DecimalPlace  	};  }  else {  	long value;  	if (long.TryParse (columnObj.ToString ()' out value)) {  		cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  	else {  		cell = new TextCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  }  
Magic Number,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateCell,The following statement contains a magic number: if (columnObj is TimeSpan) {  	var ts = (TimeSpan)columnObj;  	// excel stores time as "fraction of hours in a day"  	cell = new NumberCell (headers [col].ToString ()' (ts.TotalHours / 24).ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.Duration  	};  }  else if (columnObj is decimal || columnObj is double) {  	cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex) {  		StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.DefaultNumber2DecimalPlace  	};  }  else {  	long value;  	if (long.TryParse (columnObj.ToString ()' out value)) {  		cell = new NumberCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  	else {  		cell = new TextCell (headers [col].ToString ()' columnObj.ToString ()' rowIndex);  	}  }  
Magic Number,OpenXmlUtils,Spreadsheet,C:\repos\geoplex_openxmlutils\OpenXmlUtils\Spreadsheet.cs,CreateCell,The following statement contains a magic number: cell = new NumberCell (headers [col].ToString ()' (ts.TotalHours / 24).ToString ()' rowIndex) {  	StyleIndex = (UInt32)CustomStylesheet.CustomCellFormats.Duration  };  
