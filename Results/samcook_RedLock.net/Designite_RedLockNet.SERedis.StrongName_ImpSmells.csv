Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,RedLock,The method has 7 parameters. Parameters: logger' redisCaches' resource' expiryTime' waitTime' retryTime' cancellationToken
Long Parameter List,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,Create,The method has 7 parameters. Parameters: logger' redisCaches' resource' expiryTime' waitTime' retryTime' cancellationToken
Long Parameter List,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,CreateAsync,The method has 7 parameters. Parameters: logger' redisCaches' resource' expiryTime' waitTime' retryTime' cancellationToken
Long Parameter List,RedLockNet.SERedis,RedLockFactory,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLockFactory.cs,CreateLock,The method has 5 parameters. Parameters: resource' expiryTime' waitTime' retryTime' cancellationToken
Long Parameter List,RedLockNet.SERedis,RedLockFactory,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLockFactory.cs,CreateLockAsync,The method has 5 parameters. Parameters: resource' expiryTime' waitTime' retryTime' cancellationToken
Long Statement,RedLockNet.SERedis.Configuration,InternallyManagedRedLockConnectionProvider,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\Configuration\InternallyManagedRedLockConnectionProvider.cs,CreateRedisConnections,The length of the statement  "					logger.LogWarning($"ConnectionFailed: {args.EndPoint.GetFriendlyName()} ConnectionType: {args.ConnectionType} FailureType: {args.FailureType}"); " is 144.
Long Statement,RedLockNet.SERedis.Configuration,InternallyManagedRedLockConnectionProvider,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\Configuration\InternallyManagedRedLockConnectionProvider.cs,CreateRedisConnections,The length of the statement  "					logger.LogWarning($"ConnectionRestored: {args.EndPoint.GetFriendlyName()} ConnectionType: {args.ConnectionType} FailureType: {args.FailureType}"); " is 146.
Long Statement,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,Start,The length of the statement  "			if (waitTime.HasValue && retryTime.HasValue && waitTime.Value.TotalMilliseconds > 0 && retryTime.Value.TotalMilliseconds > 0) " is 125.
Long Statement,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,StartAsync,The length of the statement  "			if (waitTime.HasValue && retryTime.HasValue && waitTime.Value.TotalMilliseconds > 0 && retryTime.Value.TotalMilliseconds > 0) " is 125.
Long Statement,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,Acquire,The length of the statement  "				logger.LogDebug($"Acquired locks for {Resource} ({LockId}) in {locksAcquired}/{redisCaches.Count} instances' quorum: {quorum}' validityTicks: {validityTicks}"); " is 160.
Long Statement,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,AcquireAsync,The length of the statement  "				logger.LogDebug($"Acquired locks for {Resource} ({LockId}) in {locksAcquired}/{redisCaches.Count} instances' quorum: {quorum}' validityTicks: {validityTicks}"); " is 160.
Long Statement,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,ExtendInstance,The length of the statement  "					.ScriptEvaluate(ExtendIfMatchingValueScript' new RedisKey[] {redisKey}' new RedisValue[] {LockId' (long) expiryTime.TotalMilliseconds}' CommandFlags.DemandMaster); " is 163.
Complex Conditional,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,Start,The conditional expression  "waitTime.HasValue && retryTime.HasValue && waitTime.Value.TotalMilliseconds > 0 && retryTime.Value.TotalMilliseconds > 0"  is complex.
Complex Conditional,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,StartAsync,The conditional expression  "waitTime.HasValue && retryTime.HasValue && waitTime.Value.TotalMilliseconds > 0 && retryTime.Value.TotalMilliseconds > 0"  is complex.
Virtual Method Call from Constructor,RedLockNet.SERedis,RedLockFactory,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLockFactory.cs,RedLockFactory,The constructor "RedLockFactory" calls a virtual method "CreateRedisConnections".
Magic Number,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,RedLock,The following statement contains a magic number: quorum = redisCaches.Count / 2 + 1;
Magic Number,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,RedLock,The following statement contains a magic number: quorumRetryCount = 3;
Magic Number,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,RedLock,The following statement contains a magic number: quorumRetryDelayMs = 400;
Magic Number,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,RedLock,The following statement contains a magic number: clockDriftFactor = 0.01;
Magic Number,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,StartAutoExtendTimer,The following statement contains a magic number: var interval = expiryTime.TotalMilliseconds / 2;
Magic Number,RedLockNet.SERedis,RedLock,C:\repos\samcook_RedLock.net\RedLockNet.SERedis.Shared\RedLock.cs,GetRemainingValidityTicks,The following statement contains a magic number: var driftTicks = (long) (expiryTime.Ticks * clockDriftFactor) + TimeSpan.FromMilliseconds(2).Ticks;
