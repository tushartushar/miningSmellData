Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The length of the statement  "	Console.WriteLine ("*** Try an R function 'pointer' with a vectorized function call. Faster' if you can do it this way***"); " is 124.
Long Statement,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimR,The length of the statement  "	Console.WriteLine ("*** For a similar use case see: https://r2clr.codeplex.com/wikipage?title=Spatial-temporal%20model&referringTitle=Documentation"); " is 150.
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,RosenbrockFunc,The following statement contains a magic number: return a * a + 100 * b * b;  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	x = -1 + rand.NextDouble () * (3 - (-1));  	y = -1 + rand.NextDouble () * (3 - (-1));  	r = engine.Evaluate (string.Format ("rosen({0}' {1})"' x' y)).AsNumeric ().ToArray () [0];  	if (r < rb) {  		rb = r;  		xb = x;  		yb = y;  	}  }  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	x = -1 + rand.NextDouble () * (3 - (-1));  	y = -1 + rand.NextDouble () * (3 - (-1));  	r = engine.Evaluate (string.Format ("rosen({0}' {1})"' x' y)).AsNumeric ().ToArray () [0];  	if (r < rb) {  		rb = r;  		xb = x;  		yb = y;  	}  }  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: x = -1 + rand.NextDouble () * (3 - (-1));  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: y = -1 + rand.NextDouble () * (3 - (-1));  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	xa [i] = -1 + rand.NextDouble () * (3 - (-1));  	ya [i] = -1 + rand.NextDouble () * (3 - (-1));  }  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	xa [i] = -1 + rand.NextDouble () * (3 - (-1));  	ya [i] = -1 + rand.NextDouble () * (3 - (-1));  }  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: xa [i] = -1 + rand.NextDouble () * (3 - (-1));  
Magic Number,Optimization,MainClass,D:\newReposJune17\jmp75_rdotnet-onboarding\Optimization\Program.cs,TestOptimCsharp,The following statement contains a magic number: ya [i] = -1 + rand.NextDouble () * (3 - (-1));  
