Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,WebApplicationRdn.Models,CharacterDevice,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\CharacterDevice.cs,ShowFiles,The method has 5 parameters. Parameters: files' headers' title' delete' pager
Long Parameter List,WebApplicationRdn.Models,SvgGraphicsDevice,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsDevice.cs,DrawRaster,The method has 6 parameters. Parameters: raster' destination' rotation' interpolated' context' description
Long Parameter List,WebApplicationRdn.Models,SvgGraphicsDevice,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsDevice.cs,DrawText,The method has 6 parameters. Parameters: s' location' rotation' adjustment' context' description
Long Statement,WebApplicationRdn.Controllers,CodeController,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Controllers\CodeController.cs,Execute,The length of the statement  "            var statements = code.Block.Split(new[] { ';'' '\r'' '\n' }' StringSplitOptions.RemoveEmptyEntries); //TODO: Use tokenizer. " is 123.
Long Statement,WebApplicationRdn.Models,SvgGraphicsDevice,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsDevice.cs,Clip,The length of the statement  "            if (Math.Abs(rectangle.Width - _mapper.Width) < epsilon && Math.Abs(rectangle.Height - _mapper.Height) < epsilon) return; " is 121.
Magic Number,WebApplicationRdn.Models,CharacterDevice,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\CharacterDevice.cs,Suicide,The following statement contains a magic number: CleanUp(StartupSaveAction.Suicide' 2' false);
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Magic Number,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following statement contains a magic number: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
Missing Default,WebApplicationRdn.Models,SvgContextMapper,C:\repos\jmp75_rdotnet-onboarding\WebApplicationRdn\Models\SvgGraphicsContext.cs,MapLineType,The following switch statement is missing a default case: switch (lineType)              {                  case LineType.Dashed:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 5)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.DotDash:                      results.AddRange(new[]                      {                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 5 )'                          new SvgUnit( SvgUnitType.User' 1 )'                          new SvgUnit( SvgUnitType.User' 5 )                      });                      break;                  case LineType.Dotted:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.LongDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 10)' new SvgUnit(SvgUnitType.User' 5) });                      break;                  case LineType.TwoDash:                      results.AddRange(new[] { new SvgUnit(SvgUnitType.User' 1)' new SvgUnit(SvgUnitType.User' 5) });                      break;              }
