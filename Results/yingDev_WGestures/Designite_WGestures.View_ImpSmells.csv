Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,Dispose,Cyclomatic complexity of the method is 9
Long Parameter List,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,DrawRoundedRectangle,The method has 5 parameters. Parameters: gfx' Bounds' CornerRadius' DrawPen' FillColor
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The length of the statement  "            _middleBtnPen = new Pen(Color.FromArgb(255' 20' 150' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round }; " is 123.
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The length of the statement  "            _borderPen = new Pen(Color.FromArgb(255' 255' 255' 255)' widthBase + 4) { EndCap = LineCap.Round' StartCap = LineCap.Round }; " is 125.
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The length of the statement  "            _alternativePen = new Pen(Color.FromArgb(255' 255' 120' 20)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round }; " is 125.
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The length of the statement  "            //_shadowPen = new Pen(Color.FromArgb(25' Color.Black)' widthBase * 3) { EndCap = LineCap.Round' StartCap = LineCap.Round }; " is 124.
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The length of the statement  "            _labelPath.AddString(_labelText' _labelFont.FontFamily' 0' _labelFont.Size * _dpiFactor' msgPos' StringFormat.GenericDefault); " is 126.
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The length of the statement  "            _labelPath.AddString(_labelText' _labelFont.FontFamily' 0' _labelFont.Size * _dpiFactor' msgPos' StringFormat.GenericDefault); " is 126.
Long Statement,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,DrawRoundedRectangle,The length of the statement  "                gfxPath.AddArc(Bounds.X + Bounds.Width - CornerRadius' Bounds.Y + Bounds.Height - CornerRadius' CornerRadius' CornerRadius' 0' 90); " is 131.
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,SystemDisplaySettingsChanged,The following statement contains a magic number: _dpiFactor = Native.GetScreenDpi() / 96.0f;
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _pathMaxPointCount = (int)(512 * _dpiFactor);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: var widthBase = 2 * _dpiFactor;
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _mainPen = new Pen(Color.FromArgb(255' 50' 200' 100)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _mainPen = new Pen(Color.FromArgb(255' 50' 200' 100)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _mainPen = new Pen(Color.FromArgb(255' 50' 200' 100)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _mainPen = new Pen(Color.FromArgb(255' 50' 200' 100)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _middleBtnPen = new Pen(Color.FromArgb(255' 20' 150' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _middleBtnPen = new Pen(Color.FromArgb(255' 20' 150' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _middleBtnPen = new Pen(Color.FromArgb(255' 20' 150' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _middleBtnPen = new Pen(Color.FromArgb(255' 20' 150' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _xBtnPen = new Pen(Color.FromArgb(255' 20' 100' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _xBtnPen = new Pen(Color.FromArgb(255' 20' 100' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _xBtnPen = new Pen(Color.FromArgb(255' 20' 100' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _xBtnPen = new Pen(Color.FromArgb(255' 20' 100' 200)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _borderPen = new Pen(Color.FromArgb(255' 255' 255' 255)' widthBase + 4) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _borderPen = new Pen(Color.FromArgb(255' 255' 255' 255)' widthBase + 4) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _borderPen = new Pen(Color.FromArgb(255' 255' 255' 255)' widthBase + 4) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _borderPen = new Pen(Color.FromArgb(255' 255' 255' 255)' widthBase + 4) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _borderPen = new Pen(Color.FromArgb(255' 255' 255' 255)' widthBase + 4) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _alternativePen = new Pen(Color.FromArgb(255' 255' 120' 20)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _alternativePen = new Pen(Color.FromArgb(255' 255' 120' 20)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _alternativePen = new Pen(Color.FromArgb(255' 255' 120' 20)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _alternativePen = new Pen(Color.FromArgb(255' 255' 120' 20)' widthBase) { EndCap = LineCap.Round' StartCap = LineCap.Round };
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,InitDefaultProperties,The following statement contains a magic number: _dirtyMarkerPen.Width *= 1.5f;
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,HandlePathGrow,The following statement contains a magic number: ShowLabel(Color.White' "您是有多无聊啊 :)"' Color.FromArgb(150' 255' 0' 0));
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,HandlePathGrow,The following statement contains a magic number: ShowLabel(Color.White' "您是有多无聊啊 :)"' Color.FromArgb(150' 255' 0' 0));
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,HandleIntentRecognized,The following statement contains a magic number: ShowLabel(Color.White' newLabelText' Color.FromArgb(120' 0' 0' 0));
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,HandleCommandReportStatus,The following statement contains a magic number: ShowLabel(Color.White' newLabelText' Color.FromArgb(120' 0' 0' 0));
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,BeginView,The following statement contains a magic number: _canvasOpacity = 255;
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,Draw,The following statement contains a magic number: DrawRoundedRectangle(g' RectangleF.Inflate(_labelRect'                          -2.6f * _dpiFactor' -2.6f * _dpiFactor)'                          0' pen' _labelBgColor);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,Draw,The following statement contains a magic number: DrawRoundedRectangle(g' RectangleF.Inflate(_labelRect'                          -2.6f * _dpiFactor' -2.6f * _dpiFactor)'                          0' pen' _labelBgColor);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The following statement contains a magic number: var msgPos = new PointF(_screenBounds.Width / 2' (_screenBounds.Height / 2) + _screenBounds.Width / 8);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The following statement contains a magic number: var msgPos = new PointF(_screenBounds.Width / 2' (_screenBounds.Height / 2) + _screenBounds.Width / 8);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The following statement contains a magic number: var msgPos = new PointF(_screenBounds.Width / 2' (_screenBounds.Height / 2) + _screenBounds.Width / 8);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The following statement contains a magic number: msgPos.X -= _labelRect.Width / 2;
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The following statement contains a magic number: _labelRect = RectangleF.Inflate(_labelPath.GetBounds()' 25 * _dpiFactor' 15 * _dpiFactor);
Magic Number,WGestures.View.Impl.Windows,CanvasWindowGestureView,D:\research\architectureSmells\repos\yingDev_WGestures\WGestures.View\Impl\Windows\CanvasWindowGestureView.cs,ShowLabel,The following statement contains a magic number: _labelRect = RectangleF.Inflate(_labelPath.GetBounds()' 25 * _dpiFactor' 15 * _dpiFactor);
