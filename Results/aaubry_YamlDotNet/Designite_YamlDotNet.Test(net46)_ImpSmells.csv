Implementation smell,Namespace,Class,File,Method,Description
Complex Method,YamlDotNet.Test.Spec,SpecTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Spec\SpecTests.cs,ConvertToLibYamlStyleAnnotatedEventStream,Cyclomatic complexity of the method is 23
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithValidDateTimeFormat_WithDefaultParameters_ReadYaml_ShouldReturn_Result,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithValidDateTimeFormat_WithDefaultParameterAndUnspecified_ReadYaml_ShouldReturn_Result,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithValidDateTimeFormat_WithDefaultParameterAndLocal_ReadYaml_ShouldReturn_Result,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithValidDateTimeFormat_ReadYaml_ShouldReturn_Result,The method has 5 parameters. Parameters: year' month' day' format1' format2
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithSpecificCultureAndValidDateTimeFormat_ReadYaml_ShouldReturn_Result,The method has 5 parameters. Parameters: year' month' day' format1' format2
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithValidDateTimeFormatAndUnspecified_ReadYaml_ShouldReturn_Result,The method has 5 parameters. Parameters: year' month' day' format1' format2
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithValidDateTimeFormatAndLocal_ReadYaml_ShouldReturn_Result,The method has 5 parameters. Parameters: year' month' day' format1' format2
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Values_WriteYaml_ShouldReturn_Result,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' kind
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Values_WithLocale_WriteYaml_ShouldReturn_Result,The method has 8 parameters. Parameters: year' month' day' hour' minute' second' kind' locale
Long Parameter List,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Values_WithFormats_WriteYaml_ShouldReturn_Result_WithFirstFormat,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' kind
Long Parameter List,YamlDotNet.Test.Spec,SpecTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Spec\SpecTests.cs,ConformsWithYamlSpec,The method has 5 parameters. Parameters: name' description' inputFile' expectedEventFile' error
Long Statement,YamlDotNet.Test.Core,EventsHelper,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\EventsHelper.cs,AssertEvent,The length of the statement  "                    values.MoveNext().Should().BeFalse("Property {0} in parse event {1} had too many elements"' property.Name' eventNumber); " is 120.
Long Statement,YamlDotNet.Test.Helpers,PortabilityTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Helpers\PortabilityTests.cs,GetPublicStaticMethodReturnsCorrectMethodInfo,The length of the statement  "            var actual = (DateTimeOffset)method.Invoke(null' new object[] { expected.ToString("o")' CultureInfo.InvariantCulture }); " is 120.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithTimeFormat_ReadYaml_ShouldReturn_Result,The length of the statement  "            var expected = DateTime.ParseExact(value' format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal).ToUniversalTime(); " is 130.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithTimeFormat_ReadYaml_ShouldReturn_Result,The length of the statement  "            var converter = new DateTimeConverter(formats: new[] { "d"' "D"' "f"' "F"' "g"' "G"' "M"' "O"' "R"' "s"' "t"' "T"' "u"' "U"' "Y" }); " is 132.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithLocaleAndTimeFormat_ReadYaml_ShouldReturn_Result,The length of the statement  "                var message = string.Format("Failed to parse the test argument to DateTime. The expected date format should look like this: '{0}'"' DateTime.Now.ToString(format' culture)); " is 172.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithLocaleAndTimeFormat_ReadYaml_ShouldReturn_Result,The length of the statement  "            var converter = new DateTimeConverter(provider: culture' formats: new[] { "d"' "D"' "f"' "F"' "g"' "G"' "M"' "O"' "R"' "s"' "t"' "T"' "u"' "U"' "Y" }); " is 151.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithTimeFormatAndLocal1_ReadYaml_ShouldReturn_Result,The length of the statement  "            var expected = DateTime.ParseExact(value' format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeLocal).ToLocalTime(); " is 122.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithTimeFormatAndLocal1_ReadYaml_ShouldReturn_Result,The length of the statement  "            var converter = new DateTimeConverter(DateTimeKind.Local' formats: new[] { "d"' "D"' "f"' "F"' "g"' "G"' "M"' "O"' "R"' "s"' "t"' "T"' "u"' "Y" }); " is 147.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithTimeFormatAndLocal2_ReadYaml_ShouldReturn_Result,The length of the statement  "            var expected = DateTime.ParseExact(value' format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeLocal).ToLocalTime(); " is 122.
Long Statement,YamlDotNet.Test.Serialization,DateTimeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\DateTimeConverterTests.cs,Given_Yaml_WithTimeFormatAndLocal2_ReadYaml_ShouldReturn_Result,The length of the statement  "            var converter = new DateTimeConverter(DateTimeKind.Local' formats: new[] { "d"' "D"' "f"' "g"' "G"' "M"' "O"' "R"' "s"' "t"' "T"' "u"' "U"' "Y" }); " is 147.
Long Statement,YamlDotNet.Test.Serialization,EmitDefaultValuesTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\EmitDefaultValuesTests.cs,YamlMember_overrides_default_value_handling,The length of the statement  "                .WithAttributeOverride<Model>(m => m.ANullString' new YamlMemberAttribute { DefaultValuesHandling = DefaultValuesHandling.Preserve }) " is 133.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializeCircularReference,The length of the statement  "            Action action = () => SerializerBuilder.EnsureRoundtrip().Build().Serialize(new StringWriter()' obj' typeof(CircularReference)); " is 128.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripInterfaceProperties,The length of the statement  "                .Subject.As<IDerived>().ShouldBeEquivalentTo(new { BaseProperty = "foo"' DerivedProperty = "bar" }' o => o.ExcludingMissingMembers()); " is 134.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializeGuid,The length of the statement  "            Regex.IsMatch(serialized' "^" + guid.ToString("D")).Should().BeTrue("serialized content should contain the guid' but instead contained: " + serialized); " is 152.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationOfOrderedProperties,The length of the statement  "                .Be("Order1: Order1 value\r\nOrder2: Order2 value\r\n".NormalizeNewLines()' "the properties should be in the right order"); " is 123.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationRespectsScalarStyle,The length of the statement  "                .Be("LiteralString: |-\r\n  Test\r\nDoubleQuotedString: \"Test\"\r\n".NormalizeNewLines()' "the properties should be specifically styled"); " is 139.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationRespectsScalarStyleOverride,The length of the statement  "                .WithAttributeOverride<ScalarStyleExample>(e => e.LiteralString' new YamlMemberAttribute { ScalarStyle = ScalarStyle.DoubleQuoted }) " is 132.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationRespectsScalarStyleOverride,The length of the statement  "                .WithAttributeOverride<ScalarStyleExample>(e => e.DoubleQuotedString' new YamlMemberAttribute { ScalarStyle = ScalarStyle.Literal }) " is 132.
Long Statement,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationRespectsScalarStyleOverride,The length of the statement  "                .Be("LiteralString: \"Test\"\r\nDoubleQuotedString: |-\r\n  Test\r\n".NormalizeNewLines()' "the properties should be specifically styled"); " is 139.
Long Statement,YamlDotNet.Test.Spec,SpecTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Spec\SpecTests.cs,ConformsWithYamlSpec,The length of the statement  "                    Assert.True(error' $"Unexpected spec failure ({name}).\n{description}\nExpected:\n{expectedResult}\nActual:\n[Writer Output]\n{writer}\n[Exception]\n{ex}"); " is 156.
Long Statement,YamlDotNet.Test.Spec,SpecTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Spec\SpecTests.cs,ConformsWithYamlSpec,The length of the statement  "                        Debug.Assert(!knownFalsePositives.Contains(name)' $"Spec test '{name}' passed but present in '{nameof(knownFalsePositives)}' list. Consider removing it from the list."); " is 169.
Long Statement,YamlDotNet.Test.Spec,SpecTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Spec\SpecTests.cs,ConformsWithYamlSpec,The length of the statement  "                            Debug.Assert(!knownParserDesyncInErrorCases.Contains(name)' $"Spec test '{name}' passed but present in '{nameof(knownParserDesyncInErrorCases)}' list. Consider removing it from the list."); " is 189.
Long Statement,YamlDotNet.Test.Spec,SpecTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Spec\SpecTests.cs,ConformsWithYamlSpec,The length of the statement  "                    Debug.Assert(!ignoredSuites.Contains(name)' $"Spec test '{name}' passed but present in '{nameof(ignoredSuites)}' list. Consider removing it from the list."); " is 157.
Magic Number,YamlDotNet.Test.Core,EmitterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\EmitterTests.cs,UnicodeInScalarsCanBeSingleQuotedWhenOutputEncodingSupportsIt,The following statement contains a magic number: var emitter = new Emitter(writer' 2' int.MaxValue' false);
Magic Number,YamlDotNet.Test.Core,EmitterTestsHelper,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\EmitterTestsHelper.cs,DocumentWithCustomTags,The following statement contains a magic number: var tags = new TagDirective(parts[1]' parts[2]);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: WithTheRange(0' 10).Run(queue.Enqueue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsAfterEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: WithTheRange(0' 10).Run(queue.Enqueue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: PerformTimes(5' queue.Dequeue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: WithTheRange(10' 15).Run(queue.Enqueue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: WithTheRange(10' 15).Run(queue.Enqueue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenIntermixingEnqueuing,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(5' 6' 7' 8' 9' 10' 11' 12' 13' 14);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldThrowExceptionWhenDequeuingAfterInserting,The following statement contains a magic number: queue.Insert(0' 99);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldThrowExceptionWhenDequeuingAfterInserting,The following statement contains a magic number: PerformTimes(2' queue.Dequeue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: WithTheRange(0' 10).Run(queue.Enqueue);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: queue.Insert(5' 99);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: queue.Insert(5' 99);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,InsertionQueueTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\InsertionQueueTests.cs,ShouldCorrectlyDequeueElementsWhenInserting,The following statement contains a magic number: OrderOfElementsIn(queue).Should().Equal(0' 1' 2' 3' 4' 99' 5' 6' 7' 8' 9);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadThriceWhenPeekingAtOffsetTwo,The following statement contains a magic number: buffer.Peek(2).Should().Be('c');
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadThriceWhenPeekingAtOffsetTwo,The following statement contains a magic number: A.CallTo(() => reader.Read()).MustHaveHappened(Repeated.Exactly.Times(3));
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldNotHaveReadAfterSkippingOneCharacter,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingOneCharacter,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingOneCharacter,The following statement contains a magic number: buffer.Peek(2).Should().Be('d');
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadTwiceAfterSkippingOneCharacter,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadTwiceAfterSkippingOneCharacter,The following statement contains a magic number: buffer.Peek(3).Should().Be('e');
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadTwiceAfterSkippingOneCharacter,The following statement contains a magic number: Assert.Equal(2' reads);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingFiveCharacters,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingFiveCharacters,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingFiveCharacters,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSixCharacters,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSixCharacters,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSixCharacters,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSevenCharacters,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSevenCharacters,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSevenCharacters,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingSevenCharacters,The following statement contains a magic number: buffer.Skip(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingEightCharacters,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingEightCharacters,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingEightCharacters,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingEightCharacters,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingEightCharacters,The following statement contains a magic number: buffer.Skip(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingNineCharacters,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingNineCharacters,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingNineCharacters,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingNineCharacters,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldHaveReadOnceAfterSkippingNineCharacters,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldFindEndOfInput,The following statement contains a magic number: buffer.Peek(2);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldFindEndOfInput,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldFindEndOfInput,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldFindEndOfInput,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldFindEndOfInput,The following statement contains a magic number: buffer.Skip(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldThrowWhenPeekingBeyondCapacity,The following statement contains a magic number: Action action = () => buffer.Peek(4);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldThrowWhenSkippingBeyondCurrentBuffer,The following statement contains a magic number: buffer.Peek(3);
Magic Number,YamlDotNet.Test.Core,LookAheadBufferTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\LookAheadBufferTests.cs,ShouldThrowWhenSkippingBeyondCurrentBuffer,The following statement contains a magic number: Action action = () => buffer.Skip(5);
Magic Number,YamlDotNet.Test.Core,ScannerTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\ScannerTests.cs,CommentsAreCorrectlyMarked,The following statement contains a magic number: Assert.Equal(8' comment.Start.Index);
Magic Number,YamlDotNet.Test.Core,ScannerTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\ScannerTests.cs,CommentsAreCorrectlyMarked,The following statement contains a magic number: Assert.Equal(31' comment.End.Index);
Magic Number,YamlDotNet.Test.Core,ScannerTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Core\ScannerTests.cs,MarksOnDoubleQuotedScalarsAreCorrect,The following statement contains a magic number: Assert.Equal(4' scalar.End.Column);
Magic Number,YamlDotNet.Test.RepresentationModel,YamlStreamTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\RepresentationModel\YamlStreamTests.cs,BackwardAliasReferenceWorks,The following statement contains a magic number: Assert.Equal(3' sequence.Children.Count);
Magic Number,YamlDotNet.Test.RepresentationModel,YamlStreamTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\RepresentationModel\YamlStreamTests.cs,BackwardAliasReferenceWorks,The following statement contains a magic number: Assert.Equal("a scalar"' ((YamlScalarNode)sequence.Children[2]).Value);
Magic Number,YamlDotNet.Test.RepresentationModel,YamlStreamTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\RepresentationModel\YamlStreamTests.cs,BackwardAliasReferenceWorks,The following statement contains a magic number: Assert.Same(sequence.Children[0]' sequence.Children[2]);
Magic Number,YamlDotNet.Test.RepresentationModel,YamlStreamTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\RepresentationModel\YamlStreamTests.cs,ForwardAliasReferenceWorks,The following statement contains a magic number: Assert.Equal(3' sequence.Children.Count);
Magic Number,YamlDotNet.Test.RepresentationModel,YamlStreamTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\RepresentationModel\YamlStreamTests.cs,ForwardAliasReferenceWorks,The following statement contains a magic number: Assert.Equal("a scalar"' ((YamlScalarNode)sequence.Children[2]).Value);
Magic Number,YamlDotNet.Test.RepresentationModel,YamlStreamTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\RepresentationModel\YamlStreamTests.cs,ForwardAliasReferenceWorks,The following statement contains a magic number: Assert.Same(sequence.Children[0]' sequence.Children[2]);
Magic Number,YamlDotNet.Test.Serialization,RepresentationModelSerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\RepresentationModelSerializationTests.cs,MappingIsSerializable,The following statement contains a magic number: Assert.Equal(expectedKeysAndValues.Length / 2' node.Children.Count);
Magic Number,YamlDotNet.Test.Serialization,Example,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTestHelper.cs,Example,The following statement contains a magic number: MyInt = 1234;
Magic Number,YamlDotNet.Test.Serialization,Example,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTestHelper.cs,Example,The following statement contains a magic number: MyDouble = 6789.1011;
Magic Number,YamlDotNet.Test.Serialization,Example,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTestHelper.cs,Example,The following statement contains a magic number: MyPoint = new Point(100' 200);
Magic Number,YamlDotNet.Test.Serialization,Example,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTestHelper.cs,Example,The following statement contains a magic number: MyPoint = new Point(100' 200);
Magic Number,YamlDotNet.Test.Serialization,Example,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTestHelper.cs,Example,The following statement contains a magic number: MyNullableWithValue = 8;
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeScalarDecimal,The following statement contains a magic number: result.Should().Be(1234567);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeScalarBinaryNumber,The following statement contains a magic number: result.Should().Be(-4754);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeScalarOctalNumber,The following statement contains a magic number: result.Should().Be(29418);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeScalarLongBase60Number,The following statement contains a magic number: result.Should().Be(77744246530L);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeCustomTags,The following statement contains a magic number: result.Should().BeOfType<Point>().And                  .Subject.As<Point>()                  .ShouldBeEquivalentTo(new { X = 10' Y = 20 }' o => o.ExcludingMissingMembers());
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeCustomTags,The following statement contains a magic number: result.Should().BeOfType<Point>().And                  .Subject.As<Point>()                  .ShouldBeEquivalentTo(new { X = 10' Y = 20 }' o => o.ExcludingMissingMembers());
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializeCustomTags,The following statement contains a magic number: var point = new Point(10' 20);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializeCustomTags,The following statement contains a magic number: var point = new Point(10' 20);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripAnonymousType,The following statement contains a magic number: var data = new { Key = 3 };
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeExplicitList,The following statement contains a magic number: result.Should().BeAssignableTo<IList<int>>().And                  .Subject.As<IList<int>>().Should().Equal(3' 4' 5);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeExplicitList,The following statement contains a magic number: result.Should().BeAssignableTo<IList<int>>().And                  .Subject.As<IList<int>>().Should().Equal(3' 4' 5);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeExplicitList,The following statement contains a magic number: result.Should().BeAssignableTo<IList<int>>().And                  .Subject.As<IList<int>>().Should().Equal(3' 4' 5);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripList,The following statement contains a magic number: var obj = new List<int> { 2' 4' 6 };
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripList,The following statement contains a magic number: var obj = new List<int> { 2' 4' 6 };
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripList,The following statement contains a magic number: var obj = new List<int> { 2' 4' 6 };
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripArrayWithTypeConversion,The following statement contains a magic number: var obj = new object[] { 1' 2' "3" };
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripArrayWithTypeConversion,The following statement contains a magic number: result.Should().Equal(1' 2' 3);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripArrayWithTypeConversion,The following statement contains a magic number: result.Should().Equal(1' 2' 3);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripArrayOfIdenticalObjects,The following statement contains a magic number: result.Should().HaveCount(3).And.OnlyContain(x => z.aaa.Equals(x.aaa));
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,RoundtripArrayOfIdenticalObjects,The following statement contains a magic number: result[0].Should().BeSameAs(result[1]).And.BeSameAs(result[2]);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,DeserializeExplicitDictionary,The following statement contains a magic number: result.Should().BeAssignableTo<IDictionary<string' int>>().And.Subject                  .As<IDictionary<string' int>>().Should().Equal(new Dictionary<string' int> {                      { "key1"' 1 }'                      { "key2"' 2 }                  });
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationOfNullInListsAreAlwaysEmittedWithoutUsingEmitDefaults,The following statement contains a magic number: Regex.Matches(serialized' "-").Count.Should().Be(3' "there should have been 3 elements");
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationOfNullInListsAreAlwaysEmittedWhenUsingEmitDefaults,The following statement contains a magic number: Regex.Matches(serialized' "-").Count.Should().Be(3' "there should have been 3 elements");
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,SerializationOfLongKeysWorksInJson,The following statement contains a magic number: var obj = new Dictionary<string' string>              {                  { new string('x'' 3000)' "extremely long key" }              };
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,InvalidTypeConversionsProduceProperExceptions,The following statement contains a magic number: Assert.Equal(2' exception.Start.Line);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,InvalidTypeConversionsProduceProperExceptions,The following statement contains a magic number: Assert.Equal(3' exception.Start.Column);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,NegativeIntegersCanBeDeserialized,The following statement contains a magic number: Assert.Equal(-123' value);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,TypesAreConvertedWhenNeededFromScalars,The following statement contains a magic number: Assert.Equal(5' result);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,TypesAreConvertedWhenNeededInsideLists,The following statement contains a magic number: Assert.Equal(5' result[0]);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,TypesAreConvertedWhenNeededInsideDictionary,The following statement contains a magic number: Assert.True(result.ContainsKey(5));
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,TypesAreConvertedWhenNeededInsideDictionary,The following statement contains a magic number: Assert.Equal(3' result[5]);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,TypesAreConvertedWhenNeededInsideDictionary,The following statement contains a magic number: Assert.Equal(3' result[5]);
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,TuplesAreSerializable,The following statement contains a magic number: var yaml = sut.Serialize(new[]              {                  Tuple.Create(1' "one")'                  Tuple.Create(2' "two")'              });
Magic Number,YamlDotNet.Test.Serialization,SerializationTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\SerializationTests.cs,ValueTuplesAreSerializableWithoutMetadata,The following statement contains a magic number: var yaml = sut.Serialize(new[]              {                  (num: 1' txt: "one")'                  (num: 2' txt: "two")'              });
Magic Number,YamlDotNet.Test.Serialization,TypeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\TypeConverterTests.cs,Implicit_conversion_operator_is_used,The following statement contains a magic number: var data = new ImplicitConversionIntWrapper(2);
Magic Number,YamlDotNet.Test.Serialization,TypeConverterTests,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet.Test\Serialization\TypeConverterTests.cs,Explicit_conversion_operator_is_used,The following statement contains a magic number: var data = new ExplicitConversionIntWrapper(2);
