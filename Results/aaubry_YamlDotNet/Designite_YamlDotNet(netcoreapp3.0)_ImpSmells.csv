Implementation smell,Namespace,Class,File,Method,Description
Long Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,AnalyzeScalar,The method has 189 lines of code.
Long Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteDoubleQuotedScalar,The method has 111 lines of code.
Long Method,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseNode,The method has 112 lines of code.
Long Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,FetchNextToken,The method has 167 lines of code.
Long Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanBlockScalar,The method has 122 lines of code.
Long Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The method has 174 lines of code.
Long Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanPlainScalar,The method has 122 lines of code.
Long Method,YamlDotNet.Serialization.Utilities,TypeConverter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\Utilities\TypeConverter.cs,ChangeType,The method has 115 lines of code.
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,NeedMoreEvents,Cyclomatic complexity of the method is 9
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,AnalyzeScalar,Cyclomatic complexity of the method is 32
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,StateMachine,Cyclomatic complexity of the method is 20
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,EmitDocumentStart,Cyclomatic complexity of the method is 13
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,SelectScalarStyle,Cyclomatic complexity of the method is 13
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WritePlainScalar,Cyclomatic complexity of the method is 8
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteSingleQuotedScalar,Cyclomatic complexity of the method is 8
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteDoubleQuotedScalar,Cyclomatic complexity of the method is 24
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteFoldedScalar,Cyclomatic complexity of the method is 8
Complex Method,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,CheckSimpleKey,Cyclomatic complexity of the method is 9
Complex Method,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,StateMachine,Cyclomatic complexity of the method is 24
Complex Method,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentStart,Cyclomatic complexity of the method is 10
Complex Method,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ProcessDirectives,Cyclomatic complexity of the method is 8
Complex Method,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseNode,Cyclomatic complexity of the method is 19
Complex Method,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseFlowMappingKey,Cyclomatic complexity of the method is 9
Complex Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,FetchNextToken,Cyclomatic complexity of the method is 23
Complex Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanBlockScalar,Cyclomatic complexity of the method is 18
Complex Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,Cyclomatic complexity of the method is 26
Complex Method,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanPlainScalar,Cyclomatic complexity of the method is 18
Complex Method,YamlDotNet.RepresentationModel,YamlMappingNode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\RepresentationModel\YamlMappingNode.cs,ResolveAliases,Cyclomatic complexity of the method is 10
Complex Method,YamlDotNet.Serialization.EventEmitters,JsonEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\JsonEventEmitter.cs,Emit,Cyclomatic complexity of the method is 10
Complex Method,YamlDotNet.Serialization.EventEmitters,TypeAssigningEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\TypeAssigningEventEmitter.cs,Emit,Cyclomatic complexity of the method is 12
Complex Method,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,Deserialize,Cyclomatic complexity of the method is 12
Complex Method,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,Cyclomatic complexity of the method is 13
Complex Method,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,Traverse,Cyclomatic complexity of the method is 10
Complex Method,YamlDotNet.Serialization.Utilities,TypeConverter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\Utilities\TypeConverter.cs,ChangeType,Cyclomatic complexity of the method is 19
Long Parameter List,YamlDotNet.Core.Events,DocumentStart,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Events\DocumentStart.cs,DocumentStart,The method has 5 parameters. Parameters: version' tags' isImplicit' start' end
Long Parameter List,YamlDotNet.Core.Events,MappingStart,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Events\MappingStart.cs,MappingStart,The method has 6 parameters. Parameters: anchor' tag' isImplicit' style' start' end
Long Parameter List,YamlDotNet.Core.Events,Scalar,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Events\Scalar.cs,Scalar,The method has 8 parameters. Parameters: anchor' tag' value' style' isPlainImplicit' isQuotedImplicit' start' end
Long Parameter List,YamlDotNet.Core.Events,Scalar,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Events\Scalar.cs,Scalar,The method has 6 parameters. Parameters: anchor' tag' value' style' isPlainImplicit' isQuotedImplicit
Long Parameter List,YamlDotNet.Core.Events,SequenceStart,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Events\SequenceStart.cs,SequenceStart,The method has 6 parameters. Parameters: anchor' tag' isImplicit' style' start' end
Long Parameter List,YamlDotNet.Serialization,EmissionPhaseObjectGraphVisitorArgs,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EmissionPhaseObjectGraphVisitorArgs.cs,EmissionPhaseObjectGraphVisitorArgs,The method has 5 parameters. Parameters: innerVisitor' eventEmitter' preProcessingPhaseVisitors' typeConverters' nestedObjectSerializer
Long Parameter List,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,ValueSerializer,The method has 5 parameters. Parameters: traversalStrategy' eventEmitter' typeConverters' preProcessingPhaseObjectGraphVisitorFactories' emissionPhaseObjectGraphVisitorFactories
Long Parameter List,YamlDotNet.Serialization.NodeDeserializers,CollectionNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\CollectionNodeDeserializer.cs,DeserializeHelper,The method has 5 parameters. Parameters: tItem' parser' nestedObjectDeserializer' result' canUpdate
Long Parameter List,YamlDotNet.Serialization.NodeDeserializers,DictionaryNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\DictionaryNodeDeserializer.cs,DeserializeHelper,The method has 5 parameters. Parameters: tKey' tValue' parser' nestedObjectDeserializer' result
Long Parameter List,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,Traverse,The method has 5 parameters. Parameters: name' value' visitor' context' path
Long Parameter List,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,TraverseDictionary,The method has 6 parameters. Parameters: dictionary' visitor' keyType' valueType' context' path
Long Parameter List,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,RoundtripObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\RoundtripObjectGraphTraversalStrategy.cs,RoundtripObjectGraphTraversalStrategy,The method has 5 parameters. Parameters: converters' typeDescriptor' typeResolver' maxRecursion' namingConvention
Long Identifier,YamlDotNet.RepresentationModel,YamlNode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\RepresentationModel\YamlNode.cs,,The length of the parameter MaximumRecursionLevelReachedToStringValue is 41.
Long Identifier,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithObjectGraphTraversalStrategyFactory,The length of the parameter objectGraphTraversalStrategyFactory is 35.
Long Identifier,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,,The length of the parameter objectGraphTraversalStrategyFactory is 35.
Long Identifier,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,,The length of the parameter preProcessingPhaseObjectGraphVisitorFactories is 45.
Long Identifier,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,,The length of the parameter emissionPhaseObjectGraphVisitorFactories is 40.
Long Identifier,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,,The length of the parameter defaultValuesHandlingConfiguration is 34.
Long Identifier,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,ValueSerializer,The length of the parameter preProcessingPhaseObjectGraphVisitorFactories is 45.
Long Identifier,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,ValueSerializer,The length of the parameter emissionPhaseObjectGraphVisitorFactories is 40.
Long Identifier,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,SerializeValue,The length of the parameter preProcessingPhaseObjectGraphVisitors is 37.
Long Identifier,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,,The length of the parameter preProcessingPhaseObjectGraphVisitorFactories is 45.
Long Identifier,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,,The length of the parameter emissionPhaseObjectGraphVisitorFactories is 40.
Long Identifier,YamlDotNet.Serialization.EventEmitters,TypeAssigningEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\TypeAssigningEventEmitter.cs,TypeAssigningEventEmitter,The length of the parameter requireTagWhenStaticAndActualTypesAreDifferent is 46.
Long Identifier,YamlDotNet.Serialization.EventEmitters,TypeAssigningEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\TypeAssigningEventEmitter.cs,,The length of the parameter requireTagWhenStaticAndActualTypesAreDifferent is 46.
Long Identifier,YamlDotNet.Serialization.ObjectFactories,DefaultObjectFactory,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectFactories\DefaultObjectFactory.cs,,The length of the parameter defaultGenericInterfaceImplementations is 38.
Long Identifier,YamlDotNet.Serialization.ObjectFactories,DefaultObjectFactory,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectFactories\DefaultObjectFactory.cs,,The length of the parameter defaultNonGenericInterfaceImplementations is 41.
Long Statement,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,AnalyzeVersionDirective,The length of the statement  "            if (versionDirective.Version.Major != Constants.MajorVersion || versionDirective.Version.Minor > Constants.MinorVersion) " is 120.
Long Statement,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,SelectScalarStyle,The length of the statement  "                    style = (scalarData.isSingleQuotedAllowed && !scalarData.hasSingleQuotes) ? ScalarStyle.SingleQuoted : ScalarStyle.DoubleQuoted; " is 128.
Long Statement,YamlDotNet.Core,LookAheadBuffer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\LookAheadBuffer.cs,Peek,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(offset)' "The offset must be between zero and the capacity of the buffer."); " is 121.
Long Statement,YamlDotNet.Core,LookAheadBuffer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\LookAheadBuffer.cs,Skip,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(length)' "The length must be between 1 and the number of characters in the buffer. Use the Peek() and / or Cache() methods to fill the buffer."); " is 190.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,GetCurrentToken,The length of the statement  "                        pendingEvents.Enqueue(new Events.Comment(commentToken.Value' commentToken.IsInline' commentToken.Start' commentToken.End)); " is 123.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseStreamStart,The length of the statement  "                throw new SemanticErrorException(current?.Start ?? Mark.Empty' current?.End ?? Mark.Empty' "Did not find expected <stream-start>."); " is 132.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentStart,The length of the statement  "            if (isImplicit && !(current is VersionDirective || current is TagDirective || current is DocumentStart || current is StreamEnd || current is DocumentEnd) || current is BlockMappingStart) " is 186.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentStart,The length of the statement  "                current = GetCurrentToken() ?? throw new SemanticErrorException("Reached the end of the stream while parsing a document start"); " is 128.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentStart,The length of the statement  "                current = GetCurrentToken() ?? throw new SemanticErrorException("Reached the end of the stream while parsing a document start"); " is 128.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseNode,The length of the statement  "            var current = GetCurrentToken() ?? throw new SemanticErrorException("Reached the end of the stream while parsing a node"); " is 122.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseNode,The length of the statement  "                    throw new SemanticErrorException(anchorAlias.Start' anchorAlias.End' "While parsing a node' did not find expected token."); " is 123.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseNode,The length of the statement  "                    return new Events.Scalar(anchorName' tagName' scalar.Value' scalar.Style' isPlainImplicit' isQuotedImplicit' start' scalar.End); " is 128.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseNode,The length of the statement  "                throw new SemanticErrorException(current.Start' current.End' "While parsing a node' did not find expected node content."); " is 122.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentEnd,The length of the statement  "            var current = GetCurrentToken() ?? throw new SemanticErrorException("Reached the end of the stream while parsing a document end"); " is 130.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseBlockSequenceEntry,The length of the statement  "                throw new SemanticErrorException(current?.Start ?? Mark.Empty' current?.End ?? Mark.Empty' "While parsing a block collection' did not find expected '-' indicator."); " is 165.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseBlockMappingKey,The length of the statement  "                throw new SemanticErrorException(current?.Start ?? Mark.Empty' current?.End ?? Mark.Empty' "While parsing a block mapping' did not find expected key."); " is 152.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseFlowSequenceEntry,The length of the statement  "                        throw new SemanticErrorException(current?.Start ?? Mark.Empty' current?.End ?? Mark.Empty' "While parsing a flow sequence' did not find expected ''' or ']'."); " is 159.
Long Statement,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseFlowMappingKey,The length of the statement  "                        throw new SemanticErrorException(current?.Start ?? Mark.Empty' current?.End ?? Mark.Empty' "While parsing a flow mapping'  did not find expected ''' or '}'."); " is 159.
Long Statement,YamlDotNet.Core,ParserExtensions,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\ParserExtensions.cs,Require,The length of the statement  "                throw new YamlException(@event.Start' @event.End' $"Expected '{typeof(T).Name}'' got '{@event.GetType().Name}' (at {@event.Start})."); " is 134.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,FetchNextToken,The length of the statement  "            throw new SyntaxErrorException(start' end' "While scanning for the next token' found character that cannot start any token."); " is 126.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanDirective,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a directive' did not find expected comment or line break."); " is 129.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,FetchDocumentIndicator,The length of the statement  "                        throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a document end' found invalid content after '...' marker."); " is 129.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanAnchor,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning an anchor or alias' found value containing disallowed: []{}'"); " is 132.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanTag,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a tag' did not find expected whitespace' comma or line break."); " is 133.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanBlockScalar,The length of the statement  "                        throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a block scalar' found an indentation indicator equal to 0."); " is 130.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanBlockScalar,The length of the statement  "                    throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a block scalar' found an indentation indicator equal to 0."); " is 130.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanBlockScalar,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a block scalar' did not find expected comment or line break."); " is 132.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The length of the statement  "                    throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a quoted scalar' found unexpected document indicator."); " is 125.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The length of the statement  "                    throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a quoted scalar' found unexpected end of stream."); " is 120.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The length of the statement  "                                    throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a quoted scalar' found unknown escape character."); " is 120.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The length of the statement  "                                    throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a quoted scalar' did not find expected hexadecimal number."); " is 130.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The length of the statement  "                                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a quoted scalar' found invalid Unicode character escape code."); " is 133.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanFlowScalar,The length of the statement  "            return new Scalar(value.ToString()' isSingleQuoted ? ScalarStyle.SingleQuoted : ScalarStyle.DoubleQuoted' start' cursor.Mark()); " is 128.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanPlainScalar,The length of the statement  "                    if (analyzer.Check(':') && !isAliasValue && (analyzer.IsWhiteBreakOrZero(1) || (flowLevel > 0 && analyzer.Check('''' 1))) || (flowLevel > 0 && analyzer.Check("'?[]{}"))) " is 169.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanPlainScalar,The length of the statement  "                            throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a plain scalar' found a tab character that violate indentation."); " is 135.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanDirectiveName,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a directive' could not find expected directive name."); " is 124.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanDirectiveName,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a directive' found unexpected non-alphabetical character."); " is 129.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanVersionDirectiveValue,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a %YAML directive' did not find expected digit or '.' character."); " is 136.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanTagDirectiveValue,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a %TAG directive' did not find expected whitespace."); " is 123.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanTagDirectiveValue,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a %TAG directive' did not find expected whitespace or line break."); " is 137.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanVersionDirectiveNumber,The length of the statement  "                    throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a %YAML directive' found extremely long version number."); " is 127.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanVersionDirectiveNumber,The length of the statement  "                throw new SyntaxErrorException(start' cursor.Mark()' "While scanning a %YAML directive' did not find expected version number."); " is 128.
Long Statement,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,SaveSimpleKey,The length of the statement  "            Debug.Assert(simpleKeyAllowed || !isRequired' "Can't require a simple key and disallow it at the same time.");    // Impossible. " is 128.
Long Statement,YamlDotNet.Core.Events,Scalar,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Events\Scalar.cs,ToString,The length of the statement  "            return $"Scalar [anchor = {Anchor}' tag = {Tag}' value = {Value}' style = {Style}' isPlainImplicit = {IsPlainImplicit}' isQuotedImplicit = {IsQuotedImplicit}]"; " is 160.
Long Statement,YamlDotNet,ReflectionExtensions,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Helpers\Portability.cs,HasDefaultConstructor,The length of the statement  "            return type.IsValueType || type.GetConstructor(BindingFlags.Public | BindingFlags.Instance' null' Type.EmptyTypes' null) != null; " is 129.
Long Statement,YamlDotNet.RepresentationModel,YamlMappingNode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\RepresentationModel\YamlMappingNode.cs,ResolveAliases,The length of the statement  "                    // TODO: The representation model should be redesigned' because here the anchor could be null but that would be invalid YAML " is 124.
Long Statement,YamlDotNet.RepresentationModel,YamlMappingNode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\RepresentationModel\YamlMappingNode.cs,ResolveAliases,The length of the statement  "                    // TODO: The representation model should be redesigned' because here the anchor could be null but that would be invalid YAML " is 124.
Long Statement,YamlDotNet.Serialization,BuilderSkeleton<TBuilder>,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\BuilderSkeleton.cs,WithTypeConverter,The length of the statement  "            where(typeConverterFactories.CreateTrackingRegistrationLocationSelector(typeof(TYamlTypeConverter)' (wrapped' _) => typeConverterFactory(wrapped))); " is 148.
Long Statement,YamlDotNet.Serialization,BuilderSkeleton<TBuilder>,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\BuilderSkeleton.cs,WithTypeInspector,The length of the statement  "            where(typeInspectorFactories.CreateRegistrationLocationSelector(typeof(TTypeInspector)' inner => typeInspectorFactory(inner))); " is 127.
Long Statement,YamlDotNet.Serialization,BuilderSkeleton<TBuilder>,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\BuilderSkeleton.cs,WithTypeInspector,The length of the statement  "            where(typeInspectorFactories.CreateTrackingRegistrationLocationSelector(typeof(TTypeInspector)' (wrapped' inner) => typeInspectorFactory(wrapped' inner))); " is 155.
Long Statement,YamlDotNet.Serialization,Deserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\Deserializer.cs,Deserialize,The length of the statement  "            return (T)Deserialize(parser' typeof(T))!; // We really want an exception if we are trying to deserialize null into a non-nullable type " is 135.
Long Statement,YamlDotNet.Serialization,DeserializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\DeserializerBuilder.cs,WithNodeDeserializer,The length of the statement  "            where(nodeDeserializerFactories.CreateTrackingRegistrationLocationSelector(typeof(TNodeDeserializer)' (wrapped' _) => nodeDeserializerFactory(wrapped))); " is 153.
Long Statement,YamlDotNet.Serialization,DeserializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\DeserializerBuilder.cs,WithNodeTypeResolver,The length of the statement  "            where(nodeTypeResolverFactories.CreateTrackingRegistrationLocationSelector(typeof(TNodeTypeResolver)' (wrapped' _) => nodeTypeResolverFactory(wrapped))); " is 153.
Long Statement,YamlDotNet.Serialization,DeserializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\DeserializerBuilder.cs,WithTagMapping,The length of the statement  "                throw new ArgumentException($"Type already has a registered type '{alreadyRegisteredType.FullName}' for tag '{tag}'"' nameof(tag)); " is 131.
Long Statement,YamlDotNet.Serialization,ObjectDescriptorExtensions,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\IObjectDescriptor.cs,NonNullValue,The length of the statement  "            return objectDescriptor.Value ?? throw new InvalidOperationException($"Attempted to use a IObjectDescriptor of type '{objectDescriptor.Type.FullName}' whose Value is null at a point whete it is invalid to do so. This may indicate a bug in YamlDotNet."); " is 253.
Long Statement,YamlDotNet.Serialization,LazyComponentRegistrationList<TArgument;TComponent>,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\LazyComponentRegistrationList.cs,EnsureRegistrationExists,The length of the statement  "                throw new InvalidOperationException($"A component of type '{typeof(TRegistrationType).FullName}' has not been registered."); " is 124.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithMaximumRecursion,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(maximumRecursion)' $"The maximum recursion specified ({maximumRecursion}) is invalid. It should be a positive integer."); " is 166.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithEventEmitter,The length of the statement  "            where(eventEmitterFactories.CreateRegistrationLocationSelector(typeof(TEventEmitter)' inner => eventEmitterFactory(inner))); " is 124.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithEventEmitter,The length of the statement  "            where(eventEmitterFactories.CreateTrackingRegistrationLocationSelector(typeof(TEventEmitter)' (wrapped' inner) => eventEmitterFactory(wrapped' inner))); " is 152.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithTagMapping,The length of the statement  "                throw new ArgumentException($"Type already has a registered tag '{alreadyRegisteredTag}' for type '{type.FullName}'"' nameof(type)); " is 132.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,EnsureRoundtrip,The length of the statement  "            objectGraphTraversalStrategyFactory = (typeInspector' typeResolver' typeConverters' maximumRecursion) => new RoundtripObjectGraphTraversalStrategy( " is 147.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,EnsureRoundtrip,The length of the statement  "            WithEventEmitter(inner => new TypeAssigningEventEmitter(inner' true' tagMappings)' loc => loc.InsteadOf<TypeAssigningEventEmitter>()); " is 134.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithPreProcessingPhaseObjectGraphVisitor,The length of the statement  "            where(preProcessingPhaseObjectGraphVisitorFactories.CreateRegistrationLocationSelector(typeof(TObjectGraphVisitor)' _ => objectGraphVisitor)); " is 142.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithPreProcessingPhaseObjectGraphVisitor,The length of the statement  "            where(preProcessingPhaseObjectGraphVisitorFactories.CreateTrackingRegistrationLocationSelector(typeof(TObjectGraphVisitor)' (wrapped' _) => objectGraphVisitorFactory(wrapped))); " is 177.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithEmissionPhaseObjectGraphVisitor,The length of the statement  "            where(emissionPhaseObjectGraphVisitorFactories.CreateRegistrationLocationSelector(typeof(TObjectGraphVisitor)' args => objectGraphVisitorFactory(args))); " is 153.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,WithEmissionPhaseObjectGraphVisitor,The length of the statement  "            where(emissionPhaseObjectGraphVisitorFactories.CreateTrackingRegistrationLocationSelector(typeof(TObjectGraphVisitor)' (wrapped' args) => objectGraphVisitorFactory(wrapped' args))); " is 181.
Long Statement,YamlDotNet.Serialization,SerializerBuilder,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,BuildValueSerializer,The length of the statement  "            var traversalStrategy = objectGraphTraversalStrategyFactory(typeInspector' typeResolver' typeConverters' maximumRecursion); " is 123.
Long Statement,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,SerializeValue,The length of the statement  "                var preProcessingPhaseObjectGraphVisitors = preProcessingPhaseObjectGraphVisitorFactories.BuildComponentList(typeConverters); " is 125.
Long Statement,YamlDotNet.Serialization,ValueSerializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\SerializerBuilder.cs,SerializeValue,The length of the statement  "                    inner => new EmissionPhaseObjectGraphVisitorArgs(inner' eventEmitter' preProcessingPhaseObjectGraphVisitors' typeConverters' nestedObjectSerializer) " is 148.
Long Statement,YamlDotNet.Serialization.Converters,GuidConverter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\Converters\GuidConverter.cs,WriteYaml,The length of the statement  "            emitter.Emit(new Scalar(null' null' guid.ToString("D")' jsonCompatible ? ScalarStyle.DoubleQuoted : ScalarStyle.Any' true' false)); " is 131.
Long Statement,YamlDotNet.Serialization.EventEmitters,TypeAssigningEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\TypeAssigningEventEmitter.cs,AssignTypeIfNeeded,The length of the statement  "            else if (requireTagWhenStaticAndActualTypesAreDifferent && eventInfo.Source.Value != null && eventInfo.Source.Type != eventInfo.Source.StaticType) " is 146.
Long Statement,YamlDotNet.Serialization.EventEmitters,TypeAssigningEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\TypeAssigningEventEmitter.cs,AssignTypeIfNeeded,The length of the statement  "                    $"Cannot serialize type '{eventInfo.Source.Type.FullName}' where a '{eventInfo.Source.StaticType.FullName}' was expected " + " is 124.
Long Statement,YamlDotNet.Serialization.EventEmitters,WriterEventEmitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\EventEmitters\WriterEventEmitter.cs,Emit,The length of the statement  "            emitter.Emit(new Scalar(eventInfo.Anchor' eventInfo.Tag' eventInfo.RenderedValue' eventInfo.Style' eventInfo.IsPlainImplicit' eventInfo.IsQuotedImplicit)); " is 155.
Long Statement,YamlDotNet.Serialization.NodeDeserializers,CollectionNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\CollectionNodeDeserializer.cs,Deserialize,The length of the statement  "                    list = (IList?)Activator.CreateInstance(typeof(GenericCollectionToNonGenericAdapter<>).MakeGenericType(itemType)' value); " is 121.
Long Statement,YamlDotNet.Serialization.NodeDeserializers,DictionaryNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\DictionaryNodeDeserializer.cs,Deserialize,The length of the statement  "                    dictionary = (IDictionary?)Activator.CreateInstance(typeof(GenericDictionaryToNonGenericAdapter<'>).MakeGenericType(keyType' valueType)' value); " is 144.
Long Statement,YamlDotNet.Serialization.NodeTypeResolvers,TagNodeTypeResolver,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeTypeResolvers\TagNodeTypeResolver.cs,Resolve,The length of the statement  "            if (nodeEvent != null && !string.IsNullOrEmpty(nodeEvent.Tag) && tagMappings.TryGetValue(nodeEvent.Tag' out var predefinedType)) " is 128.
Long Statement,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,Traverse,The length of the statement  "                            Traverse("Value"' new ObjectDescriptor(value.Value' underlyingType' value.Type' value.ScalarStyle)' visitor' context' path); " is 124.
Long Statement,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,TraverseObject,The length of the statement  "                var adaptedDictionary = Activator.CreateInstance(typeof(GenericDictionaryToNonGenericAdapter<'>).MakeGenericType(genericArguments)' value.Value)!; " is 146.
Long Statement,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,TraverseObject,The length of the statement  "                TraverseDictionary(new ObjectDescriptor(adaptedDictionary' value.Type' value.StaticType' value.ScalarStyle)' visitor' genericArguments[0]' genericArguments[1]' context' path); " is 175.
Long Statement,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,FullObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\FullObjectGraphTraversalStrategy.cs,TraverseProperties,The length of the statement  "                    Traverse(propertyDescriptor.Name' new ObjectDescriptor(propertyDescriptor.Name' typeof(string)' typeof(string))' visitor' context' path); " is 137.
Long Statement,YamlDotNet.Serialization.ObjectGraphTraversalStrategies,RoundtripObjectGraphTraversalStrategy,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphTraversalStrategies\RoundtripObjectGraphTraversalStrategy.cs,TraverseProperties,The length of the statement  "                throw new InvalidOperationException($"Type '{value.Type}' cannot be deserialized because it does not have a default constructor or a type converter."); " is 151.
Long Statement,YamlDotNet.Serialization.TypeInspectors,TypeInspectorSkeleton,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\TypeInspectors\TypeInspectorSkeleton.cs,GetProperty,The length of the statement  "                        $"Multiple properties with the name/alias '{name}' already exists on type '{type.FullName}'' maybe you're misusing YamlAlias or maybe you are using the wrong naming convention? The matching properties are: {string.Join("' "' candidates.Select(p => p.Name).ToArray())}" " is 268.
Long Statement,YamlDotNet.Serialization.Utilities,StringExtensions,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\Utilities\StringExtensions.cs,ToCamelOrPascalCase,The length of the statement  "            var text = Regex.Replace(str' "([_\\-])(?<char>[a-z])"' match => match.Groups["char"].Value.ToUpperInvariant()' RegexOptions.IgnoreCase); " is 137.
Long Statement,YamlDotNet.Serialization.Utilities,StringExtensions,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\Utilities\StringExtensions.cs,FromCamelCase,The length of the statement  "            str = Regex.Replace(str.ToCamelCase()' "(?<char>[A-Z])"' match => separator + match.Groups["char"].Value.ToLowerInvariant()); " is 125.
Long Statement,YamlDotNet.Serialization.ValueDeserializers,NodeValueDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ValueDeserializers\NodeValueDeserializer.cs,DeserializeValue,The length of the statement  "                    if (deserializer.Deserialize(parser' nodeType' (r' t) => nestedObjectDeserializer.DeserializeValue(r' t' state' nestedObjectDeserializer)' out var value)) " is 154.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,AnalyzeScalar,The conditional expression  "leadingSpace || leadingBreak || trailingSpace || trailingBreak || leadingQuote"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,EmitDocumentStart,The conditional expression  "!isFirst && !isDocumentEndWritten && (documentStart.Version != null || documentTagDirectives.Count > 0)"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,SelectScalarStyle,The conditional expression  "(flowLevel != 0 && !scalarData.isFlowPlainAllowed) || (flowLevel == 0 && !scalarData.isBlockPlainAllowed)"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WritePlainScalar,The conditional expression  "allowBreaks && !previousSpace && column > bestWidth && index + 1 < value.Length && value[index + 1] != ' '"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteSingleQuotedScalar,The conditional expression  "allowBreaks && !previousSpace && column > bestWidth && index != 0 && index + 1 < value.Length &&                          value[index + 1] != ' '"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteDoubleQuotedScalar,The conditional expression  "!IsPrintable(character) || IsBreak(character' out _) || character == '"' || character == '\\'"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteDoubleQuotedScalar,The conditional expression  "allowBreaks && !previousSpace && column > bestWidth && index > 0 && index + 1 < value.Length"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,WriteFoldedScalar,The conditional expression  "!previousBreak && character == ' ' && i + 1 < value.Length && value[i + 1] != ' ' && column > bestWidth"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,EmitSequenceStart,The conditional expression  "flowLevel != 0 || isCanonical || sequenceStart.Style == SequenceStyle.Flow || CheckEmptySequence()"  is complex.
Complex Conditional,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,EmitMappingStart,The conditional expression  "flowLevel != 0 || isCanonical || mappingStart.Style == MappingStyle.Flow || CheckEmptyMapping()"  is complex.
Complex Conditional,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentStart,The conditional expression  "isImplicit && !(current is VersionDirective || current is TagDirective || current is DocumentStart || current is StreamEnd || current is DocumentEnd) || current is BlockMappingStart"  is complex.
Complex Conditional,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseDocumentContent,The conditional expression  "GetCurrentToken() is VersionDirective ||                  GetCurrentToken() is TagDirective ||                  GetCurrentToken() is DocumentStart ||                  GetCurrentToken() is DocumentEnd ||                  GetCurrentToken() is StreamEnd"  is complex.
Complex Conditional,YamlDotNet.Core,Parser,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Parser.cs,ParseIndentlessSequenceEntry,The conditional expression  "!(current is BlockEntry || current is Key || current is Value || current is BlockEnd)"  is complex.
Complex Conditional,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,FetchNextToken,The conditional expression  "analyzer.Check(':') && (flowLevel > 0 || analyzer.IsWhiteBreakOrZero(1)) &&                  !(simpleKeyAllowed && flowLevel > 0)"  is complex.
Complex Conditional,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanAnchor,The conditional expression  "!analyzer.Check("[]{}'") &&                      !(isAliasKey && analyzer.Check(':') && analyzer.IsWhiteBreakOrZero(1))"  is complex.
Complex Conditional,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanBlockScalar,The conditional expression  "!isLiteral && StartsWith(leadingBreak' '\n') && !leadingBlank && !trailingBlank"  is complex.
Complex Conditional,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanPlainScalar,The conditional expression  "analyzer.Check(':') && !isAliasValue && (analyzer.IsWhiteBreakOrZero(1) || (flowLevel > 0 && analyzer.Check('''' 1))) || (flowLevel > 0 && analyzer.Check("'?[]{}"))"  is complex.
Complex Conditional,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanTagUri,The conditional expression  "analyzer.IsAlphaNumericDashOrUnderscore() || analyzer.Check(";/?:@&=+$.!~*'()[]%") ||                     (analyzer.Check(''') && !analyzer.IsBreak(1))"  is complex.
Magic Number,YamlDotNet.Core,CharacterAnalyzer<TBuffer>,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\CharacterAnalyzer.cs,AsHex,The following statement contains a magic number: return character - 'A' + 10;
Magic Number,YamlDotNet.Core,CharacterAnalyzer<TBuffer>,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\CharacterAnalyzer.cs,AsHex,The following statement contains a magic number: return character - 'a' + 10;
Magic Number,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,NeedMoreEvents,The following statement contains a magic number: switch (events.Peek().Type)              {                  case EventType.DocumentStart:                      accumulate = 1;                      break;                    case EventType.SequenceStart:                      accumulate = 2;                      break;                    case EventType.MappingStart:                      accumulate = 3;                      break;                    default:                      return false;              }
Magic Number,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,NeedMoreEvents,The following statement contains a magic number: switch (events.Peek().Type)              {                  case EventType.DocumentStart:                      accumulate = 1;                      break;                    case EventType.SequenceStart:                      accumulate = 2;                      break;                    case EventType.MappingStart:                      accumulate = 3;                      break;                    default:                      return false;              }
Magic Number,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,CheckEmptyDocument,The following statement contains a magic number: index == 2
Magic Number,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,CheckEmptyStructure,The following statement contains a magic number: events.Count < 2
Magic Number,YamlDotNet.Core,EmitterSettings,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\EmitterSettings.cs,EmitterSettings,The following statement contains a magic number: bestIndent < 2 || bestIndent > 9
Magic Number,YamlDotNet.Core,EmitterSettings,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\EmitterSettings.cs,EmitterSettings,The following statement contains a magic number: bestIndent < 2 || bestIndent > 9
Magic Number,YamlDotNet.Core,EmitterSettings,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\EmitterSettings.cs,EmitterSettings,The following statement contains a magic number: bestWidth <= bestIndent * 2
Magic Number,YamlDotNet.Core,HashCode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\HashCode.cs,CombineHashCodes,The following statement contains a magic number: return ((h1 << 5) + h1) ^ h2;
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,StaleSimpleKeys,The following statement contains a magic number: key.IsPossible && (key.Line < cursor.Line || key.Index + 1024 < cursor.Index)
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,FetchNextToken,The following statement contains a magic number: analyzer.Buffer.Cache(4);
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,SkipLine,The following statement contains a magic number: cursor.SkipLineByOffset(2);
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,SkipLine,The following statement contains a magic number: analyzer.Buffer.Skip(2);
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: !(analyzer.Check('%') && analyzer.IsHex(1) && analyzer.IsHex(2))
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: int octet = (analyzer.AsHex(1) << 4) + analyzer.AsHex(2);
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: int octet = (analyzer.AsHex(1) << 4) + analyzer.AsHex(2);
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: width = (octet & 0x80) == 0x00 ? 1 :                              (octet & 0xE0) == 0xC0 ? 2 :                              (octet & 0xF0) == 0xE0 ? 3 :                              (octet & 0xF8) == 0xF0 ? 4 : 0;
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: width = (octet & 0x80) == 0x00 ? 1 :                              (octet & 0xE0) == 0xC0 ? 2 :                              (octet & 0xF0) == 0xE0 ? 3 :                              (octet & 0xF8) == 0xF0 ? 4 : 0;
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: width = (octet & 0x80) == 0x00 ? 1 :                              (octet & 0xE0) == 0xC0 ? 2 :                              (octet & 0xF0) == 0xE0 ? 3 :                              (octet & 0xF8) == 0xF0 ? 4 : 0;
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanUriEscapes,The following statement contains a magic number: result.Length == 0 || result.Length > 2
Magic Number,YamlDotNet.Core,Scanner,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Scanner.cs,ScanVersionDirectiveNumber,The following statement contains a magic number: value = value * 10 + analyzer.AsDigit();
Magic Number,YamlDotNet.RepresentationModel,YamlMappingNode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\RepresentationModel\YamlMappingNode.cs,ToString,The following statement contains a magic number: text.Length > 2
Magic Number,YamlDotNet.RepresentationModel,YamlSequenceNode,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\RepresentationModel\YamlSequenceNode.cs,ToString,The following statement contains a magic number: text.Length > 2
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ArrayList,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ArrayNodeDeserializer.cs,Add,The following statement contains a magic number: Array.Resize(ref data' data.Length * 2);
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ArrayList,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ArrayNodeDeserializer.cs,Clear,The following statement contains a magic number: data = new object[10];
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,The following statement contains a magic number: numberBase = 10;
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,The following statement contains a magic number: switch (numberBase)                  {                      case 2:                      case 8:                          // TODO: how to incorporate the numberFormat?                          result = Convert.ToUInt64(numberBuilder.ToString()' numberBase);                          break;                        case 16:                          result = ulong.Parse(numberBuilder.ToString()' NumberStyles.HexNumber' YamlFormatter.NumberFormat);                          break;                        case 10:                          // Result is already zero                          break;                  }
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,The following statement contains a magic number: switch (numberBase)                  {                      case 2:                      case 8:                          // TODO: how to incorporate the numberFormat?                          result = Convert.ToUInt64(numberBuilder.ToString()' numberBase);                          break;                        case 16:                          result = ulong.Parse(numberBuilder.ToString()' NumberStyles.HexNumber' YamlFormatter.NumberFormat);                          break;                        case 10:                          // Result is already zero                          break;                  }
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,The following statement contains a magic number: switch (numberBase)                  {                      case 2:                      case 8:                          // TODO: how to incorporate the numberFormat?                          result = Convert.ToUInt64(numberBuilder.ToString()' numberBase);                          break;                        case 16:                          result = ulong.Parse(numberBuilder.ToString()' NumberStyles.HexNumber' YamlFormatter.NumberFormat);                          break;                        case 10:                          // Result is already zero                          break;                  }
Magic Number,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,The following statement contains a magic number: switch (numberBase)                  {                      case 2:                      case 8:                          // TODO: how to incorporate the numberFormat?                          result = Convert.ToUInt64(numberBuilder.ToString()' numberBase);                          break;                        case 16:                          result = ulong.Parse(numberBuilder.ToString()' NumberStyles.HexNumber' YamlFormatter.NumberFormat);                          break;                        case 10:                          // Result is already zero                          break;                  }
Missing Default,YamlDotNet.Core,Emitter,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Core\Emitter.cs,NeedMoreEvents,The following switch statement is missing a default case: switch (evt.Type)                  {                      case EventType.DocumentStart:                      case EventType.SequenceStart:                      case EventType.MappingStart:                          ++level;                          break;                        case EventType.DocumentEnd:                      case EventType.SequenceEnd:                      case EventType.MappingEnd:                          --level;                          break;                  }
Missing Default,YamlDotNet.Serialization.NodeDeserializers,ScalarNodeDeserializer,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\NodeDeserializers\ScalarNodeDeserializer.cs,DeserializeIntegerHelper,The following switch statement is missing a default case: switch (numberBase)                  {                      case 2:                      case 8:                          // TODO: how to incorporate the numberFormat?                          result = Convert.ToUInt64(numberBuilder.ToString()' numberBase);                          break;                        case 16:                          result = ulong.Parse(numberBuilder.ToString()' NumberStyles.HexNumber' YamlFormatter.NumberFormat);                          break;                        case 10:                          // Result is already zero                          break;                  }
Missing Default,YamlDotNet.Serialization.ObjectGraphVisitors,DefaultValuesObjectGraphVisitor,D:\research\architectureSmells\repos\aaubry_YamlDotNet\YamlDotNet\Serialization\ObjectGraphVisitors\DefaultValuesObjectGraphVisitor.cs,EnterMapping,The following switch statement is missing a default case: switch (configuration)              {                  case DefaultValuesHandling.OmitNull:                      if (value.Value is null)                      {                          return false;                      }                      break;                    case DefaultValuesHandling.OmitDefaults:                      var defaultValue = key.GetCustomAttribute<DefaultValueAttribute>()?.Value ?? GetDefault(key.Type);                      if (Equals(value.Value' defaultValue))                      {                          return false;                      }                      break;              }
