Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MonoDevelop.PackageManagement.PowerShell.ConsoleHost,PowerShellUserInterfaceHost,C:\research\architectureSmells\repos\mrward_monodevelop-nuget-extensions\src\MonoDevelop.PackageManagement.PowerShell.ConsoleHost\MonoDevelop.PackageManagement.PowerShell.ConsoleHost\PowerShellUserInterfaceHost.cs,PromptForCredential,The method has 6 parameters. Parameters: caption' message' userName' targetName' allowedCredentialTypes' options
Long Statement,MonoDevelop.PackageManagement.PowerShell.ConsoleHost,PowerShellConsoleHost,C:\research\architectureSmells\repos\mrward_monodevelop-nuget-extensions\src\MonoDevelop.PackageManagement.PowerShell.ConsoleHost\MonoDevelop.PackageManagement.PowerShell.ConsoleHost\PowerShellConsoleHost.cs,RunTabExpansionInternal,The length of the statement  "			string script = @"$__pc_args=@();$input|%{$__pc_args+=$_};if(Test-Path Function:\TabExpansion2){(TabExpansion2 $__pc_args[0] $__pc_args[0].length).CompletionMatches|%{$_.CompletionText}}else{TabExpansion $__pc_args[0] $__pc_args[1]};Remove-Variable __pc_args -Scope 0;";" is 270.
Missing Default,MonoDevelop.PackageManagement.PowerShell.ConsoleHost,PowerShellConsoleHost,C:\research\architectureSmells\repos\mrward_monodevelop-nuget-extensions\src\MonoDevelop.PackageManagement.PowerShell.ConsoleHost\MonoDevelop.PackageManagement.PowerShell.ConsoleHost\PowerShellConsoleHost.cs,CheckPipelineState,The following switch statement is missing a default case: switch (pipeline.PipelineStateInfo?.State) { 				case PipelineState.Completed: 				case PipelineState.Stopped: 				case PipelineState.Failed: 					if (pipeline.PipelineStateInfo.Reason != null) { 						ReportError (pipeline.PipelineStateInfo.Reason); 					} 					break; 			}
