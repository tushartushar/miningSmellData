Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,DeserializeResponse,Cyclomatic complexity of the method is 10
Complex Method,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseRateLimitHeaders,Cyclomatic complexity of the method is 10
Complex Method,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParsePullDetailHeaders,Cyclomatic complexity of the method is 10
Complex Method,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,Cyclomatic complexity of the method is 9
Complex Method,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,Cyclomatic complexity of the method is 22
Complex Method,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,Cyclomatic complexity of the method is 19
Complex Method,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Subscribe,Cyclomatic complexity of the method is 8
Complex Method,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,_connection_MessageReceived,Cyclomatic complexity of the method is 15
Long Parameter List,DataSift,DataSiftClient,F:\newReposMay17\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DataSiftClient,The method has 8 parameters.
Long Parameter List,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Prepare,The method has 6 parameters.
Long Parameter List,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The method has 5 parameters.
Long Parameter List,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The method has 8 parameters.
Long Parameter List,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The method has 7 parameters.
Long Parameter List,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The method has 8 parameters.
Long Parameter List,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Create,The method has 5 parameters.
Long Parameter List,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Update,The method has 6 parameters.
Long Parameter List,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The method has 6 parameters.
Long Parameter List,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The method has 6 parameters.
Long Parameter List,DataSift.Rest.Pylon,Task,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The method has 5 parameters.
Long Parameter List,DataSift.Rest.Pylon,Task,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Create,The method has 5 parameters.
Long Statement,DataSift,DataSiftClient,F:\newReposMay17\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DPU,The length of the statement  "	Contract.Requires<ArgumentException> (hash != null || historicsId != null' Messages.PUSH_MUST_PROVIDE_HASH_OR_HISTORIC); " is 120.
Long Statement,DataSift,DataSiftClient,F:\newReposMay17\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DPU,The length of the statement  "	Contract.Requires<ArgumentException> ((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch (hash) : true' Messages.INVALID_STREAM_HASH); " is 137.
Long Statement,DataSift,DataSiftClient,F:\newReposMay17\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DPU,The length of the statement  "	Contract.Requires<ArgumentException> ((historicsId != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (historicsId) : true' Messages.INVALID_HISTORICS_ID); " is 153.
Long Statement,DataSift,DataSiftClient,F:\newReposMay17\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,Pull,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift,DataSiftClient,F:\newReposMay17\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,Pull,The length of the statement  "	Contract.Requires<ArgumentException> ((cursor != null) ? Constants.CURSOR_FORMAT.IsMatch (cursor) : true' Messages.INVALID_CURSOR); " is 131.
Long Statement,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,The length of the statement  "			else if (!(endpoint.StartsWith ("list/") || endpoint.StartsWith ("source/")) && val.GetType ().IsArray && (val.GetType ().GetElementType () == typeof(string) || val.GetType ().GetElementType () == typeof(int))) " is 210.
Long Statement,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,The length of the statement  "			else if (!(endpoint.Contains ("/analyze")) && !(endpoint.Contains ("/task")) && (val.GetType ().IsGenericType || val.GetType () == typeof(ExpandoObject))) " is 154.
Long Statement,DataSift.Rest.Account,Account,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Account.cs,Usage,The length of the statement  "	Contract.Requires<ArgumentException> ((end != null && start != null) ? end > start : true' Messages.HISTORICS_START_MUST_BE_BEFORE_END); " is 136.
Long Statement,DataSift.Rest.Account,Identity,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_IDENTITY_ID); " is 133.
Long Statement,DataSift.Rest.Account,Identity,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_IDENTITY_ID); " is 133.
Long Statement,DataSift.Rest.Account,Identity,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Delete,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_IDENTITY_ID); " is 133.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Get,The length of the statement  "		return _client.GetRequest ().Request ("account/identity/" + identityId + "/limit/" + HttpUtility.UrlEncode (service)' null' Method.GET); " is 136.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Update,The length of the statement  "	return _client.GetRequest ().Request ("account/identity/" + identityId + "/limit/" + HttpUtility.UrlEncode (service)' new { " is 123.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Delete,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Limit,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Delete,The length of the statement  "	return _client.GetRequest ().Request ("account/identity/" + identityId + "/limit/" + HttpUtility.UrlEncode (service)' null' Method.DELETE); " is 139.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Get,The length of the statement  "		return _client.GetRequest ().Request ("account/identity/" + identityId + "/token/" + HttpUtility.UrlEncode (service)' null' Method.GET); " is 136.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Update,The length of the statement  "	return _client.GetRequest ().Request ("account/identity/" + identityId + "/token/" + HttpUtility.UrlEncode (service)' new { " is 123.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Delete,The length of the statement  "	Contract.Requires<ArgumentException> ((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch (identityId) : true' Messages.INVALID_IDENTITY_ID); " is 149.
Long Statement,DataSift.Rest.Account,Token,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Delete,The length of the statement  "	return _client.GetRequest ().Request ("account/identity/" + identityId + "/token/" + HttpUtility.UrlEncode (service)' null' Method.DELETE); " is 139.
Long Statement,DataSift.Rest,ODP,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\ODP.cs,Ingest,The length of the statement  "	Contract.Requires<ArgumentException> ((sourceId != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (sourceId) : true' Messages.INVALID_SOURCE_ID); " is 141.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Delete,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Start,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Stop,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Pause,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,Historics,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Resume,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_ID); " is 135.
Long Statement,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> (start >= new DateTimeOffset (2010' 1' 1' 0' 0' 0' TimeSpan.Zero)' Messages.HISTORICS_START_TOO_EARLY); " is 140.
Long Statement,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((end.HasValue) ? end <= DateTimeOffset.Now.AddHours (-1) : true' Messages.HISTORICS_END_TOO_LATE); " is 136.
Long Statement,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((end.HasValue) ? end > start : true' Messages.HISTORICS_START_MUST_BE_BEFORE_END); " is 120.
Long Statement,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.HISTORICS_PREVIEW_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_HISTORICS_PREVIEW_ID); " is 151.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch (hash) : true' Messages.INVALID_STREAM_HASH); " is 137.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((historicsId != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (historicsId) : true' Messages.INVALID_HISTORICS_ID); " is 153.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> (hash != null || historicsId != null' Messages.PUSH_MUST_PROVIDE_HASH_OR_HISTORIC); " is 120.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch (hash) : true' Messages.INVALID_STREAM_HASH); " is 137.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((historicsId != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch (historicsId) : true' Messages.INVALID_HISTORICS_ID); " is 153.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((end != null && start != null) ? end > start : true' Messages.HISTORICS_START_MUST_BE_BEFORE_END); " is 136.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Delete,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Stop,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Pause,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Resume,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Log,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,Push,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 141.
Long Statement,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The length of the statement  "		throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details."); " is 187.
Long Statement,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The length of the statement  "		throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit."); " is 180.
Long Statement,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The length of the statement  "		throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details."); " is 187.
Long Statement,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The length of the statement  "		throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit."); " is 180.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Start,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Stop,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Log,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Delete,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,ResourceAdd,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,ResourceRemove,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,AuthAdd,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest,Source,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Source.cs,AuthRemove,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_SOURCE_ID); " is 129.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_RECORDING_ID); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Start,The length of the statement  "	Contract.Requires<ArgumentException> ((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch (hash) : true' Messages.INVALID_STREAM_HASH); " is 137.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Start,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_RECORDING_ID); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Stop,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_RECORDING_ID); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_RECORDING_ID); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Update,The length of the statement  "	Contract.Requires<ArgumentException> ((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch (hash) : true' Messages.INVALID_STREAM_HASH); " is 137.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_RECORDING_ID); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "	Contract.Requires<ArgumentException> ((start != null) ? start <= DateTimeOffset.Now : true' Messages.ANALYSIS_START_TOO_LATE); " is 126.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "	Contract.Requires<ArgumentException> ((end != null) ? end <= DateTimeOffset.Now : true' Messages.ANALYSIS_END_TOO_LATE); " is 120.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "	Contract.Requires<ArgumentException> ((end != null && start != null) ? end > start : true' Messages.ANALYSIS_START_MUST_BE_BEFORE_END); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Tags,The length of the statement  "	Contract.Requires<ArgumentException> ((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (id) : true' Messages.INVALID_RECORDING_ID); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The length of the statement  "	Contract.Requires<ArgumentException> ((start != null) ? start <= DateTimeOffset.Now : true' Messages.ANALYSIS_START_TOO_LATE); " is 126.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The length of the statement  "	Contract.Requires<ArgumentException> ((end != null) ? end <= DateTimeOffset.Now : true' Messages.ANALYSIS_END_TOO_LATE); " is 120.
Long Statement,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The length of the statement  "	Contract.Requires<ArgumentException> ((end != null && start != null) ? end > start : true' Messages.ANALYSIS_START_MUST_BE_BEFORE_END); " is 135.
Long Statement,DataSift.Rest.Pylon,Task,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The length of the statement  "	Contract.Requires<ArgumentException> ((taskId != null) ? Constants.TASK_ID_FORMAT.IsMatch (taskId) : true' Messages.INVALID_TASK_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Task,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The length of the statement  "		return _client.GetRequest ().Request ("pylon/" + HttpUtility.UrlEncode (service) + "/task/" + type + "/" + taskId' null' Method.GET); " is 133.
Long Statement,DataSift.Rest.Pylon,Task,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Create,The length of the statement  "	Contract.Requires<ArgumentException> ((recordingId != null) ? Constants.RECORDING_ID_FORMAT.IsMatch (recordingId) : true' Messages.INVALID_RECORDING_ID); " is 153.
Long Statement,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Connect,The length of the statement  "	var url = String.Format ("{0}://{1}/multi?statuses=true&username={2}&api_key={3}"' protocol' _domain' username' apikey); " is 120.
Long Statement,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The length of the statement  "					FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ())); " is 215.
Complex Conditional,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,The conditional expression  "!(endpoint.StartsWith ("list/") || endpoint.StartsWith ("source/")) && val.GetType ().IsArray && (val.GetType ().GetElementType () == typeof(string) || val.GetType ().GetElementType () == typeof(int))"  is complex.
Complex Conditional,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,The conditional expression  "!(endpoint.Contains ("/analyze")) && !(endpoint.Contains ("/task")) && (val.GetType ().IsGenericType || val.GetType () == typeof(ExpandoObject))"  is complex.
Magic Number,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The following statement contains a magic number: Contract.Requires<ArgumentException> (start >= new DateTimeOffset (2010' 1' 1' 0' 0' 0' TimeSpan.Zero)' Messages.HISTORICS_START_TOO_EARLY);  
Magic Number,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The following statement contains a magic number: Contract.Requires<ArgumentException> (start <= DateTimeOffset.Now.AddHours (-2)' Messages.HISTORICS_START_TOO_LATE);  
Magic Number,DataSift.Rest,HistoricsPreview,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The following statement contains a magic number: Contract.Requires<ArgumentException> (parameters.Count <= 20);  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Magic Number,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The following statement contains a magic number: Contract.Requires<ArgumentException> ((count != null) ? count >= 10 : true' Messages.INVALID_COUNT);  
Magic Number,DataSift.Rest.Pylon,Pylon,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The following statement contains a magic number: Contract.Requires<ArgumentException> ((count != null) ? count <= 100 : true' Messages.INVALID_COUNT);  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,_connection_Opened,The following statement contains a magic number: _deadConnectionChecker = new System.Timers.Timer (10000);  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,CheckForDeadConnection,The following statement contains a magic number: if (_reconnecting || (_connectedTime > (DateTime.Now.Subtract (new TimeSpan (0' 0' 60)))))  	return;  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,CheckForDeadConnection,The following statement contains a magic number: if (_connection.LastActiveTime < (DateTime.Now.Subtract (new TimeSpan (0' 0' 60)))) {  	Trace.TraceWarning ("Connection appears dead - attempting reconnection.");  	Reconnect (false' false' false);  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (_autoReconnect && !_reconnecting) {  	_deadConnectionChecker.Stop ();  	if (!withBackoff) {  		Trace.TraceInformation ("Reconnecting to DataSift' without delay.");  		_reconnecting = true;  		_connection.Reconnect ();  	} else {  		if (_connectRetries >= _connectRetriesMax) {  			Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  			if (fromError)  				FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  			else if (fromClose)  				FireClose ();  		} else {  			int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  			_connectRetries++;  			_reconnecting = true;  			Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  			Thread.Sleep (wait * 1000);  			_connection.Reconnect ();  		}  	}  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (_autoReconnect && !_reconnecting) {  	_deadConnectionChecker.Stop ();  	if (!withBackoff) {  		Trace.TraceInformation ("Reconnecting to DataSift' without delay.");  		_reconnecting = true;  		_connection.Reconnect ();  	} else {  		if (_connectRetries >= _connectRetriesMax) {  			Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  			if (fromError)  				FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  			else if (fromClose)  				FireClose ();  		} else {  			int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  			_connectRetries++;  			_reconnecting = true;  			Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  			Thread.Sleep (wait * 1000);  			_connection.Reconnect ();  		}  	}  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (_autoReconnect && !_reconnecting) {  	_deadConnectionChecker.Stop ();  	if (!withBackoff) {  		Trace.TraceInformation ("Reconnecting to DataSift' without delay.");  		_reconnecting = true;  		_connection.Reconnect ();  	} else {  		if (_connectRetries >= _connectRetriesMax) {  			Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  			if (fromError)  				FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  			else if (fromClose)  				FireClose ();  		} else {  			int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  			_connectRetries++;  			_reconnecting = true;  			Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  			Thread.Sleep (wait * 1000);  			_connection.Reconnect ();  		}  	}  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (!withBackoff) {  	Trace.TraceInformation ("Reconnecting to DataSift' without delay.");  	_reconnecting = true;  	_connection.Reconnect ();  } else {  	if (_connectRetries >= _connectRetriesMax) {  		Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  		if (fromError)  			FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  		else if (fromClose)  			FireClose ();  	} else {  		int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  		_connectRetries++;  		_reconnecting = true;  		Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  		Thread.Sleep (wait * 1000);  		_connection.Reconnect ();  	}  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (!withBackoff) {  	Trace.TraceInformation ("Reconnecting to DataSift' without delay.");  	_reconnecting = true;  	_connection.Reconnect ();  } else {  	if (_connectRetries >= _connectRetriesMax) {  		Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  		if (fromError)  			FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  		else if (fromClose)  			FireClose ();  	} else {  		int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  		_connectRetries++;  		_reconnecting = true;  		Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  		Thread.Sleep (wait * 1000);  		_connection.Reconnect ();  	}  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (!withBackoff) {  	Trace.TraceInformation ("Reconnecting to DataSift' without delay.");  	_reconnecting = true;  	_connection.Reconnect ();  } else {  	if (_connectRetries >= _connectRetriesMax) {  		Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  		if (fromError)  			FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  		else if (fromClose)  			FireClose ();  	} else {  		int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  		_connectRetries++;  		_reconnecting = true;  		Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  		Thread.Sleep (wait * 1000);  		_connection.Reconnect ();  	}  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (_connectRetries >= _connectRetriesMax) {  	Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  	if (fromError)  		FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  	else if (fromClose)  		FireClose ();  } else {  	int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  	_connectRetries++;  	_reconnecting = true;  	Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  	Thread.Sleep (wait * 1000);  	_connection.Reconnect ();  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (_connectRetries >= _connectRetriesMax) {  	Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  	if (fromError)  		FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  	else if (fromClose)  		FireClose ();  } else {  	int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  	_connectRetries++;  	_reconnecting = true;  	Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  	Thread.Sleep (wait * 1000);  	_connection.Reconnect ();  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: if (_connectRetries >= _connectRetriesMax) {  	Trace.TraceWarning ("Reached maximum number of reconnection retries: " + _connectRetriesMax.ToString ());  	if (fromError)  		FireError (new StreamAPIException ("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException ()));  	else if (fromClose)  		FireClose ();  } else {  	int wait = (int)(10 * (Math.Pow (2' _connectRetries)));  	_connectRetries++;  	_reconnecting = true;  	Trace.TraceInformation ("Reconnecting to DataSift' with backoff (in seconds): " + wait.ToString ());  	Thread.Sleep (wait * 1000);  	_connection.Reconnect ();  }  
Magic Number,DataSift.Streaming,DataSiftStream,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The following statement contains a magic number: Thread.Sleep (wait * 1000);  
Magic Number,DataSift.Streaming,StreamConnection,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Streaming\StreamConnection.cs,Setup,The following statement contains a magic number: _websocket.AutoSendPingInterval = 30;  
Missing Default,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseRateLimitHeaders,The following switch statement is missing a default case: switch (header.Name.ToLower ()) {  case Constants.HEADER_RATELIMIT_LIMIT:  	result.Limit = int.Parse ((string)header.Value);  	break;  case Constants.HEADER_RATELIMIT_REMAINING:  	result.Remaining = int.Parse ((string)header.Value);  	break;  case Constants.HEADER_RATELIMIT_COST:  	result.Cost = int.Parse ((string)header.Value);  	break;  }  
Missing Default,DataSift,APIHelpers,F:\newReposMay17\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParsePullDetailHeaders,The following switch statement is missing a default case: switch (header.Name) {  case Constants.HEADER_DATA_FORMAT:  	result.Format = (string)header.Value;  	break;  case Constants.HEADER_CURSOR_CURRENT:  	result.CursorCurrent = (string)header.Value;  	break;  case Constants.HEADER_CURSOR_NEXT:  	result.CursorNext = (string)header.Value;  	break;  }  
Missing Default,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following switch statement is missing a default case: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
Missing Default,DataSift.Rest,RestAPIRequest,F:\newReposMay17\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following switch statement is missing a default case: switch ((int)response.StatusCode) {  // Ok status codes  case 200:  case 201:  case 202:  case 204:  	break;  //Error status codes  case 400:  case 401:  case 403:  case 404:  case 405:  case 409:  case 413:  case 416:  case 500:  case 503:  	throw new RestAPIException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");  case 429:  	throw new TooManyRequestsException (result' (APIHelpers.HasAttr (result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");  }  
