Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,DeserializeResponse,Cyclomatic complexity of the method is 10
Complex Method,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,Cyclomatic complexity of the method is 9
Complex Method,DataSift.Streaming,DataSiftStream,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Subscribe,Cyclomatic complexity of the method is 8
Complex Method,DataSift.Streaming,DataSiftStream,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,_connection_MessageReceived,Cyclomatic complexity of the method is 15
Long Parameter List,DataSift,DataSiftClient,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DataSiftClient,The method has 8 parameters. Parameters: username' apikey' requestCreator' connectionCreator' ingestRequestCreator' baseUrl' apiVersion' baseIngestUrl
Long Parameter List,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Prepare,The method has 6 parameters. Parameters: hash' start' end' name' sources' sample
Long Parameter List,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The method has 5 parameters. Parameters: hash' sources' parameters' start' end
Long Parameter List,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The method has 8 parameters. Parameters: id' hash' historicsId' page' perPage' orderBy' orderDirection' includeFinished
Long Parameter List,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The method has 7 parameters. Parameters: name' outputType' hash' historicsId' initialStatus' start' end
Long Parameter List,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The method has 8 parameters. Parameters: name' outputType' outputParameters' hash' historicsId' initialStatus' start' end
Long Parameter List,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Create,The method has 5 parameters. Parameters: sourceType' name' parameters' resources' auth
Long Parameter List,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Update,The method has 6 parameters. Parameters: id' sourceType' name' parameters' resources' auth
Long Parameter List,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The method has 6 parameters. Parameters: service' id' parameters' filter' start' end
Long Parameter List,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The method has 6 parameters. Parameters: service' id' count' start' end' filter
Long Parameter List,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The method has 5 parameters. Parameters: service' type' taskId' page' perPage
Long Parameter List,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Create,The method has 5 parameters. Parameters: service' recordingId' name' type' parameters
Long Identifier,DataSift,Constants,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Constants.cs,,The length of the parameter DATA_FORMAT_META_PLUS_INTERACTIONS is 34.
Long Identifier,DataSift,Constants,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Constants.cs,,The length of the parameter DATA_FORMAT_ARRAY_INTERACTIONS is 30.
Long Identifier,DataSift,Constants,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Constants.cs,,The length of the parameter DATA_FORMAT_NEWLINE_INTERACTIONS is 32.
Long Identifier,DataSift,Messages,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Messages.cs,,The length of the parameter HISTORICS_START_MUST_BE_BEFORE_END is 34.
Long Identifier,DataSift,Messages,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Messages.cs,,The length of the parameter HISTORICS_END_CANNOT_BE_IN_FUTURE is 33.
Long Identifier,DataSift,Messages,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Messages.cs,,The length of the parameter PUSH_MUST_PROVIDE_HASH_OR_HISTORIC is 34.
Long Identifier,DataSift,Messages,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Messages.cs,,The length of the parameter ANALYSIS_START_MUST_BE_BEFORE_END is 33.
Long Statement,DataSift,DataSiftClient,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DPU,The length of the statement  "            Contract.Requires<ArgumentException>((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch(hash) : true' Messages.INVALID_STREAM_HASH); " is 135.
Long Statement,DataSift,DataSiftClient,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,DPU,The length of the statement  "            Contract.Requires<ArgumentException>((historicsId != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(historicsId) : true' Messages.INVALID_HISTORICS_ID); " is 151.
Long Statement,DataSift,DataSiftClient,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,Pull,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift,DataSiftClient,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\DataSiftClient.cs,Pull,The length of the statement  "            Contract.Requires<ArgumentException>((cursor != null) ? Constants.CURSOR_FORMAT.IsMatch(cursor) : true' Messages.INVALID_CURSOR); " is 129.
Long Statement,DataSift.Rest.Account,Identity,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Create,The length of the statement  "            return _client.GetRequest().Request("account/identity"' new { label = label' status = status' master = master }' Method.POST); " is 126.
Long Statement,DataSift.Rest.Account,Identity,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_IDENTITY_ID); " is 131.
Long Statement,DataSift.Rest.Account,Identity,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Get,The length of the statement  "                return _client.GetRequest().Request("account/identity"' new { id = id' label = label' page = page' per_page = perPage }' Method.GET); " is 133.
Long Statement,DataSift.Rest.Account,Identity,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_IDENTITY_ID); " is 131.
Long Statement,DataSift.Rest.Account,Identity,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Update,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + id' new { label = label' status= status' master = master }' Method.PUT); " is 130.
Long Statement,DataSift.Rest.Account,Identity,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Identity.cs,Delete,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_IDENTITY_ID); " is 131.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Create,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + identityId + "/limit"' new { service = service' total_allowance = totalAllowance' analyze_queries = analyzeQueries }' Method.POST); " is 189.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Get,The length of the statement  "                return _client.GetRequest().Request("account/identity/" + identityId + "/limit/" + HttpUtility.UrlEncode(service)' null' Method.GET); " is 133.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Get,The length of the statement  "                return _client.GetRequest().Request("account/identity/limit/" + HttpUtility.UrlEncode(service)' new { page = page' per_page = perPage }' Method.GET); " is 149.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Update,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + identityId + "/limit/" + HttpUtility.UrlEncode(service)' new { total_allowance = totalAllowance' analyze_queries = analyzeQueries }' Method.PUT); " is 203.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Delete,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Limit,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Limit.cs,Delete,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + identityId + "/limit/" + HttpUtility.UrlEncode(service)' null' Method.DELETE); " is 136.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Create,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + identityId + "/token"' new { service = service' token = token }' Method.POST); " is 136.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Get,The length of the statement  "                return _client.GetRequest().Request("account/identity/" + identityId + "/token/" + HttpUtility.UrlEncode(service)' null' Method.GET); " is 133.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Get,The length of the statement  "                return _client.GetRequest().Request("account/identity/" + identityId + "/token"' new { page = page' per_page = perPage }' Method.GET); " is 134.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Update,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + identityId + "/token/" + HttpUtility.UrlEncode(service)' new { token = token }' Method.PUT); " is 150.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Delete,The length of the statement  "            Contract.Requires<ArgumentException>((identityId != null) ? Constants.IDENTITY_ID_FORMAT.IsMatch(identityId) : true' Messages.INVALID_IDENTITY_ID); " is 147.
Long Statement,DataSift.Rest.Account,Token,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Account\Token.cs,Delete,The length of the statement  "            return _client.GetRequest().Request("account/identity/" + identityId + "/token/" + HttpUtility.UrlEncode(service)' null' Method.DELETE); " is 136.
Long Statement,DataSift.Rest,ODP,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\ODP.cs,Ingest,The length of the statement  "            Contract.Requires<ArgumentException>((sourceId != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(sourceId) : true' Messages.INVALID_SOURCE_ID); " is 139.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Get,The length of the statement  "            return _client.GetRequest().Request("historics/get"' new { id = id' max = max' page = page' with_estimate = withEstimate }); " is 124.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Prepare,The length of the statement  "            return _client.GetRequest().Request("historics/prepare"' new { hash = hash' start = start' end = end' name = name' sources = sources' sample = sample }' Method.POST); " is 166.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Delete,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Start,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Stop,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Pause,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,Historics,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Historics.cs,Resume,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_ID); " is 133.
Long Statement,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>(start >= new DateTimeOffset(2010' 1' 1' 0' 0' 0' TimeSpan.Zero)' Messages.HISTORICS_START_TOO_EARLY); " is 138.
Long Statement,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((end.HasValue) ? end <= DateTimeOffset.Now.AddHours(-1) : true' Messages.HISTORICS_END_TOO_LATE); " is 134.
Long Statement,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The length of the statement  "            return _client.GetRequest().Request("preview/create"' new { hash = hash' sources = sources' parameters = parameters' start = start' end = end }' Method.POST); " is 158.
Long Statement,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.HISTORICS_PREVIEW_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_HISTORICS_PREVIEW_ID); " is 149.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch(hash) : true' Messages.INVALID_STREAM_HASH); " is 135.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((historicsId != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(historicsId) : true' Messages.INVALID_HISTORICS_ID); " is 151.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Get,The length of the statement  "            return _client.GetRequest().Request("push/get"' new { id = id' hash = hash' historics_id = historicsId' page = page' per_page = perPage' order_by = orderBy' order_dir = orderDirection' include_finished = includeFinished }); " is 223.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Validate,The length of the statement  "            return _client.GetRequest().Request("push/validate"' new { output_type = outputType' output_params = outputParameters }' Method.POST); " is 134.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch(hash) : true' Messages.INVALID_STREAM_HASH); " is 135.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((historicsId != null) ? Constants.HISTORICS_ID_FORMAT.IsMatch(historicsId) : true' Messages.INVALID_HISTORICS_ID); " is 151.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((end != null && start != null) ? end > start : true' Messages.HISTORICS_START_MUST_BE_BEFORE_END); " is 135.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Create,The length of the statement  "            return _client.GetRequest().Request("push/create"' new { name = name' output_type = outputType' output_params = outputParameters' hash = hash' historics_id = historicsId'  " is 170.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Delete,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Stop,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Pause,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Resume,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Log,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Log,The length of the statement  "            return _client.GetRequest().Request("push/log"' new { id = id' page = page' perPage = perPage' order_dir = orderDirection }); " is 125.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SUBSCRIPTION_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SUBSCRIPTION_ID); " is 139.
Long Statement,DataSift.Rest,Push,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Push.cs,Update,The length of the statement  "            return _client.GetRequest().Request("push/update"' new { id = id' name = name' output_params = outputParameters }' Method.PUT); " is 127.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The length of the statement  "                result = new PullAPIResponse() { RateLimit = APIHelpers.ParseRateLimitHeaders(response.Headers)' StatusCode = response.StatusCode' PullDetails = APIHelpers.ParsePullDetailHeaders(response.Headers) }; " is 199.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The length of the statement  "                result = new RestAPIResponse() { RateLimit = APIHelpers.ParseRateLimitHeaders(response.Headers)' StatusCode = response.StatusCode }; " is 132.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The length of the statement  "                    throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details."); " is 185.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The length of the statement  "                    throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit."); " is 178.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The length of the statement  "            result = new RestAPIResponse() { RateLimit = APIHelpers.ParseRateLimitHeaders(response.Headers)' StatusCode = response.StatusCode }; " is 132.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The length of the statement  "                    throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details."); " is 185.
Long Statement,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The length of the statement  "                    throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit."); " is 178.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Start,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Create,The length of the statement  "            return _client.GetRequest().Request("source/create"' new { source_type = sourceType' name = name' parameters = parameters' resources = resources' auth = auth } ); " is 162.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Stop,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Log,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Update,The length of the statement  "            return _client.GetRequest().Request("source/update"' new { source_type = sourceType' name = name' id = id' parameters = parameters' resources = resources' auth = auth }); " is 170.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Delete,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,Get,The length of the statement  "            return _client.GetRequest().Request("source/get"' new { source_type = sourceType' page = page' per_page = perPage' id = id }); " is 126.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,ResourceAdd,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,ResourceAdd,The length of the statement  "            return _client.GetRequest().Request("source/resource/add"' new { id = id' resources = resources' validate = validate }); " is 120.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,ResourceRemove,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,AuthAdd,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest,Source,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Source.cs,AuthRemove,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.SOURCE_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_SOURCE_ID); " is 127.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_RECORDING_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Validate,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/validate"' new { csdl = csdl }' Method.POST); " is 127.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Compile,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/compile"' new { csdl = csdl }' Method.POST); " is 126.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Start,The length of the statement  "            Contract.Requires<ArgumentException>((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch(hash) : true' Messages.INVALID_STREAM_HASH); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Start,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_RECORDING_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Start,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/start"' new { hash = hash' name = name' id = id }' Method.PUT); " is 145.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Stop,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_RECORDING_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_RECORDING_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Update,The length of the statement  "            Contract.Requires<ArgumentException>((hash != null) ? Constants.STREAM_HASH_FORMAT.IsMatch(hash) : true' Messages.INVALID_STREAM_HASH); " is 135.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Update,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/update"' new { id =id' hash = hash' name = name }' Method.PUT); " is 145.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_RECORDING_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "            Contract.Requires<ArgumentException>((start != null) ? start <= DateTimeOffset.Now : true' Messages.ANALYSIS_START_TOO_LATE); " is 125.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "            Contract.Requires<ArgumentException>((end != null && start != null) ? end > start : true' Messages.ANALYSIS_START_MUST_BE_BEFORE_END); " is 134.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Analyze,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/analyze"' new { id = id' parameters = parameters' filter = filter' start = start' end = end }' Method.POST); " is 190.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Tags,The length of the statement  "            Contract.Requires<ArgumentException>((id != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(id) : true' Messages.INVALID_RECORDING_ID); " is 133.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The length of the statement  "            Contract.Requires<ArgumentException>((start != null) ? start <= DateTimeOffset.Now : true' Messages.ANALYSIS_START_TOO_LATE); " is 125.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The length of the statement  "            Contract.Requires<ArgumentException>((end != null && start != null) ? end > start : true' Messages.ANALYSIS_START_MUST_BE_BEFORE_END); " is 134.
Long Statement,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/sample"' new { id = id' count = count' start = start' end = end' filter = filter }); " is 166.
Long Statement,DataSift.Rest.Pylon,Reference,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Reference.cs,Get,The length of the statement  "                return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/reference/" + HttpUtility.UrlEncode(slug)' null' Method.GET); " is 143.
Long Statement,DataSift.Rest.Pylon,Reference,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Reference.cs,Get,The length of the statement  "                return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/reference"' new { page = page' per_page = perPage }' Method.GET); " is 147.
Long Statement,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The length of the statement  "            Contract.Requires<ArgumentException>((taskId != null) ? Constants.TASK_ID_FORMAT.IsMatch(taskId) : true' Messages.INVALID_TASK_ID); " is 131.
Long Statement,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The length of the statement  "                return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/task/" + type + "/" + taskId' null' Method.GET); " is 130.
Long Statement,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Get,The length of the statement  "                return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/task/" + type' new { page = page' per_page = perPage }' Method.GET); " is 150.
Long Statement,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Create,The length of the statement  "            Contract.Requires<ArgumentException>((recordingId != null) ? Constants.RECORDING_ID_FORMAT.IsMatch(recordingId) : true' Messages.INVALID_RECORDING_ID); " is 151.
Long Statement,DataSift.Rest.Pylon,Task,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Task.cs,Create,The length of the statement  "            return _client.GetRequest().Request("pylon/" + HttpUtility.UrlEncode(service) + "/task"' new { subscription_id = recordingId' name = name' type = type' parameters = parameters }' Method.POST); " is 192.
Long Statement,DataSift.Streaming,DataSiftStream,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,Reconnect,The length of the statement  "                            FireError(new StreamAPIException("Failed to reconnect to DataSift after multiple attempts. Try inspecting the application trace or disabling autoReconnect to investigate the issue."' new ApplicationException())); " is 212.
Complex Conditional,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,The conditional expression  "!(endpoint.StartsWith("list/") || endpoint.StartsWith("source/"))                              &&val.GetType().IsArray                               && (val.GetType().GetElementType() == typeof(string) || val.GetType().GetElementType() == typeof(int))"  is complex.
Complex Conditional,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseParameters,The conditional expression  "!(endpoint.Contains("/analyze")) && !(endpoint.Contains("/task"))                                  && (val.GetType().IsGenericType || val.GetType() == typeof(ExpandoObject))"  is complex.
Magic Number,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ToUnixTime,The following statement contains a magic number: var posixTime = DateTime.SpecifyKind(new DateTime(1970' 1' 1)' DateTimeKind.Utc);
Magic Number,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The following statement contains a magic number: Contract.Requires<ArgumentException>(start >= new DateTimeOffset(2010' 1' 1' 0' 0' 0' TimeSpan.Zero)' Messages.HISTORICS_START_TOO_EARLY);
Magic Number,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The following statement contains a magic number: Contract.Requires<ArgumentException>(start <= DateTimeOffset.Now.AddHours(-2)' Messages.HISTORICS_START_TOO_LATE);
Magic Number,DataSift.Rest,HistoricsPreview,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\HistoricsPreview.cs,Create,The following statement contains a magic number: Contract.Requires<ArgumentException>(parameters.Count <= 20);
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following statement contains a magic number: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following statement contains a magic number: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Magic Number,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The following statement contains a magic number: Contract.Requires<ArgumentException>((count != null) ? count >= 10 : true' Messages.INVALID_COUNT);
Magic Number,DataSift.Rest.Pylon,Pylon,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\Pylon\Pylon.cs,Sample,The following statement contains a magic number: Contract.Requires<ArgumentException>((count != null) ? count <= 100 : true' Messages.INVALID_COUNT);
Magic Number,DataSift.Streaming,DataSiftStream,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,_connection_Opened,The following statement contains a magic number: _deadConnectionChecker = new System.Timers.Timer(10000);
Magic Number,DataSift.Streaming,DataSiftStream,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,CheckForDeadConnection,The following statement contains a magic number: _reconnecting || (_connectedTime > (DateTime.Now.Subtract(new TimeSpan(0' 0' 60))))
Magic Number,DataSift.Streaming,DataSiftStream,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\DataSiftStream.cs,CheckForDeadConnection,The following statement contains a magic number: _connection.LastActiveTime < (DateTime.Now.Subtract(new TimeSpan(0'0'60)))
Magic Number,DataSift.Streaming,StreamConnection,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Streaming\StreamConnection.cs,Setup,The following statement contains a magic number: _websocket.AutoSendPingInterval = 30;
Missing Default,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParseRateLimitHeaders,The following switch statement is missing a default case: switch (header.Name.ToLower())                  {                      case Constants.HEADER_RATELIMIT_LIMIT:                          result.Limit = int.Parse((string)header.Value);                          break;                      case Constants.HEADER_RATELIMIT_REMAINING:                          result.Remaining = int.Parse((string)header.Value);                          break;                      case Constants.HEADER_RATELIMIT_COST:                          result.Cost = int.Parse((string)header.Value);                          break;                  }
Missing Default,DataSift,APIHelpers,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\APIHelpers.cs,ParsePullDetailHeaders,The following switch statement is missing a default case: switch (header.Name)                  {                      case Constants.HEADER_DATA_FORMAT:                          result.Format = (string)header.Value;                          break;                      case Constants.HEADER_CURSOR_CURRENT:                          result.CursorCurrent = (string)header.Value;                          break;                      case Constants.HEADER_CURSOR_NEXT:                          result.CursorNext = (string)header.Value;                          break;                  }
Missing Default,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Request,The following switch statement is missing a default case: switch((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
Missing Default,DataSift.Rest,RestAPIRequest,D:\research\architectureSmells\repos\datasift_datasift-dotnet\DataSift\Rest\RestAPIRequest.cs,Ingest,The following switch statement is missing a default case: switch ((int)response.StatusCode)              {                  // Ok status codes                  case 200:                  case 201:                  case 202:                  case 204:                      break;                    //Error status codes                  case 400:                  case 401:                  case 403:                  case 404:                  case 405:                  case 409:                  case 413:                  case 416:                  case 500:                  case 503:                      throw new RestAPIException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed' please see the Data & StatusCode properties for more details.");                    case 429:                      throw new TooManyRequestsException(result' (APIHelpers.HasAttr(result.Data' "error")) ? result.Data.error : "The request failed because you've exceeded your API request limit.");              }
