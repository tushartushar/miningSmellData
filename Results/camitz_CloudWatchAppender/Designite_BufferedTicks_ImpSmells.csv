Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The length of the statement  "            Console.WriteLine("All {0} ticks in {1} ms.\nWaiting for requests to complete."' nTicks' stopWatch.ElapsedMilliseconds); " is 120.
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: log.InfoFormat("A tick! Namespace: {1} MetricCOMMENTName: {2} Dimension: TestDim: {3} Value: {0} {4}"'                          random.NextDouble() * (1e5 - 1e2) + 1e2'                          nss[random.Next(2)]' names[random.Next(2)]' dims[random.Next(2)]' units[random.Next(3)]);
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: random.Next(2) == 0
Magic Number,BufferedTicks,BufferedTicks,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Examples\BufferedTicks\Program.cs,Main,The following statement contains a magic number: Thread.Sleep(10);
