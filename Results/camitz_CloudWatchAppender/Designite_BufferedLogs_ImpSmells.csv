Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The length of the statement  "            Console.WriteLine("All {0} ticks in {1} ms.\nWaiting for requests to complete."' nTicks' stopWatch.ElapsedMilliseconds); " is 120.
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
Magic Number,BufferedLogs,BufferedLogs,C:\repos\camitz_CloudWatchAppender\Examples\BufferedLogs\BufferedLogs.cs,Main,The following statement contains a magic number: for (int i = 0; i < nTicks; i++)              {                  //log.Info("A tick! Value: 2' Unit: Bytes' Unit: Kilobytes");                    if (random.Next(2) == 0)                      log.InfoFormat("A tick! Groupname: {0} Streamname: {1} Gauge: {2}"'                          groups[random.Next(2)]' streams[random.Next(2)]' random.Next(200));                  else                      log.Info(new LogDatum("A tick!")                      {                          GroupName = groups[random.Next(2)]'                          StreamName = streams[random.Next(2)]'                          Timestamp = DateTime.UtcNow                      });                    log.Info("Message: sample text for logging");                    Thread.Sleep(10);              }
