Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,SingleValueAndUnit2,The length of the statement  "            var parsedData = parser.Parse("A tick! {Bar: { Foo: 4.0' Value: 3.0' Unit: \"Kilobytes/Second\"' \"Type\": \"Timing\"}} {Value: { Other: 4.0' Value: 3.0' Unit: \"Kilobytes/Second\"' \"Type\": \"Timing\"}}"); " is 207.
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics,The length of the statement  "                "A tick! {SampleCount: 3000' Minimum: { value:1.3' unit:\"Gigabits/Second\"}'  Maximum: \"127.9 Gigabits/Second\"'  Sum: {value: \"15000.5\"' \"unit\": \"Gigabits/Second\"}}"); " is 176.
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics2,The length of the statement  "                "A tick! {SampleCount: {value:3000}' Minimum: { value:1.3' unit:\"Gigabits/Second\"}' Maximum: {value:\"127.9\"'unit: \"Gigabits/Second\"}' Sum: {value: \"15000.5\"' \"unit\": \"Gigabits/Second\"}}"); " is 200.
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics3,The length of the statement  "                "A tick! {SampleCount: {value:3000}' Minimum: 1.3 Gigabits/Second' Maximum: \"127.9 Gigabits/Second\"' Sum: {value: \"15000.5\"' \"unit\": \"Gigabits/Second\"}}"); " is 163.
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics,The length of the statement  "                "A tick! SampleCount: 3000' Minimum: 1.3 Gigabits/Second' Maximum: 127.9 Gigabits/Second' Sum: 15000.5 Gigabits/Second"); " is 121.
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The length of the statement  "                "A tick! SampleCount: 3000' Minimum: 1.3 Gigabits/Second' Maximum: 127.9 Gigabits/Second' Sum: 15000.1 Gigabits/Second"); " is 121.
Long Statement,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides,The length of the statement  "            var parsedData = parser.Parse("A tick! Dummy: 4.6 Kilobytes Dimensions: (InstanceID: qwerty' Fruit: apple) Value: 4.5 Seconds "); " is 129.
Long Statement,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AmazonMetricDatum,The length of the statement  "            Assert.That(t.ToString()' Is.StringContaining("Timestamp: " + DateTime.Parse("2012-09-11 11:11").ToString(CultureInfo.CurrentCulture))); " is 136.
Long Statement,CloudWatchAppender.Tests,PatternConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\PatternConverterTests.cs,TestStackTracePattern,The length of the statement  "            Assert.AreEqual("System.RuntimeMethodHandle.InvokeMethod > CloudWatchAppender.Tests.PatternConverterTests.TestStackTracePattern"' stringAppender.GetString()' "stack trace value set"); " is 183.
Long Statement,CloudWatchAppender.Tests,PatternConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\PatternConverterTests.cs,TestStackTracePattern,The length of the statement  "            Assert.AreEqual("MonoMethod.InternalInvoke > PatternConverterTests.TestStackTracePattern"' stringAppender.GetString()' "stack trace value set"); " is 144.
Long Statement,CloudWatchAppender.Tests,PatternParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\PatternParserTests.cs,TestStackTracePattern,The length of the statement  "            Assert.AreEqual("log4net.Layout.LayoutSkeleton.Format > log4net.Layout.PatternLayout.Format > log4net.Util.PatternConverter.Format > log4net.Layout.Pattern.PatternLayoutConverter.Convert > log4net.Layout.Pattern.StackTracePatternConverter.Convert > log4net.Core.LoggingEvent.get_LocationInformation"' " is 300.
Long Statement,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The length of the statement  "            Assert.That(() => { UnitConverter.Convert(1000).From(StandardUnit.Megabytes).To(StandardUnit.Seconds); }' Throws.Exception); " is 124.
Long Statement,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The length of the statement  "            Assert.That(UnitConverter.Convert(1000).From(StandardUnit.TerabytesSecond).To(StandardUnit.TerabitsSecond)' Is.EqualTo(8000)); " is 126.
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Bytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Kilobits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Bytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Kilobits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Bytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Kilobits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Bytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Kilobits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Bytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Kilobits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.SampleCount' Is.EqualTo(4));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Maximum' Is.EqualTo(7 * 1024 / 8));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Maximum' Is.EqualTo(7 * 1024 / 8));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Maximum' Is.EqualTo(7 * 1024 / 8));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Minimum' Is.EqualTo(11));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(19 * 1024 / 8 + 11));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(19 * 1024 / 8 + 11));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(19 * 1024 / 8 + 11));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(19 * 1024 / 8 + 11));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Kilobytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Bits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Kilobytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Bits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Kilobytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Bits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Kilobytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Bits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: var result = BufferingAggregatingCloudWatchAppender.Assemble(new[]{new PutMetricDataRequest                                       {                                           MetricData = new List<MetricDatum>()                                                        {                                                            new MetricDatum()                                                            {                                                                Value = 11'                                                                Unit = "Kilobytes"                                                            }'                                                            new MetricDatum()                                                            {                                                                StatisticValues = new StatisticSet()                                                                                  {                                                                                      Maximum = 7'                                                                                      Minimum = 6'                                                                                      SampleCount = 3'                                                                                      Sum = 19                                                                                  }'                                                                                  Unit="Bits"                                                            }                                                        }                                       }});
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.SampleCount' Is.EqualTo(4));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Maximum' Is.EqualTo(11 * 1024 * 8));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Maximum' Is.EqualTo(11 * 1024 * 8));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Maximum' Is.EqualTo(11 * 1024 * 8));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Minimum' Is.EqualTo(6));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(11 * 1024 * 8 + 19));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(11 * 1024 * 8 + 19));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(11 * 1024 * 8 + 19));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping2,The following statement contains a magic number: Assert.That(result.Single().MetricData.Single().StatisticValues.Sum' Is.EqualTo(11 * 1024 * 8 + 19));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping_IncompatibleUnits,The following statement contains a magic number: Assert.Throws<ConversionNotSupportedException>(() =>                  BufferingAggregatingCloudWatchAppender.Assemble(new[]                                                                  {                                                                      new PutMetricDataRequest                                                                      {                                                                          MetricData = new List<MetricDatum>()                                                                                       {                                                                                           new MetricDatum()                                                                                           {                                                                                               Value = 11'                                                                                               Unit = "Kilobytes"                                                                                           }'                                                                                           new MetricDatum()                                                                                           {                                                                                               StatisticValues =                                                                                                   new StatisticSet()                                                                                                   {                                                                                                       Maximum = 7'                                                                                                       Minimum = 6'                                                                                                       SampleCount = 3'                                                                                                       Sum = 19                                                                                                   }'                                                                                               Unit = "Seconds"                                                                                           }                                                                                       }                                                                      }                                                                  }));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping_IncompatibleUnits,The following statement contains a magic number: Assert.Throws<ConversionNotSupportedException>(() =>                  BufferingAggregatingCloudWatchAppender.Assemble(new[]                                                                  {                                                                      new PutMetricDataRequest                                                                      {                                                                          MetricData = new List<MetricDatum>()                                                                                       {                                                                                           new MetricDatum()                                                                                           {                                                                                               Value = 11'                                                                                               Unit = "Kilobytes"                                                                                           }'                                                                                           new MetricDatum()                                                                                           {                                                                                               StatisticValues =                                                                                                   new StatisticSet()                                                                                                   {                                                                                                       Maximum = 7'                                                                                                       Minimum = 6'                                                                                                       SampleCount = 3'                                                                                                       Sum = 19                                                                                                   }'                                                                                               Unit = "Seconds"                                                                                           }                                                                                       }                                                                      }                                                                  }));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping_IncompatibleUnits,The following statement contains a magic number: Assert.Throws<ConversionNotSupportedException>(() =>                  BufferingAggregatingCloudWatchAppender.Assemble(new[]                                                                  {                                                                      new PutMetricDataRequest                                                                      {                                                                          MetricData = new List<MetricDatum>()                                                                                       {                                                                                           new MetricDatum()                                                                                           {                                                                                               Value = 11'                                                                                               Unit = "Kilobytes"                                                                                           }'                                                                                           new MetricDatum()                                                                                           {                                                                                               StatisticValues =                                                                                                   new StatisticSet()                                                                                                   {                                                                                                       Maximum = 7'                                                                                                       Minimum = 6'                                                                                                       SampleCount = 3'                                                                                                       Sum = 19                                                                                                   }'                                                                                               Unit = "Seconds"                                                                                           }                                                                                       }                                                                      }                                                                  }));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping_IncompatibleUnits,The following statement contains a magic number: Assert.Throws<ConversionNotSupportedException>(() =>                  BufferingAggregatingCloudWatchAppender.Assemble(new[]                                                                  {                                                                      new PutMetricDataRequest                                                                      {                                                                          MetricData = new List<MetricDatum>()                                                                                       {                                                                                           new MetricDatum()                                                                                           {                                                                                               Value = 11'                                                                                               Unit = "Kilobytes"                                                                                           }'                                                                                           new MetricDatum()                                                                                           {                                                                                               StatisticValues =                                                                                                   new StatisticSet()                                                                                                   {                                                                                                       Maximum = 7'                                                                                                       Minimum = 6'                                                                                                       SampleCount = 3'                                                                                                       Sum = 19                                                                                                   }'                                                                                               Unit = "Seconds"                                                                                           }                                                                                       }                                                                      }                                                                  }));
Magic Number,CloudWatchAppender.Tests,BufferingAssemblerTest,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\BufferingAssemblerTest.cs,TestSingleGrouping_IncompatibleUnits,The following statement contains a magic number: Assert.Throws<ConversionNotSupportedException>(() =>                  BufferingAggregatingCloudWatchAppender.Assemble(new[]                                                                  {                                                                      new PutMetricDataRequest                                                                      {                                                                          MetricData = new List<MetricDatum>()                                                                                       {                                                                                           new MetricDatum()                                                                                           {                                                                                               Value = 11'                                                                                               Unit = "Kilobytes"                                                                                           }'                                                                                           new MetricDatum()                                                                                           {                                                                                               StatisticValues =                                                                                                   new StatisticSet()                                                                                                   {                                                                                                       Maximum = 7'                                                                                                       Minimum = 6'                                                                                                       SampleCount = 3'                                                                                                       Sum = 19                                                                                                   }'                                                                                               Unit = "Seconds"                                                                                           }                                                                                       }                                                                      }                                                                  }));
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,DefaultAlwaysAccepts,The following statement contains a magic number: Assert.IsTrue(e.Request(t.AddMilliseconds(900)));
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,Accepts100PerSecond,The following statement contains a magic number: var e = new EventRateLimiter(100);
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,Accepts100PerSecond,The following statement contains a magic number: i < 10000
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,Accepts100PerSecond,The following statement contains a magic number: Assert.AreEqual(100' p);
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,Accepts100PerSecond,The following statement contains a magic number: i < 10000
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,Accepts100PerSecond,The following statement contains a magic number: Assert.AreEqual(100' p);
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,AddSomeRequests,The following statement contains a magic number: e.Request(t.AddMilliseconds(i * 10));
Magic Number,CloudWatchAppender.Tests,EventRateLimiterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\EventRateLimiterTests.cs,AddSomeRequests,The following statement contains a magic number: i < 10
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,SingleValueAndUnit1,The following statement contains a magic number: Assert.AreEqual(3.0' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,SingleValueAndUnit2,The following statement contains a magic number: Assert.AreEqual(3.0' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,SingleValueAndUnit_Overrides,The following statement contains a magic number: var parser = new MetricDatumEventMessageParser()                           {                               DefaultValue = 4.0'                               DefaultUnit = "Megabytes/Second"                           };
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,SingleValueAndUnit_Overrides,The following statement contains a magic number: Assert.AreEqual(4.0' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(1.3' r.MetricData[0].StatisticValues.Minimum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(127.9' r.MetricData[0].StatisticValues.Maximum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(15000.5' r.MetricData[0].StatisticValues.Sum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(3000' r.MetricData[0].StatisticValues.SampleCount);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics2,The following statement contains a magic number: Assert.AreEqual(1.3' r.MetricData[0].StatisticValues.Minimum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics2,The following statement contains a magic number: Assert.AreEqual(127.9' r.MetricData[0].StatisticValues.Maximum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics2,The following statement contains a magic number: Assert.AreEqual(15000.5' r.MetricData[0].StatisticValues.Sum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics2,The following statement contains a magic number: Assert.AreEqual(3000' r.MetricData[0].StatisticValues.SampleCount);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics3,The following statement contains a magic number: Assert.AreEqual(1.3' r.MetricData[0].StatisticValues.Minimum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics3,The following statement contains a magic number: Assert.AreEqual(127.9' r.MetricData[0].StatisticValues.Maximum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics3,The following statement contains a magic number: Assert.AreEqual(15000.5' r.MetricData[0].StatisticValues.Sum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,Statistics3,The following statement contains a magic number: Assert.AreEqual(3000' r.MetricData[0].StatisticValues.SampleCount);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,DimensionsList,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,DimensionsList,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,DimensionsList,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,DimensionsList_Empties,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,SingleDimension,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,MultipleValuesWithAggressiveParsing,The following statement contains a magic number: Assert.AreEqual(2' parsedData.Count());
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,MultipleValuesWithAggressiveParsing,The following statement contains a magic number: Assert.AreEqual(5d' parsedData[0].MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests_Json,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventJsonParserTests.cs,MultipleValuesWithAggressiveParsing,The following statement contains a magic number: Assert.AreEqual(4.6d' parsedData[1].MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,SingleValueAndUnit,The following statement contains a magic number: Assert.AreEqual(3.0' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,SingleValueAndUnit_Overrides,The following statement contains a magic number: var parser = new MetricDatumEventMessageParser()              {                  DefaultValue = 4.0'                  DefaultUnit = "Megabytes/Second"              };
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,SingleValueAndUnit_Overrides,The following statement contains a magic number: Assert.AreEqual(4.0' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(1.3' r.MetricData[0].StatisticValues.Minimum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(127.9' r.MetricData[0].StatisticValues.Maximum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(15000.5' r.MetricData[0].StatisticValues.Sum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics,The following statement contains a magic number: Assert.AreEqual(3000' r.MetricData[0].StatisticValues.SampleCount);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: var parser =                  new MetricDatumEventMessageParser()                  {                      DefaultSampleCount = 4000'                      DefaultMinimum = 1.2'                      DefaultMaximum = 130.5'                      DefaultSum = 16000.5                  };
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: var parser =                  new MetricDatumEventMessageParser()                  {                      DefaultSampleCount = 4000'                      DefaultMinimum = 1.2'                      DefaultMaximum = 130.5'                      DefaultSum = 16000.5                  };
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: var parser =                  new MetricDatumEventMessageParser()                  {                      DefaultSampleCount = 4000'                      DefaultMinimum = 1.2'                      DefaultMaximum = 130.5'                      DefaultSum = 16000.5                  };
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: var parser =                  new MetricDatumEventMessageParser()                  {                      DefaultSampleCount = 4000'                      DefaultMinimum = 1.2'                      DefaultMaximum = 130.5'                      DefaultSum = 16000.5                  };
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: Assert.AreEqual(1.2' r.MetricData[0].StatisticValues.Minimum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: Assert.AreEqual(130.5' r.MetricData[0].StatisticValues.Maximum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: Assert.AreEqual(16000.5' r.MetricData[0].StatisticValues.Sum);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Statistics_Overrides,The following statement contains a magic number: Assert.AreEqual(4000' r.MetricData[0].StatisticValues.SampleCount);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Empties,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides,The following statement contains a magic number: Assert.AreEqual(3' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides,The following statement contains a magic number: Assert.AreEqual("Fruit"' r.MetricData[0].Dimensions[2].Name);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides,The following statement contains a magic number: Assert.AreEqual("apple"' r.MetricData[0].Dimensions[2].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides_Empties,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionsList_Overrides_Empties,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Dimensions,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Dimensions,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,Dimensions,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,SingleDimension,The following statement contains a magic number: Assert.AreEqual(4.5' r.MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,DimensionUnfinishedParenthsTriesToParseAsDimensionSkippingUnit,The following statement contains a magic number: Assert.AreEqual(2' r.MetricData[0].Dimensions.Count);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,MultipleValuesWithAggressiveParsing,The following statement contains a magic number: Assert.AreEqual(2' parsedData.Count());
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,MultipleValuesWithAggressiveParsing,The following statement contains a magic number: Assert.AreEqual(5d' parsedData[0].MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumEventParserTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumEventParserTests.cs,MultipleValuesWithAggressiveParsing,The following statement contains a magic number: Assert.AreEqual(4.6d' parsedData[1].MetricData[0].Value);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AmazonMetricDatum,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new Amazon.CloudWatch.Model.MetricDatum                                                               {                                                                   MetricName = "TheMetricName"'                                                                   Unit = "Seconds"'                                                                   Value = 5.1'                                                                   Timestamp = DateTime.Parse("2012-09-11 11:11")'                                                                   Dimensions = new List<Dimension>                                                                                    {                                                                                        new Dimension                                                                                            {                                                                                                Name = "dim1"'                                                                                                Value = "v1"                                                                                            }'                                                                                        new Dimension                                                                                            {                                                                                                Name = "dim2"'                                                                                                Value = "v2"                                                                                            }                                                                                    }                                                               }' t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AmazonMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new Amazon.CloudWatch.Model.MetricDatum                                                               {                                                                   StatisticValues = new StatisticSet                                                                                         {                                                                                             Maximum = 100.1'                                                                                             Minimum = 2.1'                                                                                             Sum = 250.1'                                                                                             SampleCount = 4                                                                                         }                                                               }' t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AmazonMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new Amazon.CloudWatch.Model.MetricDatum                                                               {                                                                   StatisticValues = new StatisticSet                                                                                         {                                                                                             Maximum = 100.1'                                                                                             Minimum = 2.1'                                                                                             Sum = 250.1'                                                                                             SampleCount = 4                                                                                         }                                                               }' t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AmazonMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new Amazon.CloudWatch.Model.MetricDatum                                                               {                                                                   StatisticValues = new StatisticSet                                                                                         {                                                                                             Maximum = 100.1'                                                                                             Minimum = 2.1'                                                                                             Sum = 250.1'                                                                                             SampleCount = 4                                                                                         }                                                               }' t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AmazonMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new Amazon.CloudWatch.Model.MetricDatum                                                               {                                                                   StatisticValues = new StatisticSet                                                                                         {                                                                                             Maximum = 100.1'                                                                                             Minimum = 2.1'                                                                                             Sum = 250.1'                                                                                             SampleCount = 4                                                                                         }                                                               }' t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AppenderMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new MetricDatum()  #pragma warning disable 618                                          .WithStatisticValues(new StatisticSet  #pragma warning restore 618                                                                   {                                                                       Maximum = 100.1'                                                                       Minimum = 2.1'                                                                       Sum = 250.1'                                                                       SampleCount = 4                                                                   })'                                       t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AppenderMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new MetricDatum()  #pragma warning disable 618                                          .WithStatisticValues(new StatisticSet  #pragma warning restore 618                                                                   {                                                                       Maximum = 100.1'                                                                       Minimum = 2.1'                                                                       Sum = 250.1'                                                                       SampleCount = 4                                                                   })'                                       t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AppenderMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new MetricDatum()  #pragma warning disable 618                                          .WithStatisticValues(new StatisticSet  #pragma warning restore 618                                                                   {                                                                       Maximum = 100.1'                                                                       Minimum = 2.1'                                                                       Sum = 250.1'                                                                       SampleCount = 4                                                                   })'                                       t);
Magic Number,CloudWatchAppender.Tests,MetricDatumRendererTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\MetricDatumRendererTests.cs,AppenderMetricDatum_WithStatistics,The following statement contains a magic number: new MetricDatumRenderer().RenderObject(null' new MetricDatum()  #pragma warning disable 618                                          .WithStatisticValues(new StatisticSet  #pragma warning restore 618                                                                   {                                                                       Maximum = 100.1'                                                                       Minimum = 2.1'                                                                       Sum = 250.1'                                                                       SampleCount = 4                                                                   })'                                       t);
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Kilobytes).To(StandardUnit.Bytes)' Is.EqualTo(1024000.0));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Kilobytes).To(StandardUnit.Bytes)' Is.EqualTo(1024000.0));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Megabytes).To(StandardUnit.Bytes)' Is.EqualTo(1048576000.0));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Megabytes).To(StandardUnit.Bytes)' Is.EqualTo(1048576000.0));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(() => { UnitConverter.Convert(1000).From(StandardUnit.Megabytes).To(StandardUnit.Seconds); }' Throws.Exception);
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Terabytes).To(StandardUnit.Terabits)' Is.EqualTo(8000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Terabytes).To(StandardUnit.Terabits)' Is.EqualTo(8000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.TerabytesSecond).To(StandardUnit.TerabitsSecond)' Is.EqualTo(8000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.TerabytesSecond).To(StandardUnit.TerabitsSecond)' Is.EqualTo(8000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Kilobytes).To(StandardUnit.Kilobytes)' Is.EqualTo(1000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Kilobytes).To(StandardUnit.Kilobytes)' Is.EqualTo(1000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Count).To(StandardUnit.Count)' Is.EqualTo(1000));
Magic Number,CloudWatchAppender.Tests,UnitConverterTests,D:\research\architectureSmells\repos\camitz_CloudWatchAppender\Tests\CloudWatchAppender.Tests\UnitConverterTests.cs,Test,The following statement contains a magic number: Assert.That(UnitConverter.Convert(1000).From(StandardUnit.Count).To(StandardUnit.Count)' Is.EqualTo(1000));
