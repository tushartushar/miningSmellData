Implementation smell,Namespace,Class,File,Method,Description
Long Method,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,ParseTokens,The method has 150 lines of code.
Complex Method,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,SetupClient,Cyclomatic complexity of the method is 17
Complex Method,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,ParseTokens,Cyclomatic complexity of the method is 34
Long Parameter List,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,AssignValueField,The method has 5 parameters.
Long Statement,AWSAppender.Core.PatternConverter,NamedPatternConverter,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\PatternConverter\NamedPatternConverter.cs,ActivateOptions,The length of the statement  "				LogLog.Error (NamedPatternConverter.declaringType' "NamedPatternConverter: Precision option \"" + text + "\" not a decimal integer."); " is 134.
Long Statement,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,SetupClient,The length of the statement  "	if (string.IsNullOrEmpty (_endPoint) && clientConfig.RegionEndpoint == null && ConfigurationManager.AppSettings ["AWSServiceEndpoint"] != null) " is 143.
Long Statement,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,SetupClient,The length of the statement  "			if (!string.IsNullOrEmpty (ConfigurationManager.AppSettings ["AWSProfileName"]) || ProfileManager.ListProfileNames ().Contains ("default")) { " is 141.
Long Statement,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,AddRequest,The length of the statement  "					LogLog.Error (GetType ()' "Appender timed out while submitting to CloudWatch. Exception (if any): {0}"' nestedTask.Exception); " is 126.
Long Statement,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,AddRequest,The length of the statement  "					LogLog.Error (GetType ()' string.Format ("IAWSAppender encountered an error while submitting. {0}"' superTask.Exception)); " is 122.
Long Statement,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,ParseTokens,The length of the statement  "				sNum = string.IsNullOrEmpty (tokens.Current.Groups ["float"].Value) ? tokens.Current.Groups ["int"].Value : tokens.Current.Groups ["float"].Value; " is 146.
Long Statement,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,ParseTokens,The length of the statement  "					Double.TryParse (sValue.Trim ("\" ".ToCharArray ())' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out d); " is 122.
Long Statement,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,ParseTokens,The length of the statement  "				sNum = string.IsNullOrEmpty (tokens.Current.Groups ["float"].Value) ? tokens.Current.Groups ["int"].Value : tokens.Current.Groups ["float"].Value; " is 146.
Long Statement,AWSAppender.Core.Services,EventMessageParserBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventMessageParserBase.cs,Parse,The length of the statement  "		var tokens = Regex.Matches (renderedMessage' @"(?<lbrace>{)|(?<rbrace>})|(?<float>(\d+\.\d+))|(?<int>\d+)|""(?<name>\w+)"":|(?<name>\w+):|\((?<word>[\w/ ]+)\)|""(?<word>.*?)""|(?<word>[^()}{""' ]+)|(?<lparen>\()|(?<rparen>\))").Cast<Match> ().ToList ().GetEnumerator (); " is 270.
Long Statement,AWSAppender.Core.Services,EventProcessorBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\EventProcessorBase.cs,PreProcess,The length of the statement  "		if (!loggingEvent.Properties.GetKeys ().Any (key => key.StartsWith ("IsqsAppender.MetaData.") && key.EndsWith (".Error"))) " is 122.
Empty Catch Block,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The method has an empty catch block.
Magic Number,AWSAppender.Core.PatternConverter,LoggerPatternConverter,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\PatternConverter\LoggerPatternConverter.cs,Convert,The following statement contains a magic number: if (m_precision == 0 || text == null || text.Length < 2) {  	writer.Write (text);  	return;  }  
Magic Number,AWSAppender.Core.PatternConverter,NamedPatternConverter,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\PatternConverter\NamedPatternConverter.cs,Convert,The following statement contains a magic number: if (this.m_precision <= 0 || text == null || text.Length < 2) {  	writer.Write (text);  } else {  	int num = text.Length;  	string str = string.Empty;  	if (text.EndsWith (".")) {  		str = ".";  		text = text.Substring (0' num - 1);  		num--;  	}  	int num2 = text.LastIndexOf (".");  	int num3 = 1;  	while (num2 > 0 && num3 < this.m_precision) {  		num2 = text.LastIndexOf ('.'' num2 - 1);  		num3++;  	}  	if (num2 == -1) {  		writer.Write (text + str);  	} else {  		writer.Write (text.Substring (num2 + 1' num - num2 - 1) + str);  	}  }  
Magic Number,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,AddRequest,The following statement contains a magic number: try {  	Task superTask = null;  	superTask = new Task (() => {  		var nestedTask = Task.Factory.StartNew (() => {  			try {  				var tmpCulture = Thread.CurrentThread.CurrentCulture;  				Thread.CurrentThread.CurrentCulture = new CultureInfo ("en-GB"' false);  				LogLog.Debug (GetType ()' "Sending");  				var response = func ();  				LogLog.Debug (GetType ()' "RequestID: " + response.ResponseMetadata.RequestId);  				Thread.CurrentThread.CurrentCulture = tmpCulture;  			} catch (Exception e) {  				LogLog.Debug (GetType ()' e.ToString ());  			}  		}' ct);  		try {  			if (!nestedTask.Wait (30000))//should be configurable  			 {  				tokenSource.Cancel ();  				LogLog.Error (GetType ()' "Appender timed out while submitting to CloudWatch. Exception (if any): {0}"' nestedTask.Exception);  			}  		} catch (Exception e) {  			LogLog.Error (GetType ()' "Appender encountered an error while submitting to cloudwatch. {0}"' e);  		}  		superTask.ContinueWith (t => {  			Task task2;  			ServiceTasks.Tasks.TryRemove (superTask.Id' out task2);  			LogLog.Debug (GetType ()' "AWSAppender complete");  			if (superTask.Exception != null)  				LogLog.Error (GetType ()' string.Format ("IAWSAppender encountered an error while submitting. {0}"' superTask.Exception));  		});  	});  	if (ServiceTasks.Tasks == null)  		ServiceTasks.Tasks = new ConcurrentDictionary<int' Task> ();  	ServiceTasks.Tasks.TryAdd (superTask.Id' superTask);  	superTask.Start ();  } catch (Exception e) {  	LogLog.Error (GetType ()' string.Format ("IsqsAppender encountered an error while submitting to cloudwatch. {0}"' e));  }  
Magic Number,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,AddRequest,The following statement contains a magic number: superTask = new Task (() => {  	var nestedTask = Task.Factory.StartNew (() => {  		try {  			var tmpCulture = Thread.CurrentThread.CurrentCulture;  			Thread.CurrentThread.CurrentCulture = new CultureInfo ("en-GB"' false);  			LogLog.Debug (GetType ()' "Sending");  			var response = func ();  			LogLog.Debug (GetType ()' "RequestID: " + response.ResponseMetadata.RequestId);  			Thread.CurrentThread.CurrentCulture = tmpCulture;  		} catch (Exception e) {  			LogLog.Debug (GetType ()' e.ToString ());  		}  	}' ct);  	try {  		if (!nestedTask.Wait (30000))//should be configurable  		 {  			tokenSource.Cancel ();  			LogLog.Error (GetType ()' "Appender timed out while submitting to CloudWatch. Exception (if any): {0}"' nestedTask.Exception);  		}  	} catch (Exception e) {  		LogLog.Error (GetType ()' "Appender encountered an error while submitting to cloudwatch. {0}"' e);  	}  	superTask.ContinueWith (t => {  		Task task2;  		ServiceTasks.Tasks.TryRemove (superTask.Id' out task2);  		LogLog.Debug (GetType ()' "AWSAppender complete");  		if (superTask.Exception != null)  			LogLog.Error (GetType ()' string.Format ("IAWSAppender encountered an error while submitting. {0}"' superTask.Exception));  	});  });  
Magic Number,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,AddRequest,The following statement contains a magic number: try {  	if (!nestedTask.Wait (30000))//should be configurable  	 {  		tokenSource.Cancel ();  		LogLog.Error (GetType ()' "Appender timed out while submitting to CloudWatch. Exception (if any): {0}"' nestedTask.Exception);  	}  } catch (Exception e) {  	LogLog.Error (GetType ()' "Appender encountered an error while submitting to cloudwatch. {0}"' e);  }  
Magic Number,AWSAppender.Core.Services,ClientWrapperBase,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\ClientWrapperBase.cs,AddRequest,The following statement contains a magic number: if (!nestedTask.Wait (30000))//should be configurable   {  	tokenSource.Cancel ();  	LogLog.Error (GetType ()' "Appender timed out while submitting to CloudWatch. Exception (if any): {0}"' nestedTask.Exception);  }  
Magic Number,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The following statement contains a magic number: try {  	if (_pendingTasks.ContainsKey (key)) {  		Debug.WriteLine ("Waiting for pending {0}"' key);  		return _pendingTasks [key].ContinueWith (x => {  			Debug.WriteLine ("Pending {0} completed"' key);  			if (_cachedValues.ContainsKey (key))  				return _cachedValues [key];  			return null;  		}).Result;  	}  	if (!_attempts.ContainsKey (key))  		_attempts [key] = 0;  	if (!_cachedValues.ContainsKey (key)) {  		var uri = serviceUrl + _metaDataKeys [key];  		Debug.WriteLine ("Requesting {0}"' uri);  		var tokenSource = new CancellationTokenSource ();  		var ct = tokenSource.Token;  		Stream responseStream = null;  		var task1 = _pendingTasks [key] = Task.Factory.StartNew (() => {  			if (++_attempts [key] > 10)  				_cachedValues [key] = key + "_MaxAttemptsExceeded";  			var task = Task.Factory.StartNew (() => {  				try {  					responseStream = WebRequest.Create (uri).GetResponse ().GetResponseStream ();  				} catch (Exception) {  					error = true;  				}  			}' ct);  			if (!task.Wait (2000))  				tokenSource.Cancel ();  			if (responseStream != null) {  				var s = new StreamReader (responseStream' true).ReadToEnd ();  				if (!string.IsNullOrEmpty (s)) {  					_cachedValues [key] = s;  					_attempts [key] = 0;  				} else  					error = true;  			} else  				error = true;  		});  		var result = task1.ContinueWith (x => {  			try {  				_pendingTasks.Remove (key);  			} catch (Exception) {  			}  			if (error || !_cachedValues.ContainsKey (key)) {  				error = true;  				return "error_" + key;  			}  			Debug.WriteLine (string.Format ("Got {0}: {1}"' key' _cachedValues [key]));  			return _cachedValues [key];  		}).Result;  		outError = error;  		return result;  	}  	Debug.WriteLine (string.Format ("Returning cached {0}: {1}"' key' _cachedValues [key]));  	return _cachedValues [key];  } catch (WebException) {  	return null;  }  
Magic Number,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The following statement contains a magic number: try {  	if (_pendingTasks.ContainsKey (key)) {  		Debug.WriteLine ("Waiting for pending {0}"' key);  		return _pendingTasks [key].ContinueWith (x => {  			Debug.WriteLine ("Pending {0} completed"' key);  			if (_cachedValues.ContainsKey (key))  				return _cachedValues [key];  			return null;  		}).Result;  	}  	if (!_attempts.ContainsKey (key))  		_attempts [key] = 0;  	if (!_cachedValues.ContainsKey (key)) {  		var uri = serviceUrl + _metaDataKeys [key];  		Debug.WriteLine ("Requesting {0}"' uri);  		var tokenSource = new CancellationTokenSource ();  		var ct = tokenSource.Token;  		Stream responseStream = null;  		var task1 = _pendingTasks [key] = Task.Factory.StartNew (() => {  			if (++_attempts [key] > 10)  				_cachedValues [key] = key + "_MaxAttemptsExceeded";  			var task = Task.Factory.StartNew (() => {  				try {  					responseStream = WebRequest.Create (uri).GetResponse ().GetResponseStream ();  				} catch (Exception) {  					error = true;  				}  			}' ct);  			if (!task.Wait (2000))  				tokenSource.Cancel ();  			if (responseStream != null) {  				var s = new StreamReader (responseStream' true).ReadToEnd ();  				if (!string.IsNullOrEmpty (s)) {  					_cachedValues [key] = s;  					_attempts [key] = 0;  				} else  					error = true;  			} else  				error = true;  		});  		var result = task1.ContinueWith (x => {  			try {  				_pendingTasks.Remove (key);  			} catch (Exception) {  			}  			if (error || !_cachedValues.ContainsKey (key)) {  				error = true;  				return "error_" + key;  			}  			Debug.WriteLine (string.Format ("Got {0}: {1}"' key' _cachedValues [key]));  			return _cachedValues [key];  		}).Result;  		outError = error;  		return result;  	}  	Debug.WriteLine (string.Format ("Returning cached {0}: {1}"' key' _cachedValues [key]));  	return _cachedValues [key];  } catch (WebException) {  	return null;  }  
Magic Number,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The following statement contains a magic number: if (!_cachedValues.ContainsKey (key)) {  	var uri = serviceUrl + _metaDataKeys [key];  	Debug.WriteLine ("Requesting {0}"' uri);  	var tokenSource = new CancellationTokenSource ();  	var ct = tokenSource.Token;  	Stream responseStream = null;  	var task1 = _pendingTasks [key] = Task.Factory.StartNew (() => {  		if (++_attempts [key] > 10)  			_cachedValues [key] = key + "_MaxAttemptsExceeded";  		var task = Task.Factory.StartNew (() => {  			try {  				responseStream = WebRequest.Create (uri).GetResponse ().GetResponseStream ();  			} catch (Exception) {  				error = true;  			}  		}' ct);  		if (!task.Wait (2000))  			tokenSource.Cancel ();  		if (responseStream != null) {  			var s = new StreamReader (responseStream' true).ReadToEnd ();  			if (!string.IsNullOrEmpty (s)) {  				_cachedValues [key] = s;  				_attempts [key] = 0;  			} else  				error = true;  		} else  			error = true;  	});  	var result = task1.ContinueWith (x => {  		try {  			_pendingTasks.Remove (key);  		} catch (Exception) {  		}  		if (error || !_cachedValues.ContainsKey (key)) {  			error = true;  			return "error_" + key;  		}  		Debug.WriteLine (string.Format ("Got {0}: {1}"' key' _cachedValues [key]));  		return _cachedValues [key];  	}).Result;  	outError = error;  	return result;  }  
Magic Number,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The following statement contains a magic number: if (!_cachedValues.ContainsKey (key)) {  	var uri = serviceUrl + _metaDataKeys [key];  	Debug.WriteLine ("Requesting {0}"' uri);  	var tokenSource = new CancellationTokenSource ();  	var ct = tokenSource.Token;  	Stream responseStream = null;  	var task1 = _pendingTasks [key] = Task.Factory.StartNew (() => {  		if (++_attempts [key] > 10)  			_cachedValues [key] = key + "_MaxAttemptsExceeded";  		var task = Task.Factory.StartNew (() => {  			try {  				responseStream = WebRequest.Create (uri).GetResponse ().GetResponseStream ();  			} catch (Exception) {  				error = true;  			}  		}' ct);  		if (!task.Wait (2000))  			tokenSource.Cancel ();  		if (responseStream != null) {  			var s = new StreamReader (responseStream' true).ReadToEnd ();  			if (!string.IsNullOrEmpty (s)) {  				_cachedValues [key] = s;  				_attempts [key] = 0;  			} else  				error = true;  		} else  			error = true;  	});  	var result = task1.ContinueWith (x => {  		try {  			_pendingTasks.Remove (key);  		} catch (Exception) {  		}  		if (error || !_cachedValues.ContainsKey (key)) {  			error = true;  			return "error_" + key;  		}  		Debug.WriteLine (string.Format ("Got {0}: {1}"' key' _cachedValues [key]));  		return _cachedValues [key];  	}).Result;  	outError = error;  	return result;  }  
Magic Number,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The following statement contains a magic number: if (++_attempts [key] > 10)  	_cachedValues [key] = key + "_MaxAttemptsExceeded";  
Magic Number,AWSAppender.Core.Services,InstanceMetaDataReader,F:\newReposMay17\camitz_CloudWatchAppender\AWSAppender.Core3.5\..\AWSAppender.Core\Services\InstanceMetaDataReader.cs,GetMetaData,The following statement contains a magic number: if (!task.Wait (2000))  	tokenSource.Cancel ();  
