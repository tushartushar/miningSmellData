Implementation smell,Namespace,Class,File,Method,Description
Long Method,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The method has 132 lines of code.
Complex Method,AWSAppender.CloudWatch.Model,MetricDatumRenderer,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Model\MetricDatumRenderer.cs,RenderAWSMetricDatum,Cyclomatic complexity of the method is 10
Complex Method,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,ApplyDefaults,Cyclomatic complexity of the method is 12
Complex Method,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,FillName,Cyclomatic complexity of the method is 52
Complex Method,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,LocalParse,Cyclomatic complexity of the method is 9
Complex Method,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,PerformConvert,Cyclomatic complexity of the method is 9
Long Parameter List,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,AssignValueField,The method has 5 parameters.
Long Parameter List,AWSAppender.CloudWatch.Services,MetricDatumEventProcessor,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\MetricDatumEventProcessor.cs,MetricDatumEventProcessor,The method has 7 parameters.
Long Statement,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,ActivateOptions,The length of the statement  "	_eventProcessor = new MetricDatumEventProcessor (_configOverrides' _standardUnit' _ns' _metricName' Timestamp' _value' _dimensions) { " is 133.
Long Statement,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The length of the statement  "			foreach (var dimensionGrouping in metricNameGrouping.GroupBy (x => string.Join (";"' x.Dimensions.OrderBy (d => d.Name).Select (d => string.Format ("{0}/{1}"' d.Name' d.Value)).ToArray ()))) { " is 192.
Long Statement,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,MakeStatistic,The length of the statement  "	return data.Select (d => d.StatisticValues == null ? UnitConverter.Convert (d.Value).From (d.Unit).To (unit) : UnitConverter.Convert (func (d.StatisticValues)).From (d.Unit).To (unit)); " is 185.
Long Statement,AWSAppender.CloudWatch,CloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\CloudWatchAppender.cs,ActivateOptions,The length of the statement  "	MetricDatumEventProcessor = new MetricDatumEventProcessor (ConfigOverrides' _standardUnit' _ns' _metricName' Timestamp' _value' _dimensions); " is 141.
Long Statement,AWSAppender.CloudWatch.Model,MetricDatumRenderer,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Model\MetricDatumRenderer.cs,RenderAWSMetricDatum,The length of the statement  "		writer.Write ("Dimensions: {0}' "' String.Join ("' "' metricDatum.Dimensions.Select (x => String.Format ("{0}: {1}"' x.Name' x.Value)).ToArray ())); " is 148.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,IsSupportedName,The length of the statement  "	return Aggresive || MetricDatum.SupportedNames.Any (x => x.Equals (t0' StringComparison.InvariantCultureIgnoreCase)) || MetricDatum.SupportedValueFields.Any (x => x.Equals (t0' StringComparison.InvariantCultureIgnoreCase)) || MetricDatum.SupportedStatistics.Any (x => x.Equals (t0' StringComparison.InvariantCultureIgnoreCase)); " is 328.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,PostElementParse,The length of the statement  "		if (t.ToString () != aggregate.ToLowerInvariant ())//If conversion capitalizes unit then it is valid and should not be included in rest. " is 136.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,PostElementParse,The length of the statement  "			if (t.ToString () != unit.ToLowerInvariant ())//If conversion capitalizes unit then it is valid and should not be included in rest. " is 131.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,NewDatum,The length of the statement  "		Dimensions = dimensions.Any () ? dimensions.Values.Where (x => !string.IsNullOrEmpty (x.Value)).ToList () : new List<Dimension> () " is 130.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,LocalParse,The length of the statement  "	if (!string.IsNullOrEmpty (tokens.Current.Groups ["lparen"].Value) || !string.IsNullOrEmpty (tokens.Current.Groups ["lbrace"].Value)) { " is 135.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,LocalParse,The length of the statement  "		while (tokens.Current != null && string.IsNullOrEmpty (tokens.Current.Groups ["rparen"].Value) && string.IsNullOrEmpty (tokens.Current.Groups ["rbrace"].Value)) { " is 162.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,LocalParse,The length of the statement  "			if (string.IsNullOrEmpty (value = tokens.Current.Groups ["word"].Value) && string.IsNullOrEmpty (sNum = tokens.Current.Groups ["float"].Value)) { " is 145.
Long Statement,AWSAppender.CloudWatch.Parsers,MetricDatumEventMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Parsers\MetricDatumEventMessageParser.cs,LocalParse,The length of the statement  "		if (!string.IsNullOrEmpty (tokens.Current.Groups ["lparen"].Value) || !string.IsNullOrEmpty (tokens.Current.Groups ["lbrace"].Value)) " is 133.
Long Statement,AWSAppender.CloudWatch.Services,MetricDatumEventProcessor,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\MetricDatumEventProcessor.cs,ParseProperties,The length of the statement  "	_dateTimeOffset = string.IsNullOrEmpty (_timestamp) ? null : (DateTimeOffset?)DateTimeOffset.Parse (patternParser.Parse (_timestamp)); " is 134.
Empty Catch Block,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,ActivateOptions,The method has an empty catch block.
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: foreach (var namespaceGrouping in rs.GroupBy (r => r.Namespace)) {  	var metricData = new List<MetricDatum> ();  	foreach (var metricNameGrouping in namespaceGrouping.SelectMany (x => x.MetricData).GroupBy (x => x.MetricName)) {  		var units = metricNameGrouping.Select (x => x.Unit).Distinct ();  		var unit = FindLeastUnit (units);  		foreach (var dimensionGrouping in metricNameGrouping.GroupBy (x => string.Join (";"' x.Dimensions.OrderBy (d => d.Name).Select (d => string.Format ("{0}/{1}"' d.Name' d.Value)).ToArray ()))) {  			var timestamp = dimensionGrouping.Max (x => x.Timestamp);  			metricData.Add (new MetricDatum {  				MetricName = metricNameGrouping.Key'  				Dimensions = dimensionGrouping.First ().Dimensions'  				Timestamp = timestamp > DateTime.MinValue ? timestamp : DateTime.UtcNow'  				Unit = unit'  				StatisticValues = Aggregate (dimensionGrouping.AsEnumerable ()' unit)  			});  		}  	}  	var bin = metricData.Take (20);  	var i = 0;  	do {  		var putMetricDataRequest = new PutMetricDataRequest {  			Namespace = namespaceGrouping.Key  		};  		putMetricDataRequest.MetricData.AddRange (bin);  		requests.Add (putMetricDataRequest);  		bin = metricData.Skip (i += 20).Take (20);  	} while (bin.Any ());  }  
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: foreach (var namespaceGrouping in rs.GroupBy (r => r.Namespace)) {  	var metricData = new List<MetricDatum> ();  	foreach (var metricNameGrouping in namespaceGrouping.SelectMany (x => x.MetricData).GroupBy (x => x.MetricName)) {  		var units = metricNameGrouping.Select (x => x.Unit).Distinct ();  		var unit = FindLeastUnit (units);  		foreach (var dimensionGrouping in metricNameGrouping.GroupBy (x => string.Join (";"' x.Dimensions.OrderBy (d => d.Name).Select (d => string.Format ("{0}/{1}"' d.Name' d.Value)).ToArray ()))) {  			var timestamp = dimensionGrouping.Max (x => x.Timestamp);  			metricData.Add (new MetricDatum {  				MetricName = metricNameGrouping.Key'  				Dimensions = dimensionGrouping.First ().Dimensions'  				Timestamp = timestamp > DateTime.MinValue ? timestamp : DateTime.UtcNow'  				Unit = unit'  				StatisticValues = Aggregate (dimensionGrouping.AsEnumerable ()' unit)  			});  		}  	}  	var bin = metricData.Take (20);  	var i = 0;  	do {  		var putMetricDataRequest = new PutMetricDataRequest {  			Namespace = namespaceGrouping.Key  		};  		putMetricDataRequest.MetricData.AddRange (bin);  		requests.Add (putMetricDataRequest);  		bin = metricData.Skip (i += 20).Take (20);  	} while (bin.Any ());  }  
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: foreach (var namespaceGrouping in rs.GroupBy (r => r.Namespace)) {  	var metricData = new List<MetricDatum> ();  	foreach (var metricNameGrouping in namespaceGrouping.SelectMany (x => x.MetricData).GroupBy (x => x.MetricName)) {  		var units = metricNameGrouping.Select (x => x.Unit).Distinct ();  		var unit = FindLeastUnit (units);  		foreach (var dimensionGrouping in metricNameGrouping.GroupBy (x => string.Join (";"' x.Dimensions.OrderBy (d => d.Name).Select (d => string.Format ("{0}/{1}"' d.Name' d.Value)).ToArray ()))) {  			var timestamp = dimensionGrouping.Max (x => x.Timestamp);  			metricData.Add (new MetricDatum {  				MetricName = metricNameGrouping.Key'  				Dimensions = dimensionGrouping.First ().Dimensions'  				Timestamp = timestamp > DateTime.MinValue ? timestamp : DateTime.UtcNow'  				Unit = unit'  				StatisticValues = Aggregate (dimensionGrouping.AsEnumerable ()' unit)  			});  		}  	}  	var bin = metricData.Take (20);  	var i = 0;  	do {  		var putMetricDataRequest = new PutMetricDataRequest {  			Namespace = namespaceGrouping.Key  		};  		putMetricDataRequest.MetricData.AddRange (bin);  		requests.Add (putMetricDataRequest);  		bin = metricData.Skip (i += 20).Take (20);  	} while (bin.Any ());  }  
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: do {  	var putMetricDataRequest = new PutMetricDataRequest {  		Namespace = namespaceGrouping.Key  	};  	putMetricDataRequest.MetricData.AddRange (bin);  	requests.Add (putMetricDataRequest);  	bin = metricData.Skip (i += 20).Take (20);  } while (bin.Any ());  
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: do {  	var putMetricDataRequest = new PutMetricDataRequest {  		Namespace = namespaceGrouping.Key  	};  	putMetricDataRequest.MetricData.AddRange (bin);  	requests.Add (putMetricDataRequest);  	bin = metricData.Skip (i += 20).Take (20);  } while (bin.Any ());  
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: bin = metricData.Skip (i += 20).Take (20);  
Magic Number,AWSAppender.CloudWatch,BufferingAggregatingCloudWatchAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\BufferingAggregatingCloudWatchAppender.cs,Assemble,The following statement contains a magic number: bin = metricData.Skip (i += 20).Take (20);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Seconds.LinkTo (UnitGraphNode.Milliseconds' 1000);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Milliseconds.LinkTo (UnitGraphNode.Microseconds' 1000);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Kilobytes.LinkTo (UnitGraphNode.Bytes' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Megabytes.LinkTo (UnitGraphNode.Kilobytes' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Gigabytes.LinkTo (UnitGraphNode.Megabytes' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Terabytes.LinkTo (UnitGraphNode.Gigabytes' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Kilobits.LinkTo (UnitGraphNode.Bits' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Megabits.LinkTo (UnitGraphNode.Kilobits' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Gigabits.LinkTo (UnitGraphNode.Megabits' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Terabits.LinkTo (UnitGraphNode.Gigabits' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.KilobytesSecond.LinkTo (UnitGraphNode.BytesSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.MegabytesSecond.LinkTo (UnitGraphNode.KilobytesSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.GigabytesSecond.LinkTo (UnitGraphNode.MegabytesSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.TerabytesSecond.LinkTo (UnitGraphNode.GigabytesSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.KilobitsSecond.LinkTo (UnitGraphNode.BitsSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.MegabitsSecond.LinkTo (UnitGraphNode.KilobitsSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.GigabitsSecond.LinkTo (UnitGraphNode.MegabitsSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.TerabitsSecond.LinkTo (UnitGraphNode.GigabitsSecond' 1024);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.Bytes.LinkTo (UnitGraphNode.Bits' 8);  
Magic Number,AWSAppender.CloudWatch.Services,UnitConverter,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\CloudWatchAppender\Services\UnitConverter.cs,GenerateGraph,The following statement contains a magic number: UnitGraphNode.BytesSecond.LinkTo (UnitGraphNode.BitsSecond' 8);  
