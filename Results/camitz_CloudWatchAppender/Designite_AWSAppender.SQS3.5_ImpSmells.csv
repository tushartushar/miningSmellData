Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AWSAppender.SQS.Parsers,SQSMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\..\SQSAppender\Parsers\SQSMessageParser.cs,FillName,Cyclomatic complexity of the method is 16
Long Statement,AWSAppender.SQS.Parsers,SQSMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\..\SQSAppender\Parsers\SQSMessageParser.cs,FillName,The length of the statement  "		_currentDatum.DelaySeconds = DefaultsOverridePattern ? DefaultDelaySeconds ?? Convert.ToInt32 (value.dValue) : Convert.ToInt32 (value.dValue); " is 142.
Long Statement,AWSAppender.SQS.Services,SQSEventProcessor,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\..\SQSAppender\Services\SQSEventProcessor.cs,ParseProperties,The length of the statement  "	_parsedDelaySeconds = string.IsNullOrEmpty (_delaySeconds) ? (int?)null : Convert.ToInt32 (patternParser.Parse (_delaySeconds)); " is 128.
Long Statement,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The length of the statement  "			var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10); " is 138.
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: if (data.Any (x => System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message) > 256 * 1024))  	throw new MessageTooLargeException ();  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: if (data.Any (x => System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message) > 256 * 1024))  	throw new MessageTooLargeException ();  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: foreach (var grouping in data.GroupBy (r => r.QueueName)) {  	var skip = 0;  	while (grouping.Skip (skip).Any ()) {  		var size = 0;  		var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10);  		requests.Add (new SendMessageBatchRequestWrapper {  			QueueName = grouping.Key'  			Entries = taken.Select (sqsDatum => {  				var t = new SendMessageBatchRequestEntry {  					MessageBody = sqsDatum.Message'  					Id = sqsDatum.ID  				};  				if (sqsDatum.DelaySeconds.HasValue)  					t.DelaySeconds = sqsDatum.DelaySeconds.Value;  				return t;  			}).ToList ()  		});  		skip += taken.Count ();  	}  }  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: foreach (var grouping in data.GroupBy (r => r.QueueName)) {  	var skip = 0;  	while (grouping.Skip (skip).Any ()) {  		var size = 0;  		var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10);  		requests.Add (new SendMessageBatchRequestWrapper {  			QueueName = grouping.Key'  			Entries = taken.Select (sqsDatum => {  				var t = new SendMessageBatchRequestEntry {  					MessageBody = sqsDatum.Message'  					Id = sqsDatum.ID  				};  				if (sqsDatum.DelaySeconds.HasValue)  					t.DelaySeconds = sqsDatum.DelaySeconds.Value;  				return t;  			}).ToList ()  		});  		skip += taken.Count ();  	}  }  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: foreach (var grouping in data.GroupBy (r => r.QueueName)) {  	var skip = 0;  	while (grouping.Skip (skip).Any ()) {  		var size = 0;  		var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10);  		requests.Add (new SendMessageBatchRequestWrapper {  			QueueName = grouping.Key'  			Entries = taken.Select (sqsDatum => {  				var t = new SendMessageBatchRequestEntry {  					MessageBody = sqsDatum.Message'  					Id = sqsDatum.ID  				};  				if (sqsDatum.DelaySeconds.HasValue)  					t.DelaySeconds = sqsDatum.DelaySeconds.Value;  				return t;  			}).ToList ()  		});  		skip += taken.Count ();  	}  }  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: while (grouping.Skip (skip).Any ()) {  	var size = 0;  	var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10);  	requests.Add (new SendMessageBatchRequestWrapper {  		QueueName = grouping.Key'  		Entries = taken.Select (sqsDatum => {  			var t = new SendMessageBatchRequestEntry {  				MessageBody = sqsDatum.Message'  				Id = sqsDatum.ID  			};  			if (sqsDatum.DelaySeconds.HasValue)  				t.DelaySeconds = sqsDatum.DelaySeconds.Value;  			return t;  		}).ToList ()  	});  	skip += taken.Count ();  }  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: while (grouping.Skip (skip).Any ()) {  	var size = 0;  	var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10);  	requests.Add (new SendMessageBatchRequestWrapper {  		QueueName = grouping.Key'  		Entries = taken.Select (sqsDatum => {  			var t = new SendMessageBatchRequestEntry {  				MessageBody = sqsDatum.Message'  				Id = sqsDatum.ID  			};  			if (sqsDatum.DelaySeconds.HasValue)  				t.DelaySeconds = sqsDatum.DelaySeconds.Value;  			return t;  		}).ToList ()  	});  	skip += taken.Count ();  }  
Magic Number,SQSAppender,BufferingSQSAppender,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\BufferingSQSAppender.cs,Assemble,The following statement contains a magic number: while (grouping.Skip (skip).Any ()) {  	var size = 0;  	var taken = grouping.Skip (skip).TakeWhile (x => (size += System.Text.UTF8Encoding.UTF8.GetByteCount (x.Message)) < 256 * 1024).Take (10);  	requests.Add (new SendMessageBatchRequestWrapper {  		QueueName = grouping.Key'  		Entries = taken.Select (sqsDatum => {  			var t = new SendMessageBatchRequestEntry {  				MessageBody = sqsDatum.Message'  				Id = sqsDatum.ID  			};  			if (sqsDatum.DelaySeconds.HasValue)  				t.DelaySeconds = sqsDatum.DelaySeconds.Value;  			return t;  		}).ToList ()  	});  	skip += taken.Count ();  }  
Missing Default,AWSAppender.SQS.Parsers,SQSMessageParser,F:\newReposMay17\camitz_CloudWatchAppender\Appenders\SQSAppender3.5\..\SQSAppender\Parsers\SQSMessageParser.cs,FillName,The following switch statement is missing a default case: switch (value.Name.ToLowerInvariant ()) {  case "__cav_rest":  	if (!string.IsNullOrEmpty (_currentDatum.Message))  		return false;  	_currentDatum.Message = DefaultsOverridePattern ? DefaultMessage ?? value.sValue : value.sValue;  	break;  case "queuename":  	if (!string.IsNullOrEmpty (_currentDatum.QueueName))  		return false;  	_currentDatum.QueueName = DefaultsOverridePattern ? DefaultQueueName ?? value.sValue : value.sValue;  	break;  case "delayseconds":  	if (_currentDatum.DelaySeconds.HasValue)  		return false;  	_currentDatum.DelaySeconds = DefaultsOverridePattern ? DefaultDelaySeconds ?? Convert.ToInt32 (value.dValue) : Convert.ToInt32 (value.dValue);  	break;  case "id":  	if (!string.IsNullOrEmpty (_currentDatum.ID))  		return false;  	_currentDatum.ID = value.sValue;  	break;  }  
