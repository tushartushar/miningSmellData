Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,Cyclomatic complexity of the method is 31
Complex Method,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Events_OnCurrencyQueue,Cyclomatic complexity of the method is 19
Complex Method,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,Cyclomatic complexity of the method is 8
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Load,The length of the statement  "	while (File.Exists (this.GetDataPath () + "Data.sqlite") && Api.IsFileLocked (this.GetDataPath () + "Data.sqlite"' FileShare.Read)) " is 131.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Load,The length of the statement  "		if (MessageBox.Show ("ModBot's database file is in use' Please close it in order to let ModBot use it."' "ModBot"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Warning) == DialogResult.Cancel) " is 193.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Load,The length of the statement  "	using (SQLiteCommand query = new SQLiteCommand ("CREATE TABLE IF NOT EXISTS 'ranks' (id INTEGER PRIMARY KEY AUTOINCREMENT' rank TEXT);"' DB)) " is 141.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Load,The length of the statement  "	using (SQLiteCommand query = new SQLiteCommand ("CREATE TABLE IF NOT EXISTS 'userdata' (id INTEGER PRIMARY KEY AUTOINCREMENT' user TEXT' rank TEXT);"' DB)) " is 155.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The length of the statement  "					using (SQLiteCommand query = new SQLiteCommand ("INSERT INTO 'ranks' (rank) VALUES ('" + rank.Replace ("'"' "''") + "');"' DB)) " is 127.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The length of the statement  "					using (SQLiteCommand query = new SQLiteCommand ("DELETE FROM 'ranks' WHERE rank = '" + rank.Replace ("'"' "''") + "' COLLATE NOCASE;"' DB)) " is 139.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Events_OnCurrencyQueue,The length of the statement  "	using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'userdata' WHERE user = '" + user + "' COLLATE NOCASE;"' DB)) { " is 126.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Events_OnCurrencyQueue,The length of the statement  "						using (SQLiteCommand query2 = new SQLiteCommand ("DELETE FROM 'userdata' WHERE user = '" + user + "' COLLATE NOCASE;"' DB)) " is 123.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Events_OnCurrencyQueue,The length of the statement  "		using (SQLiteCommand query = new SQLiteCommand ("INSERT INTO 'userdata' (user' rank) VALUES ('" + user + "'' '" + rank.Replace ("'"' "''") + "');"' DB)) " is 152.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The length of the statement  "							int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]); " is 123.
Long Statement,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The length of the statement  "							return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild); " is 189.
Empty Catch Block,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The method has an empty catch block.
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The following statement contains a magic number: if (args.Length > 0) {  	if (args [0].ToLower () == "add" && args.Length > 1) {  		string rank = "";  		for (int i = 1; i < args.Length; i++) {  			rank += args [i] + " ";  		}  		if (rank != "") {  			rank = rank.Substring (0' rank.Length - 1);  			bool found = false;  			using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  				using (SQLiteDataReader r = query.ExecuteReader ()) {  					while (r.Read ()) {  						if (r ["rank"].ToString ().ToLower () == rank.ToLower ()) {  							found = true;  							break;  						}  					}  				}  			}  			if (!found) {  				using (SQLiteCommand query = new SQLiteCommand ("INSERT INTO 'ranks' (rank) VALUES ('" + rank.Replace ("'"' "''") + "');"' DB))  					query.ExecuteNonQuery ();  				Chat.SendMessage ("The rank \"" + rank + "\" has been added.");  			} else {  				Chat.SendMessage ("The rank \"" + rank + "\" already exists.");  			}  		}  	} else if (args [0].ToLower () == "remove" && args.Length > 1) {  		string rank = "";  		for (int i = 1; i < args.Length; i++) {  			rank += args [i] + " ";  		}  		if (rank != "") {  			rank = rank.Substring (0' rank.Length - 1);  			bool found = false;  			using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  				using (SQLiteDataReader r = query.ExecuteReader ()) {  					while (r.Read ()) {  						if (r ["rank"].ToString ().ToLower () == rank.ToLower ()) {  							found = true;  							break;  						}  					}  				}  			}  			if (found) {  				using (SQLiteCommand query = new SQLiteCommand ("DELETE FROM 'ranks' WHERE rank = '" + rank.Replace ("'"' "''") + "' COLLATE NOCASE;"' DB))  					query.ExecuteNonQuery ();  				Chat.SendMessage ("The rank \"" + rank + "\" has been removed.");  			} else {  				Chat.SendMessage ("The rank \"" + rank + "\" does not exist.");  			}  		}  	} else if (args [0].ToLower () == "list") {  		string output = "List of ranks: ";  		using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  			using (SQLiteDataReader r = query.ExecuteReader ()) {  				while (r.Read ()) {  					output += r ["rank"].ToString () + "' ";  				}  			}  		}  		if (output.EndsWith ("' ")) {  			output = output.Substring (0' output.Length - 2) + ".";  		} else {  			output = "No ranks were added.";  		}  		Chat.SendMessage (output);  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The following statement contains a magic number: if (args [0].ToLower () == "add" && args.Length > 1) {  	string rank = "";  	for (int i = 1; i < args.Length; i++) {  		rank += args [i] + " ";  	}  	if (rank != "") {  		rank = rank.Substring (0' rank.Length - 1);  		bool found = false;  		using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  			using (SQLiteDataReader r = query.ExecuteReader ()) {  				while (r.Read ()) {  					if (r ["rank"].ToString ().ToLower () == rank.ToLower ()) {  						found = true;  						break;  					}  				}  			}  		}  		if (!found) {  			using (SQLiteCommand query = new SQLiteCommand ("INSERT INTO 'ranks' (rank) VALUES ('" + rank.Replace ("'"' "''") + "');"' DB))  				query.ExecuteNonQuery ();  			Chat.SendMessage ("The rank \"" + rank + "\" has been added.");  		} else {  			Chat.SendMessage ("The rank \"" + rank + "\" already exists.");  		}  	}  } else if (args [0].ToLower () == "remove" && args.Length > 1) {  	string rank = "";  	for (int i = 1; i < args.Length; i++) {  		rank += args [i] + " ";  	}  	if (rank != "") {  		rank = rank.Substring (0' rank.Length - 1);  		bool found = false;  		using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  			using (SQLiteDataReader r = query.ExecuteReader ()) {  				while (r.Read ()) {  					if (r ["rank"].ToString ().ToLower () == rank.ToLower ()) {  						found = true;  						break;  					}  				}  			}  		}  		if (found) {  			using (SQLiteCommand query = new SQLiteCommand ("DELETE FROM 'ranks' WHERE rank = '" + rank.Replace ("'"' "''") + "' COLLATE NOCASE;"' DB))  				query.ExecuteNonQuery ();  			Chat.SendMessage ("The rank \"" + rank + "\" has been removed.");  		} else {  			Chat.SendMessage ("The rank \"" + rank + "\" does not exist.");  		}  	}  } else if (args [0].ToLower () == "list") {  	string output = "List of ranks: ";  	using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  		using (SQLiteDataReader r = query.ExecuteReader ()) {  			while (r.Read ()) {  				output += r ["rank"].ToString () + "' ";  			}  		}  	}  	if (output.EndsWith ("' ")) {  		output = output.Substring (0' output.Length - 2) + ".";  	} else {  		output = "No ranks were added.";  	}  	Chat.SendMessage (output);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The following statement contains a magic number: if (args [0].ToLower () == "remove" && args.Length > 1) {  	string rank = "";  	for (int i = 1; i < args.Length; i++) {  		rank += args [i] + " ";  	}  	if (rank != "") {  		rank = rank.Substring (0' rank.Length - 1);  		bool found = false;  		using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  			using (SQLiteDataReader r = query.ExecuteReader ()) {  				while (r.Read ()) {  					if (r ["rank"].ToString ().ToLower () == rank.ToLower ()) {  						found = true;  						break;  					}  				}  			}  		}  		if (found) {  			using (SQLiteCommand query = new SQLiteCommand ("DELETE FROM 'ranks' WHERE rank = '" + rank.Replace ("'"' "''") + "' COLLATE NOCASE;"' DB))  				query.ExecuteNonQuery ();  			Chat.SendMessage ("The rank \"" + rank + "\" has been removed.");  		} else {  			Chat.SendMessage ("The rank \"" + rank + "\" does not exist.");  		}  	}  } else if (args [0].ToLower () == "list") {  	string output = "List of ranks: ";  	using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  		using (SQLiteDataReader r = query.ExecuteReader ()) {  			while (r.Read ()) {  				output += r ["rank"].ToString () + "' ";  			}  		}  	}  	if (output.EndsWith ("' ")) {  		output = output.Substring (0' output.Length - 2) + ".";  	} else {  		output = "No ranks were added.";  	}  	Chat.SendMessage (output);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The following statement contains a magic number: if (args [0].ToLower () == "list") {  	string output = "List of ranks: ";  	using (SQLiteCommand query = new SQLiteCommand ("SELECT * FROM 'ranks';"' DB)) {  		using (SQLiteDataReader r = query.ExecuteReader ()) {  			while (r.Read ()) {  				output += r ["rank"].ToString () + "' ";  			}  		}  	}  	if (output.EndsWith ("' ")) {  		output = output.Substring (0' output.Length - 2) + ".";  	} else {  		output = "No ranks were added.";  	}  	Chat.SendMessage (output);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The following statement contains a magic number: if (output.EndsWith ("' ")) {  	output = output.Substring (0' output.Length - 2) + ".";  } else {  	output = "No ranks were added.";  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,Command_Ranks,The following statement contains a magic number: output = output.Substring (0' output.Length - 2) + ".";  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.UserRanks,UserRanks,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.UserRanks\UserRanks.cs,UpdateCheck,The following statement contains a magic number: LatestVersion = data [5];  
