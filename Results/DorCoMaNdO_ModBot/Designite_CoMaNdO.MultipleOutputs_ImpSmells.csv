Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,Load,The length of the statement  "            UI.AddWindow("Multiple Outputs"' new MultipleOutputsWindow(this)' false' false' false' false' false' "Multiple\r\nOutputs"); " is 124.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The length of the statement  "                                    return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild); " is 189.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,CommandsDataGrid_Changed,The length of the statement  "                    if (row.Cells["ID"].Value != null && row.Cells["Command"].Value != null && row.Cells["Output"].Value != null && row.Cells["Data"].Value != null && row.Cells["Command"].Value.ToString() != "" && row.Cells["Output"].Value.ToString() != "") " is 237.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,CommandsDataGrid_Changed,The length of the statement  "                        using (SQLiteCommand query = new SQLiteCommand("INSERT INTO 'commands' (type' command' data' output) VALUES ('" + id.Replace("'"' "''") + "'' '" + cmd.Replace("'"' "''") + "'' '" + data.Replace("'"' "''") + "'' '" + output.Replace("'"' "''") + "');"' DB)) query.ExecuteNonQuery(); " is 280.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,CommandsDataGrid_Changed,The length of the statement  "                    foreach (string command in dCommands.Keys) Commands.Add(extension' command' Command_Custom' Users.UserLevel.Normal' 0' 60); " is 123.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Events_Connected,The length of the statement  "            if (!CommandsRegistered) foreach (string command in dCommands.Keys) Commands.Add(extension' command' Command_Custom' Users.UserLevel.Normal' 0' 60); " is 148.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_Custom,The length of the statement  "                    Tuple<string' string' string> command = dCommands[cmd.Trigger.ToLower()][new Random().Next(0' dCommands[cmd.Trigger.ToLower()].Count)]; " is 135.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_Custom,The length of the statement  "                        using (SQLiteCommand query = new SQLiteCommand("SELECT * FROM 'userdata' WHERE user = '" + user + "' COLLATE NOCASE;"' DB)) " is 123.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_Custom,The length of the statement  "                                        if (!found) using (SQLiteCommand query2 = new SQLiteCommand("DELETE FROM 'userdata' WHERE user = '" + user + "' AND type = '" + command.Item1.Replace("'"' "''") + "' COLLATE NOCASE;"' DB)) query2.ExecuteNonQuery(); " is 214.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_Custom,The length of the statement  "                        if (!found) using (SQLiteCommand query = new SQLiteCommand("INSERT INTO 'userdata' (user' type' data) VALUES ('" + user + "'' '" + command.Item1.Replace("'"' "''") + "'' '" + command.Item2.Replace("'"' "''") + "');"' DB)) query.ExecuteNonQuery(); " is 246.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_MultipleOutputs,The length of the statement  "                        using (SQLiteCommand query = new SQLiteCommand("DELETE FROM 'userdata' WHERE user = '" + args[1] + "' AND type = '" + id + "' COLLATE NOCASE;"' DB)) query.ExecuteNonQuery(); " is 173.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_MultipleOutputs,The length of the statement  "                        Chat.SendMessage(extension' "Cleared " + args[1] + "'s \"" + id + "\" data."' true' user + " cleared " + args[1] + "'s \"" + id + "\" data."); " is 142.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The length of the statement  "            this.CommandsDataGrid.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 122.
Long Statement,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The length of the statement  "            this.CommandsDataGrid.RowHeadersWidthSizeMode = System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing; " is 121.
Complex Conditional,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,CommandsDataGrid_Changed,The conditional expression  "row.Cells["ID"].Value != null && row.Cells["Command"].Value != null && row.Cells["Output"].Value != null && row.Cells["Data"].Value != null && row.Cells["Command"].Value.ToString() != "" && row.Cells["Output"].Value.ToString() != """  is complex.
Empty Catch Block,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The method has an empty catch block.
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient())              {                  w.Proxy = null;                  try                  {                      LatestVersion = w.DownloadString("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");                      if (LatestVersion != "")                      {                          foreach (string Extension in LatestVersion.Split(Environment.NewLine.ToCharArray()))                          {                              string[] data = Extension.Split(';');                              if (data.Length > 6)                              {                                  if (data[3] == UniqueID)                                  {                                      LatestVersion = data[5];                                        string[] Latest = LatestVersion.Split('.')' Current = Version.Split('.');                                      int LatestMajor = int.Parse(Latest[0])' LatestMinor = int.Parse(Latest[1])' LatestBuild = int.Parse(Latest[2]);                                      int CurrentMajor = int.Parse(Current[0])' CurrentMinor = int.Parse(Current[1])' CurrentBuild = int.Parse(Current[2]);                                      return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);                                  }                              }                          }                      }                  }                  catch                  {                  }              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient())              {                  w.Proxy = null;                  try                  {                      LatestVersion = w.DownloadString("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");                      if (LatestVersion != "")                      {                          foreach (string Extension in LatestVersion.Split(Environment.NewLine.ToCharArray()))                          {                              string[] data = Extension.Split(';');                              if (data.Length > 6)                              {                                  if (data[3] == UniqueID)                                  {                                      LatestVersion = data[5];                                        string[] Latest = LatestVersion.Split('.')' Current = Version.Split('.');                                      int LatestMajor = int.Parse(Latest[0])' LatestMinor = int.Parse(Latest[1])' LatestBuild = int.Parse(Latest[2]);                                      int CurrentMajor = int.Parse(Current[0])' CurrentMinor = int.Parse(Current[1])' CurrentBuild = int.Parse(Current[2]);                                      return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);                                  }                              }                          }                      }                  }                  catch                  {                  }              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient())              {                  w.Proxy = null;                  try                  {                      LatestVersion = w.DownloadString("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");                      if (LatestVersion != "")                      {                          foreach (string Extension in LatestVersion.Split(Environment.NewLine.ToCharArray()))                          {                              string[] data = Extension.Split(';');                              if (data.Length > 6)                              {                                  if (data[3] == UniqueID)                                  {                                      LatestVersion = data[5];                                        string[] Latest = LatestVersion.Split('.')' Current = Version.Split('.');                                      int LatestMajor = int.Parse(Latest[0])' LatestMinor = int.Parse(Latest[1])' LatestBuild = int.Parse(Latest[2]);                                      int CurrentMajor = int.Parse(Current[0])' CurrentMinor = int.Parse(Current[1])' CurrentBuild = int.Parse(Current[2]);                                      return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);                                  }                              }                          }                      }                  }                  catch                  {                  }              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient())              {                  w.Proxy = null;                  try                  {                      LatestVersion = w.DownloadString("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");                      if (LatestVersion != "")                      {                          foreach (string Extension in LatestVersion.Split(Environment.NewLine.ToCharArray()))                          {                              string[] data = Extension.Split(';');                              if (data.Length > 6)                              {                                  if (data[3] == UniqueID)                                  {                                      LatestVersion = data[5];                                        string[] Latest = LatestVersion.Split('.')' Current = Version.Split('.');                                      int LatestMajor = int.Parse(Latest[0])' LatestMinor = int.Parse(Latest[1])' LatestBuild = int.Parse(Latest[2]);                                      int CurrentMajor = int.Parse(Current[0])' CurrentMinor = int.Parse(Current[1])' CurrentBuild = int.Parse(Current[2]);                                      return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);                                  }                              }                          }                      }                  }                  catch                  {                  }              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputs,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputs.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient())              {                  w.Proxy = null;                  try                  {                      LatestVersion = w.DownloadString("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");                      if (LatestVersion != "")                      {                          foreach (string Extension in LatestVersion.Split(Environment.NewLine.ToCharArray()))                          {                              string[] data = Extension.Split(';');                              if (data.Length > 6)                              {                                  if (data[3] == UniqueID)                                  {                                      LatestVersion = data[5];                                        string[] Latest = LatestVersion.Split('.')' Current = Version.Split('.');                                      int LatestMajor = int.Parse(Latest[0])' LatestMinor = int.Parse(Latest[1])' LatestBuild = int.Parse(Latest[2]);                                      int CurrentMajor = int.Parse(Current[0])' CurrentMinor = int.Parse(Current[1])' CurrentBuild = int.Parse(Current[2]);                                      return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);                                  }                              }                          }                      }                  }                  catch                  {                  }              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,CommandsDataGrid_Changed,The following statement contains a magic number: lock (dCommands)              {                  if (CommandsRegistered) foreach (string command in dCommands.Keys) dCommands.Remove(command);                    dCommands.Clear();                    using (SQLiteCommand query = new SQLiteCommand("DELETE FROM 'commands';"' DB)) query.ExecuteNonQuery();                    foreach (DataGridViewRow row in CommandsDataGrid.Rows)                  {                      if (row.Cells["ID"].Value != null && row.Cells["Command"].Value != null && row.Cells["Output"].Value != null && row.Cells["Data"].Value != null && row.Cells["Command"].Value.ToString() != "" && row.Cells["Output"].Value.ToString() != "")                      {                          string id = row.Cells["ID"].Value.ToString();                          string cmd = row.Cells["Command"].Value.ToString();                          string data = row.Cells["Data"].Value.ToString();                          string output = row.Cells["Output"].Value.ToString();                            bool skip = false;                          foreach (string command in Commands.List)                          {                              if (command.ToLower() == cmd.ToLower())                              {                                  skip = true;                                  break;                              }                          }                          if (skip) continue;                            if (!dCommands.ContainsKey(cmd.ToLower())) dCommands.Add(cmd.ToLower()' new List<Tuple<string' string' string>>());                          dCommands[cmd.ToLower()].Add(new Tuple<string' string' string>(id' data' output));                          using (SQLiteCommand query = new SQLiteCommand("INSERT INTO 'commands' (type' command' data' output) VALUES ('" + id.Replace("'"' "''") + "'' '" + cmd.Replace("'"' "''") + "'' '" + data.Replace("'"' "''") + "'' '" + output.Replace("'"' "''") + "');"' DB)) query.ExecuteNonQuery();                      }                  }                    if (Chat.Connection != null && Chat.Connection.Connected)                  {                      foreach (string command in dCommands.Keys) Commands.Add(extension' command' Command_Custom' Users.UserLevel.Normal' 0' 60);                      CommandsRegistered = true;                  }              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Events_Connected,The following statement contains a magic number: if (!CommandsRegistered) foreach (string command in dCommands.Keys) Commands.Add(extension' command' Command_Custom' Users.UserLevel.Normal' 0' 60);
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_MultipleOutputs,The following statement contains a magic number: try              {                  if (args.Length > 2)                  {                      if (args[0].ToLower() == "clear" && Users.CanTarget(user' args[1]) > -1)                      {                          string id = "";                          for (int i = 2; i < args.Length; i++)                          {                              id += args[i] + " ";                          }                            if (id != "") id = id.Substring(0' id.Length - 1);                            using (SQLiteCommand query = new SQLiteCommand("DELETE FROM 'userdata' WHERE user = '" + args[1] + "' AND type = '" + id + "' COLLATE NOCASE;"' DB)) query.ExecuteNonQuery();                            Chat.SendMessage(extension' "Cleared " + args[1] + "'s \"" + id + "\" data."' true' user + " cleared " + args[1] + "'s \"" + id + "\" data.");                      }                  }              }              catch (Exception e)              {                  Logs.Log(extension' Logs.Type.Error' e.ToString());                  Console.WriteLine("An error has occured in Multiple Command Outputs (Command_MultipleOutputs).");              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,Command_MultipleOutputs,The following statement contains a magic number: try              {                  if (args.Length > 2)                  {                      if (args[0].ToLower() == "clear" && Users.CanTarget(user' args[1]) > -1)                      {                          string id = "";                          for (int i = 2; i < args.Length; i++)                          {                              id += args[i] + " ";                          }                            if (id != "") id = id.Substring(0' id.Length - 1);                            using (SQLiteCommand query = new SQLiteCommand("DELETE FROM 'userdata' WHERE user = '" + args[1] + "' AND type = '" + id + "' COLLATE NOCASE;"' DB)) query.ExecuteNonQuery();                            Chat.SendMessage(extension' "Cleared " + args[1] + "'s \"" + id + "\" data."' true' user + " cleared " + args[1] + "'s \"" + id + "\" data.");                      }                  }              }              catch (Exception e)              {                  Logs.Log(extension' Logs.Type.Error' e.ToString());                  Console.WriteLine("An error has occured in Multiple Command Outputs (Command_MultipleOutputs).");              }
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.CommandsDataGrid.Location = new System.Drawing.Point(-1' 32);
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.CommandsDataGrid.Size = new System.Drawing.Size(1025' 618);
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.CommandsDataGrid.Size = new System.Drawing.Size(1025' 618);
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.CommandsDataGrid.TabIndex = 62;
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.Data.Width = 200;
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.Output.Width = 607;
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1024' 562);
Magic Number,CoMaNdO.MultipleOutputs,MultipleOutputsWindow,C:\repos\DorCoMaNdO_ModBot\CoMaNdO.MultipleOutputs\MultipleOutputsWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1024' 562);
