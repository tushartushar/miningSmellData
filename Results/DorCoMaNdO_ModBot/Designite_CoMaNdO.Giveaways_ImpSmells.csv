Implementation smell,Namespace,Class,File,Method,Description
Long Method,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The method has 138 lines of code.
Long Method,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The method has 166 lines of code.
Long Method,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The method has 190 lines of code.
Long Method,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The method has 840 lines of code.
Complex Method,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,Cyclomatic complexity of the method is 8
Complex Method,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,Cyclomatic complexity of the method is 30
Complex Method,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,Cyclomatic complexity of the method is 10
Complex Method,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,Cyclomatic complexity of the method is 21
Complex Method,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,Cyclomatic complexity of the method is 10
Complex Method,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,Cyclomatic complexity of the method is 16
Long Parameter List,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,CheckUser,The method has 5 parameters.
Long Statement,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The length of the statement  "							int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]); " is 123.
Long Statement,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The length of the statement  "							return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild); " is 189.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "		//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel// " is 120.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "				/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";" is 157.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "                        sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!"); " is 403.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "				} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) { " is 132.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "                            sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";" is 120.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "                    sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";" is 158.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "                    if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";" is 145.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The length of the statement  "                }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) { " is 200.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The length of the statement  "	if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) { " is 155.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The length of the statement  "								} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) { " is 194.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The length of the statement  "						Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3); " is 151.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The length of the statement  "								} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) { " is 194.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The length of the statement  "				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3); " is 151.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_ModeratorsChecked,The length of the statement  "		Window.Giveaway_WarnFalseEntries.Enabled = (!Window.Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())); " is 137.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The length of the statement  "				//if (!Chat.IgnoredUsers.Contains(user.ToLower()) && !Window.Giveaway_UserList.Items.Contains(user) && CheckUser(user' true' Chat.Users.Count < 100)) " is 149.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The length of the statement  "				if (!Chat.IgnoredUsers.Contains (user.ToLower ()) && !Window.Giveaway_BanListListBox.Items.Contains (user.ToLower ()) && !Window.Giveaway_UserList.Items.Contains (user) && CheckUser (user' true' false)) { " is 204.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The length of the statement  "			if (!dState.ContainsKey (ctrl) && ((ctrl.GetType () == typeof(RadioButton) || ctrl.GetType ().BaseType == typeof(NumericUpDown) || ctrl.GetType () == typeof(CheckBox)) && ctrl != Window.Giveaway_AnnounceFalseEntries && ctrl != Window.Giveaway_WarnFalseEntries && ctrl != Window.Giveaway_AnnounceWarnedEntries && ctrl != Window.Giveaway_AutoBanWinner && ctrl != Window.Giveaway_SubscribersWinMultiplier && ctrl != Window.Giveaway_SubscribersWinMultiplierAmount || ctrl == Window.Giveaway_CustomKeyword)) { " is 504.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The length of the statement  "				msg += " watched the stream for at least " + Window.Giveaway_MustWatchHours.Value + " hours and " + Window.Giveaway_MustWatchMinutes.Value + " minutes"; " is 152.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The length of the statement  "					Chat.SendMessage ("A giveaway has started! Ticket cost: " + ticketcost + "' max. tickets: " + maxtickets + ". Anyone" + msg + " can join!"); " is 140.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The length of the statement  "					Chat.SendMessage ("A giveaway has started! Join by typing \"" + (Window.Giveaway_CustomKeyword.Text == "" ? "!ticket" : Window.Giveaway_CustomKeyword.Text) + "\". Anyone" + msg + " can join!"); " is 193.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Cancel,The length of the statement  "		Chat.SendMessage ("The giveaway has been cancelled" + (!Window.Giveaway_TypeActive.Checked ? "' entries have been refunded." : ".")); " is 133.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,BuyTickets,The length of the statement  "	if (Started && (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) && IsOpen && tickets <= MaxTickets && CheckUser (user)) { " is 149.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,CheckUser,The length of the statement  "	return (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && (!checkcurrency || !Window.Giveaway_MinCurrency.Checked || Currency.Check (user) >= (int)Window.Giveaway_MinCurrencyBox.Value) && (!checkfollow || !Window.Giveaway_MustFollow.Checked || Users.IsFollower (user)) && (!checksubscriber || !Window.Giveaway_MustSubscribe.Checked || Users.IsSubscriber (user)) && (!checktime || !Window.Giveaway_MustWatch.Checked || Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) >= 0)); " is 608.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "							//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100)) " is 127.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "							//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100)) " is 135.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "							//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) " is 183.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "							if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false)) " is 290.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "                                            foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);" is 157.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "                                            foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);" is 130.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "						Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m"); " is 275.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "							//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)"); " is 417.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The length of the statement  "							Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)"); " is 358.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The length of the statement  "				//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid"; " is 137.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The length of the statement  "					if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) { " is 212.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The length of the statement  "					//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name); " is 282.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The length of the statement  "					if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false)) " is 289.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The length of the statement  "				//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user); " is 280.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The length of the statement  "					if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false)) " is 200.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The length of the statement  "					//foreach (string usr in Users.Keys) if (!Window.Giveaway_UserList.Items.Contains(usr)) Window.Giveaway_UserList.Items.Add(usr + " (" + Users[usr] + ")"); " is 154.
Long Statement,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The length of the statement  "						if (!dUsers.ContainsKey (user.Split (' ') [0].ToLower ()) || !ActiveUsers.ContainsKey (user.Split (' ') [0].ToLower ())) " is 120.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The length of the statement  "			Giveaway_BanListListBox.SelectedIndex = iOldIndex > Giveaway_BanListListBox.Items.Count - 1 ? Giveaway_BanListListBox.Items.Count - 1 : iOldIndex; " is 146.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The length of the statement  "		Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())); " is 164.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "					foreach (KeyValuePair<string' string> KeyValue in dSettings [Giveaway_SettingsPresents.TabPages [Giveaway_SettingsPresents.SelectedIndex].Text]) { " is 146.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_TicketCost.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_TicketCost.Maximum) " is 135.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_MaxTickets.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_MaxTickets.Maximum) " is 135.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_MustWatchHours.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_MustWatchHours.Maximum) " is 143.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_MustWatchMinutes.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_MustWatchMinutes.Maximum) " is 147.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_MinCurrencyBox.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_MinCurrencyBox.Maximum) " is 143.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_ActiveUserTime.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_ActiveUserTime.Maximum) " is 143.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								Giveaway_AnnounceWarnedEntries.Checked = (KeyValue.Value == "1" && Channel.Moderators.Contains (Channel.Bot.ToLower ())); " is 121.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GetSettings,The length of the statement  "								if (Convert.ToInt32 (KeyValue.Value) >= Giveaway_SubscribersWinMultiplierAmount.Minimum && Convert.ToInt32 (KeyValue.Value) <= Giveaway_SubscribersWinMultiplierAmount.Maximum) " is 175.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,SaveSettings,The length of the statement  "					ini.SetValue (Present' "Giveaway_SubscribersWinMultiplierAmount"' Giveaway_SubscribersWinMultiplierAmount.Value.ToString ()); " is 125.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_StartButton_Click,The length of the statement  "		Giveaway.Start (true' int.Parse (Giveaway_TicketCost.Value.ToString ())' int.Parse (Giveaway_MaxTickets.Value.ToString ())); " is 124.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_AnnounceWinnerButton_Click,The length of the statement  "	//Chat.SendMessage(winner + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Giveaway.Chance.ToString("0.00") + "%)"); " is 404.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_AnnounceWinnerButton_Click,The length of the statement  "	Chat.SendMessage (winner + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)"); " is 354.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_AddBanTextBox_TextChanged,The length of the statement  "	Giveaway_BanButton.Enabled = (Giveaway_AddBanTextBox.Text != "" && Giveaway_AddBanTextBox.Text.Length > 2 && !Giveaway_AddBanTextBox.Text.Contains (" ") && !Giveaway_AddBanTextBox.Text.Contains (";") && !Giveaway_AddBanTextBox.Text.Contains (".") && !Giveaway_AddBanTextBox.Text.Contains ("'") && !Giveaway_AddBanTextBox.Text.Contains ("\"") && !Giveaway_AddBanTextBox.Text.Contains ("'") && !Chat.IgnoredUsers.Contains (Giveaway_AddBanTextBox.Text.ToLower ()) && !Giveaway_BanListListBox.Items.Contains (Giveaway_AddBanTextBox.Text.ToLower ())); " is 546.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,SettingsPresents_SelectedIndexChanged,The length of the statement  "		ini.SetValue ("Settings"' "SelectedPresent"' Giveaway_SettingsPresents.TabPages [Giveaway_SettingsPresents.SelectedIndex].Text); " is 128.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.GiveawayUsersLabel.Font = new System.Drawing.Font ("Segoe Print"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_MustWatch.Text = "Has watched the stream for at least                   hours and             minut" + "es"; " is 122.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.GiveawayBansLabel.Font = new System.Drawing.Font ("Segoe Print"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.GiveawaySettingsLabel.Font = new System.Drawing.Font ("Segoe Print"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_SettingsPresents.SelectedIndexChanged += new System.EventHandler (this.SettingsPresents_SelectedIndexChanged); " is 124.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_SettingsPresents.MouseClick += new System.Windows.Forms.MouseEventHandler (this.Giveaway_SettingsPresents_MouseClick); " is 132.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_WinTimeLabel.Font = new System.Drawing.Font ("Segoe Print"' 10F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_WinnerTimerLabel.Font = new System.Drawing.Font ("Segoe Print"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_BanListListBox.SelectedIndexChanged += new System.EventHandler (this.Giveaway_BanListListBox_SelectedIndexChanged); " is 129.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.label6.Font = new System.Drawing.Font ("Segoe Print"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 145.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_WinnerStatusLabel.Font = new System.Drawing.Font ("Segoe Print"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.Giveaway_WinnerLabel.Font = new System.Drawing.Font ("Segoe Print"' 10F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The length of the statement  "	this.GiveawayTypeLabel.Font = new System.Drawing.Font ("Segoe Print"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The conditional expression  "(args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1"  is complex.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The conditional expression  "(args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1"  is complex.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The conditional expression  "Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)"  is complex.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The conditional expression  "!Chat.IgnoredUsers.Contains (user.ToLower ()) && !Window.Giveaway_BanListListBox.Items.Contains (user.ToLower ()) && !Window.Giveaway_UserList.Items.Contains (user) && CheckUser (user' true' false)"  is complex.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The conditional expression  "!dState.ContainsKey (ctrl) && ((ctrl.GetType () == typeof(RadioButton) || ctrl.GetType ().BaseType == typeof(NumericUpDown) || ctrl.GetType () == typeof(CheckBox)) && ctrl != Window.Giveaway_AnnounceFalseEntries && ctrl != Window.Giveaway_WarnFalseEntries && ctrl != Window.Giveaway_AnnounceWarnedEntries && ctrl != Window.Giveaway_AutoBanWinner && ctrl != Window.Giveaway_SubscribersWinMultiplier && ctrl != Window.Giveaway_SubscribersWinMultiplierAmount || ctrl == Window.Giveaway_CustomKeyword)"  is complex.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,BuyTickets,The conditional expression  "Started && (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) && IsOpen && tickets <= MaxTickets && CheckUser (user)"  is complex.
Complex Conditional,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The conditional expression  "!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false)"  is complex.
Empty Catch Block,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The method has an empty catch block.
Empty Catch Block,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The method has an empty catch block.
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	w.Proxy = null;  	try {  		LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  		if (LatestVersion != "") {  			foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  				string[] data = Extension.Split (';');  				if (data.Length > 6) {  					if (data [3] == UniqueID) {  						LatestVersion = data [5];  						string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  						int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  						int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  						return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  					}  				}  			}  		}  	} catch {  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: try {  	LatestVersion = w.DownloadString ("https://dl.dropboxusercontent.com/u/60356733/ModBot/Extensions/Extensions.txt");  	if (LatestVersion != "") {  		foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  			string[] data = Extension.Split (';');  			if (data.Length > 6) {  				if (data [3] == UniqueID) {  					LatestVersion = data [5];  					string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  					int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  					int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  					return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  				}  			}  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (LatestVersion != "") {  	foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  		string[] data = Extension.Split (';');  		if (data.Length > 6) {  			if (data [3] == UniqueID) {  				LatestVersion = data [5];  				string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  				int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  				int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  				return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: foreach (string Extension in LatestVersion.Split (Environment.NewLine.ToCharArray ())) {  	string[] data = Extension.Split (';');  	if (data.Length > 6) {  		if (data [3] == UniqueID) {  			LatestVersion = data [5];  			string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  			int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  			int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  			return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data.Length > 6) {  	if (data [3] == UniqueID) {  		LatestVersion = data [5];  		string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  		int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  		int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  		return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: if (data [3] == UniqueID) {  	LatestVersion = data [5];  	string[] Latest = LatestVersion.Split ('.')' Current = Version.Split ('.');  	int LatestMajor = int.Parse (Latest [0])' LatestMinor = int.Parse (Latest [1])' LatestBuild = int.Parse (Latest [2]);  	int CurrentMajor = int.Parse (Current [0])' CurrentMinor = int.Parse (Current [1])' CurrentBuild = int.Parse (Current [2]);  	return (LatestMajor > CurrentMajor || LatestMajor == CurrentMajor && LatestMinor > CurrentMinor || LatestMajor == CurrentMajor && LatestMinor == CurrentMinor && LatestBuild > CurrentBuild);  }  
Magic Number,CoMaNdO.Giveaways,Giveaways,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UpdateCheck,The following statement contains a magic number: LatestVersion = data [5];  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 0) {  	//ADMIN GIVEAWAY COMMANDS: !giveaway open <TicketCost> <MaxTickets>' !giveaway close' !giveaway draw' !giveaway cancel//  	if (Users.GetLevel (user) >= 1) {  		if (args [0].ToLower () == "announce") {  			/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  		}  		if (Users.GetLevel (user) >= 2) {  			if (args [0].ToLower () == "roll") {  				if (Started) {  					if (!IsOpen) {  						Roll ();  					} else {  						Chat.SendMessage ("The giveaway has to be closed first!");  					}  				} else {  					Chat.SendMessage ("No giveaway running!");  				}  			} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  				if (!Started) {  					int type;  					if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_TypeActive.Checked = (type == 1);  							Window.Giveaway_TypeKeyword.Checked = (type == 2);  							Window.Giveaway_TypeTickets.Checked = (type == 3);  						});  						if (Window.Giveaway_TypeTickets.Checked) {  							int ticketcost = 5' maxtickets = 1;  							if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  								ticketcost = 5;  							if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  								maxtickets = 1;  							if (ticketcost >= 0 && maxtickets > 0) {  								Start (true' ticketcost' maxtickets);  							} else {  								Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  							}  						} else if (Window.Giveaway_TypeKeyword.Checked) {  							string keyword = "";  							if (args.Length > 2) {  								for (int i = 2; i < args.Length; i++)  									keyword += args [i] + " ";  								keyword.Substring (0' keyword.Length - 1);  							}  							Window.BeginInvoke ((MethodInvoker)delegate {  								Window.Giveaway_CustomKeyword.Text = keyword;  								Start ();  							});  						} else {  							Start ();  						}  					}  				} else {  					Chat.SendMessage ("A giveaway is already running.");  				}  			} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  				if (Started) {  					if (IsOpen) {  						Close ();  					} else {  						Chat.SendMessage ("Entries to the giveaway has been closed already.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  				if (Started) {  					if (!IsOpen) {  						Open ();  					} else {  						Chat.SendMessage ("Entries to the giveaway are already open.");  					}  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  				if (Started) {  					End ();  				} else {  					Chat.SendMessage ("A giveaway is not running.");  				}  			} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  				if (Started) {  					Cancel ();  				}  			}  		}  	}  	//REGULAR USER COMMANDS: !giveaway help  	/*if (args[0].ToLower() == "help")                 {                     string sMessage = "In order to join the giveaway' you have to be active in chat ";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked)                     {                         if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                         {                             sMessage = sMessage + "and follow the stream' ";                         }                         else                         {                             sMessage = sMessage + "' follow the stream and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                         }                     }                     else                     {                         sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + "' ";                     }                     sMessage = sMessage + "the winner is selected from a list of viewers that were active within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes";                     if (MainForm.Giveaway_MustFollowCheckBox.Checked || MainForm.Giveaway_MinCurrencyCheckBox.Checked) sMessage = sMessage + " and comply the terms";                     sMessage = sMessage + ".";                     sendMessage(sMessage);                 }*/if ((args [0].ToLower () == "buy" || args [0].ToLower () == "join" || args [0].ToLower () == "purchase" || args [0].ToLower () == "ticket" || args [0].ToLower () == "tickets") && args.Length > 1) {  		Command_Ticket (user' cmd' new string[] {  			args [1]  		}' origin);  	}  } else {  	Command_Ticket (user' cmd' args' origin);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 1) {  	if (args [0].ToLower () == "announce") {  		/*string sMessage = "Get the party started! Viewers active in chat within the last " + Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) + " minutes ";                         if (MainForm.Giveaway_MustFollowCheckBox.Checked)                         {                             if (!MainForm.Giveaway_MinCurrencyCheckBox.Checked)                             {                                 sMessage = sMessage + "and follow the stream ";                             }                             else                             {                                 sMessage = sMessage + "follow the stream' and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                             }                         }                         else                         {                             sMessage = sMessage + "and have " + MainForm.Giveaway_MinCurrency.Value + " " + currencyName + " ";                         }                         sMessage = sMessage + "will qualify for the giveaway!";                         sendMessage(sMessage);*///sendMessage("Get the party started! Viewers active in chat within the last " + MainForm.Giveaway_ActiveUserTime.Value + " minutes" + (MainForm.Giveaway_MustFollow.Checked ? MainForm.Giveaway_MinCurrency.Checked ? " follow the stream' and have " + MainForm.Giveaway_MinCurrencyBox.Value + " " + currencyName : " and follow the stream" : "") + " will qualify for the giveaway!");  	}  	if (Users.GetLevel (user) >= 2) {  		if (args [0].ToLower () == "roll") {  			if (Started) {  				if (!IsOpen) {  					Roll ();  				} else {  					Chat.SendMessage ("The giveaway has to be closed first!");  				}  			} else {  				Chat.SendMessage ("No giveaway running!");  			}  		} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  			if (!Started) {  				int type;  				if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_TypeActive.Checked = (type == 1);  						Window.Giveaway_TypeKeyword.Checked = (type == 2);  						Window.Giveaway_TypeTickets.Checked = (type == 3);  					});  					if (Window.Giveaway_TypeTickets.Checked) {  						int ticketcost = 5' maxtickets = 1;  						if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  							ticketcost = 5;  						if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  							maxtickets = 1;  						if (ticketcost >= 0 && maxtickets > 0) {  							Start (true' ticketcost' maxtickets);  						} else {  							Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  						}  					} else if (Window.Giveaway_TypeKeyword.Checked) {  						string keyword = "";  						if (args.Length > 2) {  							for (int i = 2; i < args.Length; i++)  								keyword += args [i] + " ";  							keyword.Substring (0' keyword.Length - 1);  						}  						Window.BeginInvoke ((MethodInvoker)delegate {  							Window.Giveaway_CustomKeyword.Text = keyword;  							Start ();  						});  					} else {  						Start ();  					}  				}  			} else {  				Chat.SendMessage ("A giveaway is already running.");  			}  		} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  			if (Started) {  				if (IsOpen) {  					Close ();  				} else {  					Chat.SendMessage ("Entries to the giveaway has been closed already.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  			if (Started) {  				if (!IsOpen) {  					Open ();  				} else {  					Chat.SendMessage ("Entries to the giveaway are already open.");  				}  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  			if (Started) {  				End ();  			} else {  				Chat.SendMessage ("A giveaway is not running.");  			}  		} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  			if (Started) {  				Cancel ();  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Users.GetLevel (user) >= 2) {  	if (args [0].ToLower () == "roll") {  		if (Started) {  			if (!IsOpen) {  				Roll ();  			} else {  				Chat.SendMessage ("The giveaway has to be closed first!");  			}  		} else {  			Chat.SendMessage ("No giveaway running!");  		}  	} else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  		if (!Started) {  			int type;  			if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_TypeActive.Checked = (type == 1);  					Window.Giveaway_TypeKeyword.Checked = (type == 2);  					Window.Giveaway_TypeTickets.Checked = (type == 3);  				});  				if (Window.Giveaway_TypeTickets.Checked) {  					int ticketcost = 5' maxtickets = 1;  					if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  						ticketcost = 5;  					if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  						maxtickets = 1;  					if (ticketcost >= 0 && maxtickets > 0) {  						Start (true' ticketcost' maxtickets);  					} else {  						Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  					}  				} else if (Window.Giveaway_TypeKeyword.Checked) {  					string keyword = "";  					if (args.Length > 2) {  						for (int i = 2; i < args.Length; i++)  							keyword += args [i] + " ";  						keyword.Substring (0' keyword.Length - 1);  					}  					Window.BeginInvoke ((MethodInvoker)delegate {  						Window.Giveaway_CustomKeyword.Text = keyword;  						Start ();  					});  				} else {  					Start ();  				}  			}  		} else {  			Chat.SendMessage ("A giveaway is already running.");  		}  	} else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  		if (Started) {  			if (IsOpen) {  				Close ();  			} else {  				Chat.SendMessage ("Entries to the giveaway has been closed already.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0] == "open" || args [0].ToLower () == "unlock") {  		if (Started) {  			if (!IsOpen) {  				Open ();  			} else {  				Chat.SendMessage ("Entries to the giveaway are already open.");  			}  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  		if (Started) {  			End ();  		} else {  			Chat.SendMessage ("A giveaway is not running.");  		}  	} else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  		if (Started) {  			Cancel ();  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args [0].ToLower () == "roll") {  	if (Started) {  		if (!IsOpen) {  			Roll ();  		} else {  			Chat.SendMessage ("The giveaway has to be closed first!");  		}  	} else {  		Chat.SendMessage ("No giveaway running!");  	}  } else if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if ((args [0].ToLower () == "start" || args [0].ToLower () == "create" || args [0].ToLower () == "run") && args.Length > 1) {  	if (!Started) {  		int type;  		if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_TypeActive.Checked = (type == 1);  				Window.Giveaway_TypeKeyword.Checked = (type == 2);  				Window.Giveaway_TypeTickets.Checked = (type == 3);  			});  			if (Window.Giveaway_TypeTickets.Checked) {  				int ticketcost = 5' maxtickets = 1;  				if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  					ticketcost = 5;  				if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  					maxtickets = 1;  				if (ticketcost >= 0 && maxtickets > 0) {  					Start (true' ticketcost' maxtickets);  				} else {  					Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  				}  			} else if (Window.Giveaway_TypeKeyword.Checked) {  				string keyword = "";  				if (args.Length > 2) {  					for (int i = 2; i < args.Length; i++)  						keyword += args [i] + " ";  					keyword.Substring (0' keyword.Length - 1);  				}  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_CustomKeyword.Text = keyword;  					Start ();  				});  			} else {  				Start ();  			}  		}  	} else {  		Chat.SendMessage ("A giveaway is already running.");  	}  } else if (args [0].ToLower () == "close" || args [0].ToLower () == "lock") {  	if (Started) {  		if (IsOpen) {  			Close ();  		} else {  			Chat.SendMessage ("Entries to the giveaway has been closed already.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0] == "open" || args [0].ToLower () == "unlock") {  	if (Started) {  		if (!IsOpen) {  			Open ();  		} else {  			Chat.SendMessage ("Entries to the giveaway are already open.");  		}  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "stop" || args [0].ToLower () == "end") {  	if (Started) {  		End ();  	} else {  		Chat.SendMessage ("A giveaway is not running.");  	}  } else if (args [0].ToLower () == "cancel" || args [0].ToLower () == "abort") {  	if (Started) {  		Cancel ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (!Started) {  	int type;  	if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_TypeActive.Checked = (type == 1);  			Window.Giveaway_TypeKeyword.Checked = (type == 2);  			Window.Giveaway_TypeTickets.Checked = (type == 3);  		});  		if (Window.Giveaway_TypeTickets.Checked) {  			int ticketcost = 5' maxtickets = 1;  			if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  				ticketcost = 5;  			if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  				maxtickets = 1;  			if (ticketcost >= 0 && maxtickets > 0) {  				Start (true' ticketcost' maxtickets);  			} else {  				Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  			}  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			string keyword = "";  			if (args.Length > 2) {  				for (int i = 2; i < args.Length; i++)  					keyword += args [i] + " ";  				keyword.Substring (0' keyword.Length - 1);  			}  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_CustomKeyword.Text = keyword;  				Start ();  			});  		} else {  			Start ();  		}  	}  } else {  	Chat.SendMessage ("A giveaway is already running.");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (int.TryParse (args [1]' out type) && type >= 1 && type <= 3) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_TypeActive.Checked = (type == 1);  		Window.Giveaway_TypeKeyword.Checked = (type == 2);  		Window.Giveaway_TypeTickets.Checked = (type == 3);  	});  	if (Window.Giveaway_TypeTickets.Checked) {  		int ticketcost = 5' maxtickets = 1;  		if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  			ticketcost = 5;  		if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  			maxtickets = 1;  		if (ticketcost >= 0 && maxtickets > 0) {  			Start (true' ticketcost' maxtickets);  		} else {  			Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  		}  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		string keyword = "";  		if (args.Length > 2) {  			for (int i = 2; i < args.Length; i++)  				keyword += args [i] + " ";  			keyword.Substring (0' keyword.Length - 1);  		}  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_CustomKeyword.Text = keyword;  			Start ();  		});  	} else {  		Start ();  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	Window.Giveaway_TypeActive.Checked = (type == 1);  	Window.Giveaway_TypeKeyword.Checked = (type == 2);  	Window.Giveaway_TypeTickets.Checked = (type == 3);  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	Window.Giveaway_TypeActive.Checked = (type == 1);  	Window.Giveaway_TypeKeyword.Checked = (type == 2);  	Window.Giveaway_TypeTickets.Checked = (type == 3);  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: Window.Giveaway_TypeKeyword.Checked = (type == 2);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: Window.Giveaway_TypeTickets.Checked = (type == 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked) {  	int ticketcost = 5' maxtickets = 1;  	if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  		ticketcost = 5;  	if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  		maxtickets = 1;  	if (ticketcost >= 0 && maxtickets > 0) {  		Start (true' ticketcost' maxtickets);  	} else {  		Chat.SendMessage ("Ticket cost cannot be lower than 0 and max tickets cannot be lower than 1.");  	}  } else if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  	ticketcost = 5;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  	ticketcost = 5;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 2 && !int.TryParse (args [2]' out ticketcost))  	ticketcost = 5;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: ticketcost = 5;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  	maxtickets = 1;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 3 && !int.TryParse (args [3]' out maxtickets))  	maxtickets = 1;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	string keyword = "";  	if (args.Length > 2) {  		for (int i = 2; i < args.Length; i++)  			keyword += args [i] + " ";  		keyword.Substring (0' keyword.Length - 1);  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_CustomKeyword.Text = keyword;  		Start ();  	});  } else {  	Start ();  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 2) {  	for (int i = 2; i < args.Length; i++)  		keyword += args [i] + " ";  	keyword.Substring (0' keyword.Length - 1);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: if (args.Length > 2) {  	for (int i = 2; i < args.Length; i++)  		keyword += args [i] + " ";  	keyword.Substring (0' keyword.Length - 1);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Giveaway,The following statement contains a magic number: for (int i = 2; i < args.Length; i++)  	keyword += args [i] + " ";  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Started && (Window.Giveaway_TypeKeyword.Checked && (Window.Giveaway_CustomKeyword.Text == "" || cmd == null) || Window.Giveaway_TypeTickets.Checked)) {  	if (IsOpen) {  		if (Window.Giveaway_TypeKeyword.Checked) {  			if (args.Length > 0 && args [0] == "0") {  				if (HasBoughtTickets (user)) {  					BuyTickets (user' 0);  					return;  				}  			}  			if (!HasBoughtTickets (user)) {  				user = user.ToLower ();  				lock (FalseEntries) {  					if (BuyTickets (user)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (Currency.Check (user) < Cost) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			} else {  				if (Window.Giveaway_WarnFalseEntries.Checked)  					Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  			}  		} else {  			if (args.Length > 0) {  				user = user.ToLower ();  				lock (FalseEntries) {  					int tickets;  					if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  						if (FalseEntries.ContainsKey (user))  							FalseEntries.Remove (user);  						if (FalseEntries.Count > 15) {  							GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  							GiveawayQueueHandler (null);  						} else {  							GiveawayQueue.Change (10000' Timeout.Infinite);  						}  					} else {  						if (!FalseEntries.ContainsKey (user)) {  							int id = -1;  							if (tickets < 1 || tickets > MaxTickets) {  								id = 0;  							} else if (Currency.Check (user) < Cost * tickets) {  								id = 1;  							} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  								id = 2;  							} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  								id = 3;  							} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  								id = 4;  							}  							FalseEntries.Add (user' id);  						}  						if (FalseEntries.Count == 1)  							GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				}  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (IsOpen) {  	if (Window.Giveaway_TypeKeyword.Checked) {  		if (args.Length > 0 && args [0] == "0") {  			if (HasBoughtTickets (user)) {  				BuyTickets (user' 0);  				return;  			}  		}  		if (!HasBoughtTickets (user)) {  			user = user.ToLower ();  			lock (FalseEntries) {  				if (BuyTickets (user)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (Currency.Check (user) < Cost) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		} else {  			if (Window.Giveaway_WarnFalseEntries.Checked)  				Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  		}  	} else {  		if (args.Length > 0) {  			user = user.ToLower ();  			lock (FalseEntries) {  				int tickets;  				if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  					if (FalseEntries.ContainsKey (user))  						FalseEntries.Remove (user);  					if (FalseEntries.Count > 15) {  						GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  						GiveawayQueueHandler (null);  					} else {  						GiveawayQueue.Change (10000' Timeout.Infinite);  					}  				} else {  					if (!FalseEntries.ContainsKey (user)) {  						int id = -1;  						if (tickets < 1 || tickets > MaxTickets) {  							id = 0;  						} else if (Currency.Check (user) < Cost * tickets) {  							id = 1;  						} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  							id = 2;  						} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  							id = 3;  						} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  							id = 4;  						}  						FalseEntries.Add (user' id);  					}  					if (FalseEntries.Count == 1)  						GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			}  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_TypeKeyword.Checked) {  	if (args.Length > 0 && args [0] == "0") {  		if (HasBoughtTickets (user)) {  			BuyTickets (user' 0);  			return;  		}  	}  	if (!HasBoughtTickets (user)) {  		user = user.ToLower ();  		lock (FalseEntries) {  			if (BuyTickets (user)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (Currency.Check (user) < Cost) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	} else {  		if (Window.Giveaway_WarnFalseEntries.Checked)  			Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  	}  } else {  	if (args.Length > 0) {  		user = user.ToLower ();  		lock (FalseEntries) {  			int tickets;  			if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  				if (FalseEntries.ContainsKey (user))  					FalseEntries.Remove (user);  				if (FalseEntries.Count > 15) {  					GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  					GiveawayQueueHandler (null);  				} else {  					GiveawayQueue.Change (10000' Timeout.Infinite);  				}  			} else {  				if (!FalseEntries.ContainsKey (user)) {  					int id = -1;  					if (tickets < 1 || tickets > MaxTickets) {  						id = 0;  					} else if (Currency.Check (user) < Cost * tickets) {  						id = 1;  					} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  						id = 2;  					} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  						id = 3;  					} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  						id = 4;  					}  					FalseEntries.Add (user' id);  				}  				if (FalseEntries.Count == 1)  					GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!HasBoughtTickets (user)) {  	user = user.ToLower ();  	lock (FalseEntries) {  		if (BuyTickets (user)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (Currency.Check (user) < Cost) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  } else {  	if (Window.Giveaway_WarnFalseEntries.Checked)  		Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	if (BuyTickets (user)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (Currency.Check (user) < Cost) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	if (BuyTickets (user)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (Currency.Check (user) < Cost) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	if (BuyTickets (user)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (Currency.Check (user) < Cost) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	if (BuyTickets (user)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (Currency.Check (user) < Cost) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	if (BuyTickets (user)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (Currency.Check (user) < Cost) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	if (BuyTickets (user)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (Currency.Check (user) < Cost) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (BuyTickets (user)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (Currency.Check (user) < Cost) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (BuyTickets (user)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (Currency.Check (user) < Cost) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (BuyTickets (user)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (Currency.Check (user) < Cost) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (BuyTickets (user)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (Currency.Check (user) < Cost) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (BuyTickets (user)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (Currency.Check (user) < Cost) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (BuyTickets (user)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (Currency.Check (user) < Cost) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (FalseEntries.Count > 15) {  	GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  	GiveawayQueueHandler (null);  } else {  	GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (FalseEntries.Count > 15) {  	GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  	GiveawayQueueHandler (null);  } else {  	GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: GiveawayQueue.Change (10000' Timeout.Infinite);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!FalseEntries.ContainsKey (user)) {  	int id = -1;  	if (Currency.Check (user) < Cost) {  		id = 1;  	} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  		id = 2;  	} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  		id = 3;  	} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  		id = 4;  	}  	FalseEntries.Add (user' id);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!FalseEntries.ContainsKey (user)) {  	int id = -1;  	if (Currency.Check (user) < Cost) {  		id = 1;  	} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  		id = 2;  	} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  		id = 3;  	} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  		id = 4;  	}  	FalseEntries.Add (user' id);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!FalseEntries.ContainsKey (user)) {  	int id = -1;  	if (Currency.Check (user) < Cost) {  		id = 1;  	} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  		id = 2;  	} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  		id = 3;  	} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  		id = 4;  	}  	FalseEntries.Add (user' id);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Currency.Check (user) < Cost) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Currency.Check (user) < Cost) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Currency.Check (user) < Cost) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: id = 2;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: id = 3;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: id = 4;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (FalseEntries.Count == 1)  	GiveawayQueue.Change (10000' Timeout.Infinite);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: GiveawayQueue.Change (10000' Timeout.Infinite);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked)  	Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked)  	Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (args.Length > 0) {  	user = user.ToLower ();  	lock (FalseEntries) {  		int tickets;  		if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (tickets < 1 || tickets > MaxTickets) {  					id = 0;  				} else if (Currency.Check (user) < Cost * tickets) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (args.Length > 0) {  	user = user.ToLower ();  	lock (FalseEntries) {  		int tickets;  		if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (tickets < 1 || tickets > MaxTickets) {  					id = 0;  				} else if (Currency.Check (user) < Cost * tickets) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (args.Length > 0) {  	user = user.ToLower ();  	lock (FalseEntries) {  		int tickets;  		if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (tickets < 1 || tickets > MaxTickets) {  					id = 0;  				} else if (Currency.Check (user) < Cost * tickets) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (args.Length > 0) {  	user = user.ToLower ();  	lock (FalseEntries) {  		int tickets;  		if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (tickets < 1 || tickets > MaxTickets) {  					id = 0;  				} else if (Currency.Check (user) < Cost * tickets) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (args.Length > 0) {  	user = user.ToLower ();  	lock (FalseEntries) {  		int tickets;  		if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (tickets < 1 || tickets > MaxTickets) {  					id = 0;  				} else if (Currency.Check (user) < Cost * tickets) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (args.Length > 0) {  	user = user.ToLower ();  	lock (FalseEntries) {  		int tickets;  		if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  			if (FalseEntries.ContainsKey (user))  				FalseEntries.Remove (user);  			if (FalseEntries.Count > 15) {  				GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  				GiveawayQueueHandler (null);  			} else {  				GiveawayQueue.Change (10000' Timeout.Infinite);  			}  		} else {  			if (!FalseEntries.ContainsKey (user)) {  				int id = -1;  				if (tickets < 1 || tickets > MaxTickets) {  					id = 0;  				} else if (Currency.Check (user) < Cost * tickets) {  					id = 1;  				} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  					id = 2;  				} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  					id = 3;  				} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  					id = 4;  				}  				FalseEntries.Add (user' id);  			}  			if (FalseEntries.Count == 1)  				GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	int tickets;  	if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (tickets < 1 || tickets > MaxTickets) {  				id = 0;  			} else if (Currency.Check (user) < Cost * tickets) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	int tickets;  	if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (tickets < 1 || tickets > MaxTickets) {  				id = 0;  			} else if (Currency.Check (user) < Cost * tickets) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	int tickets;  	if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (tickets < 1 || tickets > MaxTickets) {  				id = 0;  			} else if (Currency.Check (user) < Cost * tickets) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	int tickets;  	if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (tickets < 1 || tickets > MaxTickets) {  				id = 0;  			} else if (Currency.Check (user) < Cost * tickets) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	int tickets;  	if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (tickets < 1 || tickets > MaxTickets) {  				id = 0;  			} else if (Currency.Check (user) < Cost * tickets) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: lock (FalseEntries) {  	int tickets;  	if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  		if (FalseEntries.ContainsKey (user))  			FalseEntries.Remove (user);  		if (FalseEntries.Count > 15) {  			GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  			GiveawayQueueHandler (null);  		} else {  			GiveawayQueue.Change (10000' Timeout.Infinite);  		}  	} else {  		if (!FalseEntries.ContainsKey (user)) {  			int id = -1;  			if (tickets < 1 || tickets > MaxTickets) {  				id = 0;  			} else if (Currency.Check (user) < Cost * tickets) {  				id = 1;  			} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  				id = 2;  			} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  				id = 3;  			} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  				id = 4;  			}  			FalseEntries.Add (user' id);  		}  		if (FalseEntries.Count == 1)  			GiveawayQueue.Change (10000' Timeout.Infinite);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (tickets < 1 || tickets > MaxTickets) {  			id = 0;  		} else if (Currency.Check (user) < Cost * tickets) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (tickets < 1 || tickets > MaxTickets) {  			id = 0;  		} else if (Currency.Check (user) < Cost * tickets) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (tickets < 1 || tickets > MaxTickets) {  			id = 0;  		} else if (Currency.Check (user) < Cost * tickets) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (tickets < 1 || tickets > MaxTickets) {  			id = 0;  		} else if (Currency.Check (user) < Cost * tickets) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (tickets < 1 || tickets > MaxTickets) {  			id = 0;  		} else if (Currency.Check (user) < Cost * tickets) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (int.TryParse (args [0]' out tickets) && tickets >= 0 && BuyTickets (user' tickets)) {  	if (FalseEntries.ContainsKey (user))  		FalseEntries.Remove (user);  	if (FalseEntries.Count > 15) {  		GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  		GiveawayQueueHandler (null);  	} else {  		GiveawayQueue.Change (10000' Timeout.Infinite);  	}  } else {  	if (!FalseEntries.ContainsKey (user)) {  		int id = -1;  		if (tickets < 1 || tickets > MaxTickets) {  			id = 0;  		} else if (Currency.Check (user) < Cost * tickets) {  			id = 1;  		} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  			id = 2;  		} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  			id = 3;  		} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  			id = 4;  		}  		FalseEntries.Add (user' id);  	}  	if (FalseEntries.Count == 1)  		GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (FalseEntries.Count > 15) {  	GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  	GiveawayQueueHandler (null);  } else {  	GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (FalseEntries.Count > 15) {  	GiveawayQueue.Change (Timeout.Infinite' Timeout.Infinite);  	GiveawayQueueHandler (null);  } else {  	GiveawayQueue.Change (10000' Timeout.Infinite);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: GiveawayQueue.Change (10000' Timeout.Infinite);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!FalseEntries.ContainsKey (user)) {  	int id = -1;  	if (tickets < 1 || tickets > MaxTickets) {  		id = 0;  	} else if (Currency.Check (user) < Cost * tickets) {  		id = 1;  	} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  		id = 2;  	} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  		id = 3;  	} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  		id = 4;  	}  	FalseEntries.Add (user' id);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!FalseEntries.ContainsKey (user)) {  	int id = -1;  	if (tickets < 1 || tickets > MaxTickets) {  		id = 0;  	} else if (Currency.Check (user) < Cost * tickets) {  		id = 1;  	} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  		id = 2;  	} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  		id = 3;  	} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  		id = 4;  	}  	FalseEntries.Add (user' id);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (!FalseEntries.ContainsKey (user)) {  	int id = -1;  	if (tickets < 1 || tickets > MaxTickets) {  		id = 0;  	} else if (Currency.Check (user) < Cost * tickets) {  		id = 1;  	} else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  		id = 2;  	} else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  		id = 3;  	} else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  		id = 4;  	}  	FalseEntries.Add (user' id);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (tickets < 1 || tickets > MaxTickets) {  	id = 0;  } else if (Currency.Check (user) < Cost * tickets) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (tickets < 1 || tickets > MaxTickets) {  	id = 0;  } else if (Currency.Check (user) < Cost * tickets) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (tickets < 1 || tickets > MaxTickets) {  	id = 0;  } else if (Currency.Check (user) < Cost * tickets) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Currency.Check (user) < Cost * tickets) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Currency.Check (user) < Cost * tickets) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Currency.Check (user) < Cost * tickets) {  	id = 1;  } else if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustFollow.Checked && !Users.IsFollower (user)) {  	id = 2;  } else if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: id = 2;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustSubscribe.Checked && !Users.IsSubscriber (user)) {  	id = 3;  } else if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: id = 3;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_MustWatch.Checked && Users.CompareTimeWatched (user' new TimeSpan ((int)Window.Giveaway_MustWatchHours.Value' (int)Window.Giveaway_MustWatchMinutes.Value' 0)) == -1) {  	id = 4;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: id = 4;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (FalseEntries.Count == 1)  	GiveawayQueue.Change (10000' Timeout.Infinite);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: GiveawayQueue.Change (10000' Timeout.Infinite);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked)  	Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked)  	Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Command_Ticket,The following statement contains a magic number: Users.Warn (user' 1' 5' "Giveaway entries closed and/or is in the giveaway already"' 0' false' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 3);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: if (user.ToLower () == Window.Giveaway_WinnerLabel.Text.ToLower ()) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  		if (start == Window.Giveaway_WinnerChat.Text.Length)  			start = -1;  		Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  		Window.Giveaway_WinnerChat.SelectionColor = Color.Blue;  		if (Chat.UserColors.ContainsKey (user))  			Window.Giveaway_WinnerChat.SelectionColor = ColorTranslator.FromHtml (Chat.UserColors [user]);  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  		Window.Giveaway_WinnerChat.SelectedText = user;  		Window.Giveaway_WinnerChat.SelectionColor = Color.Black;  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  		Window.Giveaway_WinnerChat.SelectedText = ": " + message + "\r\n";  		if (start > -1) {  			Window.Giveaway_WinnerChat.Select (start' length);  		} else {  			Window.Giveaway_WinnerChat.ScrollToCaret ();  		}  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: if (user.ToLower () == Window.Giveaway_WinnerLabel.Text.ToLower ()) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  		if (start == Window.Giveaway_WinnerChat.Text.Length)  			start = -1;  		Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  		Window.Giveaway_WinnerChat.SelectionColor = Color.Blue;  		if (Chat.UserColors.ContainsKey (user))  			Window.Giveaway_WinnerChat.SelectionColor = ColorTranslator.FromHtml (Chat.UserColors [user]);  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  		Window.Giveaway_WinnerChat.SelectedText = user;  		Window.Giveaway_WinnerChat.SelectionColor = Color.Black;  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  		Window.Giveaway_WinnerChat.SelectedText = ": " + message + "\r\n";  		if (start > -1) {  			Window.Giveaway_WinnerChat.Select (start' length);  		} else {  			Window.Giveaway_WinnerChat.ScrollToCaret ();  		}  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: if (user.ToLower () == Window.Giveaway_WinnerLabel.Text.ToLower ()) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  		if (start == Window.Giveaway_WinnerChat.Text.Length)  			start = -1;  		Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  		Window.Giveaway_WinnerChat.SelectionColor = Color.Blue;  		if (Chat.UserColors.ContainsKey (user))  			Window.Giveaway_WinnerChat.SelectionColor = ColorTranslator.FromHtml (Chat.UserColors [user]);  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  		Window.Giveaway_WinnerChat.SelectedText = user;  		Window.Giveaway_WinnerChat.SelectionColor = Color.Black;  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  		Window.Giveaway_WinnerChat.SelectedText = ": " + message + "\r\n";  		if (start > -1) {  			Window.Giveaway_WinnerChat.Select (start' length);  		} else {  			Window.Giveaway_WinnerChat.ScrollToCaret ();  		}  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  	if (start == Window.Giveaway_WinnerChat.Text.Length)  		start = -1;  	Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  	Window.Giveaway_WinnerChat.SelectionColor = Color.Blue;  	if (Chat.UserColors.ContainsKey (user))  		Window.Giveaway_WinnerChat.SelectionColor = ColorTranslator.FromHtml (Chat.UserColors [user]);  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  	Window.Giveaway_WinnerChat.SelectedText = user;  	Window.Giveaway_WinnerChat.SelectionColor = Color.Black;  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  	Window.Giveaway_WinnerChat.SelectedText = ": " + message + "\r\n";  	if (start > -1) {  		Window.Giveaway_WinnerChat.Select (start' length);  	} else {  		Window.Giveaway_WinnerChat.ScrollToCaret ();  	}  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  	if (start == Window.Giveaway_WinnerChat.Text.Length)  		start = -1;  	Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  	Window.Giveaway_WinnerChat.SelectionColor = Color.Blue;  	if (Chat.UserColors.ContainsKey (user))  		Window.Giveaway_WinnerChat.SelectionColor = ColorTranslator.FromHtml (Chat.UserColors [user]);  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  	Window.Giveaway_WinnerChat.SelectedText = user;  	Window.Giveaway_WinnerChat.SelectionColor = Color.Black;  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  	Window.Giveaway_WinnerChat.SelectedText = ": " + message + "\r\n";  	if (start > -1) {  		Window.Giveaway_WinnerChat.Select (start' length);  	} else {  		Window.Giveaway_WinnerChat.ScrollToCaret ();  	}  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  	if (start == Window.Giveaway_WinnerChat.Text.Length)  		start = -1;  	Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  	Window.Giveaway_WinnerChat.SelectionColor = Color.Blue;  	if (Chat.UserColors.ContainsKey (user))  		Window.Giveaway_WinnerChat.SelectionColor = ColorTranslator.FromHtml (Chat.UserColors [user]);  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  	Window.Giveaway_WinnerChat.SelectedText = user;  	Window.Giveaway_WinnerChat.SelectionColor = Color.Black;  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  	Window.Giveaway_WinnerChat.SelectedText = ": " + message + "\r\n";  	if (start > -1) {  		Window.Giveaway_WinnerChat.Select (start' length);  	} else {  		Window.Giveaway_WinnerChat.ScrollToCaret ();  	}  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: Window.Giveaway_WinnerChat.SelectionFont = new Font ("Tahoma"' 8);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_MessageReceived,The following statement contains a magic number: Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserAdded,The following statement contains a magic number: if (user.Equals (Window.Giveaway_WinnerLabel.Text.ToLower ())) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  		if (start == Window.Giveaway_WinnerChat.Text.Length)  			start = -1;  		Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  		Window.Giveaway_WinnerChat.SelectionColor = Color.Green;  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  		Window.Giveaway_WinnerChat.SelectedText = user + " has joined the channel.\r\n";  		if (start > -1) {  			Window.Giveaway_WinnerChat.Select (start' length);  		} else {  			Window.Giveaway_WinnerChat.ScrollToCaret ();  		}  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserAdded,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  	if (start == Window.Giveaway_WinnerChat.Text.Length)  		start = -1;  	Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  	Window.Giveaway_WinnerChat.SelectionColor = Color.Green;  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  	Window.Giveaway_WinnerChat.SelectedText = user + " has joined the channel.\r\n";  	if (start > -1) {  		Window.Giveaway_WinnerChat.Select (start' length);  	} else {  		Window.Giveaway_WinnerChat.ScrollToCaret ();  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserAdded,The following statement contains a magic number: Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserRemoved,The following statement contains a magic number: if (user.Equals (Window.Giveaway_WinnerLabel.Text.ToLower ())) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  		if (start == Window.Giveaway_WinnerChat.Text.Length)  			start = -1;  		Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  		Window.Giveaway_WinnerTimerLabel.Text = "The winner left!";  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		Window.Giveaway_WinnerChat.SelectionColor = Color.Red;  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  		Window.Giveaway_WinnerChat.SelectedText = user + " has left the channel.\r\n";  		if (start > -1) {  			Window.Giveaway_WinnerChat.Select (start' length);  		} else {  			Window.Giveaway_WinnerChat.ScrollToCaret ();  		}  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserRemoved,The following statement contains a magic number: if (user.Equals (Window.Giveaway_WinnerLabel.Text.ToLower ())) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  		if (start == Window.Giveaway_WinnerChat.Text.Length)  			start = -1;  		Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  		Window.Giveaway_WinnerTimerLabel.Text = "The winner left!";  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		Window.Giveaway_WinnerChat.SelectionColor = Color.Red;  		Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  		Window.Giveaway_WinnerChat.SelectedText = user + " has left the channel.\r\n";  		if (start > -1) {  			Window.Giveaway_WinnerChat.Select (start' length);  		} else {  			Window.Giveaway_WinnerChat.ScrollToCaret ();  		}  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserRemoved,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  	if (start == Window.Giveaway_WinnerChat.Text.Length)  		start = -1;  	Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  	Window.Giveaway_WinnerTimerLabel.Text = "The winner left!";  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	Window.Giveaway_WinnerChat.SelectionColor = Color.Red;  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  	Window.Giveaway_WinnerChat.SelectedText = user + " has left the channel.\r\n";  	if (start > -1) {  		Window.Giveaway_WinnerChat.Select (start' length);  	} else {  		Window.Giveaway_WinnerChat.ScrollToCaret ();  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserRemoved,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	int start = Window.Giveaway_WinnerChat.SelectionStart' length = Window.Giveaway_WinnerChat.SelectionLength;  	if (start == Window.Giveaway_WinnerChat.Text.Length)  		start = -1;  	Window.Giveaway_WinnerChat.Select (Window.Giveaway_WinnerChat.Text.Length' Window.Giveaway_WinnerChat.Text.Length);  	Window.Giveaway_WinnerTimerLabel.Text = "The winner left!";  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	Window.Giveaway_WinnerChat.SelectionColor = Color.Red;  	Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  	Window.Giveaway_WinnerChat.SelectedText = user + " has left the channel.\r\n";  	if (start > -1) {  		Window.Giveaway_WinnerChat.Select (start' length);  	} else {  		Window.Giveaway_WinnerChat.ScrollToCaret ();  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserRemoved,The following statement contains a magic number: Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Events_UserRemoved,The following statement contains a magic number: Window.Giveaway_WinnerChat.SelectionFont = new Font ("Segoe Print"' 7' FontStyle.Bold);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	Custom = custom;  	Window.Giveaway_SettingsPresents.Enabled = false;  	Window.Giveaway_StartButton.Enabled = false;  	Window.Giveaway_RerollButton.Enabled = false;  	Window.Giveaway_CloseButton.Enabled = true;  	Window.Giveaway_OpenButton.Enabled = false;  	Window.Giveaway_AnnounceWinnerButton.Enabled = false;  	Window.Giveaway_StopButton.Enabled = true;  	Window.Giveaway_AnnounceWinnerButton.Enabled = false;  	dState.Clear ();  	foreach (Control ctrl in Window.Controls) {  		if (!dState.ContainsKey (ctrl) && ((ctrl.GetType () == typeof(RadioButton) || ctrl.GetType ().BaseType == typeof(NumericUpDown) || ctrl.GetType () == typeof(CheckBox)) && ctrl != Window.Giveaway_AnnounceFalseEntries && ctrl != Window.Giveaway_WarnFalseEntries && ctrl != Window.Giveaway_AnnounceWarnedEntries && ctrl != Window.Giveaway_AutoBanWinner && ctrl != Window.Giveaway_SubscribersWinMultiplier && ctrl != Window.Giveaway_SubscribersWinMultiplierAmount || ctrl == Window.Giveaway_CustomKeyword)) {  			dState.Add (ctrl' ctrl.Enabled);  			ctrl.Enabled = false;  		}  	}  	Window.Giveaway_CopyWinnerButton.Enabled = false;  	Window.Giveaway_WinnerTimerLabel.Text = "0:00";  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.Black;  	Window.Giveaway_WinTimeLabel.Text = "0:00";  	Window.Giveaway_WinTimeLabel.ForeColor = Color.Black;  	Window.Giveaway_WinnerChat.Clear ();  	Window.Giveaway_WinnerLabel.Text = "Entries open' close to roll for a winner...";  	Window.Giveaway_WinnerLabel.ForeColor = Color.Red;  	Window.Giveaway_WinnerStatusLabel.Text = "";  	Window.Giveaway_UserList.Items.Clear ();  	UserListHandler (null);  	LastRoll = 0;  	Cost = ticketcost;  	MaxTickets = maxtickets;  	dUsers.Clear ();  	Started = true;  	IsOpen = true;  	if (!custom) {  		UserList.Change (5000' 5000);  		string msg = "";  		if (Window.Giveaway_TypeActive.Checked) {  			msg = " who sent a message or joined within the last " + Window.Giveaway_ActiveUserTime.Value + " minutes";  		}  		if (Window.Giveaway_MustSubscribe.Checked) {  			if (msg != "") {  				if (!Window.Giveaway_MustFollow.Checked && !Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  					msg += " and";  				else  					msg += "'";  			} else {  				msg += " who";  			}  			msg += " subscribes to the stream";  		}  		if (Window.Giveaway_MustFollow.Checked) {  			if (msg != "") {  				if (!Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  					msg += " and";  				else  					msg += "'";  			} else {  				msg += " who";  			}  			msg += " follows the stream";  		}  		if (Window.Giveaway_MustWatch.Checked) {  			if (msg != "") {  				if (!Window.Giveaway_MinCurrency.Checked)  					msg += " and";  				else  					msg += "'";  			} else {  				msg += " who";  			}  			msg += " watched the stream for at least " + Window.Giveaway_MustWatchHours.Value + " hours and " + Window.Giveaway_MustWatchMinutes.Value + " minutes";  		}  		if (Window.Giveaway_MinCurrency.Checked) {  			if (msg != "") {  				msg += " and";  			} else {  				msg += " who";  			}  			msg += " has " + Window.Giveaway_MinCurrencyBox.Value + " " + Currency.Name;  		}  		if (Window.Giveaway_TypeTickets.Checked) {  			Window.Giveaway_CancelButton.Enabled = true;  			if (announce)  				Chat.SendMessage ("A giveaway has started! Ticket cost: " + ticketcost + "' max. tickets: " + maxtickets + ". Anyone" + msg + " can join!");  			if (announce)  				Chat.SendMessage ("Join by typing \"!ticket {amount}\".");  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			if (announce)  				Chat.SendMessage ("A giveaway has started! Join by typing \"" + (Window.Giveaway_CustomKeyword.Text == "" ? "!ticket" : Window.Giveaway_CustomKeyword.Text) + "\". Anyone" + msg + " can join!");  		} else {  			Close (false' false);  			if (announce)  				Chat.SendMessage ("A giveaway has started! Anyone" + msg + " qualifies!");  		}  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	Custom = custom;  	Window.Giveaway_SettingsPresents.Enabled = false;  	Window.Giveaway_StartButton.Enabled = false;  	Window.Giveaway_RerollButton.Enabled = false;  	Window.Giveaway_CloseButton.Enabled = true;  	Window.Giveaway_OpenButton.Enabled = false;  	Window.Giveaway_AnnounceWinnerButton.Enabled = false;  	Window.Giveaway_StopButton.Enabled = true;  	Window.Giveaway_AnnounceWinnerButton.Enabled = false;  	dState.Clear ();  	foreach (Control ctrl in Window.Controls) {  		if (!dState.ContainsKey (ctrl) && ((ctrl.GetType () == typeof(RadioButton) || ctrl.GetType ().BaseType == typeof(NumericUpDown) || ctrl.GetType () == typeof(CheckBox)) && ctrl != Window.Giveaway_AnnounceFalseEntries && ctrl != Window.Giveaway_WarnFalseEntries && ctrl != Window.Giveaway_AnnounceWarnedEntries && ctrl != Window.Giveaway_AutoBanWinner && ctrl != Window.Giveaway_SubscribersWinMultiplier && ctrl != Window.Giveaway_SubscribersWinMultiplierAmount || ctrl == Window.Giveaway_CustomKeyword)) {  			dState.Add (ctrl' ctrl.Enabled);  			ctrl.Enabled = false;  		}  	}  	Window.Giveaway_CopyWinnerButton.Enabled = false;  	Window.Giveaway_WinnerTimerLabel.Text = "0:00";  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.Black;  	Window.Giveaway_WinTimeLabel.Text = "0:00";  	Window.Giveaway_WinTimeLabel.ForeColor = Color.Black;  	Window.Giveaway_WinnerChat.Clear ();  	Window.Giveaway_WinnerLabel.Text = "Entries open' close to roll for a winner...";  	Window.Giveaway_WinnerLabel.ForeColor = Color.Red;  	Window.Giveaway_WinnerStatusLabel.Text = "";  	Window.Giveaway_UserList.Items.Clear ();  	UserListHandler (null);  	LastRoll = 0;  	Cost = ticketcost;  	MaxTickets = maxtickets;  	dUsers.Clear ();  	Started = true;  	IsOpen = true;  	if (!custom) {  		UserList.Change (5000' 5000);  		string msg = "";  		if (Window.Giveaway_TypeActive.Checked) {  			msg = " who sent a message or joined within the last " + Window.Giveaway_ActiveUserTime.Value + " minutes";  		}  		if (Window.Giveaway_MustSubscribe.Checked) {  			if (msg != "") {  				if (!Window.Giveaway_MustFollow.Checked && !Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  					msg += " and";  				else  					msg += "'";  			} else {  				msg += " who";  			}  			msg += " subscribes to the stream";  		}  		if (Window.Giveaway_MustFollow.Checked) {  			if (msg != "") {  				if (!Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  					msg += " and";  				else  					msg += "'";  			} else {  				msg += " who";  			}  			msg += " follows the stream";  		}  		if (Window.Giveaway_MustWatch.Checked) {  			if (msg != "") {  				if (!Window.Giveaway_MinCurrency.Checked)  					msg += " and";  				else  					msg += "'";  			} else {  				msg += " who";  			}  			msg += " watched the stream for at least " + Window.Giveaway_MustWatchHours.Value + " hours and " + Window.Giveaway_MustWatchMinutes.Value + " minutes";  		}  		if (Window.Giveaway_MinCurrency.Checked) {  			if (msg != "") {  				msg += " and";  			} else {  				msg += " who";  			}  			msg += " has " + Window.Giveaway_MinCurrencyBox.Value + " " + Currency.Name;  		}  		if (Window.Giveaway_TypeTickets.Checked) {  			Window.Giveaway_CancelButton.Enabled = true;  			if (announce)  				Chat.SendMessage ("A giveaway has started! Ticket cost: " + ticketcost + "' max. tickets: " + maxtickets + ". Anyone" + msg + " can join!");  			if (announce)  				Chat.SendMessage ("Join by typing \"!ticket {amount}\".");  		} else if (Window.Giveaway_TypeKeyword.Checked) {  			if (announce)  				Chat.SendMessage ("A giveaway has started! Join by typing \"" + (Window.Giveaway_CustomKeyword.Text == "" ? "!ticket" : Window.Giveaway_CustomKeyword.Text) + "\". Anyone" + msg + " can join!");  		} else {  			Close (false' false);  			if (announce)  				Chat.SendMessage ("A giveaway has started! Anyone" + msg + " qualifies!");  		}  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The following statement contains a magic number: if (!custom) {  	UserList.Change (5000' 5000);  	string msg = "";  	if (Window.Giveaway_TypeActive.Checked) {  		msg = " who sent a message or joined within the last " + Window.Giveaway_ActiveUserTime.Value + " minutes";  	}  	if (Window.Giveaway_MustSubscribe.Checked) {  		if (msg != "") {  			if (!Window.Giveaway_MustFollow.Checked && !Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  				msg += " and";  			else  				msg += "'";  		} else {  			msg += " who";  		}  		msg += " subscribes to the stream";  	}  	if (Window.Giveaway_MustFollow.Checked) {  		if (msg != "") {  			if (!Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  				msg += " and";  			else  				msg += "'";  		} else {  			msg += " who";  		}  		msg += " follows the stream";  	}  	if (Window.Giveaway_MustWatch.Checked) {  		if (msg != "") {  			if (!Window.Giveaway_MinCurrency.Checked)  				msg += " and";  			else  				msg += "'";  		} else {  			msg += " who";  		}  		msg += " watched the stream for at least " + Window.Giveaway_MustWatchHours.Value + " hours and " + Window.Giveaway_MustWatchMinutes.Value + " minutes";  	}  	if (Window.Giveaway_MinCurrency.Checked) {  		if (msg != "") {  			msg += " and";  		} else {  			msg += " who";  		}  		msg += " has " + Window.Giveaway_MinCurrencyBox.Value + " " + Currency.Name;  	}  	if (Window.Giveaway_TypeTickets.Checked) {  		Window.Giveaway_CancelButton.Enabled = true;  		if (announce)  			Chat.SendMessage ("A giveaway has started! Ticket cost: " + ticketcost + "' max. tickets: " + maxtickets + ". Anyone" + msg + " can join!");  		if (announce)  			Chat.SendMessage ("Join by typing \"!ticket {amount}\".");  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		if (announce)  			Chat.SendMessage ("A giveaway has started! Join by typing \"" + (Window.Giveaway_CustomKeyword.Text == "" ? "!ticket" : Window.Giveaway_CustomKeyword.Text) + "\". Anyone" + msg + " can join!");  	} else {  		Close (false' false);  		if (announce)  			Chat.SendMessage ("A giveaway has started! Anyone" + msg + " qualifies!");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The following statement contains a magic number: if (!custom) {  	UserList.Change (5000' 5000);  	string msg = "";  	if (Window.Giveaway_TypeActive.Checked) {  		msg = " who sent a message or joined within the last " + Window.Giveaway_ActiveUserTime.Value + " minutes";  	}  	if (Window.Giveaway_MustSubscribe.Checked) {  		if (msg != "") {  			if (!Window.Giveaway_MustFollow.Checked && !Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  				msg += " and";  			else  				msg += "'";  		} else {  			msg += " who";  		}  		msg += " subscribes to the stream";  	}  	if (Window.Giveaway_MustFollow.Checked) {  		if (msg != "") {  			if (!Window.Giveaway_MustWatch.Checked && !Window.Giveaway_MinCurrency.Checked)  				msg += " and";  			else  				msg += "'";  		} else {  			msg += " who";  		}  		msg += " follows the stream";  	}  	if (Window.Giveaway_MustWatch.Checked) {  		if (msg != "") {  			if (!Window.Giveaway_MinCurrency.Checked)  				msg += " and";  			else  				msg += "'";  		} else {  			msg += " who";  		}  		msg += " watched the stream for at least " + Window.Giveaway_MustWatchHours.Value + " hours and " + Window.Giveaway_MustWatchMinutes.Value + " minutes";  	}  	if (Window.Giveaway_MinCurrency.Checked) {  		if (msg != "") {  			msg += " and";  		} else {  			msg += " who";  		}  		msg += " has " + Window.Giveaway_MinCurrencyBox.Value + " " + Currency.Name;  	}  	if (Window.Giveaway_TypeTickets.Checked) {  		Window.Giveaway_CancelButton.Enabled = true;  		if (announce)  			Chat.SendMessage ("A giveaway has started! Ticket cost: " + ticketcost + "' max. tickets: " + maxtickets + ". Anyone" + msg + " can join!");  		if (announce)  			Chat.SendMessage ("Join by typing \"!ticket {amount}\".");  	} else if (Window.Giveaway_TypeKeyword.Checked) {  		if (announce)  			Chat.SendMessage ("A giveaway has started! Join by typing \"" + (Window.Giveaway_CustomKeyword.Text == "" ? "!ticket" : Window.Giveaway_CustomKeyword.Text) + "\". Anyone" + msg + " can join!");  	} else {  		Close (false' false);  		if (announce)  			Chat.SendMessage ("A giveaway has started! Anyone" + msg + " qualifies!");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The following statement contains a magic number: UserList.Change (5000' 5000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Start,The following statement contains a magic number: UserList.Change (5000' 5000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Close,The following statement contains a magic number: if (!Custom)  	UserList.Change (15000' 15000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Close,The following statement contains a magic number: if (!Custom)  	UserList.Change (15000' 15000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Close,The following statement contains a magic number: UserList.Change (15000' 15000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Close,The following statement contains a magic number: UserList.Change (15000' 15000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Open,The following statement contains a magic number: if (!Custom)  	UserList.Change (5000' 5000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Open,The following statement contains a magic number: if (!Custom)  	UserList.Change (5000' 5000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Open,The following statement contains a magic number: UserList.Change (5000' 5000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Open,The following statement contains a magic number: UserList.Change (5000' 5000);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: while (true) {  	//Console.WriteLine("[DEBUG] Starting roll...");  	try {  		//Console.WriteLine("[DEBUG] Validating users...");  		List<string> ValidUsers = new List<string> ();  		if (!Custom) {  			Dictionary<string' int> ActiveUsers = null;  			lock (Chat.Users)  				ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  			if (Window.Giveaway_TypeActive.Checked) {  				//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  				//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  				foreach (string user in ActiveUsers.Keys) {  					//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  					if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  					 {  						ValidUsers.Add (user);  						if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  							for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  								ValidUsers.Add (user);  					}  				}  			} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  				lock (dUsers) {  					lock (Window.Giveaway_UserList.Items) {  						List<string> Delete = new List<string> ();  						foreach (string user in dUsers.Keys) {  							//Console.WriteLine("[DEBUG] Validating: " + user);  							//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  							if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  								//Console.WriteLine("[DEBUG] " + user + " has been validated.");  								int entries = dUsers [user];  								if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  									entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  								for (int i = 0; i < entries; i++)  									ValidUsers.Add (user);  							} else {  								//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  								Delete.Add (user);  								List<string> delete = new List<string> ();  								string name = Users.GetDisplayName (user);  								foreach (string item in Window.Giveaway_UserList.Items)  									if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  										delete.Add (item);  								foreach (string item in delete)  									while (Window.Giveaway_UserList.Items.Contains (item))  										Window.Giveaway_UserList.Items.Remove (item);  								Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  							}  						}  						foreach (string user in Delete) {  							while (dUsers.ContainsKey (user))  								dUsers.Remove (user);  							Currency.Add (user' dUsers [user] * Cost);  							/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  					}  				}  			}  		}  		//Console.WriteLine("[DEBUG] Validated all users.");  		OnRoll (ref ValidUsers);  		if (ValidUsers.Count > 0) {  			//Console.WriteLine("[DEBUG] Rolling...");  			winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  			//Console.WriteLine("[DEBUG] Winner: " + winner);  			if (!Custom) {  				if (checkusers) {  					//Console.WriteLine("[DEBUG] Validating winner...");  					List<string> Ignore = new List<string> ();  					while (!CheckUser (winner) || Ignore.Contains (winner)) {  						Ignore.Add (winner);  						winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  						//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  					}  				}  				//Chance = 100F / ValidUsers.Count;  				int tickets = ValidUsers.Count' winnertickets = 1;  				if (Window.Giveaway_TypeTickets.Checked) {  					tickets = dUsers.Count;  					winnertickets = winnertickets = dUsers [winner];  				}  				Chance = (float)winnertickets / tickets * 100;  			}  			//Console.WriteLine("[DEBUG] Final winner: " + winner);  			//Console.WriteLine("[DEBUG] Updating UI...");  			Window.BeginInvoke ((MethodInvoker)delegate {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  				Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  				Window.Giveaway_WinnerLabel.Text = winnername;  				Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  				Window.Giveaway_CopyWinnerButton.Enabled = true;  				Window.Giveaway_AnnounceWinnerButton.Enabled = true;  				Window.Giveaway_RerollButton.Enabled = true;  				LastRoll = Api.GetUnixTimeNow ();  				if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  					Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  				if (announce) {  					TimeSpan t = Users.GetTimeWatched (winner);  					//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  					Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  				}  				//Console.WriteLine("[DEBUG] UI updated.");  			});  			thread = new Thread (() => {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_WinnerLabel.Text = winnername;  				});  			});  			thread.Name = "Use winner's (" + winner + ") display name";  			thread.Start ();  			return;  		}  	} catch {  		//Console.WriteLine("[DEBUG] Error while attempting to roll.");  		Window.BeginInvoke ((MethodInvoker)delegate {  			Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  		});  		continue;  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_WinnerLabel.Text = "No valid winner found";  		Window.Giveaway_RerollButton.Enabled = true;  	});  	if (announce)  		Chat.SendMessage ("No valid winner found' please try again!");  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: while (true) {  	//Console.WriteLine("[DEBUG] Starting roll...");  	try {  		//Console.WriteLine("[DEBUG] Validating users...");  		List<string> ValidUsers = new List<string> ();  		if (!Custom) {  			Dictionary<string' int> ActiveUsers = null;  			lock (Chat.Users)  				ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  			if (Window.Giveaway_TypeActive.Checked) {  				//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  				//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  				foreach (string user in ActiveUsers.Keys) {  					//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  					if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  					 {  						ValidUsers.Add (user);  						if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  							for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  								ValidUsers.Add (user);  					}  				}  			} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  				lock (dUsers) {  					lock (Window.Giveaway_UserList.Items) {  						List<string> Delete = new List<string> ();  						foreach (string user in dUsers.Keys) {  							//Console.WriteLine("[DEBUG] Validating: " + user);  							//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  							if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  								//Console.WriteLine("[DEBUG] " + user + " has been validated.");  								int entries = dUsers [user];  								if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  									entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  								for (int i = 0; i < entries; i++)  									ValidUsers.Add (user);  							} else {  								//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  								Delete.Add (user);  								List<string> delete = new List<string> ();  								string name = Users.GetDisplayName (user);  								foreach (string item in Window.Giveaway_UserList.Items)  									if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  										delete.Add (item);  								foreach (string item in delete)  									while (Window.Giveaway_UserList.Items.Contains (item))  										Window.Giveaway_UserList.Items.Remove (item);  								Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  							}  						}  						foreach (string user in Delete) {  							while (dUsers.ContainsKey (user))  								dUsers.Remove (user);  							Currency.Add (user' dUsers [user] * Cost);  							/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  					}  				}  			}  		}  		//Console.WriteLine("[DEBUG] Validated all users.");  		OnRoll (ref ValidUsers);  		if (ValidUsers.Count > 0) {  			//Console.WriteLine("[DEBUG] Rolling...");  			winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  			//Console.WriteLine("[DEBUG] Winner: " + winner);  			if (!Custom) {  				if (checkusers) {  					//Console.WriteLine("[DEBUG] Validating winner...");  					List<string> Ignore = new List<string> ();  					while (!CheckUser (winner) || Ignore.Contains (winner)) {  						Ignore.Add (winner);  						winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  						//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  					}  				}  				//Chance = 100F / ValidUsers.Count;  				int tickets = ValidUsers.Count' winnertickets = 1;  				if (Window.Giveaway_TypeTickets.Checked) {  					tickets = dUsers.Count;  					winnertickets = winnertickets = dUsers [winner];  				}  				Chance = (float)winnertickets / tickets * 100;  			}  			//Console.WriteLine("[DEBUG] Final winner: " + winner);  			//Console.WriteLine("[DEBUG] Updating UI...");  			Window.BeginInvoke ((MethodInvoker)delegate {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  				Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  				Window.Giveaway_WinnerLabel.Text = winnername;  				Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  				Window.Giveaway_CopyWinnerButton.Enabled = true;  				Window.Giveaway_AnnounceWinnerButton.Enabled = true;  				Window.Giveaway_RerollButton.Enabled = true;  				LastRoll = Api.GetUnixTimeNow ();  				if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  					Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  				if (announce) {  					TimeSpan t = Users.GetTimeWatched (winner);  					//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  					Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  				}  				//Console.WriteLine("[DEBUG] UI updated.");  			});  			thread = new Thread (() => {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_WinnerLabel.Text = winnername;  				});  			});  			thread.Name = "Use winner's (" + winner + ") display name";  			thread.Start ();  			return;  		}  	} catch {  		//Console.WriteLine("[DEBUG] Error while attempting to roll.");  		Window.BeginInvoke ((MethodInvoker)delegate {  			Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  		});  		continue;  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_WinnerLabel.Text = "No valid winner found";  		Window.Giveaway_RerollButton.Enabled = true;  	});  	if (announce)  		Chat.SendMessage ("No valid winner found' please try again!");  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: while (true) {  	//Console.WriteLine("[DEBUG] Starting roll...");  	try {  		//Console.WriteLine("[DEBUG] Validating users...");  		List<string> ValidUsers = new List<string> ();  		if (!Custom) {  			Dictionary<string' int> ActiveUsers = null;  			lock (Chat.Users)  				ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  			if (Window.Giveaway_TypeActive.Checked) {  				//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  				//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  				foreach (string user in ActiveUsers.Keys) {  					//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  					if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  					 {  						ValidUsers.Add (user);  						if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  							for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  								ValidUsers.Add (user);  					}  				}  			} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  				lock (dUsers) {  					lock (Window.Giveaway_UserList.Items) {  						List<string> Delete = new List<string> ();  						foreach (string user in dUsers.Keys) {  							//Console.WriteLine("[DEBUG] Validating: " + user);  							//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  							if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  								//Console.WriteLine("[DEBUG] " + user + " has been validated.");  								int entries = dUsers [user];  								if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  									entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  								for (int i = 0; i < entries; i++)  									ValidUsers.Add (user);  							} else {  								//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  								Delete.Add (user);  								List<string> delete = new List<string> ();  								string name = Users.GetDisplayName (user);  								foreach (string item in Window.Giveaway_UserList.Items)  									if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  										delete.Add (item);  								foreach (string item in delete)  									while (Window.Giveaway_UserList.Items.Contains (item))  										Window.Giveaway_UserList.Items.Remove (item);  								Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  							}  						}  						foreach (string user in Delete) {  							while (dUsers.ContainsKey (user))  								dUsers.Remove (user);  							Currency.Add (user' dUsers [user] * Cost);  							/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  					}  				}  			}  		}  		//Console.WriteLine("[DEBUG] Validated all users.");  		OnRoll (ref ValidUsers);  		if (ValidUsers.Count > 0) {  			//Console.WriteLine("[DEBUG] Rolling...");  			winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  			//Console.WriteLine("[DEBUG] Winner: " + winner);  			if (!Custom) {  				if (checkusers) {  					//Console.WriteLine("[DEBUG] Validating winner...");  					List<string> Ignore = new List<string> ();  					while (!CheckUser (winner) || Ignore.Contains (winner)) {  						Ignore.Add (winner);  						winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  						//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  					}  				}  				//Chance = 100F / ValidUsers.Count;  				int tickets = ValidUsers.Count' winnertickets = 1;  				if (Window.Giveaway_TypeTickets.Checked) {  					tickets = dUsers.Count;  					winnertickets = winnertickets = dUsers [winner];  				}  				Chance = (float)winnertickets / tickets * 100;  			}  			//Console.WriteLine("[DEBUG] Final winner: " + winner);  			//Console.WriteLine("[DEBUG] Updating UI...");  			Window.BeginInvoke ((MethodInvoker)delegate {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  				Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  				Window.Giveaway_WinnerLabel.Text = winnername;  				Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  				Window.Giveaway_CopyWinnerButton.Enabled = true;  				Window.Giveaway_AnnounceWinnerButton.Enabled = true;  				Window.Giveaway_RerollButton.Enabled = true;  				LastRoll = Api.GetUnixTimeNow ();  				if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  					Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  				if (announce) {  					TimeSpan t = Users.GetTimeWatched (winner);  					//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  					Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  				}  				//Console.WriteLine("[DEBUG] UI updated.");  			});  			thread = new Thread (() => {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_WinnerLabel.Text = winnername;  				});  			});  			thread.Name = "Use winner's (" + winner + ") display name";  			thread.Start ();  			return;  		}  	} catch {  		//Console.WriteLine("[DEBUG] Error while attempting to roll.");  		Window.BeginInvoke ((MethodInvoker)delegate {  			Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  		});  		continue;  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_WinnerLabel.Text = "No valid winner found";  		Window.Giveaway_RerollButton.Enabled = true;  	});  	if (announce)  		Chat.SendMessage ("No valid winner found' please try again!");  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: while (true) {  	//Console.WriteLine("[DEBUG] Starting roll...");  	try {  		//Console.WriteLine("[DEBUG] Validating users...");  		List<string> ValidUsers = new List<string> ();  		if (!Custom) {  			Dictionary<string' int> ActiveUsers = null;  			lock (Chat.Users)  				ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  			if (Window.Giveaway_TypeActive.Checked) {  				//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  				//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  				foreach (string user in ActiveUsers.Keys) {  					//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  					//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  					if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  					 {  						ValidUsers.Add (user);  						if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  							for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  								ValidUsers.Add (user);  					}  				}  			} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  				lock (dUsers) {  					lock (Window.Giveaway_UserList.Items) {  						List<string> Delete = new List<string> ();  						foreach (string user in dUsers.Keys) {  							//Console.WriteLine("[DEBUG] Validating: " + user);  							//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  							if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  								//Console.WriteLine("[DEBUG] " + user + " has been validated.");  								int entries = dUsers [user];  								if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  									entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  								for (int i = 0; i < entries; i++)  									ValidUsers.Add (user);  							} else {  								//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  								Delete.Add (user);  								List<string> delete = new List<string> ();  								string name = Users.GetDisplayName (user);  								foreach (string item in Window.Giveaway_UserList.Items)  									if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  										delete.Add (item);  								foreach (string item in delete)  									while (Window.Giveaway_UserList.Items.Contains (item))  										Window.Giveaway_UserList.Items.Remove (item);  								Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  							}  						}  						foreach (string user in Delete) {  							while (dUsers.ContainsKey (user))  								dUsers.Remove (user);  							Currency.Add (user' dUsers [user] * Cost);  							/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  					}  				}  			}  		}  		//Console.WriteLine("[DEBUG] Validated all users.");  		OnRoll (ref ValidUsers);  		if (ValidUsers.Count > 0) {  			//Console.WriteLine("[DEBUG] Rolling...");  			winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  			//Console.WriteLine("[DEBUG] Winner: " + winner);  			if (!Custom) {  				if (checkusers) {  					//Console.WriteLine("[DEBUG] Validating winner...");  					List<string> Ignore = new List<string> ();  					while (!CheckUser (winner) || Ignore.Contains (winner)) {  						Ignore.Add (winner);  						winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  						//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  					}  				}  				//Chance = 100F / ValidUsers.Count;  				int tickets = ValidUsers.Count' winnertickets = 1;  				if (Window.Giveaway_TypeTickets.Checked) {  					tickets = dUsers.Count;  					winnertickets = winnertickets = dUsers [winner];  				}  				Chance = (float)winnertickets / tickets * 100;  			}  			//Console.WriteLine("[DEBUG] Final winner: " + winner);  			//Console.WriteLine("[DEBUG] Updating UI...");  			Window.BeginInvoke ((MethodInvoker)delegate {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  				Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  				Window.Giveaway_WinnerLabel.Text = winnername;  				Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  				Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  				Window.Giveaway_CopyWinnerButton.Enabled = true;  				Window.Giveaway_AnnounceWinnerButton.Enabled = true;  				Window.Giveaway_RerollButton.Enabled = true;  				LastRoll = Api.GetUnixTimeNow ();  				if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  					Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  				if (announce) {  					TimeSpan t = Users.GetTimeWatched (winner);  					//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  					Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  				}  				//Console.WriteLine("[DEBUG] UI updated.");  			});  			thread = new Thread (() => {  				winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  				Window.BeginInvoke ((MethodInvoker)delegate {  					Window.Giveaway_WinnerLabel.Text = winnername;  				});  			});  			thread.Name = "Use winner's (" + winner + ") display name";  			thread.Start ();  			return;  		}  	} catch {  		//Console.WriteLine("[DEBUG] Error while attempting to roll.");  		Window.BeginInvoke ((MethodInvoker)delegate {  			Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  		});  		continue;  	}  	Window.BeginInvoke ((MethodInvoker)delegate {  		Window.Giveaway_WinnerLabel.Text = "No valid winner found";  		Window.Giveaway_RerollButton.Enabled = true;  	});  	if (announce)  		Chat.SendMessage ("No valid winner found' please try again!");  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: try {  	//Console.WriteLine("[DEBUG] Validating users...");  	List<string> ValidUsers = new List<string> ();  	if (!Custom) {  		Dictionary<string' int> ActiveUsers = null;  		lock (Chat.Users)  			ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  		if (Window.Giveaway_TypeActive.Checked) {  			//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  			//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  			foreach (string user in ActiveUsers.Keys) {  				//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  				if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  				 {  					ValidUsers.Add (user);  					if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  						for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  							ValidUsers.Add (user);  				}  			}  		} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  			lock (dUsers) {  				lock (Window.Giveaway_UserList.Items) {  					List<string> Delete = new List<string> ();  					foreach (string user in dUsers.Keys) {  						//Console.WriteLine("[DEBUG] Validating: " + user);  						//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  						if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  							//Console.WriteLine("[DEBUG] " + user + " has been validated.");  							int entries = dUsers [user];  							if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  								entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  							for (int i = 0; i < entries; i++)  								ValidUsers.Add (user);  						} else {  							//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  							Delete.Add (user);  							List<string> delete = new List<string> ();  							string name = Users.GetDisplayName (user);  							foreach (string item in Window.Giveaway_UserList.Items)  								if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  									delete.Add (item);  							foreach (string item in delete)  								while (Window.Giveaway_UserList.Items.Contains (item))  									Window.Giveaway_UserList.Items.Remove (item);  							Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  						}  					}  					foreach (string user in Delete) {  						while (dUsers.ContainsKey (user))  							dUsers.Remove (user);  						Currency.Add (user' dUsers [user] * Cost);  						/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  				}  			}  		}  	}  	//Console.WriteLine("[DEBUG] Validated all users.");  	OnRoll (ref ValidUsers);  	if (ValidUsers.Count > 0) {  		//Console.WriteLine("[DEBUG] Rolling...");  		winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  		//Console.WriteLine("[DEBUG] Winner: " + winner);  		if (!Custom) {  			if (checkusers) {  				//Console.WriteLine("[DEBUG] Validating winner...");  				List<string> Ignore = new List<string> ();  				while (!CheckUser (winner) || Ignore.Contains (winner)) {  					Ignore.Add (winner);  					winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  					//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  				}  			}  			//Chance = 100F / ValidUsers.Count;  			int tickets = ValidUsers.Count' winnertickets = 1;  			if (Window.Giveaway_TypeTickets.Checked) {  				tickets = dUsers.Count;  				winnertickets = winnertickets = dUsers [winner];  			}  			Chance = (float)winnertickets / tickets * 100;  		}  		//Console.WriteLine("[DEBUG] Final winner: " + winner);  		//Console.WriteLine("[DEBUG] Updating UI...");  		Window.BeginInvoke ((MethodInvoker)delegate {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  			Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  			Window.Giveaway_WinnerLabel.Text = winnername;  			Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  			Window.Giveaway_CopyWinnerButton.Enabled = true;  			Window.Giveaway_AnnounceWinnerButton.Enabled = true;  			Window.Giveaway_RerollButton.Enabled = true;  			LastRoll = Api.GetUnixTimeNow ();  			if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  				Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  			if (announce) {  				TimeSpan t = Users.GetTimeWatched (winner);  				//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  				Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  			}  			//Console.WriteLine("[DEBUG] UI updated.");  		});  		thread = new Thread (() => {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_WinnerLabel.Text = winnername;  			});  		});  		thread.Name = "Use winner's (" + winner + ") display name";  		thread.Start ();  		return;  	}  } catch {  	//Console.WriteLine("[DEBUG] Error while attempting to roll.");  	Window.BeginInvoke ((MethodInvoker)delegate {  		Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  	});  	continue;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: try {  	//Console.WriteLine("[DEBUG] Validating users...");  	List<string> ValidUsers = new List<string> ();  	if (!Custom) {  		Dictionary<string' int> ActiveUsers = null;  		lock (Chat.Users)  			ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  		if (Window.Giveaway_TypeActive.Checked) {  			//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  			//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  			foreach (string user in ActiveUsers.Keys) {  				//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  				if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  				 {  					ValidUsers.Add (user);  					if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  						for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  							ValidUsers.Add (user);  				}  			}  		} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  			lock (dUsers) {  				lock (Window.Giveaway_UserList.Items) {  					List<string> Delete = new List<string> ();  					foreach (string user in dUsers.Keys) {  						//Console.WriteLine("[DEBUG] Validating: " + user);  						//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  						if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  							//Console.WriteLine("[DEBUG] " + user + " has been validated.");  							int entries = dUsers [user];  							if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  								entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  							for (int i = 0; i < entries; i++)  								ValidUsers.Add (user);  						} else {  							//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  							Delete.Add (user);  							List<string> delete = new List<string> ();  							string name = Users.GetDisplayName (user);  							foreach (string item in Window.Giveaway_UserList.Items)  								if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  									delete.Add (item);  							foreach (string item in delete)  								while (Window.Giveaway_UserList.Items.Contains (item))  									Window.Giveaway_UserList.Items.Remove (item);  							Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  						}  					}  					foreach (string user in Delete) {  						while (dUsers.ContainsKey (user))  							dUsers.Remove (user);  						Currency.Add (user' dUsers [user] * Cost);  						/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  				}  			}  		}  	}  	//Console.WriteLine("[DEBUG] Validated all users.");  	OnRoll (ref ValidUsers);  	if (ValidUsers.Count > 0) {  		//Console.WriteLine("[DEBUG] Rolling...");  		winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  		//Console.WriteLine("[DEBUG] Winner: " + winner);  		if (!Custom) {  			if (checkusers) {  				//Console.WriteLine("[DEBUG] Validating winner...");  				List<string> Ignore = new List<string> ();  				while (!CheckUser (winner) || Ignore.Contains (winner)) {  					Ignore.Add (winner);  					winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  					//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  				}  			}  			//Chance = 100F / ValidUsers.Count;  			int tickets = ValidUsers.Count' winnertickets = 1;  			if (Window.Giveaway_TypeTickets.Checked) {  				tickets = dUsers.Count;  				winnertickets = winnertickets = dUsers [winner];  			}  			Chance = (float)winnertickets / tickets * 100;  		}  		//Console.WriteLine("[DEBUG] Final winner: " + winner);  		//Console.WriteLine("[DEBUG] Updating UI...");  		Window.BeginInvoke ((MethodInvoker)delegate {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  			Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  			Window.Giveaway_WinnerLabel.Text = winnername;  			Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  			Window.Giveaway_CopyWinnerButton.Enabled = true;  			Window.Giveaway_AnnounceWinnerButton.Enabled = true;  			Window.Giveaway_RerollButton.Enabled = true;  			LastRoll = Api.GetUnixTimeNow ();  			if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  				Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  			if (announce) {  				TimeSpan t = Users.GetTimeWatched (winner);  				//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  				Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  			}  			//Console.WriteLine("[DEBUG] UI updated.");  		});  		thread = new Thread (() => {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_WinnerLabel.Text = winnername;  			});  		});  		thread.Name = "Use winner's (" + winner + ") display name";  		thread.Start ();  		return;  	}  } catch {  	//Console.WriteLine("[DEBUG] Error while attempting to roll.");  	Window.BeginInvoke ((MethodInvoker)delegate {  		Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  	});  	continue;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: try {  	//Console.WriteLine("[DEBUG] Validating users...");  	List<string> ValidUsers = new List<string> ();  	if (!Custom) {  		Dictionary<string' int> ActiveUsers = null;  		lock (Chat.Users)  			ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  		if (Window.Giveaway_TypeActive.Checked) {  			//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  			//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  			foreach (string user in ActiveUsers.Keys) {  				//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  				if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  				 {  					ValidUsers.Add (user);  					if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  						for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  							ValidUsers.Add (user);  				}  			}  		} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  			lock (dUsers) {  				lock (Window.Giveaway_UserList.Items) {  					List<string> Delete = new List<string> ();  					foreach (string user in dUsers.Keys) {  						//Console.WriteLine("[DEBUG] Validating: " + user);  						//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  						if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  							//Console.WriteLine("[DEBUG] " + user + " has been validated.");  							int entries = dUsers [user];  							if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  								entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  							for (int i = 0; i < entries; i++)  								ValidUsers.Add (user);  						} else {  							//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  							Delete.Add (user);  							List<string> delete = new List<string> ();  							string name = Users.GetDisplayName (user);  							foreach (string item in Window.Giveaway_UserList.Items)  								if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  									delete.Add (item);  							foreach (string item in delete)  								while (Window.Giveaway_UserList.Items.Contains (item))  									Window.Giveaway_UserList.Items.Remove (item);  							Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  						}  					}  					foreach (string user in Delete) {  						while (dUsers.ContainsKey (user))  							dUsers.Remove (user);  						Currency.Add (user' dUsers [user] * Cost);  						/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  				}  			}  		}  	}  	//Console.WriteLine("[DEBUG] Validated all users.");  	OnRoll (ref ValidUsers);  	if (ValidUsers.Count > 0) {  		//Console.WriteLine("[DEBUG] Rolling...");  		winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  		//Console.WriteLine("[DEBUG] Winner: " + winner);  		if (!Custom) {  			if (checkusers) {  				//Console.WriteLine("[DEBUG] Validating winner...");  				List<string> Ignore = new List<string> ();  				while (!CheckUser (winner) || Ignore.Contains (winner)) {  					Ignore.Add (winner);  					winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  					//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  				}  			}  			//Chance = 100F / ValidUsers.Count;  			int tickets = ValidUsers.Count' winnertickets = 1;  			if (Window.Giveaway_TypeTickets.Checked) {  				tickets = dUsers.Count;  				winnertickets = winnertickets = dUsers [winner];  			}  			Chance = (float)winnertickets / tickets * 100;  		}  		//Console.WriteLine("[DEBUG] Final winner: " + winner);  		//Console.WriteLine("[DEBUG] Updating UI...");  		Window.BeginInvoke ((MethodInvoker)delegate {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  			Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  			Window.Giveaway_WinnerLabel.Text = winnername;  			Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  			Window.Giveaway_CopyWinnerButton.Enabled = true;  			Window.Giveaway_AnnounceWinnerButton.Enabled = true;  			Window.Giveaway_RerollButton.Enabled = true;  			LastRoll = Api.GetUnixTimeNow ();  			if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  				Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  			if (announce) {  				TimeSpan t = Users.GetTimeWatched (winner);  				//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  				Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  			}  			//Console.WriteLine("[DEBUG] UI updated.");  		});  		thread = new Thread (() => {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_WinnerLabel.Text = winnername;  			});  		});  		thread.Name = "Use winner's (" + winner + ") display name";  		thread.Start ();  		return;  	}  } catch {  	//Console.WriteLine("[DEBUG] Error while attempting to roll.");  	Window.BeginInvoke ((MethodInvoker)delegate {  		Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  	});  	continue;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: try {  	//Console.WriteLine("[DEBUG] Validating users...");  	List<string> ValidUsers = new List<string> ();  	if (!Custom) {  		Dictionary<string' int> ActiveUsers = null;  		lock (Chat.Users)  			ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  		if (Window.Giveaway_TypeActive.Checked) {  			//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  			//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  			foreach (string user in ActiveUsers.Keys) {  				//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  				//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  				if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  				 {  					ValidUsers.Add (user);  					if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  						for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  							ValidUsers.Add (user);  				}  			}  		} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  			lock (dUsers) {  				lock (Window.Giveaway_UserList.Items) {  					List<string> Delete = new List<string> ();  					foreach (string user in dUsers.Keys) {  						//Console.WriteLine("[DEBUG] Validating: " + user);  						//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  						if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  							//Console.WriteLine("[DEBUG] " + user + " has been validated.");  							int entries = dUsers [user];  							if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  								entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  							for (int i = 0; i < entries; i++)  								ValidUsers.Add (user);  						} else {  							//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  							Delete.Add (user);  							List<string> delete = new List<string> ();  							string name = Users.GetDisplayName (user);  							foreach (string item in Window.Giveaway_UserList.Items)  								if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  									delete.Add (item);  							foreach (string item in delete)  								while (Window.Giveaway_UserList.Items.Contains (item))  									Window.Giveaway_UserList.Items.Remove (item);  							Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  						}  					}  					foreach (string user in Delete) {  						while (dUsers.ContainsKey (user))  							dUsers.Remove (user);  						Currency.Add (user' dUsers [user] * Cost);  						/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  				}  			}  		}  	}  	//Console.WriteLine("[DEBUG] Validated all users.");  	OnRoll (ref ValidUsers);  	if (ValidUsers.Count > 0) {  		//Console.WriteLine("[DEBUG] Rolling...");  		winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  		//Console.WriteLine("[DEBUG] Winner: " + winner);  		if (!Custom) {  			if (checkusers) {  				//Console.WriteLine("[DEBUG] Validating winner...");  				List<string> Ignore = new List<string> ();  				while (!CheckUser (winner) || Ignore.Contains (winner)) {  					Ignore.Add (winner);  					winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  					//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  				}  			}  			//Chance = 100F / ValidUsers.Count;  			int tickets = ValidUsers.Count' winnertickets = 1;  			if (Window.Giveaway_TypeTickets.Checked) {  				tickets = dUsers.Count;  				winnertickets = winnertickets = dUsers [winner];  			}  			Chance = (float)winnertickets / tickets * 100;  		}  		//Console.WriteLine("[DEBUG] Final winner: " + winner);  		//Console.WriteLine("[DEBUG] Updating UI...");  		Window.BeginInvoke ((MethodInvoker)delegate {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  			Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  			Window.Giveaway_WinnerLabel.Text = winnername;  			Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  			Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  			Window.Giveaway_CopyWinnerButton.Enabled = true;  			Window.Giveaway_AnnounceWinnerButton.Enabled = true;  			Window.Giveaway_RerollButton.Enabled = true;  			LastRoll = Api.GetUnixTimeNow ();  			if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  				Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  			if (announce) {  				TimeSpan t = Users.GetTimeWatched (winner);  				//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  				Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  			}  			//Console.WriteLine("[DEBUG] UI updated.");  		});  		thread = new Thread (() => {  			winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  			Window.BeginInvoke ((MethodInvoker)delegate {  				Window.Giveaway_WinnerLabel.Text = winnername;  			});  		});  		thread.Name = "Use winner's (" + winner + ") display name";  		thread.Start ();  		return;  	}  } catch {  	//Console.WriteLine("[DEBUG] Error while attempting to roll.");  	Window.BeginInvoke ((MethodInvoker)delegate {  		Console.WriteLine (Window.Giveaway_WinnerLabel.Text = "Error while rolling' retrying...");  	});  	continue;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (!Custom) {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (Window.Giveaway_TypeActive.Checked) {  		//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  		//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  		foreach (string user in ActiveUsers.Keys) {  			//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  			//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  			//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  			if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  			 {  				ValidUsers.Add (user);  				if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  					for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  						ValidUsers.Add (user);  			}  		}  	} else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  		lock (dUsers) {  			lock (Window.Giveaway_UserList.Items) {  				List<string> Delete = new List<string> ();  				foreach (string user in dUsers.Keys) {  					//Console.WriteLine("[DEBUG] Validating: " + user);  					//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  					if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  						//Console.WriteLine("[DEBUG] " + user + " has been validated.");  						int entries = dUsers [user];  						if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  							entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  						for (int i = 0; i < entries; i++)  							ValidUsers.Add (user);  					} else {  						//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  						Delete.Add (user);  						List<string> delete = new List<string> ();  						string name = Users.GetDisplayName (user);  						foreach (string item in Window.Giveaway_UserList.Items)  							if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  								delete.Add (item);  						foreach (string item in delete)  							while (Window.Giveaway_UserList.Items.Contains (item))  								Window.Giveaway_UserList.Items.Remove (item);  						Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  					}  				}  				foreach (string user in Delete) {  					while (dUsers.ContainsKey (user))  						dUsers.Remove (user);  					Currency.Add (user' dUsers [user] * Cost);  					/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  			}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (Window.Giveaway_TypeActive.Checked) {  	//int ActiveTime = Convert.ToInt32(MainForm.Giveaway_ActiveUserTime.Value) * 60' RollTime = GetUnixTimeNow();  	//int ActiveTime = Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60;  	foreach (string user in ActiveUsers.Keys) {  		//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  		//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  		//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  		if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  		 {  			ValidUsers.Add (user);  			if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  				for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  					ValidUsers.Add (user);  		}  	}  } else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  	lock (dUsers) {  		lock (Window.Giveaway_UserList.Items) {  			List<string> Delete = new List<string> ();  			foreach (string user in dUsers.Keys) {  				//Console.WriteLine("[DEBUG] Validating: " + user);  				//if (Chat.Users.ContainsKey(user) && CheckUser(user' true' Chat.Users.Count < 100))  				if (ActiveUsers.ContainsKey (user) && CheckUser (user' true' false' false' false)) {  					//Console.WriteLine("[DEBUG] " + user + " has been validated.");  					int entries = dUsers [user];  					if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  						entries *= Convert.ToInt32 (Window.Giveaway_SubscribersWinMultiplierAmount.Value);  					for (int i = 0; i < entries; i++)  						ValidUsers.Add (user);  				} else {  					//Console.WriteLine("[DEBUG] " + user + " has been disqualified.");  					Delete.Add (user);  					List<string> delete = new List<string> ();  					string name = Users.GetDisplayName (user);  					foreach (string item in Window.Giveaway_UserList.Items)  						if (item.StartsWith (name) || !ActiveUsers.ContainsKey (item.Split (' ') [0].ToLower ()))  							delete.Add (item);  					foreach (string item in delete)  						while (Window.Giveaway_UserList.Items.Contains (item))  							Window.Giveaway_UserList.Items.Remove (item);  					Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  				}  			}  			foreach (string user in Delete) {  				while (dUsers.ContainsKey (user))  					dUsers.Remove (user);  				Currency.Add (user' dUsers [user] * Cost);  				/*string name = Users.GetDisplayName(user);                                              List<string> delete = new List<string>();                                              foreach (string item in Window.Giveaway_UserList.Items) if (item.StartsWith(name) || !Chat.Users.ContainsKey(item.Split(' ')[0].ToLower())) delete.Add(item);                                              foreach (string item in delete) while (Window.Giveaway_UserList.Items.Contains(item)) Window.Giveaway_UserList.Items.Remove(item);                                              Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;*/}  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: foreach (string user in ActiveUsers.Keys) {  	//if (!ValidUsers.Contains(user) && RollTime - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  	//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= ActiveTime && CheckUser(user' true' Chat.Users.Count < 100))  	//if (!ValidUsers.Contains(user) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100))  	if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))  	 {  		ValidUsers.Add (user);  		if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  			for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  				ValidUsers.Add (user);  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (!ValidUsers.Contains (user) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))//if (!ValidUsers.Contains(user) && RollTime  Chat.Users[user] <= ActiveTime && CheckUser(user' true' false' false))   {  	ValidUsers.Add (user);  	if (Window.Giveaway_SubscribersWinMultiplier.Checked && Users.IsSubscriber (user))  		for (int i = 1; i < Window.Giveaway_SubscribersWinMultiplierAmount.Value; i++)  			ValidUsers.Add (user);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (ValidUsers.Count > 0) {  	//Console.WriteLine("[DEBUG] Rolling...");  	winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  	//Console.WriteLine("[DEBUG] Winner: " + winner);  	if (!Custom) {  		if (checkusers) {  			//Console.WriteLine("[DEBUG] Validating winner...");  			List<string> Ignore = new List<string> ();  			while (!CheckUser (winner) || Ignore.Contains (winner)) {  				Ignore.Add (winner);  				winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  				//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  			}  		}  		//Chance = 100F / ValidUsers.Count;  		int tickets = ValidUsers.Count' winnertickets = 1;  		if (Window.Giveaway_TypeTickets.Checked) {  			tickets = dUsers.Count;  			winnertickets = winnertickets = dUsers [winner];  		}  		Chance = (float)winnertickets / tickets * 100;  	}  	//Console.WriteLine("[DEBUG] Final winner: " + winner);  	//Console.WriteLine("[DEBUG] Updating UI...");  	Window.BeginInvoke ((MethodInvoker)delegate {  		winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  		Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  		Window.Giveaway_WinnerLabel.Text = winnername;  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  		Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  		Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  		Window.Giveaway_CopyWinnerButton.Enabled = true;  		Window.Giveaway_AnnounceWinnerButton.Enabled = true;  		Window.Giveaway_RerollButton.Enabled = true;  		LastRoll = Api.GetUnixTimeNow ();  		if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  			Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  		if (announce) {  			TimeSpan t = Users.GetTimeWatched (winner);  			//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  			Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  		}  		//Console.WriteLine("[DEBUG] UI updated.");  	});  	thread = new Thread (() => {  		winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_WinnerLabel.Text = winnername;  		});  	});  	thread.Name = "Use winner's (" + winner + ") display name";  	thread.Start ();  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (ValidUsers.Count > 0) {  	//Console.WriteLine("[DEBUG] Rolling...");  	winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  	//Console.WriteLine("[DEBUG] Winner: " + winner);  	if (!Custom) {  		if (checkusers) {  			//Console.WriteLine("[DEBUG] Validating winner...");  			List<string> Ignore = new List<string> ();  			while (!CheckUser (winner) || Ignore.Contains (winner)) {  				Ignore.Add (winner);  				winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  				//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  			}  		}  		//Chance = 100F / ValidUsers.Count;  		int tickets = ValidUsers.Count' winnertickets = 1;  		if (Window.Giveaway_TypeTickets.Checked) {  			tickets = dUsers.Count;  			winnertickets = winnertickets = dUsers [winner];  		}  		Chance = (float)winnertickets / tickets * 100;  	}  	//Console.WriteLine("[DEBUG] Final winner: " + winner);  	//Console.WriteLine("[DEBUG] Updating UI...");  	Window.BeginInvoke ((MethodInvoker)delegate {  		winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  		Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  		Window.Giveaway_WinnerLabel.Text = winnername;  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  		Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  		Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  		Window.Giveaway_CopyWinnerButton.Enabled = true;  		Window.Giveaway_AnnounceWinnerButton.Enabled = true;  		Window.Giveaway_RerollButton.Enabled = true;  		LastRoll = Api.GetUnixTimeNow ();  		if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  			Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  		if (announce) {  			TimeSpan t = Users.GetTimeWatched (winner);  			//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  			Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  		}  		//Console.WriteLine("[DEBUG] UI updated.");  	});  	thread = new Thread (() => {  		winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_WinnerLabel.Text = winnername;  		});  	});  	thread.Name = "Use winner's (" + winner + ") display name";  	thread.Start ();  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (ValidUsers.Count > 0) {  	//Console.WriteLine("[DEBUG] Rolling...");  	winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  	//Console.WriteLine("[DEBUG] Winner: " + winner);  	if (!Custom) {  		if (checkusers) {  			//Console.WriteLine("[DEBUG] Validating winner...");  			List<string> Ignore = new List<string> ();  			while (!CheckUser (winner) || Ignore.Contains (winner)) {  				Ignore.Add (winner);  				winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  				//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  			}  		}  		//Chance = 100F / ValidUsers.Count;  		int tickets = ValidUsers.Count' winnertickets = 1;  		if (Window.Giveaway_TypeTickets.Checked) {  			tickets = dUsers.Count;  			winnertickets = winnertickets = dUsers [winner];  		}  		Chance = (float)winnertickets / tickets * 100;  	}  	//Console.WriteLine("[DEBUG] Final winner: " + winner);  	//Console.WriteLine("[DEBUG] Updating UI...");  	Window.BeginInvoke ((MethodInvoker)delegate {  		winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  		Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  		Window.Giveaway_WinnerLabel.Text = winnername;  		Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  		Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  		Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  		Window.Giveaway_CopyWinnerButton.Enabled = true;  		Window.Giveaway_AnnounceWinnerButton.Enabled = true;  		Window.Giveaway_RerollButton.Enabled = true;  		LastRoll = Api.GetUnixTimeNow ();  		if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  			Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  		if (announce) {  			TimeSpan t = Users.GetTimeWatched (winner);  			//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  			Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  		}  		//Console.WriteLine("[DEBUG] UI updated.");  	});  	thread = new Thread (() => {  		winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic' true);  		Window.BeginInvoke ((MethodInvoker)delegate {  			Window.Giveaway_WinnerLabel.Text = winnername;  		});  	});  	thread.Name = "Use winner's (" + winner + ") display name";  	thread.Start ();  	return;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: if (!Custom) {  	if (checkusers) {  		//Console.WriteLine("[DEBUG] Validating winner...");  		List<string> Ignore = new List<string> ();  		while (!CheckUser (winner) || Ignore.Contains (winner)) {  			Ignore.Add (winner);  			winner = ValidUsers [new Random ().Next (0' ValidUsers.Count)];  			//Console.WriteLine("[DEBUG] Winner disqualified' new winner: " + winner);  		}  	}  	//Chance = 100F / ValidUsers.Count;  	int tickets = ValidUsers.Count' winnertickets = 1;  	if (Window.Giveaway_TypeTickets.Checked) {  		tickets = dUsers.Count;  		winnertickets = winnertickets = dUsers [winner];  	}  	Chance = (float)winnertickets / tickets * 100;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: Chance = (float)winnertickets / tickets * 100;  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  	Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  	Window.Giveaway_WinnerLabel.Text = winnername;  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  	Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  	Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  	Window.Giveaway_CopyWinnerButton.Enabled = true;  	Window.Giveaway_AnnounceWinnerButton.Enabled = true;  	Window.Giveaway_RerollButton.Enabled = true;  	LastRoll = Api.GetUnixTimeNow ();  	if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  		Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  	if (announce) {  		TimeSpan t = Users.GetTimeWatched (winner);  		//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  		Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  	}  	//Console.WriteLine("[DEBUG] UI updated.");  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	winnername = Users.GetDisplayName (winner' Users.NameAlterLevel.Cosmetic);  	Window.Giveaway_WinnerStatusLabel.Text = (Users.IsSubscriber (winner) ? "Subscribing | " : "") + (Users.IsFollower (winner) ? "Following | " : "") + Currency.Check (winner) + " " + Currency.Name + " | Watched : " + Users.GetTimeWatched (winner).ToString (@"d\d\ hh\h\ mm\m");  	Window.Giveaway_WinnerLabel.Text = winnername;  	Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  	Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  	Window.Giveaway_WinnerLabel.ForeColor = Color.Green;  	Window.Giveaway_CopyWinnerButton.Enabled = true;  	Window.Giveaway_AnnounceWinnerButton.Enabled = true;  	Window.Giveaway_RerollButton.Enabled = true;  	LastRoll = Api.GetUnixTimeNow ();  	if (Window.Giveaway_AutoBanWinner.Checked && !Window.Giveaway_BanListListBox.Items.Contains (winner.ToLower ()))  		Window.Giveaway_BanListListBox.Items.Add (winner.ToLower ());  	if (announce) {  		TimeSpan t = Users.GetTimeWatched (winner);  		//Chat.SendMessage(Users.GetDisplayName(winner) + " has won the giveaway! (" + (Users.IsSubscriber(winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower(winner) ? "Follows the channel | " : "") + "Has " + Currency.Check(winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor(t.TotalHours) + " hours and " + t.Minutes + " minutes | Chance : " + Chance.ToString("0.00") + "%)");  		Chat.SendMessage (winnername + " has won the giveaway! (" + (Users.IsSubscriber (winner) ? "Subscribes to the channel | " : "") + (Users.IsFollower (winner) ? "Follows the channel | " : "") + "Has " + Currency.Check (winner) + " " + Currency.Name + " | Has watched the stream for " + (int)Math.Floor (t.TotalHours) + " hours and " + t.Minutes + " minutes)");  	}  	//Console.WriteLine("[DEBUG] UI updated.");  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: Window.Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (0' 200' 0);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,Roll,The following statement contains a magic number: Window.Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (0' 200' 0);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Started && dUsers.Count > 0) {  	Chat.SendMessage ("A total of " + dUsers.Count + " people have joined the giveaway!");  	string finalmessage = "Giveaway: ";  	lock (FalseEntries) {  		foreach (string user in FalseEntries.Keys) {  			string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  			//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  			string msg = "an issue has occurred' please try again";  			if (FalseEntries [user] == 0) {  				msg = "the tickets amount you put is invalid";  			} else if (FalseEntries [user] == 1) {  				msg = "you have insufficient " + Currency.Name;  			} else if (FalseEntries [user] == 2) {  				msg = "you don't follow the channel";  			} else if (FalseEntries [user] == 3) {  				msg = "you are not subscribed to the channel";  			} else if (FalseEntries [user] == 4) {  				msg = "you haven't watched the stream for long enough";  			}  			if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  				if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  					if (finalmessage.Length + msg.Length > 996) {  						Chat.SendMessage (finalmessage);  						finalmessage = "Giveaway: ";  					}  					finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  				}  			} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + ". ";  			}  		}  		FalseEntries.Clear ();  		if (finalmessage != "Giveaway: ")  			Chat.SendMessage (finalmessage);  		if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  			LastAnnouncedTickets = Api.GetUnixTimeNow ();  			Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  		}  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: lock (FalseEntries) {  	foreach (string user in FalseEntries.Keys) {  		string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  		//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  		string msg = "an issue has occurred' please try again";  		if (FalseEntries [user] == 0) {  			msg = "the tickets amount you put is invalid";  		} else if (FalseEntries [user] == 1) {  			msg = "you have insufficient " + Currency.Name;  		} else if (FalseEntries [user] == 2) {  			msg = "you don't follow the channel";  		} else if (FalseEntries [user] == 3) {  			msg = "you are not subscribed to the channel";  		} else if (FalseEntries [user] == 4) {  			msg = "you haven't watched the stream for long enough";  		}  		if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  			if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  				if (finalmessage.Length + msg.Length > 996) {  					Chat.SendMessage (finalmessage);  					finalmessage = "Giveaway: ";  				}  				finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  			}  		} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + ". ";  		}  	}  	FalseEntries.Clear ();  	if (finalmessage != "Giveaway: ")  		Chat.SendMessage (finalmessage);  	if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  		LastAnnouncedTickets = Api.GetUnixTimeNow ();  		Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: foreach (string user in FalseEntries.Keys) {  	string name = Users.GetDisplayName (user' Users.NameAlterLevel.Cosmetic);  	//string msg = "you have insufficient " + Currency.Name + "' you don't answer the requirements or the tickets amount you put is invalid";  	string msg = "an issue has occurred' please try again";  	if (FalseEntries [user] == 0) {  		msg = "the tickets amount you put is invalid";  	} else if (FalseEntries [user] == 1) {  		msg = "you have insufficient " + Currency.Name;  	} else if (FalseEntries [user] == 2) {  		msg = "you don't follow the channel";  	} else if (FalseEntries [user] == 3) {  		msg = "you are not subscribed to the channel";  	} else if (FalseEntries [user] == 4) {  		msg = "you haven't watched the stream for long enough";  	}  	if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  		if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  			if (finalmessage.Length + msg.Length > 996) {  				Chat.SendMessage (finalmessage);  				finalmessage = "Giveaway: ";  			}  			finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  		}  	} else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + ". ";  	}  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 0) {  	msg = "the tickets amount you put is invalid";  } else if (FalseEntries [user] == 1) {  	msg = "you have insufficient " + Currency.Name;  } else if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 0) {  	msg = "the tickets amount you put is invalid";  } else if (FalseEntries [user] == 1) {  	msg = "you have insufficient " + Currency.Name;  } else if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 0) {  	msg = "the tickets amount you put is invalid";  } else if (FalseEntries [user] == 1) {  	msg = "you have insufficient " + Currency.Name;  } else if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 1) {  	msg = "you have insufficient " + Currency.Name;  } else if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 1) {  	msg = "you have insufficient " + Currency.Name;  } else if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 1) {  	msg = "you have insufficient " + Currency.Name;  } else if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 2) {  	msg = "you don't follow the channel";  } else if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 3) {  	msg = "you are not subscribed to the channel";  } else if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (FalseEntries [user] == 4) {  	msg = "you haven't watched the stream for long enough";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  	if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  	}  } else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + ". ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  	if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  	}  } else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + ". ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  	if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  	}  } else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + ". ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  	if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  	}  } else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + ". ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_WarnFalseEntries.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ())) {  	if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  		if (finalmessage.Length + msg.Length > 996) {  			Chat.SendMessage (finalmessage);  			finalmessage = "Giveaway: ";  		}  		finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  	}  } else if (Window.Giveaway_AnnounceFalseEntries.Checked) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + ". ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Users.Warn (user' 1' 10' "Attempting to buy tickets without meeting the requirements or with insufficient funds or invalid parameters"' 3' true' true' Window.Giveaway_AnnounceWarnedEntries.Checked' 6) == 1) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + " (Warning: " + Users.Warnings [user] + "/3). ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (finalmessage.Length + msg.Length > 996) {  	Chat.SendMessage (finalmessage);  	finalmessage = "Giveaway: ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_AnnounceFalseEntries.Checked) {  	if (finalmessage.Length + msg.Length > 996) {  		Chat.SendMessage (finalmessage);  		finalmessage = "Giveaway: ";  	}  	finalmessage += name + "' " + msg + ". ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (finalmessage.Length + msg.Length > 996) {  	Chat.SendMessage (finalmessage);  	finalmessage = "Giveaway: ";  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,GiveawayQueueHandler,The following statement contains a magic number: if (Window.Giveaway_TypeTickets.Checked && Api.GetUnixTimeNow () - LastAnnouncedTickets > 60) {  	LastAnnouncedTickets = Api.GetUnixTimeNow ();  	Chat.SendMessage ("Ticket cost: " + Cost + "' max. tickets: " + MaxTickets + ".");  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: if (Window.Giveaway_TypeActive.Checked) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Dictionary<string' int> ActiveUsers = null;  		lock (Chat.Users)  			ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  		lock (Window.Giveaway_UserList.Items) {  			foreach (string user in ActiveUsers.Keys) {  				string name = Users.GetDisplayName (user);  				//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  				if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  					Window.Giveaway_UserList.Items.Add (name);  			}  			List<string> delete = new List<string> ();  			//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user);  			foreach (string user in Window.Giveaway_UserList.Items)  				if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  					delete.Add (user);  			foreach (string user in delete)  				while (Window.Giveaway_UserList.Items.Contains (user))  					Window.Giveaway_UserList.Items.Remove (user);  			Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  		}  	});  } else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		lock (dUsers) {  			Dictionary<string' int> ActiveUsers = null;  			lock (Chat.Users)  				ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  			lock (Window.Giveaway_UserList.Items) {  				//foreach (string usr in Users.Keys) if (!Window.Giveaway_UserList.Items.Contains(usr)) Window.Giveaway_UserList.Items.Add(usr + " (" + Users[usr] + ")");  				List<string> delete = new List<string> ();  				foreach (string user in Window.Giveaway_UserList.Items)  					if (!dUsers.ContainsKey (user.Split (' ') [0].ToLower ()) || !ActiveUsers.ContainsKey (user.Split (' ') [0].ToLower ()))  						delete.Add (user);  				foreach (string user in delete) {  					while (Window.Giveaway_UserList.Items.Contains (user))  						Window.Giveaway_UserList.Items.Remove (user);  					while (dUsers.ContainsKey (user.ToLower ()))  						dUsers.Remove (user.ToLower ());  				}  				Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  			}  		}  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: if (Window.Giveaway_TypeActive.Checked) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		Dictionary<string' int> ActiveUsers = null;  		lock (Chat.Users)  			ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  		lock (Window.Giveaway_UserList.Items) {  			foreach (string user in ActiveUsers.Keys) {  				string name = Users.GetDisplayName (user);  				//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  				if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  					Window.Giveaway_UserList.Items.Add (name);  			}  			List<string> delete = new List<string> ();  			//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user);  			foreach (string user in Window.Giveaway_UserList.Items)  				if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  					delete.Add (user);  			foreach (string user in delete)  				while (Window.Giveaway_UserList.Items.Contains (user))  					Window.Giveaway_UserList.Items.Remove (user);  			Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  		}  	});  } else if (Window.Giveaway_TypeKeyword.Checked || Window.Giveaway_TypeTickets.Checked) {  	Window.BeginInvoke ((MethodInvoker)delegate {  		lock (dUsers) {  			Dictionary<string' int> ActiveUsers = null;  			lock (Chat.Users)  				ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  			lock (Window.Giveaway_UserList.Items) {  				//foreach (string usr in Users.Keys) if (!Window.Giveaway_UserList.Items.Contains(usr)) Window.Giveaway_UserList.Items.Add(usr + " (" + Users[usr] + ")");  				List<string> delete = new List<string> ();  				foreach (string user in Window.Giveaway_UserList.Items)  					if (!dUsers.ContainsKey (user.Split (' ') [0].ToLower ()) || !ActiveUsers.ContainsKey (user.Split (' ') [0].ToLower ()))  						delete.Add (user);  				foreach (string user in delete) {  					while (Window.Giveaway_UserList.Items.Contains (user))  						Window.Giveaway_UserList.Items.Remove (user);  					while (dUsers.ContainsKey (user.ToLower ()))  						dUsers.Remove (user.ToLower ());  				}  				Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  			}  		}  	});  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	lock (Window.Giveaway_UserList.Items) {  		foreach (string user in ActiveUsers.Keys) {  			string name = Users.GetDisplayName (user);  			//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  			if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  				Window.Giveaway_UserList.Items.Add (name);  		}  		List<string> delete = new List<string> ();  		//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user);  		foreach (string user in Window.Giveaway_UserList.Items)  			if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  				delete.Add (user);  		foreach (string user in delete)  			while (Window.Giveaway_UserList.Items.Contains (user))  				Window.Giveaway_UserList.Items.Remove (user);  		Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: Window.BeginInvoke ((MethodInvoker)delegate {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	lock (Window.Giveaway_UserList.Items) {  		foreach (string user in ActiveUsers.Keys) {  			string name = Users.GetDisplayName (user);  			//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  			if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  				Window.Giveaway_UserList.Items.Add (name);  		}  		List<string> delete = new List<string> ();  		//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user);  		foreach (string user in Window.Giveaway_UserList.Items)  			if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  				delete.Add (user);  		foreach (string user in delete)  			while (Window.Giveaway_UserList.Items.Contains (user))  				Window.Giveaway_UserList.Items.Remove (user);  		Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  	}  });  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: lock (Window.Giveaway_UserList.Items) {  	foreach (string user in ActiveUsers.Keys) {  		string name = Users.GetDisplayName (user);  		//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  		if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  			Window.Giveaway_UserList.Items.Add (name);  	}  	List<string> delete = new List<string> ();  	//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user);  	foreach (string user in Window.Giveaway_UserList.Items)  		if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  			delete.Add (user);  	foreach (string user in delete)  		while (Window.Giveaway_UserList.Items.Contains (user))  			Window.Giveaway_UserList.Items.Remove (user);  	Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: lock (Window.Giveaway_UserList.Items) {  	foreach (string user in ActiveUsers.Keys) {  		string name = Users.GetDisplayName (user);  		//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  		if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  			Window.Giveaway_UserList.Items.Add (name);  	}  	List<string> delete = new List<string> ();  	//foreach (string user in Window.Giveaway_UserList.Items) if (!Chat.Users.ContainsKey(user.ToLower()) || GetUnixTimeNow() - Chat.Users[user.ToLower()] > Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser(user' true' Chat.Users.Count < 100)) delete.Add(user);  	foreach (string user in Window.Giveaway_UserList.Items)  		if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  			delete.Add (user);  	foreach (string user in delete)  		while (Window.Giveaway_UserList.Items.Contains (user))  			Window.Giveaway_UserList.Items.Remove (user);  	Window.Giveaway_UserCount.Text = "Count: " + Window.Giveaway_UserList.Items.Count;  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: foreach (string user in ActiveUsers.Keys) {  	string name = Users.GetDisplayName (user);  	//if (!Chat.IgnoredUsers.Contains(user) && !Window.Giveaway_UserList.Items.Contains(name) && GetUnixTimeNow() - Chat.Users[user] <= Convert.ToInt32(Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser(user' true' Chat.Users.Count < 100)) Window.Giveaway_UserList.Items.Add(name);  	if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  		Window.Giveaway_UserList.Items.Add (name);  }  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: if (!Chat.IgnoredUsers.Contains (user) && !Window.Giveaway_BanListListBox.Items.Contains (user) && !Window.Giveaway_UserList.Items.Contains (name) && Api.GetUnixTimeNow () - ActiveUsers [user] <= Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 && CheckUser (user' true' false))  	Window.Giveaway_UserList.Items.Add (name);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: foreach (string user in Window.Giveaway_UserList.Items)  	if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  		delete.Add (user);  
Magic Number,CoMaNdO.Giveaways,Giveaway,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\Giveaways.cs,UserListHandler,The following statement contains a magic number: if (!ActiveUsers.ContainsKey (user.ToLower ()) || Api.GetUnixTimeNow () - ActiveUsers [user.ToLower ()] > Convert.ToInt32 (Window.Giveaway_ActiveUserTime.Value) * 60 || !CheckUser (user' true' false))  	delete.Add (user);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GiveawaysWindow,The following statement contains a magic number: panel.Location = new Point (GiveawayTypeSpacer.Location.X + GiveawayTypeSpacer.Size.Width - 1' GiveawayTypeSpacer.Location.Y + 9);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,GiveawaysWindow,The following statement contains a magic number: panel.Location = new Point (GiveawayBansSpacer.Location.X + GiveawayBansSpacer.Size.Width - 1' GiveawayBansSpacer.Location.Y + 9);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_UnbanButton) {  	int iOldIndex = Giveaway_BanListListBox.SelectedIndex;  	Giveaway_BanListListBox.Items.RemoveAt (iOldIndex);  	Giveaway_UnbanButton.Enabled = false;  	if (Giveaway_BanListListBox.Items.Count > 0)  		Giveaway_BanListListBox.SelectedIndex = iOldIndex > Giveaway_BanListListBox.Items.Count - 1 ? Giveaway_BanListListBox.Items.Count - 1 : iOldIndex;  	Giveaway.UserListHandler (null);  } else if (ctrl == Giveaway_BanButton) {  	Giveaway_BanListListBox.Items.Add (Giveaway_AddBanTextBox.Text.ToLower ());  	Giveaway_AddBanTextBox.Text = "";  	Giveaway.UserListHandler (null);  } else if (ctrl == Giveaway_MinCurrency) {  	Giveaway_MinCurrencyBox.Enabled = Giveaway_MinCurrency.Checked;  } else if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_UnbanButton) {  	int iOldIndex = Giveaway_BanListListBox.SelectedIndex;  	Giveaway_BanListListBox.Items.RemoveAt (iOldIndex);  	Giveaway_UnbanButton.Enabled = false;  	if (Giveaway_BanListListBox.Items.Count > 0)  		Giveaway_BanListListBox.SelectedIndex = iOldIndex > Giveaway_BanListListBox.Items.Count - 1 ? Giveaway_BanListListBox.Items.Count - 1 : iOldIndex;  	Giveaway.UserListHandler (null);  } else if (ctrl == Giveaway_BanButton) {  	Giveaway_BanListListBox.Items.Add (Giveaway_AddBanTextBox.Text.ToLower ());  	Giveaway_AddBanTextBox.Text = "";  	Giveaway.UserListHandler (null);  } else if (ctrl == Giveaway_MinCurrency) {  	Giveaway_MinCurrencyBox.Enabled = Giveaway_MinCurrency.Checked;  } else if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_BanButton) {  	Giveaway_BanListListBox.Items.Add (Giveaway_AddBanTextBox.Text.ToLower ());  	Giveaway_AddBanTextBox.Text = "";  	Giveaway.UserListHandler (null);  } else if (ctrl == Giveaway_MinCurrency) {  	Giveaway_MinCurrencyBox.Enabled = Giveaway_MinCurrency.Checked;  } else if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_BanButton) {  	Giveaway_BanListListBox.Items.Add (Giveaway_AddBanTextBox.Text.ToLower ());  	Giveaway_AddBanTextBox.Text = "";  	Giveaway.UserListHandler (null);  } else if (ctrl == Giveaway_MinCurrency) {  	Giveaway_MinCurrencyBox.Enabled = Giveaway_MinCurrency.Checked;  } else if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_MinCurrency) {  	Giveaway_MinCurrencyBox.Enabled = Giveaway_MinCurrency.Checked;  } else if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_MinCurrency) {  	Giveaway_MinCurrencyBox.Enabled = Giveaway_MinCurrency.Checked;  } else if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_TypeActive) {  	Giveaway_ActiveUserTime.Enabled = Giveaway_TypeActive.Checked;  	Giveaway_AnnounceFalseEntries.Enabled = !Giveaway_TypeActive.Checked;  	Giveaway_WarnFalseEntries.Enabled = (Giveaway_AnnounceFalseEntries.Checked && !Giveaway_TypeActive.Checked && Channel.Moderators.Contains (Channel.Bot.ToLower ()));  	if (Giveaway_TypeActive.Checked) {  		Giveaway_AnnounceFalseEntries.Checked = false;  		if (!Channel.Moderators.Contains (Channel.Bot.ToLower ()))  			Giveaway_WarnFalseEntries.Checked = false;  	}  } else if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_TypeKeyword) {  	Giveaway_CustomKeyword.Enabled = Giveaway_TypeKeyword.Checked;  } else if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_TypeTickets) {  	if (Giveaway_TypeTickets.Checked)  		Giveaway_MinCurrency.Checked = false;  	Giveaway_MinCurrency.Enabled = !Giveaway_TypeTickets.Checked;  	Giveaway_TicketCost.Enabled = Giveaway_MaxTickets.Enabled = Giveaway_TypeTickets.Checked;  } else if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_MustWatch) {  	Giveaway_MustWatchHours.Enabled = Giveaway_MustWatchMinutes.Enabled = Giveaway_MustWatch.Checked;  } else if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (ctrl == Giveaway_MustWatchMinutes) {  	if (Giveaway_MustWatchMinutes.Value == -1) {  		if (Giveaway_MustWatchHours.Value > 0) {  			Giveaway_MustWatchMinutes.Value = 59;  			Giveaway_MustWatchHours.Value--;  		} else {  			Giveaway_MustWatchMinutes.Value = 0;  		}  	} else if (Giveaway_MustWatchMinutes.Value == 60) {  		Giveaway_MustWatchMinutes.Value = 0;  		Giveaway_MustWatchHours.Value++;  	}  } else if (ctrl == Giveaway_AnnounceFalseEntries) {  	Giveaway_WarnFalseEntries.Enabled = Giveaway_AnnounceFalseEntries.Checked;  	if (!Giveaway_AnnounceFalseEntries.Checked)  		Giveaway_WarnFalseEntries.Checked = false;  } else if (ctrl == Giveaway_WarnFalseEntries) {  	Giveaway_AnnounceWarnedEntries.Enabled = Giveaway_WarnFalseEntries.Checked;  	if (!Giveaway_WarnFalseEntries.Checked)  		Giveaway_AnnounceWarnedEntries.Checked = false;  } else if (ctrl == Giveaway_SubscribersWinMultiplier) {  	Giveaway_SubscribersWinMultiplierAmount.Enabled = Giveaway_SubscribersWinMultiplier.Checked;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (Giveaway_MustWatchMinutes.Value == -1) {  	if (Giveaway_MustWatchHours.Value > 0) {  		Giveaway_MustWatchMinutes.Value = 59;  		Giveaway_MustWatchHours.Value--;  	} else {  		Giveaway_MustWatchMinutes.Value = 0;  	}  } else if (Giveaway_MustWatchMinutes.Value == 60) {  	Giveaway_MustWatchMinutes.Value = 0;  	Giveaway_MustWatchHours.Value++;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (Giveaway_MustWatchMinutes.Value == -1) {  	if (Giveaway_MustWatchHours.Value > 0) {  		Giveaway_MustWatchMinutes.Value = 59;  		Giveaway_MustWatchHours.Value--;  	} else {  		Giveaway_MustWatchMinutes.Value = 0;  	}  } else if (Giveaway_MustWatchMinutes.Value == 60) {  	Giveaway_MustWatchMinutes.Value = 0;  	Giveaway_MustWatchHours.Value++;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (Giveaway_MustWatchHours.Value > 0) {  	Giveaway_MustWatchMinutes.Value = 59;  	Giveaway_MustWatchHours.Value--;  } else {  	Giveaway_MustWatchMinutes.Value = 0;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: Giveaway_MustWatchMinutes.Value = 59;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_Settings_Changed,The following statement contains a magic number: if (Giveaway_MustWatchMinutes.Value == 60) {  	Giveaway_MustWatchMinutes.Value = 0;  	Giveaway_MustWatchHours.Value++;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_AddBanTextBox_TextChanged,The following statement contains a magic number: Giveaway_BanButton.Enabled = (Giveaway_AddBanTextBox.Text != "" && Giveaway_AddBanTextBox.Text.Length > 2 && !Giveaway_AddBanTextBox.Text.Contains (" ") && !Giveaway_AddBanTextBox.Text.Contains (";") && !Giveaway_AddBanTextBox.Text.Contains (".") && !Giveaway_AddBanTextBox.Text.Contains ("'") && !Giveaway_AddBanTextBox.Text.Contains ("\"") && !Giveaway_AddBanTextBox.Text.Contains ("'") && !Chat.IgnoredUsers.Contains (Giveaway_AddBanTextBox.Text.ToLower ()) && !Giveaway_BanListListBox.Items.Contains (Giveaway_AddBanTextBox.Text.ToLower ()));  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: try {  	Dictionary<string' int> ActiveUsers = null;  	lock (Chat.Users)  		ActiveUsers = Chat.Users.ToDictionary (kv => kv.Key' kv => kv.Value);  	if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  		int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  		int color = time - 120;  		if (color >= 0 && color < 120) {  			color = 200 / 120 * color;  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 120) {  			if (color <= 180) {  				color = 255 / 60 * (color - 120);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  		}  	}  	if (Giveaway.LastRoll > 0) {  		int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  		int color = time;  		if (color >= 0 && color < 60) {  			color = 200 / 60 * color;  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  		} else if (color >= 60) {  			if (color <= 90) {  				color = 255 / 30 * (color - 60);  				int red = 200;  				if (color > 200) {  					red = color;  					color = 200;  				}  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  			} else {  				Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  			}  		}  		TimeSpan t = TimeSpan.FromSeconds (time);  		if (t.Days > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  		} else if (t.Hours > 0) {  			Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  		} else {  			Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  		}  	}  } catch {  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (ActiveUsers.ContainsKey (Giveaway_WinnerLabel.Text.ToLower ())) {  	int time = Api.GetUnixTimeNow () - ActiveUsers [Giveaway_WinnerLabel.Text.ToLower ()];  	int color = time - 120;  	if (color >= 0 && color < 120) {  		color = 200 / 120 * color;  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 120) {  		if (color <= 180) {  			color = 255 / 60 * (color - 120);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinnerTimerLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 120) {  	color = 200 / 120 * color;  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 200 / 120 * color;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 200 / 120 * color;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (color' 200' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 120) {  	if (color <= 180) {  		color = 255 / 60 * (color - 120);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 180) {  	color = 255 / 60 * (color - 120);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 255 / 60 * (color - 120);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 255 / 60 * (color - 120);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 255 / 60 * (color - 120);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color > 200) {  	red = color;  	color = 200;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color > 200) {  	red = color;  	color = 200;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 200;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: Giveaway_WinnerTimerLabel.ForeColor = Color.FromArgb (255' 0' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (Giveaway.LastRoll > 0) {  	int time = Api.GetUnixTimeNow () - Giveaway.LastRoll;  	int color = time;  	if (color >= 0 && color < 60) {  		color = 200 / 60 * color;  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  	} else if (color >= 60) {  		if (color <= 90) {  			color = 255 / 30 * (color - 60);  			int red = 200;  			if (color > 200) {  				red = color;  				color = 200;  			}  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  		} else {  			Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  		}  	}  	TimeSpan t = TimeSpan.FromSeconds (time);  	if (t.Days > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"d\:hh\:mm\:ss");  	} else if (t.Hours > 0) {  		Giveaway_WinTimeLabel.Text = t.ToString (@"h\:mm\:ss");  	} else {  		Giveaway_WinTimeLabel.Text = t.ToString (@"m\:ss");  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 0 && color < 60) {  	color = 200 / 60 * color;  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  } else if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 200 / 60 * color;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 200 / 60 * color;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (color' 200' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color >= 60) {  	if (color <= 90) {  		color = 255 / 30 * (color - 60);  		int red = 200;  		if (color > 200) {  			red = color;  			color = 200;  		}  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  	} else {  		Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  	}  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color <= 90) {  	color = 255 / 30 * (color - 60);  	int red = 200;  	if (color > 200) {  		red = color;  		color = 200;  	}  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  } else {  	Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 255 / 30 * (color - 60);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 255 / 30 * (color - 60);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 255 / 30 * (color - 60);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color > 200) {  	red = color;  	color = 200;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: if (color > 200) {  	red = color;  	color = 200;  }  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: color = 200;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (red' 200 - color' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,Giveaway_WinnerTimer_Tick,The following statement contains a magic number: Giveaway_WinTimeLabel.ForeColor = Color.FromArgb (255' 0' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserList.Location = new System.Drawing.Point (814' 60);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserList.Location = new System.Drawing.Point (814' 60);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserList.Size = new System.Drawing.Size (202' 496);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserList.Size = new System.Drawing.Size (202' 496);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserList.TabIndex = 70;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersLabel.Location = new System.Drawing.Point (887' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersLabel.Location = new System.Drawing.Point (887' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersLabel.Size = new System.Drawing.Size (40' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersLabel.Size = new System.Drawing.Size (40' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersLabel.TabIndex = 68;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersSpacer.Location = new System.Drawing.Point (813' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersSpacer.Location = new System.Drawing.Point (813' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersSpacer.Size = new System.Drawing.Size (212' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersSpacer.Size = new System.Drawing.Size (212' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayUsersSpacer.TabIndex = 69;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CustomKeyword.Location = new System.Drawing.Point (124' 76);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CustomKeyword.Location = new System.Drawing.Point (124' 76);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CustomKeyword.MaxLength = 32;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CustomKeyword.Size = new System.Drawing.Size (140' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CustomKeyword.Size = new System.Drawing.Size (140' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CustomKeyword.TabIndex = 67;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWarnedEntries.Location = new System.Drawing.Point (306' 290);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWarnedEntries.Location = new System.Drawing.Point (306' 290);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWarnedEntries.Size = new System.Drawing.Size (115' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWarnedEntries.Size = new System.Drawing.Size (115' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWarnedEntries.TabIndex = 66;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WarnFalseEntries.Location = new System.Drawing.Point (137' 290);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WarnFalseEntries.Location = new System.Drawing.Point (137' 290);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WarnFalseEntries.Size = new System.Drawing.Size (171' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WarnFalseEntries.Size = new System.Drawing.Size (171' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WarnFalseEntries.TabIndex = 65;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatch.Location = new System.Drawing.Point (6' 244);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatch.Location = new System.Drawing.Point (6' 244);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatch.Size = new System.Drawing.Size (377' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatch.Size = new System.Drawing.Size (377' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatch.TabIndex = 61;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustSubscribe.Location = new System.Drawing.Point (6' 175);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustSubscribe.Location = new System.Drawing.Point (6' 175);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustSubscribe.Size = new System.Drawing.Size (122' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustSubscribe.Size = new System.Drawing.Size (122' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustSubscribe.TabIndex = 60;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CancelButton.Location = new System.Drawing.Point (699' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CancelButton.Location = new System.Drawing.Point (699' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CancelButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CancelButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CancelButton.TabIndex = 57;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CloseButton.Location = new System.Drawing.Point (354' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CloseButton.Location = new System.Drawing.Point (354' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CloseButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CloseButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CloseButton.TabIndex = 56;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_OpenButton.Location = new System.Drawing.Point (239' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_OpenButton.Location = new System.Drawing.Point (239' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_OpenButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_OpenButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_OpenButton.TabIndex = 55;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansLabel.Location = new System.Drawing.Point (381' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansLabel.Location = new System.Drawing.Point (381' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansLabel.Size = new System.Drawing.Size (35' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansLabel.Size = new System.Drawing.Size (35' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansLabel.TabIndex = 53;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansSpacer.Location = new System.Drawing.Point (318' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansSpacer.Location = new System.Drawing.Point (318' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansSpacer.Size = new System.Drawing.Size (496' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansSpacer.Size = new System.Drawing.Size (496' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayBansSpacer.TabIndex = 54;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsLabel.Location = new System.Drawing.Point (58' 126);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsLabel.Location = new System.Drawing.Point (58' 126);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsLabel.Size = new System.Drawing.Size (53' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsLabel.Size = new System.Drawing.Size (53' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsLabel.TabIndex = 51;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsSpacer.Location = new System.Drawing.Point (-1' 126);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsSpacer.Size = new System.Drawing.Size (320' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsSpacer.Size = new System.Drawing.Size (320' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawaySettingsSpacer.TabIndex = 52;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeTickets.Location = new System.Drawing.Point (6' 99);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeTickets.Location = new System.Drawing.Point (6' 99);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeTickets.Size = new System.Drawing.Size (254' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeTickets.Size = new System.Drawing.Size (254' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeTickets.TabIndex = 50;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeKeyword.Location = new System.Drawing.Point (6' 76);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeKeyword.Location = new System.Drawing.Point (6' 76);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeKeyword.Size = new System.Drawing.Size (256' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeKeyword.Size = new System.Drawing.Size (256' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeKeyword.TabIndex = 49;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SettingsPresents.Size = new System.Drawing.Size (1026' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SettingsPresents.Size = new System.Drawing.Size (1026' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SettingsPresents.TabIndex = 43;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point (4' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point (4' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size (1018' 0);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SettingsPresentsContextMenu.Size = new System.Drawing.Size (136' 79);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SettingsPresentsContextMenu.Size = new System.Drawing.Size (136' 79);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.addToolStripMenuItem.Size = new System.Drawing.Size (135' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.addToolStripMenuItem.Size = new System.Drawing.Size (135' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.removeToolStripMenuItem.Size = new System.Drawing.Size (135' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.removeToolStripMenuItem.Size = new System.Drawing.Size (135' 22);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (132' 6);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (132' 6);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBox1.Size = new System.Drawing.Size (100' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBox1.Size = new System.Drawing.Size (100' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinTimeLabel.Location = new System.Drawing.Point (2' 480);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinTimeLabel.Location = new System.Drawing.Point (2' 480);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinTimeLabel.Size = new System.Drawing.Size (44' 24);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinTimeLabel.Size = new System.Drawing.Size (44' 24);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinTimeLabel.TabIndex = 44;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AddBanTextBox.Location = new System.Drawing.Point (324' 146);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AddBanTextBox.Location = new System.Drawing.Point (324' 146);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AddBanTextBox.Size = new System.Drawing.Size (484' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AddBanTextBox.Size = new System.Drawing.Size (484' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AddBanTextBox.TabIndex = 33;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustFollow.Location = new System.Drawing.Point (6' 152);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustFollow.Location = new System.Drawing.Point (6' 152);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustFollow.Size = new System.Drawing.Size (111' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustFollow.Size = new System.Drawing.Size (111' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustFollow.TabIndex = 14;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerChat.Location = new System.Drawing.Point (6' 343);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerChat.Location = new System.Drawing.Point (6' 343);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerChat.Size = new System.Drawing.Size (802' 119);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerChat.Size = new System.Drawing.Size (802' 119);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerChat.TabIndex = 41;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerTimerLabel.Location = new System.Drawing.Point (2' 326);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerTimerLabel.Location = new System.Drawing.Point (2' 326);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerTimerLabel.Size = new System.Drawing.Size (36' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerTimerLabel.Size = new System.Drawing.Size (36' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerTimerLabel.TabIndex = 40;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StartButton.Location = new System.Drawing.Point (6' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StartButton.Location = new System.Drawing.Point (6' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StartButton.Size = new System.Drawing.Size (112' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StartButton.Size = new System.Drawing.Size (112' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StartButton.TabIndex = 22;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CopyWinnerButton.Location = new System.Drawing.Point (6' 507);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CopyWinnerButton.Location = new System.Drawing.Point (6' 507);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CopyWinnerButton.Size = new System.Drawing.Size (802' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CopyWinnerButton.Size = new System.Drawing.Size (802' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_CopyWinnerButton.TabIndex = 36;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_RerollButton.Location = new System.Drawing.Point (124' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_RerollButton.Location = new System.Drawing.Point (124' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_RerollButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_RerollButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_RerollButton.TabIndex = 23;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StopButton.Location = new System.Drawing.Point (584' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StopButton.Location = new System.Drawing.Point (584' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StopButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StopButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_StopButton.TabIndex = 24;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AutoBanWinner.Location = new System.Drawing.Point (6' 267);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AutoBanWinner.Location = new System.Drawing.Point (6' 267);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AutoBanWinner.Size = new System.Drawing.Size (143' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AutoBanWinner.Size = new System.Drawing.Size (143' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AutoBanWinner.TabIndex = 34;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UnbanButton.Location = new System.Drawing.Point (569' 172);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UnbanButton.Location = new System.Drawing.Point (569' 172);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UnbanButton.Size = new System.Drawing.Size (239' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UnbanButton.Size = new System.Drawing.Size (239' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UnbanButton.TabIndex = 32;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanButton.Location = new System.Drawing.Point (324' 172);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanButton.Location = new System.Drawing.Point (324' 172);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanButton.Size = new System.Drawing.Size (239' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanButton.Size = new System.Drawing.Size (239' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanButton.TabIndex = 31;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWinnerButton.Location = new System.Drawing.Point (469' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWinnerButton.Location = new System.Drawing.Point (469' 533);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWinnerButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWinnerButton.Size = new System.Drawing.Size (109' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceWinnerButton.TabIndex = 29;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanListListBox.Location = new System.Drawing.Point (324' 48);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanListListBox.Location = new System.Drawing.Point (324' 48);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanListListBox.Size = new System.Drawing.Size (484' 93);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanListListBox.Size = new System.Drawing.Size (484' 93);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_BanListListBox.TabIndex = 30;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point (6' 324);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point (6' 324);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size (802' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size (802' 23);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 42;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerStatusLabel.Location = new System.Drawing.Point (6' 459);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerStatusLabel.Location = new System.Drawing.Point (6' 459);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerStatusLabel.Size = new System.Drawing.Size (802' 21);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerStatusLabel.Size = new System.Drawing.Size (802' 21);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerStatusLabel.TabIndex = 25;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerLabel.Location = new System.Drawing.Point (6' 479);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerLabel.Location = new System.Drawing.Point (6' 479);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerLabel.Size = new System.Drawing.Size (802' 24);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerLabel.Size = new System.Drawing.Size (802' 24);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_WinnerLabel.TabIndex = 26;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeLabel.Location = new System.Drawing.Point (58' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeLabel.Location = new System.Drawing.Point (58' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeLabel.Size = new System.Drawing.Size (35' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeLabel.Size = new System.Drawing.Size (35' 19);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeLabel.TabIndex = 13;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeSpacer.Location = new System.Drawing.Point (-1' 27);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeSpacer.Size = new System.Drawing.Size (320' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeSpacer.Size = new System.Drawing.Size (320' 11);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.GiveawayTypeSpacer.TabIndex = 47;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrency.Location = new System.Drawing.Point (6' 221);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrency.Location = new System.Drawing.Point (6' 221);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrency.Size = new System.Drawing.Size (235' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrency.Size = new System.Drawing.Size (235' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrency.TabIndex = 20;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeActive.Location = new System.Drawing.Point (6' 53);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeActive.Location = new System.Drawing.Point (6' 53);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeActive.Size = new System.Drawing.Size (225' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeActive.Size = new System.Drawing.Size (225' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TypeActive.TabIndex = 48;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserCount.Location = new System.Drawing.Point (811' 46);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserCount.Location = new System.Drawing.Point (811' 46);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserCount.Size = new System.Drawing.Size (49' 13);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserCount.Size = new System.Drawing.Size (49' 13);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_UserCount.TabIndex = 71;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplier.Location = new System.Drawing.Point (6' 198);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplier.Location = new System.Drawing.Point (6' 198);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplier.Size = new System.Drawing.Size (175' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplier.Size = new System.Drawing.Size (175' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplier.TabIndex = 72;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceFalseEntries.Location = new System.Drawing.Point (6' 290);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceFalseEntries.Location = new System.Drawing.Point (6' 290);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceFalseEntries.Size = new System.Drawing.Size (133' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceFalseEntries.Size = new System.Drawing.Size (133' 17);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_AnnounceFalseEntries.TabIndex = 74;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.Location = new System.Drawing.Point (144' 198);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.Location = new System.Drawing.Point (144' 198);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.Minimum = new decimal (new int[] {  	2'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.Size = new System.Drawing.Size (38' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.Size = new System.Drawing.Size (38' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.TabIndex = 73;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_SubscribersWinMultiplierAmount.Value = new decimal (new int[] {  	2'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.Location = new System.Drawing.Point (304' 244);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.Location = new System.Drawing.Point (304' 244);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.Maximum = new decimal (new int[] {  	60'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.Minimum = new decimal (new int[] {  	1'  	0'  	0'  	-2147483648  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.Size = new System.Drawing.Size (32' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.Size = new System.Drawing.Size (32' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchMinutes.TabIndex = 64;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchHours.Location = new System.Drawing.Point (200' 244);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchHours.Location = new System.Drawing.Point (200' 244);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchHours.Maximum = new decimal (new int[] {  	24000'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchHours.Size = new System.Drawing.Size (49' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchHours.Size = new System.Drawing.Size (49' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MustWatchHours.TabIndex = 63;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.Location = new System.Drawing.Point (208' 99);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.Location = new System.Drawing.Point (208' 99);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.Maximum = new decimal (new int[] {  	10000000'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.Size = new System.Drawing.Size (56' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.Size = new System.Drawing.Size (56' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.TabIndex = 59;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MaxTickets.Value = new decimal (new int[] {  	10'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.Location = new System.Drawing.Point (115' 99);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.Location = new System.Drawing.Point (115' 99);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.Maximum = new decimal (new int[] {  	1000000'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.Size = new System.Drawing.Size (62' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.Size = new System.Drawing.Size (62' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.TabIndex = 58;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_TicketCost.Value = new decimal (new int[] {  	5'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Location = new System.Drawing.Point (125' 53);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Location = new System.Drawing.Point (125' 53);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Maximum = new decimal (new int[] {  	30'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Minimum = new decimal (new int[] {  	5'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Size = new System.Drawing.Size (38' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Size = new System.Drawing.Size (38' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.TabIndex = 28;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_ActiveUserTime.Value = new decimal (new int[] {  	5'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrencyBox.Location = new System.Drawing.Point (115' 221);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrencyBox.Location = new System.Drawing.Point (115' 221);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrencyBox.Maximum = new decimal (new int[] {  	1000000'  	0'  	0'  	0  });  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrencyBox.Size = new System.Drawing.Size (62' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrencyBox.Size = new System.Drawing.Size (62' 20);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.Giveaway_MinCurrencyBox.TabIndex = 21;  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (1024' 562);  
Magic Number,CoMaNdO.Giveaways,GiveawaysWindow,F:\newReposMay17\DorCoMaNdO_ModBot\CoMaNdO.Giveaways\GiveawaysWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (1024' 562);  
