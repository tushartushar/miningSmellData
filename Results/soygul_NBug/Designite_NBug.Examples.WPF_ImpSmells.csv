Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,CrashButton_Click,The length of the statement  "					throw new ArgumentException("Selected exception: '" + this.crashTypeComboBox.Text + "' was thrown."' "MyInvalidParameter"); " is 123.
Magic Number,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,AccessViolation,The following statement contains a magic number: var b = *(byte*)8762765876;
Magic Number,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,CrashButton_Click,The following statement contains a magic number: switch (this.crashTypeComboBox.Text)  			{  				case "UI Thread: System.Exception":  					throw new Exception("Selected exception: '" + this.crashTypeComboBox.Text + "' was thrown.");  				case "UI Thread: System.ArgumentException":  					throw new ArgumentException("Selected exception: '" + this.crashTypeComboBox.Text + "' was thrown."' "MyInvalidParameter");  				case "Background Thread (Task): System.Exception":  					Task.Factory.StartNew(() => { throw new Exception(); });    					// Below code makes sure that exception is thrown as only after finalization' the aggregateexception is thrown.  					// As a side affect' unlike the normal behavior' the applicaiton will note continue its execution but will shut  					// down just like any main thread exceptions' even if there is no handle to UnobservedTaskException!  					// So remove below 3 lines to observe the normal continuation behavior.  					Thread.Sleep(200);  					GC.Collect();  					GC.WaitForPendingFinalizers();  					break;  				case "Process Corrupted State Exception: Access Violation":  					Settings.HandleProcessCorruptedStateExceptions = true;  					this.AccessViolation();  					break;  			}
Magic Number,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.crashButton = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\..\MainWindow.xaml"              this.crashButton.Click += new System.Windows.RoutedEventHandler(this.CrashButton_Click);                            #line default              #line hidden              return;              case 2:              this.crashTypeComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\MainWindow.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              }
Magic Number,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.crashButton = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\..\MainWindow.xaml"              this.crashButton.Click += new System.Windows.RoutedEventHandler(this.CrashButton_Click);                            #line default              #line hidden              return;              case 2:              this.crashTypeComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\MainWindow.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              }
Missing Default,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,CrashButton_Click,The following switch statement is missing a default case: switch (this.crashTypeComboBox.Text)  			{  				case "UI Thread: System.Exception":  					throw new Exception("Selected exception: '" + this.crashTypeComboBox.Text + "' was thrown.");  				case "UI Thread: System.ArgumentException":  					throw new ArgumentException("Selected exception: '" + this.crashTypeComboBox.Text + "' was thrown."' "MyInvalidParameter");  				case "Background Thread (Task): System.Exception":  					Task.Factory.StartNew(() => { throw new Exception(); });    					// Below code makes sure that exception is thrown as only after finalization' the aggregateexception is thrown.  					// As a side affect' unlike the normal behavior' the applicaiton will note continue its execution but will shut  					// down just like any main thread exceptions' even if there is no handle to UnobservedTaskException!  					// So remove below 3 lines to observe the normal continuation behavior.  					Thread.Sleep(200);  					GC.Collect();  					GC.WaitForPendingFinalizers();  					break;  				case "Process Corrupted State Exception: Access Violation":  					Settings.HandleProcessCorruptedStateExceptions = true;  					this.AccessViolation();  					break;  			}
Missing Default,NBug.Examples.WPF,MainWindow,C:\repos\soygul_NBug\Examples\NBug.Examples.WPF\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.crashButton = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\..\MainWindow.xaml"              this.crashButton.Click += new System.Windows.RoutedEventHandler(this.CrashButton_Click);                            #line default              #line hidden              return;              case 2:              this.crashTypeComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\MainWindow.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              }
