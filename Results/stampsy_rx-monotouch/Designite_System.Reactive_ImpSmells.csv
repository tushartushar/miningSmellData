Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Reactive.Concurrency,Scheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.cs,SchedulePeriodic_,The method has 136 lines of code.
Long Method,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,SequenceEqual,The method has 123 lines of code.
Long Method,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil_,The method has 120 lines of code.
Long Method,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupJoin_,The method has 157 lines of code.
Long Method,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Join_,The method has 158 lines of code.
Complex Method,System.Reactive.Concurrency,EventLoopScheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.PlatformServices\Reactive\Concurrency\EventLoopScheduler.cs,Run,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Disposables,CompositeDisposable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Disposables\CompositeDisposable.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.PlatformServices,CurrentPlatformEnlightenmentProvider,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.PlatformServices\Reactive\Internal\PlatformEnlightenmentProvider.cs,GetService,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,DrainQueue,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq.Observαble,CombineLatestSink<TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\CombineLatest.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq.Observαble,λ,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Delay.cs,DrainQueue,Cyclomatic complexity of the method is 11
Long Parameter List,System.Reactive.Concurrency,ScheduledItem<TAbsolute;TValue>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\ScheduledItem.cs,ScheduledItem,The method has 5 parameters. Parameters: scheduler' state' action' dueTime' comparer
Long Parameter List,System.Reactive.Concurrency,SchedulePeriodicStopwatch<TState>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.Services.Emulation.cs,SchedulePeriodicStopwatch,The method has 5 parameters. Parameters: scheduler' state' period' action' stopwatchProvider
Long Parameter List,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,The method has 7 parameters. Parameters: targetType' target' eventName' addMethod' removeMethod' delegateType' isWinRT
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Replay,The method has 5 parameters. Parameters: source' selector' bufferSize' window' scheduler
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,GroupJoin,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Join,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,IQueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\IQueryLanguage.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Replay,The method has 5 parameters. Parameters: source' selector' bufferSize' window' scheduler
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,GroupJoin,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Join,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Replay,The method has 5 parameters. Parameters: source' selector' bufferSize' window' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The method has 5 parameters. Parameters: targetType' target' eventName' getResult' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil_,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupJoin,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupJoin_,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Join,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Join_,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate_,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate_,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Joins,ActivePlan<T1;T2;T3>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Joins\ActivePlan.cs,ActivePlan,The method has 5 parameters. Parameters: first' second' third' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActivePlan<T1;T2;T3;T4>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Joins\ActivePlan.cs,ActivePlan,The method has 6 parameters. Parameters: first' second' third' fourth' onNext' onCompleted
Long Parameter List,System.Reactive.Linq.Observαble,DecisionObserver,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Amb.cs,DecisionObserver,The method has 6 parameters. Parameters: parent' gate' me' subscription' otherSubscription' observer
Long Parameter List,System.Reactive.Linq.Observαble,CombineLatest<T1;T2;T3;T4;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\CombineLatest.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Parameter List,System.Reactive.Linq.Observαble,ρ<TSender;TEventArgs;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\FromEventPattern.cs,ρ,The method has 7 parameters. Parameters: target' delegateType' addMethod' removeMethod' getResult' isWinRT' scheduler
Long Parameter List,System.Reactive.Linq.Observαble,Generate<TState;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Generate.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq.Observαble,Generate<TState;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Generate.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq.Observαble,Generate<TState;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Generate.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq.Observαble,GroupByUntil<TSource;TKey;TElement;TDuration>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\GroupByUntil.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq.Observαble,GroupJoin<TLeft;TRight;TLeftDuration;TRightDuration;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\GroupJoin.cs,GroupJoin,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq.Observαble,Join<TLeft;TRight;TLeftDuration;TRightDuration;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Join.cs,Join,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq.Observαble,Zip<T1;T2;T3;T4;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Zip.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' resultSelector
Long Statement,System.Reactive.Concurrency,ConcurrencyAbstractionLayer,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\ConcurrencyAbstractionLayer.cs,Initialize,The length of the statement  "            return PlatformEnlightenmentProvider.Current.GetService<IConcurrencyAbstractionLayer>() ?? new DefaultConcurrencyAbstractionLayer(); " is 132.
Long Statement,System.Reactive.Concurrency,Scheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(new Pair<TState' Action<TState' Action<TState>>> { First = state' Second = action }' InvokeRec1); " is 123.
Long Statement,System.Reactive.Concurrency,Scheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(new Pair<TState' Action<TState' Action<TState' TimeSpan>>> { First = state' Second = action }' dueTime' InvokeRec2); " is 142.
Long Statement,System.Reactive.Concurrency,Scheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(new Pair<TState' Action<TState' Action<TState' DateTimeOffset>>> { First = state' Second = action }' dueTime' InvokeRec3); " is 148.
Long Statement,System.Reactive.Concurrency,Synchronization,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Synchronization.cs,ObserveOn,The length of the statement  "            return new AnonymousObservable<TSource>(observer => source.Subscribe(new ObserveOnObserver<TSource>(scheduler' observer' null))); " is 129.
Long Statement,System.Reactive.Concurrency,VirtualTimeSchedulerBase<TAbsolute;TRelative>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Concurrency\VirtualTimeScheduler.cs,AdvanceTo,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Strings_Linq.CANT_ADVANCE_WHILE_RUNNING' "AdvanceTo")); " is 133.
Long Statement,System.Reactive.Concurrency,VirtualTimeSchedulerBase<TAbsolute;TRelative>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Concurrency\VirtualTimeScheduler.cs,AdvanceBy,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Strings_Linq.CANT_ADVANCE_WHILE_RUNNING' "AdvanceBy")); " is 133.
Long Statement,System.Reactive.Concurrency,TaskPoolScheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.PlatformServices\Reactive\Concurrency\TaskPoolScheduler.cs,Schedule,The length of the statement  "            }' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously | TaskContinuationOptions.OnlyOnRanToCompletion' taskFactory.Scheduler); " is 144.
Long Statement,System.Reactive.Concurrency,TaskPoolScheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.PlatformServices\Reactive\Concurrency\TaskPoolScheduler.cs,SchedulePeriodic,The length of the statement  "                    CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously | TaskContinuationOptions.OnlyOnRanToCompletion' taskFactory.Scheduler " is 139.
Long Statement,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,The length of the statement  "                    throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Strings_Linq.COULD_NOT_FIND_STATIC_EVENT' eventName' targetType.FullName)); " is 153.
Long Statement,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,The length of the statement  "                    throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Strings_Linq.COULD_NOT_FIND_INSTANCE_EVENT' eventName' targetType.FullName)); " is 155.
Long Statement,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Strings_Linq.EVENT_SENDER_NOT_ASSIGNABLE' typeof(TSender).FullName)); " is 147.
Long Statement,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Strings_Linq.EVENT_ARGS_NOT_ASSIGNABLE' typeof(TEventArgs).FullName)); " is 148.
Long Statement,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventEx,The length of the statement  "            return type.GetEvent(name' isStatic ? BindingFlags.Public | BindingFlags.Static : BindingFlags.Public | BindingFlags.Instance); " is 127.
Long Statement,System.Reactive,EventPattern<TSender;TEventArgs>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\EventPattern.cs,Equals,The length of the statement  "            return EqualityComparer<TSender>.Default.Equals(Sender' other.Sender) && EqualityComparer<TEventArgs>.Default.Equals(EventArgs' other.EventArgs); " is 145.
Long Statement,System.Reactive.PlatformServices,SystemClock,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\SystemClock.cs,InitializeSystemClockChanged,The length of the statement  "            return PlatformEnlightenmentProvider.Current.GetService<INotifySystemClockChanged>() ?? new DefaultSystemClockMonitor(); " is 120.
Long Statement,System,ObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Observable.Extensions.cs,Subscribe,The length of the statement  "            // [OK] Use of unsafe Subscribe: non-pretentious constructor for an observer; this overload is not to be used internally. " is 121.
Long Statement,System,ObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Observable.Extensions.cs,Subscribe,The length of the statement  "            // [OK] Use of unsafe Subscribe: non-pretentious constructor for an observer; this overload is not to be used internally. " is 121.
Long Statement,System,ObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Observable.Extensions.cs,Subscribe,The length of the statement  "            // [OK] Use of unsafe Subscribe: non-pretentious constructor for an observer; this overload is not to be used internally. " is 121.
Long Statement,System,ObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Observable.Extensions.cs,Subscribe,The length of the statement  "            // [OK] Use of unsafe Subscribe: non-pretentious constructor for an observer; this overload is not to be used internally. " is 121.
Long Statement,System,ObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Observable.Extensions.cs,Subscribe,The length of the statement  "            // [OK] Use of unsafe Subscribe: non-pretentious constructor for an observer; this overload is not to be used internally. " is 121.
Long Statement,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,CombineLatest,The length of the statement  "            return s_impl.CombineLatest<TSource1' TSource2' TSource3' TSource4' TResult>(source1' source2' source3' source4' resultSelector); " is 129.
Long Statement,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,GroupByUntil,The length of the statement  "            return s_impl.GroupByUntil<TSource' TKey' TElement' TDuration>(source' keySelector' elementSelector' durationSelector' comparer); " is 129.
Long Statement,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,GroupJoin,The length of the statement  "            return s_impl.GroupJoin<TLeft' TRight' TLeftDuration' TRightDuration' TResult>(left' right' leftDurationSelector' rightDurationSelector' resultSelector); " is 153.
Long Statement,System.Reactive.Linq,Observable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observable.Aggregates.cs,Join,The length of the statement  "            return s_impl.Join<TLeft' TRight' TLeftDuration' TRightDuration' TResult>(left' right' leftDurationSelector' rightDurationSelector' resultSelector); " is 148.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Average,The length of the statement  "            return source.Scan(new { sum = 0F' count = 0L }' // NOTE: Uses a different accumulator type (float)' *not* conform LINQ to Objects. " is 131.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Average,The length of the statement  "            return source.Aggregate(new { sum = new float?(0f)' count = 0L }' // NOTE: Uses a different accumulator type (float)' *not* conform LINQ to Objects. " is 148.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Average,The length of the statement  "                               (prev' cur) => cur != null ? new { sum = checked(prev.sum + cur.GetValueOrDefault())' count = checked(prev.count + 1) } : prev) " is 127.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Average,The length of the statement  "                               (prev' cur) => cur != null ? new { sum = checked(prev.sum + cur.GetValueOrDefault())' count = checked(prev.count + 1) } : prev) " is 127.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Chunkify,The length of the statement  "            return source.Collect<TSource' IList<TSource>>(() => new List<TSource>()' (lst' x) => { lst.Add(x); return lst; }' _ => new List<TSource>()); " is 141.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Create,The length of the statement  "                var taskCompletionObserver = new AnonymousObserver<IDisposable>(d => subscription.Disposable = d ?? Disposable.Empty' observer.OnError' Stubs.Nop); " is 147.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Create,The length of the statement  "                var taskCompletionObserver = new AnonymousObserver<Action>(a => subscription.Disposable = a != null ? Disposable.Create(a) : Disposable.Empty' observer.OnError' Stubs.Nop); " is 172.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "                Action<object' TEventArgs> handler = (sender' eventArgs) => observer.OnNext(new EventPattern<TEventArgs>(sender' eventArgs)); " is 125.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern,The length of the statement  "            return FromEventPattern_<TDelegate' TEventArgs>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 120.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "                Action<TSender' TEventArgs> handler = (sender' eventArgs) => observer.OnNext(new EventPattern<TSender' TEventArgs>(sender' eventArgs)); " is 135.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return new FromEventPattern.τ<EventHandler<TEventArgs>' TEventArgs>(handler => handler' addHandler' removeHandler' scheduler); " is 126.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            var res = Observable.FromEventPattern<EventHandler<TEventArgs>' TEventArgs>(handler => handler' addHandler' removeHandler); " is 123.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return FromEventPattern_<object' EventArgs' EventPattern<EventArgs>>(target.GetType()' target' eventName' (sender' args) => new EventPattern<EventArgs>(sender' args)' scheduler); " is 178.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return FromEventPattern_<object' TEventArgs' EventPattern<TEventArgs>>(target.GetType()' target' eventName' (sender' args) => new EventPattern<TEventArgs>(sender' args)' scheduler); " is 181.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return FromEventPattern_<TSender' TEventArgs' EventPattern<TSender' TEventArgs>>(target.GetType()' target' eventName' (sender' args) => new EventPattern<TSender' TEventArgs>(sender' args)' scheduler); " is 200.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return FromEventPattern_<object' EventArgs' EventPattern<EventArgs>>(type' null' eventName' (sender' args) => new EventPattern<EventArgs>(sender' args)' scheduler); " is 164.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return FromEventPattern_<object' TEventArgs' EventPattern<TEventArgs>>(type' null' eventName' (sender' args) => new EventPattern<TEventArgs>(sender' args)' scheduler); " is 167.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return FromEventPattern_<TSender' TEventArgs' EventPattern<TSender' TEventArgs>>(type' null' eventName' (sender' args) => new EventPattern<TSender' TEventArgs>(sender' args)' scheduler); " is 186.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            ReflectionUtils.GetEventMethods<TSender' TEventArgs>(targetType' target' eventName' out addMethod' out removeMethod' out delegateType' out isWinRT); " is 148.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "                return new FromEventPattern.ρ<TSender' TEventArgs' TResult>(target' delegateType' addMethod' removeMethod' getResult' true' scheduler); " is 135.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,FromEventPattern_,The length of the statement  "            return new FromEventPattern.ρ<TSender' TEventArgs' TResult>(target' delegateType' addMethod' removeMethod' getResult' false' scheduler); " is 136.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,CombineLatest,The length of the statement  "            return new CombineLatest<TSource1' TSource2' TSource3' TSource4' TResult>(source1' source2' source3' source4' resultSelector); " is 126.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Merge_,The length of the statement  "                                if (isStopped && group.Count == 1) // isStopped must be checked before group Count to ensure outer is not creating more groups " is 126.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,SkipUntil,The length of the statement  "                    observer.OnError' // BREAKING CHANGE - Error propagation was guarded by "other" source in v1.0.10621 (due to materialization). " is 126.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Zip,The length of the statement  "                return new CompositeDisposable(leftSubscription' rightSubscription' Disposable.Create(() => { queueLeft.Clear(); queueRight.Clear(); })); " is 137.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,IgnoreElements,The length of the statement  "            return new AnonymousObservable<TSource>(observer => source.Subscribe(_ => { }' observer.OnError' observer.OnCompleted)); " is 120.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupBy_,The length of the statement  "            return GroupByUntil_<TSource' TKey' TElement' Unit>(source' keySelector' elementSelector' _ => Observable.Never<Unit>()' comparer); " is 131.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil,The length of the statement  "            return GroupByUntil_<TSource' TKey' TElement' TDuration>(source' keySelector' elementSelector' durationSelector' comparer); " is 123.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil,The length of the statement  "            return GroupByUntil_<TSource' TKey' TElement' TDuration>(source' keySelector' elementSelector' durationSelector' EqualityComparer<TKey>.Default); " is 145.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil,The length of the statement  "            return GroupByUntil_<TSource' TKey' TSource' TDuration>(source' keySelector' x => x' durationSelector' EqualityComparer<TKey>.Default); " is 135.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupByUntil_,The length of the statement  "            return new GroupByUntil<TSource' TKey' TElement' TDuration>(source' keySelector' elementSelector' durationSelector' comparer); " is 126.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupJoin,The length of the statement  "            return GroupJoin_<TLeft' TRight' TLeftDuration' TRightDuration' TResult>(left' right' leftDurationSelector' rightDurationSelector' resultSelector); " is 147.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,GroupJoin_,The length of the statement  "            return new GroupJoin<TLeft' TRight' TLeftDuration' TRightDuration' TResult>(left' right' leftDurationSelector' rightDurationSelector' resultSelector); " is 150.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Join,The length of the statement  "            return Join_<TLeft' TRight' TLeftDuration' TRightDuration' TResult>(left' right' leftDurationSelector' rightDurationSelector' resultSelector); " is 142.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Join_,The length of the statement  "            return new Join<TLeft' TRight' TLeftDuration' TRightDuration' TResult>(left' right' leftDurationSelector' rightDurationSelector' resultSelector); " is 145.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The length of the statement  "            return Generate_<TState' TResult>(initialState' condition' iterate' resultSelector' timeSelector' SchedulerDefaults.TimeBasedOperations); " is 137.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Generate,The length of the statement  "            return Generate_<TState' TResult>(initialState' condition' iterate' resultSelector' timeSelector' SchedulerDefaults.TimeBasedOperations); " is 137.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Sample_,The length of the statement  "            return Combine(source' sampler' (IObserver<TSource> observer' IDisposable leftSubscription' IDisposable rightSubscription) => " is 125.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Timeout,The length of the statement  "            return Timeout_<TSource>(source' dueTime' Observable.Throw<TSource>(new TimeoutException())' SchedulerDefaults.TimeBasedOperations); " is 132.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Timeout,The length of the statement  "            return Timeout_<TSource>(source' dueTime' Observable.Throw<TSource>(new TimeoutException())' SchedulerDefaults.TimeBasedOperations); " is 132.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Timeout,The length of the statement  "            return Timeout_<TSource' TTimeout>(source' Observable.Never<TTimeout>()' timeoutDurationSelector' Observable.Throw<TSource>(new TimeoutException())); " is 149.
Long Statement,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Timeout,The length of the statement  "            return Timeout_<TSource' TTimeout>(source' firstTimeout' timeoutDurationSelector' Observable.Throw<TSource>(new TimeoutException())); " is 133.
Long Statement,System.Reactive.Joins,Plan<T1;T2;T3;T4;TResult>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Joins\Plan.cs,Activate,The length of the statement  "            activePlan = new ActivePlan<T1' T2' T3' T4>(firstJoinObserver' secondJoinObserver' thirdJoinObserver' fourthJoinObserver' " is 121.
Long Statement,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,GetResult,The length of the statement  "                return _parent._resultSelector(_observer1.Values.Dequeue()' _observer2.Values.Dequeue()' _observer3.Values.Dequeue()' _observer4.Values.Dequeue()); " is 147.
Long Statement,System.Reactive.Linq.Observαble,λ,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Delay.cs,OnNext,The length of the statement  "                    // BREAKING CHANGE v2 > v1.x - Order of evaluation or the _leftDurationSelector and _resultSelector now consistent with Join. " is 125.
Long Statement,System.Reactive.Linq.Observαble,τ<TDelegate;TSender;TEventArgs>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\FromEventPattern.cs,GetHandler,The length of the statement  "                Action<TSender' TEventArgs> h = (sender' eventArgs) => onNext(new EventPattern<TSender' TEventArgs>(sender' eventArgs)); " is 120.
Long Statement,System.Reactive.Linq.Observαble,Max<TSource>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Max.cs,Run,The length of the statement  "            // LINQ to Objects makes this distinction in order to make [Max|Max] of an empty collection of reference type objects equal to null. " is 132.
Long Statement,System.Reactive.Linq.Observαble,Min<TSource>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Min.cs,Run,The length of the statement  "            // LINQ to Objects makes this distinction in order to make [Min|Max] of an empty collection of reference type objects equal to null. " is 132.
Long Statement,System.Reactive.Linq.Observαble,T,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\SkipUntil.cs,OnCompleted,The length of the statement  "                    _subscription.Dispose(); // We can't cancel the other stream yet' it may be on its way to dispatch an OnError message and we don't want to have a race. " is 151.
Complex Conditional,System.Reactive.Joins,ActivePlan<T1;T2;T3;T4>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Joins\ActivePlan.cs,Match,The conditional expression  "first.Queue.Count > 0               && second.Queue.Count > 0               && third.Queue.Count > 0               && fourth.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActivePlan<T1;T2;T3;T4>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Joins\ActivePlan.cs,Match,The conditional expression  "n1.Kind == NotificationKind.OnCompleted                      || n2.Kind == NotificationKind.OnCompleted                      || n3.Kind == NotificationKind.OnCompleted                      || n4.Kind == NotificationKind.OnCompleted"  is complex.
Magic Number,System.Reactive.Concurrency,CurrentThreadScheduler,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\CurrentThreadScheduler.cs,Schedule,The following statement contains a magic number: queue = new SchedulerQueue<SafeTimeSpan>(4);
Magic Number,System.Reactive.Concurrency,SchedulePeriodicStopwatch<TState>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.Services.Emulation.cs,Start,The following statement contains a magic number: return new CompositeDisposable(2)                  {                      _scheduler.Schedule(_nextDue' Tick)'                      Disposable.Create(Cancel)                  };
Magic Number,System.Reactive.Disposables,CompositeDisposable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Disposables\CompositeDisposable.cs,Remove,The following statement contains a magic number: _disposables = new List<IDisposable>(_disposables.Capacity / 2);
Magic Number,System.Reactive.Disposables,CompositeDisposable,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Disposables\CompositeDisposable.cs,Remove,The following statement contains a magic number: _disposables.Capacity > SHRINK_THRESHOLD && _count < _disposables.Capacity / 2
Magic Number,System.Reactive,Observer<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\Observers.cs,Remove,The following statement contains a magic number: _observers.Data.Length == 2
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,Percolate,The following statement contains a magic number: var parent = (index - 1) / 2;
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,Heapify,The following statement contains a magic number: var left = 2 * index + 1;
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,Heapify,The following statement contains a magic number: var right = 2 * index + 2;
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,Heapify,The following statement contains a magic number: var right = 2 * index + 2;
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,RemoveAt,The following statement contains a magic number: _items = new IndexedItem[_items.Length / 2];
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,RemoveAt,The following statement contains a magic number: _size < _items.Length / 4
Magic Number,System.Reactive,PriorityQueue<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\PriorityQueue.cs,Enqueue,The following statement contains a magic number: _items = new IndexedItem[_items.Length * 2];
Magic Number,System.Reactive,Producer<TSource>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\Producer.cs,SubscribeRaw,The following statement contains a magic number: var d = new CompositeDisposable(2) { state.sink' state.subscription };
Magic Number,System.Reactive,ScheduledObserver<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\ScheduledObserver.cs,EnsureDispatcher,The following statement contains a magic number: _disposable.Disposable = new CompositeDisposable(2)                          {                              _dispatcherJob'                              Disposable.Create(() => _dispatcherEvent.Release())                          };
Magic Number,System.Reactive,OnCompletedNotification,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Notification.cs,GetHashCode,The following statement contains a magic number: return typeof(T).GetHashCode() ^ 8510;
Magic Number,System.Reactive,ReflectionUtils,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Internal\ReflectionUtils.cs,GetEventMethods,The following statement contains a magic number: parameters.Length != 2
Magic Number,System.Reactive,EventPattern<TSender;TEventArgs>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\EventPattern.cs,GetHashCode,The following statement contains a magic number: return (x << 5) + (x ^ y);
Magic Number,System.Reactive,TimeInterval,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\TimeInterval.cs,GetHashCode,The following statement contains a magic number: var valueHashCode = Value == null ? 1963 : Value.GetHashCode();
Magic Number,System.Reactive,Timestamped,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Timestamped.cs,GetHashCode,The following statement contains a magic number: var valueHashCode = Value == null ? 1979 : Value.GetHashCode();
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: var groupDisposable = new CompositeDisposable(2) { _m };
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: var subscriptions = new SingleAssignmentDisposable[3];
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: i < 3
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new CombineLatestObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new CombineLatestObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: subscriptions[2].Disposable = _parent._source3.SubscribeSafe(_observer3);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: var subscriptions = new SingleAssignmentDisposable[4];
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: i < 4
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new CombineLatestObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new CombineLatestObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer4 = new CombineLatestObserver<T4>(_gate' this' 3' subscriptions[3]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer4 = new CombineLatestObserver<T4>(_gate' this' 3' subscriptions[3]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: subscriptions[2].Disposable = _parent._source3.SubscribeSafe(_observer3);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: subscriptions[3].Disposable = _parent._source4.SubscribeSafe(_observer4);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: var groupDisposable = new CompositeDisposable(2) { _m };
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: var subscriptions = new SingleAssignmentDisposable[3];
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: i < 3
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new ZipObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new ZipObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: base.Queues[2] = _observer3.Values;
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: subscriptions[2].Disposable = _parent._source3.SubscribeSafe(_observer3);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: var subscriptions = new SingleAssignmentDisposable[4];
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: i < 4
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new ZipObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer3 = new ZipObserver<T3>(_gate' this' 2' subscriptions[2]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer4 = new ZipObserver<T4>(_gate' this' 3' subscriptions[3]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: _observer4 = new ZipObserver<T4>(_gate' this' 3' subscriptions[3]);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: base.Queues[2] = _observer3.Values;
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: base.Queues[3] = _observer4.Values;
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: subscriptions[2].Disposable = _parent._source3.SubscribeSafe(_observer3);
Magic Number,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,Run,The following statement contains a magic number: subscriptions[3].Disposable = _parent._source4.SubscribeSafe(_observer4);
Magic Number,System.Reactive.Linq.Observαble,π,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Any.cs,InvokeStart,The following statement contains a magic number: return new CompositeDisposable(2) { d' c };
Magic Number,System.Reactive.Linq.Observαble,π,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Any.cs,Run,The following statement contains a magic number: var groupDisposable = new CompositeDisposable(2);
Magic Number,System.Reactive.Linq.Observαble,π,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Any.cs,InvokeStart,The following statement contains a magic number: return new CompositeDisposable(2) { d' c };
Magic Number,System.Reactive.Linq.Observαble,τ,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Buffer.cs,Run,The following statement contains a magic number: var groupDisposable = new CompositeDisposable(2) { _timerD };
Magic Number,System.Reactive.Linq.Observαble,μ,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Buffer.cs,Run,The following statement contains a magic number: var groupDisposable = new CompositeDisposable(2) { _timerD };
Magic Number,System.Reactive.Linq.Observαble,β,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Buffer.cs,Run,The following statement contains a magic number: var d = new CompositeDisposable(2);
Magic Number,System.Reactive.Linq.Observαble,β,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\Buffer.cs,Run,The following statement contains a magic number: var d = new CompositeDisposable(2);
Duplicate Code,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Window,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 40)' (49' 68))
Duplicate Code,System.Reactive.Linq,QueryLanguage,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\QueryLanguage.Aggregates.cs,Join_,The method contains a code clone-set at the following line numbers (starting from the method definition): ((68' 87)' (146' 165))
Missing Default,System.Reactive.Concurrency,SchedulePeriodicRecursive<TState>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Concurrency\Scheduler.Services.Emulation.cs,Tick,The following switch statement is missing a default case: switch (command)                  {                      case TICK:                          //                          // Ticks keep going at the specified periodic rate. We do a head call such                          // that no slippage is introduced because of DISPATCH_START work involving                          // user code that may take arbitrarily long.                          //                          recurse(TICK' _period);                            //                          // If we're not transitioning from 0 to 1 pending tick' another processing                          // request is in flight which will see a non-zero pending tick count after                          // doing the final decrement' causing it to reschedule immediately. We can                          // safely bail out' delegating work to the catch-up tail calls.                          //                          if (Interlocked.Increment(ref _pendingTickCount) == 1)                              goto case DISPATCH_START;                            break;                        case DISPATCH_START:                          try                          {                              _state = _action(_state);                          }                          catch (Exception e)                          {                              _cancel.Dispose();                              e.Throw();                          }                            //                          // This is very subtle. We can't do a goto case DISPATCH_END here because it                          // wouldn't introduce interleaving of periodic ticks that are due. In order                          // to have best effort behavior for schedulers that don't have concurrency'                          // we yield by doing a recursive call here. Notice this doesn't heal all of                          // the problem' because the TICK commands that may be dispatched before the                          // scheduled DISPATCH_END will do a "recurse(TICK' period)"' which is relative                          // from the point of entrance. Really all we're doing here is damage control                          // for the case there's no stopwatch provider which should be rare (notice                          // the LocalScheduler base class always imposes a stopwatch' but it can get                          // disabled using DisableOptimizations; legacy implementations of schedulers                          // from the v1.x days will not have a stopwatch).                          //                          recurse(DISPATCH_END' TimeSpan.Zero);                            break;                        case DISPATCH_END:                          //                          // If work was due while we were still running user code' the count will have                          // been incremented by the periodic tick handler above. In that case' we will                          // reschedule ourselves for dispatching work immediately.                          //                          // Notice we don't run a loop here' in order to allow interleaving of work on                          // the scheduler by making recursive calls. In case we would use AsyncLock to                          // ensure serialized execution the owner could get stuck in such a loop' thus                          // we make tail calls to play nice with the scheduler.                          //                          if (Interlocked.Decrement(ref _pendingTickCount) > 0)                              recurse(DISPATCH_START' TimeSpan.Zero);                            break;                  }
Missing Default,System.Reactive,CheckedObserver<T>,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Core\Reactive\Internal\CheckedObserver.cs,CheckAccess,The following switch statement is missing a default case: switch (Interlocked.CompareExchange(ref _state' BUSY' IDLE))              {                  case BUSY:                      throw new InvalidOperationException(Strings_Core.REENTRANCY_DETECTED);                  case DONE:                      throw new InvalidOperationException(Strings_Core.OBSERVER_TERMINATED);              }
Missing Default,System.Reactive.PlatformServices,CurrentPlatformEnlightenmentProvider,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.PlatformServices\Reactive\Internal\PlatformEnlightenmentProvider.cs,GetService,The following switch statement is missing a default case: switch ((string)args[0])                  {  #if !WINDOWS && !NO_THREAD                      case "ThreadPool":                          return (T)(object)ThreadPoolScheduler.Instance;  #elif WINDOWS                      case "ThreadPool":                          return (T)(object)ThreadPoolScheduler.Default;  #endif  #if !NO_TPL                      case "TaskPool":                          return (T)(object)TaskPoolScheduler.Default;  #endif                      case "NewThread":                          return (T)(object)NewThreadScheduler.Default;                  }
Missing Default,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,OnNext,The following switch statement is missing a default case: switch (value.Kind)                  {                      case NotificationKind.OnNext:                          base._observer.OnNext(value.Value);                          break;                      case NotificationKind.OnError:                          base._observer.OnError(value.Exception);                          base.Dispose();                          break;                      case NotificationKind.OnCompleted:                          base._observer.OnCompleted();                          base.Dispose();                          break;                  }
Missing Default,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,TryMoveNext,The following switch statement is missing a default case: switch (kind)                      {                          case NotificationKind.OnNext:                              value = _value;                              break;                          case NotificationKind.OnError:                              error = _error;                              break;                      }
Missing Default,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,TryMoveNext,The following switch statement is missing a default case: switch (kind)                  {                      case NotificationKind.OnNext:                          current = _value;                          return true;                      case NotificationKind.OnError:                          error.Throw();                          break;                      case NotificationKind.OnCompleted:                          break;                  }
Missing Default,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,TryMoveNext,The following switch statement is missing a default case: switch (_kind)                  {                      case NotificationKind.OnNext:                          current = _value;                          return true;                      case NotificationKind.OnError:                          _error.Throw();                          break;                      case NotificationKind.OnCompleted:                          break;                  }
Missing Default,System.Reactive.Linq.Observαble,_,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Linq\Observαble\AddRef.cs,TryMoveNext,The following switch statement is missing a default case: switch (_kind)                  {                      case NotificationKind.OnNext:                          current = _value;                          return true;                      case NotificationKind.OnError:                          _error.Throw();                          break;                      case NotificationKind.OnCompleted:                          break;                  }
Missing Default,System.Reactive.Threading.Tasks,TaskObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Threading\Tasks\TaskObservableExtensions.cs,ToObservable,The following switch statement is missing a default case: switch (t.Status)                          {                              case TaskStatus.RanToCompletion:                                  subject.OnNext(Unit.Default);                                  subject.OnCompleted();                                  break;                              case TaskStatus.Faulted:                                  subject.OnError(t.Exception.InnerException);                                  break;                              case TaskStatus.Canceled:                                  subject.OnError(new TaskCanceledException(t));                                  break;                          }
Missing Default,System.Reactive.Threading.Tasks,TaskObservableExtensions,D:\research\architectureSmells\repos1\stampsy_rx-monotouch\src\System.Reactive.Linq\Reactive\Threading\Tasks\TaskObservableExtensions.cs,ToObservable,The following switch statement is missing a default case: switch (t.Status)                          {                              case TaskStatus.RanToCompletion:                                  subject.OnNext(t.Result);                                  subject.OnCompleted();                                  break;                              case TaskStatus.Faulted:                                  subject.OnError(t.Exception.InnerException);                                  break;                              case TaskStatus.Canceled:                                  subject.OnError(new TaskCanceledException(t));                                  break;                          }
