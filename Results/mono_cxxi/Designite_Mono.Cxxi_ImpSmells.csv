Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Cxxi,CppType,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppType.cs,Parse,Cyclomatic complexity of the method is 18
Complex Method,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineMethod,Cyclomatic complexity of the method is 10
Complex Method,Mono.Cxxi.Abi,VTable,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\VTable.cs,BindToSignature,Cyclomatic complexity of the method is 8
Complex Method,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,GetMangledMethodName,Cyclomatic complexity of the method is 8
Complex Method,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,GetTypeCode,Cyclomatic complexity of the method is 12
Complex Method,Mono.Cxxi.Abi,MsvcAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\MsvcAbi.cs,GetMangledMethodName,Cyclomatic complexity of the method is 16
Long Parameter List,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,CppTypeInfo,The method has 5 parameters. Parameters: lib' typeName' interfaceType' nativeLayout' wrapperType
Long Parameter List,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,MakeTypeInfo,The method has 5 parameters. Parameters: lib' typeName' interfaceType' layoutType' wrapperType
Long Parameter List,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitConstruct,The method has 5 parameters. Parameters: typeInfo' nativeMethod' psig' cppInstancePtr' nativePtr
Long Parameter List,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitDestruct,The method has 5 parameters. Parameters: typeInfo' nativeMethod' psig' cppInstancePtr' nativePtr
Long Parameter List,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,MakeTypeInfo,The method has 5 parameters. Parameters: lib' typeName' interfaceType' layoutType' wrapperType
Long Parameter List,Mono.Cxxi.Abi,ItaniumTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumTypeInfo.cs,ItaniumTypeInfo,The method has 5 parameters. Parameters: lib' typeName' interfaceType' nativeLayout' wrapperType
Long Identifier,Mono.Cxxi,CppInstancePtr,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppInstancePtr.cs,,The length of the parameter managed_vtptr_to_gchandle_offset is 32.
Long Identifier,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,,The length of the parameter field_offset_padding_without_vtptr is 34.
Long Identifier,Mono.Cxxi.Abi,ItaniumTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumTypeInfo.cs,,The length of the parameter has_non_default_copy_ctor_or_dtor is 33.
Long Statement,Mono.Cxxi,CppType,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppType.cs,Subtract,The length of the statement  "			newType.internalModifiers = new List<CppModifiers> (((IEnumerable<CppModifiers>)newType.Modifiers).Reverse ().WithoutFirst (modifier));" is 135.
Long Statement,Mono.Cxxi,CppType,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppType.cs,Equals,The length of the statement  "			         CppModifiers.NormalizeOrder (internalModifiers).SequenceEqual (CppModifiers.NormalizeOrder (other.internalModifiers)))) &&" is 122.
Long Statement,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,AddBase,The length of the statement  "				baseType.vt_overrides = new LazyGeneratedList<Delegate> (baseType.virtual_methods.Count' i => Library.Abi.GetManagedOverrideTrampoline (baseType' i));" is 150.
Long Statement,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,InitNonPrimaryBase,The length of the statement  "			Marshal.WriteIntPtr (baseInDerived.Native.Native' baseTypeInfo.GCHandleOffset' CppInstancePtr.MakeGCHandle (baseInDerived));" is 124.
Long Statement,Mono.Cxxi,CppModifiers,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppModifiers.cs,NormalizeOrder,The length of the statement  "			        For.AllInputsIn (CppModifiers.Unsigned' CppModifiers.Long).InAnyOrder ().Emit (new CppModifiers [] { CppModifiers.Unsigned' CppModifiers.Long })'" is 145.
Long Statement,Mono.Cxxi,CppModifiers,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppModifiers.cs,NormalizeOrder,The length of the statement  "			        For.AllInputsIn (CppModifiers.Signed' CppModifiers.Long).InAnyOrder ().Emit (new CppModifiers [] { CppModifiers.Signed' CppModifiers.Long })'" is 141.
Long Statement,Mono.Cxxi,CppModifiers,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppModifiers.cs,NormalizeOrder,The length of the statement  "			        For.AllInputsIn (CppModifiers.Unsigned' CppModifiers.Short).InAnyOrder ().Emit (new CppModifiers [] { CppModifiers.Unsigned' CppModifiers.Short })'" is 147.
Long Statement,Mono.Cxxi,CppModifiers,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppModifiers.cs,NormalizeOrder,The length of the statement  "			        For.AllInputsIn (CppModifiers.Signed' CppModifiers.Short).InAnyOrder ().Emit (new CppModifiers [] { CppModifiers.Signed' CppModifiers.Short })'" is 143.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineImplType,The length of the statement  "			var typeinfo_field = impl_type.DefineField ("_typeInfo"' typeof (CppTypeInfo)' FieldAttributes.InitOnly | FieldAttributes.Private);" is 131.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineImplType,The length of the statement  "			var native_vtable_field = impl_type.DefineField ("_nativeVTable"' typeof (IntPtr)' FieldAttributes.InitOnly | FieldAttributes.Private);" is 135.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineProperty,The length of the statement  "			var fieldProp = typeInfo.emit_info.type_builder.DefineProperty (propName' PropertyAttributes.None' retType' Type.EmptyTypes);" is 125.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineProperty,The length of the statement  "			var methodAttr = MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.SpecialName | MethodAttributes.HideBySig;" is 128.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineProperty,The length of the statement  "				var fieldData = typeInfo.emit_info.type_builder.DefineField ("__" + propName + "_Data"' retType' FieldAttributes.InitOnly | FieldAttributes.Private);" is 149.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,GetManagedOverrideTrampoline,The length of the statement  "			// The dynamic method created with this constructor has access to public and internal members of all the types contained in module m." is 133.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,GetManagedOverrideTrampoline,The length of the statement  "			var trampolineIn = new DynamicMethod (typeInfo.WrapperType.Name + "_" + interfaceMethod.Name + "_FromNative"' sig.ReturnType'" is 125.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,FindManagedOverrideTarget,The length of the statement  "				throw new InvalidProgramException ("More than one possible override found when binding virtual method: " + interfaceMethod.Name);" is 129.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,GetMethodBuilder,The length of the statement  "			var methodBuilder = typeInfo.emit_info.type_builder.DefineMethod (interfaceMethod.Name' MethodAttributes.Public | MethodAttributes.Virtual'" is 139.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitConstruct,The length of the statement  "			} else if (psig.OrigMethod.DeclaringType.GetInterfaces ().Any (i => i.IsGenericType && i.GetGenericTypeDefinition () == typeof (ICppClassOverridable<>))) {" is 155.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitConstruct,The length of the statement  "				throw new InvalidProgramException ("In ICppClassOverridable' native constructors must take as first argument and return CppInstancePtr");" is 137.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,GetTypeInfo,The length of the statement  "				throw new InvalidProgramException (string.Format ("Type `{0}' implements ICppObject but does not contain a public constructor that takes CppTypeInfo"' otherWrapperType));" is 170.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitCreateCppObjectFromNative,The length of the statement  "				var ctor = targetType.GetConstructor (BindingFlags.ExactBinding | BindingFlags.Public | BindingFlags.Instance' null' new Type [] { typeof (CppInstancePtr) }' null);" is 164.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitCreateCppObjectFromNative,The length of the statement  "					throw new InvalidProgramException (string.Format ("Type `{0}' implements ICppObject but does not contain a public constructor that takes CppInstancePtr"' targetType));" is 167.
Long Statement,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,GetMangleType,The length of the statement  "			MangleAsAttribute maa = (MangleAsAttribute)icap.GetCustomAttributes (typeof (MangleAsAttribute)' false).FirstOrDefault ();" is 122.
Long Statement,Mono.Cxxi.Util,DelegateTypeCache,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\DelegateTypeCache.cs,GetDelegateType,The length of the statement  "			return GetDelegateType (new BasicSignature { ParameterTypes = parameterTypes.ToList ()' ReturnType = returnType' CallingConvention = callingConvention });" is 154.
Long Statement,Mono.Cxxi.Util,DelegateTypeCache,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\DelegateTypeCache.cs,CreateDelegateType,The length of the statement  "			TypeAttributes typeAttr = TypeAttributes.Class | TypeAttributes.Sealed | TypeAttributes.AnsiClass | TypeAttributes.AutoClass;" is 125.
Long Statement,Mono.Cxxi.Util,DelegateTypeCache,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\DelegateTypeCache.cs,CreateDelegateType,The length of the statement  "				ConstructorInfo ufpa = typeof (UnmanagedFunctionPointerAttribute).GetConstructor (new Type [] { typeof (CallingConvention) });" is 126.
Long Statement,Mono.Cxxi.Util,DelegateTypeCache,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\DelegateTypeCache.cs,CreateDelegateType,The length of the statement  "				CustomAttributeBuilder unmanagedPointer = new CustomAttributeBuilder (ufpa' new object [] { signature.CallingConvention.Value });" is 129.
Long Statement,Mono.Cxxi.Util,DelegateTypeCache,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\DelegateTypeCache.cs,CreateDelegateType,The length of the statement  "			ConstructorBuilder ctor = del.DefineConstructor (ctorAttr' CallingConventions.Standard' new Type[] { typeof(object)' typeof(System.IntPtr) });" is 142.
Long Statement,Mono.Cxxi.Util,DelegateTypeCache,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\DelegateTypeCache.cs,CreateDelegateType,The length of the statement  "			MethodAttributes methodAttr = MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual;" is 137.
Long Statement,Mono.Cxxi.Util,MethodSignature,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Util\MethodSignature.cs,ToString,The length of the statement  "			return string.Format ("[{0} {1} ({2})]"' ReturnType.Name' Name' string.Join ("' "' ParameterTypes.Select (t => t.Name).ToArray ()));" is 132.
Virtual Method Call from Constructor,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,CppTypeInfo,The constructor "CppTypeInfo" calls a virtual method "GetVirtualMethodSlots".
Virtual Method Call from Constructor,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,CppTypeInfo,The constructor "CppTypeInfo" calls a virtual method "GetManagedOverrideTrampoline".
Virtual Method Call from Constructor,Mono.Cxxi.Abi,VTable,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\VTable.cs,VTable,The constructor "VTable" calls a virtual method "WriteOverrides".
Magic Number,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitNativeCall,The following statement contains a magic number: argLoadStart = 2;
Magic Number,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitInitVTable,The following statement contains a magic number: EmitCallVTableMethod (typeInfo' vtable_initinstance' 2' false);
Magic Number,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,EmitResetVTable,The following statement contains a magic number: EmitCallVTableMethod (typeInfo' vtable_resetinstance' 2' false);
Magic Number,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,GetMangledMethodName,The following statement contains a magic number: StringBuilder nm = new StringBuilder ("_ZN"' 30);
Magic Number,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,GetMangledVTableName,The following statement contains a magic number: var nm = new StringBuilder ("_ZTV"' 30);
Magic Number,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,ToBase36String,The following statement contains a magic number: result.Push (Base36 [input % 36]);
Magic Number,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,ToBase36String,The following statement contains a magic number: input /= 36;
Magic Number,Mono.Cxxi.Abi,MsvcAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\MsvcAbi.cs,GetMangledMethodName,The following statement contains a magic number: StringBuilder nm = new StringBuilder ("?"' 30);
Magic Number,Mono.Cxxi.Abi,MsvcAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\MsvcAbi.cs,GetMangledMethodName,The following statement contains a magic number: funcModifier += (char)2;
Missing Default,Mono.Cxxi,CppTypeInfo,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\CppTypeInfo.cs,AddBase,The following switch statement is missing a default case: switch (location) {  			case BaseVirtualMethods.PrependPrimary:  				for (int i = 0; i < baseVMethodCount; i++) 					virtual_methods.Insert (BaseVTableSlots + i' baseType.virtual_methods [i]);  				gchandle_offset_delta = baseType.gchandle_offset_delta;  				BaseVTableSlots += baseVMethodCount; 				vt_delegate_types.Add (baseVMethodCount); 				vt_overrides.Add (baseVMethodCount); 				break;  			case BaseVirtualMethods.AppendPrimary:  				for (int i = 0; i < baseVMethodCount; i++) 					virtual_methods.Add (baseType.virtual_methods [i]);  				gchandle_offset_delta = baseType.gchandle_offset_delta;  				vt_delegate_types.Add (baseVMethodCount); 				vt_overrides.Add (baseVMethodCount); 				break;  			case BaseVirtualMethods.NewVTable:  				baseType.IsPrimaryBase = (base_classes.Count == 0);  				// offset all previously added bases 				foreach (var previousBase in base_classes) 					previousBase.gchandle_offset_delta += baseType.NativeSize;  				// offset derived (this) type's gchandle 				gchandle_offset_delta += baseType.GCHandleOffset;  				baseType.gchandle_offset_delta += native_size_without_padding + CountBases (b => !b.IsPrimaryBase) * IntPtr.Size;  				// ensure managed override tramps will be regenerated with correct gchandle offset 				baseType.vt_overrides = new LazyGeneratedList<Delegate> (baseType.virtual_methods.Count' i => Library.Abi.GetManagedOverrideTrampoline (baseType' i)); 				baseType.VTableOverrides = new ReadOnlyCollection<Delegate> (baseType.vt_overrides); 				baseType.lazy_vtable = null; 				break; 			}
Missing Default,Mono.Cxxi.Abi,CppAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\CppAbi.cs,DefineMethod,The following switch statement is missing a default case: switch (psig.Type) {  			case MethodType.NotImplemented: 				il.Emit (OpCodes.Ldstr' "This method is not available."); 				il.Emit (OpCodes.Newobj' notimplementedexception); 				il.Emit (OpCodes.Throw);  				goto case MethodType.NoOp; // fallthrough 			case MethodType.NoOp: 				// return NULL if method is supposed to return a value 				if (!interfaceMethod.ReturnType.Equals (typeof (void))) 					il.Emit (OpCodes.Ldnull); 				il.Emit (OpCodes.Ret); 				return trampoline;  			case MethodType.ManagedAlloc: 				EmitManagedAlloc (typeInfo' interfaceMethod); 				il.Emit (OpCodes.Ret); 				return trampoline; 			}
Missing Default,Mono.Cxxi.Abi,ItaniumAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\ItaniumAbi.cs,GetTypeCode,The following switch statement is missing a default case: switch (element) { 			case CppTypes.Int: 				code.Append (modifiers.Transform ( 					For.AllInputsIn (CppModifiers.Unsigned' CppModifiers.Short).InAnyOrder ().Emit ('t')' 					For.AnyInputIn (CppModifiers.Short).Emit ('s')' 					For.AllInputsIn (CppModifiers.Unsigned' CppModifiers.Long' CppModifiers.Long).InAnyOrder ().Emit ('y')' 					For.AllInputsIn (CppModifiers.Long' CppModifiers.Long).InAnyOrder ().Emit ('x')' 					For.AllInputsIn (CppModifiers.Unsigned' CppModifiers.Long).InAnyOrder ().Emit ('m')' 					For.AnyInputIn (CppModifiers.Long).Emit ('l')' 					For.AnyInputIn (CppModifiers.Unsigned).Emit ('j') 				).DefaultIfEmpty ('i').ToArray ()); 				break; 			case CppTypes.Bool: 				code.Append ('b'); 				break; 			case CppTypes.Char: 				if (modifiers.Contains (CppModifiers.Signed)) 					code.Append ('a'); 				else if (modifiers.Contains (CppModifiers.Unsigned)) 					code.Append ('h'); 				else 					code.Append ('c'); 				break; 			case CppTypes.Float: 				code.Append ('f'); 				break; 			case CppTypes.Double: 				if (modifiers.Contains (CppModifiers.Long)) 					code.Append ('e'); 				else 					code.Append ('d'); 				break; 			case CppTypes.Class: 			case CppTypes.Struct: 			case CppTypes.Union: 			case CppTypes.Enum: 				if (mangleType.Namespaces != null) { 					code.Append ('N'); 					foreach (var ns in mangleType.Namespaces) 						code.Append (GetIdentifier (compressMap' ns)); 				}  				code.Append (GetIdentifier (compressMap' mangleType.ElementTypeName));  				if (mangleType.Namespaces != null) 					code.Append ('E'); 				break;  			}
Missing Default,Mono.Cxxi.Abi,MsvcAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\MsvcAbi.cs,GetMangledMethodName,The following switch statement is missing a default case: switch (GetCallingConvention (methodInfo)) { 			case CallingConvention.Cdecl: 				nm.Append ('A'); 				break; 			case CallingConvention.ThisCall: 				nm.Append ('E'); 				break; 			case CallingConvention.StdCall: 				nm.Append ('G'); 				break; 			case CallingConvention.FastCall: 				nm.Append ('I'); 				break; 			}
Missing Default,Mono.Cxxi.Abi,MsvcAbi,C:\research\architectureSmells\repos\mono_cxxi\src\Mono.Cxxi\Abi\Impl\MsvcAbi.cs,GetTypeCode,The following switch statement is missing a default case: switch (element) { 			case CppTypes.Void: 				code.Append ('X'); 				break; 			case CppTypes.Int: 				code.Append (modifiers.Transform ( 					For.AllInputsIn (CppModifiers.Unsigned' CppModifiers.Short).InAnyOrder ().Emit ('G') 				).DefaultIfEmpty ('H').ToArray ()); 				break; 			case CppTypes.Char: 				code.Append ('D'); 				break; 			case CppTypes.Class: 				code.Append ('V'); 				code.Append(mangleType.ElementTypeName); 				code.Append ("@@"); 				break; 			case CppTypes.Struct: 				code.Append ('U'); 				code.Append(mangleType.ElementTypeName); 				code.Append ("@@"); 				break; 			case CppTypes.Union: 				code.Append ('T'); 				code.Append(mangleType.ElementTypeName); 				code.Append ("@@"); 				break; 			case CppTypes.Enum: 				code.Append ("W4"); 				code.Append(mangleType.ElementTypeName); 				code.Append ("@@"); 				break; 			}
