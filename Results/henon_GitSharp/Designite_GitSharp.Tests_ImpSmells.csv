Implementation smell,Namespace,Class,File,Method,Description
Long Method,GitSharp.API.Tests,StatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\StatusTests.cs,RunStatusTests,The method has 120 lines of code.
Long Method,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The method has 106 lines of code.
Long Parameter List,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,writeReflog,The method has 5 parameters. Parameters: db' oldId' newId' msg' refName
Long Parameter List,GitSharp.Core.Tests.FnMatch,FileNameMatcherTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\FnMatch\FileNameMatcherTest.cs,AssertFileNameMatch,The method has 5 parameters. Parameters: pattern' input' excludedCharacter' matchExpected' appendCanMatchExpected
Long Parameter List,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The method has 5 parameters. Parameters: len' a' b' c' d
Long Parameter List,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,b,The method has 8 parameters. Parameters: a' b' c' d' e' f' g' h
Long Parameter List,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The method has 9 parameters. Parameters: len' a' b' c' d' e' f' g' h
Long Parameter List,Git.Tests.CLI,CiOptionSet,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CheckOptionParts,The method has 6 parameters. Parameters: option' er' ef' en' es' ev
Long Parameter List,Git.Tests.CLI,ContextCheckerOption,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,ContextCheckerOption,The method has 5 parameters. Parameters: p' d' eName' eValue' index
Long Identifier,GitSharp.Core.Tests,IndexTreeWalkerTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexTreeWalkerTest.cs,,The length of the parameter TestTreeOnlyOneLevelTreeVisitor is 31.
Long Statement,GitSharp.Core.Tests,IndexModifiedTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexModifiedTests.cs,ShouldAllowComparingOfAlreadyOpenedFile,The length of the statement  "			// [henon] failed on my windows box (originally only observed on mono/unix) when executed in resharper or with nunit without waiting a second! " is 142.
Long Statement,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The length of the statement  "			var knownObjectIds = new[] { "1AFC38724D2B89264C7B3826D40B0655A95CFAB4"' "557DB03DE997C86A4A028E1EBD3A1CEB225BE238"' "67DC4302383B2715F4E0B8C41840EB05B1873697"' "A48B402F61EB8ED445DACAA3AF80A2E9796DCB3B"' "E41517D564000311F3D7A54F1390EE82F5F1A55B"' "E965047AD7C57865823C7D992B1D046EA66EDF78" }; " is 294.
Long Statement,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The length of the statement  "            var indexFile = new FileInfo("Resources" + Path.DirectorySeparatorChar + "sample.git" + Path.DirectorySeparatorChar + "objects" " is 127.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x00000000C2B64258L' smallIdx.FindCRC32(ObjectId.FromString("4b825dc642cb6eb9a060e54bf8d69288fbee4904"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x0000000072AD57C2L' smallIdx.FindCRC32(ObjectId.FromString("540a36d136cf413e4b064c2b0e0a4db60f77feab"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x00000000FF10A479L' smallIdx.FindCRC32(ObjectId.FromString("5b6e7c66c276e7610d4a73c70ec1a1f7c1003259"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x0000000034B27DDCL' smallIdx.FindCRC32(ObjectId.FromString("6ff87c4664981e4397625791c8ea3bbb5f2279a3"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x000000004743F1E4L' smallIdx.FindCRC32(ObjectId.FromString("82c6b885ff600be425b4ea96dee75dca255b69e7"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x00000000640B358BL' smallIdx.FindCRC32(ObjectId.FromString("902d5476fa249b7abc9d84c611577a81381f0327"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x000000002A17CB5EL' smallIdx.FindCRC32(ObjectId.FromString("aabf2ffaec9b497f0950352b3e582d73035c2035"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackIndexV2Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexV2Tests.cs,testCRC32,The length of the statement  "            Assert.AreEqual(0x000000000B3B5BA6L' smallIdx.FindCRC32(ObjectId.FromString("c59759f143fb1fe21c197981df75a7ee00290799"))); " is 122.
Long Statement,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,testWritePack2DeltasCRC32Copy,The length of the statement  "			var crc32Pack = new FileInfo(Path.Combine(packDir.DirectoryName' "pack-34be9032ac282b11fa9babdc2b2a93ca996c9c2f.pack")); " is 120.
Long Statement,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The length of the statement  "            Assert.IsTrue(db.ReflogReader(Constants.HEAD).getReverseEntries().Count == 1' "Reflog for HEAD should contain one entry"); " is 122.
Long Statement,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The length of the statement  "            Assert.IsTrue(db.ReflogReader(Constants.HEAD).getReverseEntries().Count == 2' "Reflog for HEAD should contain two entries"); " is 124.
Long Statement,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testEnsureLogTimeAndTimeZoneOffsetAreCurrentValues,The length of the statement  "            fakeCurrentTime -= remainder; // Second based Unix time format is used to store timetamps in the log. Thus' milliseconds are truncated. " is 135.
Long Statement,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameBranchNoPreviousLog,The length of the statement  "            Assert.IsFalse(new FileInfo(Path.Combine(db.Directory.FullName' "logs/refs/heads/b")).Exists' "precondition' no log on old branchg"); " is 133.
Long Statement,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameBranchAlsoInPack,The length of the statement  "            Assert.AreEqual("Branch: renamed b to new/name"' db.ReflogReader("refs/heads/new/name").getReverseEntries()[0].getComment()); " is 125.
Long Statement,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,tryRenameWhenLocked,The length of the statement  "            Assert.IsTrue(new FileInfo(Path.Combine(db.Directory.FullName' "logs/" + fromName)).Exists' "internal check' we have a log"); " is 125.
Long Statement,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,assertExists,The length of the statement  "                    positive' new FileInfo(Path.Combine(db.Directory.FullName' toName)).Exists' toName + (positive ? " " : " does not ") + "exist"); " is 128.
Long Statement,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameRefNameColission1avoided,The length of the statement  "            Assert.IsTrue(new FileInfo(Path.Combine(db.Directory.FullName' "logs/refs/heads/a")).Exists' "internal check' we have a log"); " is 126.
Long Statement,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameRefNameColission2avoided,The length of the statement  "            Assert.IsTrue(new FileInfo(Path.Combine(db.Directory.FullName' "logs/refs/heads/prefix/a")).Exists' "internal check' we have a log"); " is 133.
Long Statement,GitSharp.Core.Tests,RepositoryCacheTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryCacheTest.cs,testBareFileKey,The length of the statement  "            Assert.AreEqual(gitdir.FullName' RepositoryCache.FileKey.lenient(new DirectoryInfo(Path.Combine(parent.FullName' name))).getFile().FullName); " is 141.
Long Statement,GitSharp.Core.Tests,RepositoryCacheTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryCacheTest.cs,testFileKeyOpenNew,The length of the statement  "            Assert.IsFalse(Directory.Exists(gitdir.FullName)); // changed from gitdir.Exist in order to work around a Mono bug (cf. DirectoryInfoExist() test method below). " is 160.
Long Statement,GitSharp.Core.Tests,RepositoryCacheTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryCacheTest.cs,testFileKeyOpenNew,The length of the statement  "                Assert.IsFalse(Directory.Exists(gitdir.FullName));  // changed from gitdir.Exist in order to work around a Mono bug (cf. DirectoryInfoExist() test method below). " is 161.
Long Statement,GitSharp.Core.Tests,RepositoryCacheTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryCacheTest.cs,DirectoryInfoExists,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => { var doesExist = dir.Exists; }' "As identified by nestalk (http://bugzilla.novell.com/show_bug.cgi?id=582667)' DirectoryInfo.Refresh() doesn't seem to refresh the Exist property."); " is 233.
Long Statement,GitSharp.Core.Tests,SampleDataRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\SampleDataRepositoryTestCase.cs,setUp,The length of the statement  "                new FileInfo("Resources/" + Core.Transport.IndexPack.GetPackFileName(packname)).CopyTo(packDir + "/" + Core.Transport.IndexPack.GetPackFileName(packname)' true); " is 161.
Long Statement,GitSharp.Core.Tests,SampleDataRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\SampleDataRepositoryTestCase.cs,setUp,The length of the statement  "                new FileInfo("Resources/" + Core.Transport.IndexPack.GetIndexFileName(packname)).CopyTo(packDir + "/" + Core.Transport.IndexPack.GetIndexFileName(packname)' true); " is 163.
Long Statement,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The length of the statement  "            Assert.AreEqual("06/21/2009 15:04:53 +02:00"' 1245589493000L.MillisToDateTimeOffset(2 * 60).ToString(CultureInfo.InvariantCulture)); " is 132.
Long Statement,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The length of the statement  "            Assert.AreEqual("04/29/2009 18:41:17 -07:00"' 1241055677000L.MillisToDateTimeOffset(-7 * 60).ToString(CultureInfo.InvariantCulture)); " is 133.
Long Statement,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The length of the statement  "            Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch()); " is 128.
Long Statement,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The length of the statement  "            Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch()); " is 129.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_existing,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0").Name); " is 121.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_nonexisting,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c1"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c1").Name); " is 121.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_implicit_firstparent,The length of the statement  "            Assert.AreEqual("6e1475206e57110fcef4b92320436c1e9872a322"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^").Name); " is 122.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_implicit_firstparent,The length of the statement  "            Assert.AreEqual("1203b03dc816ccbb67773f28b3c19318654b0bc8"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^^").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_implicit_firstparent,The length of the statement  "            Assert.AreEqual("bab66b48f836ed950c99134ef666436fb07a09a0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^^^").Name); " is 124.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_self,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^0").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_self,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^0^0").Name); " is 125.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_self,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^0^0^0").Name); " is 127.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_firstparent,The length of the statement  "            Assert.AreEqual("6e1475206e57110fcef4b92320436c1e9872a322"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^1").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_firstparent,The length of the statement  "            Assert.AreEqual("1203b03dc816ccbb67773f28b3c19318654b0bc8"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^1^1").Name); " is 125.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_firstparent,The length of the statement  "            Assert.AreEqual("bab66b48f836ed950c99134ef666436fb07a09a0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^1^1^1").Name); " is 127.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_otherparents,The length of the statement  "            Assert.AreEqual("6e1475206e57110fcef4b92320436c1e9872a322"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^1").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_otherparents,The length of the statement  "            Assert.AreEqual("f73b95671f326616d66b2afb3bdfcdbbce110b44"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^2").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_otherparents,The length of the statement  "            Assert.AreEqual("d0114ab8ac326bab30e3a657a0397578c5a1af88"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^3").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testObjectId_objectid_explicit_otherparents,The length of the statement  "            Assert.AreEqual("d0114ab8ac326bab30e3a657a0397578c5a1af88"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^03").Name); " is 124.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDistance,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0~0").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDistance,The length of the statement  "            Assert.AreEqual("6e1475206e57110fcef4b92320436c1e9872a322"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0~1").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDistance,The length of the statement  "            Assert.AreEqual("1203b03dc816ccbb67773f28b3c19318654b0bc8"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0~2").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDistance,The length of the statement  "            Assert.AreEqual("bab66b48f836ed950c99134ef666436fb07a09a0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0~3").Name); " is 123.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDistance,The length of the statement  "            Assert.AreEqual("bab66b48f836ed950c99134ef666436fb07a09a0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0~03").Name); " is 124.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testTree,The length of the statement  "            Assert.AreEqual("6020a3b8d5d636e549ccbd0c53e2764684bb3125"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^{tree}").Name); " is 128.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testTree,The length of the statement  "            Assert.AreEqual("02ba32d3649e510002c21651936b7077aa75ffa9"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^^{tree}").Name); " is 129.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDerefCommit,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^{}").Name); " is 124.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDerefCommit,The length of the statement  "            Assert.AreEqual("49322bb17d3acc9146f98c97d078513228bbf3c0"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^{commit}").Name); " is 130.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDerefCommit,The length of the statement  "            Assert.AreEqual("6020a3b8d5d636e549ccbd0c53e2764684bb3125"' db.Resolve("49322bb17d3acc9146f98c97d078513228bbf3c0^{commit}^{tree}").Name); " is 137.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDerefBlob,The length of the statement  "            Assert.AreEqual("fd608fbe625a2b456d9f15c2b1dc41f252057dd7"' db.Resolve("fd608fbe625a2b456d9f15c2b1dc41f252057dd7^{}").Name); " is 124.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDerefBlob,The length of the statement  "            Assert.AreEqual("fd608fbe625a2b456d9f15c2b1dc41f252057dd7"' db.Resolve("fd608fbe625a2b456d9f15c2b1dc41f252057dd7^{blob}").Name); " is 128.
Long Statement,GitSharp.Core.Tests,T0008_testparserev,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0008_testparserev.cs,testDerefTree,The length of the statement  "            Assert.AreEqual("856ec208ae6cadac25a6d74f19b12bb27a24fe24"' db.Resolve("032c063ce34486359e3ee3d4f9e5c225b9e1a4c2^{tree}").Name); " is 128.
Long Statement,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheCGitCompatabilityTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheCGitCompatabilityTest.cs,ReadLsFiles,The length of the statement  "            using (var br = new StreamReader(new FileStream("Resources/gitgit.lsfiles"' System.IO.FileMode.Open' FileAccess.Read)' Constants.CHARSET)) " is 138.
Long Statement,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheCGitCompatabilityTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheCGitCompatabilityTest.cs,ReadLsTree,The length of the statement  "            using (var br = new StreamReader(new FileStream("Resources/gitgit.lstree"' System.IO.FileMode.Open' System.IO.FileAccess.Read)' Constants.CHARSET)) " is 147.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openRepoBadArgs,The length of the statement  "            var e = AssertHelper.Throws<ArgumentException>(() => { using (var r = new global::GitSharp.Core.Repository(null' null)) { } }); " is 127.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_default_gitDirSet,The length of the statement  "            using (global::GitSharp.Core.Repository repo1initial = new global::GitSharp.Core.Repository(PathUtil.CombineDirectoryPath(repo1Parent' Constants.DOT_GIT))) " is 155.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_default_gitDirAndWorkTreeSet,The length of the statement  "            using (global::GitSharp.Core.Repository repo1initial = new global::GitSharp.Core.Repository(PathUtil.CombineDirectoryPath(repo1Parent' Constants.DOT_GIT))) " is 155.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_default_workDirSet,The length of the statement  "            using (global::GitSharp.Core.Repository repo1initial = new global::GitSharp.Core.Repository(PathUtil.CombineDirectoryPath(repo1Parent' Constants.DOT_GIT))) " is 155.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_default_absolute_workdirconfig,The length of the statement  "            using (global::GitSharp.Core.Repository repo1initial = new global::GitSharp.Core.Repository(PathUtil.CombineDirectoryPath(repo1Parent' Constants.DOT_GIT))) " is 155.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_default_relative_workdirconfig,The length of the statement  "            using (global::GitSharp.Core.Repository repo1initial = new global::GitSharp.Core.Repository(PathUtil.CombineDirectoryPath(repo1Parent' Constants.DOT_GIT))) " is 155.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_alternate_index_file_and_objdirs,The length of the statement  "            using (global::GitSharp.Core.Repository repo1initial = new global::GitSharp.Core.Repository(PathUtil.CombineDirectoryPath(repo1Parent' Constants.DOT_GIT))) " is 155.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test000_openrepo_alternate_index_file_and_objdirs,The length of the statement  "            using (global::GitSharp.Core.Repository r = new global::GitSharp.Core.Repository(theDir' null' objDir' altObjDirs' indexFile)) " is 126.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Blob,The length of the statement  "            Assert.AreEqual(Inspector.Inspect("Resources/single_file_commit"' "95ea6a6859af6791464bd8b6de76ad5a6f9fad81")' new Inspector(db).Inspect(id)); " is 142.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Tree,The length of the statement  "            Assert.AreEqual(File.ReadAllText("Resources/single_file_commit/i-am-a-file")' File.ReadAllText(db.WorkingDirectory.FullName + "/i-am-a-file")); " is 143.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Tree,The length of the statement  "            using (var b2 = new BinaryReader(Inspector.ContentStream("Resources/single_file_commit"' "917c130bd4fa5bf2df0c399dc1b03401860aa448"))) " is 134.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The length of the statement  "            //tree 917c130bd4fa5bf2df0c399dc1b03401860aa448\nauthor henon <meinrad.recheis@gmail.com> 1245946742 +0200\ncommitter henon <meinrad.recheis@gmail.com> 1245946742 +0200\n\nA Commit\n" " is 183.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The length of the statement  "            //using (var xis = new XInputStream(new FileStream(db.ToFile(cmtid).FullName' System.IO.FileMode.Open' FileAccess.Read))) " is 121.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The length of the statement  "            if (new FileInfo(db.Directory.FullName + "/refs/tags/test020").Exists) throw new IOException("Cannot delete unpacked tag"); " is 123.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The length of the statement  "            if (new FileInfo(db.Directory.FullName + "/refs/tags/test021").Exists) throw new IOException("Cannot delete unpacked tag"); " is 123.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The length of the statement  "            if (new FileInfo(db.Directory.FullName + "/refs/tags/test022").Exists) throw new IOException("Cannot delete unpacked tag"); " is 123.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test027_UnpackedRefHigherPriorityThanPacked,The length of the statement  "            using (var writer = new StreamWriter(new FileStream(db.Directory.FullName + "/refs/heads/a"' System.IO.FileMode.CreateNew))) " is 124.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject,The length of the statement  "            Assert.AreEqual((new byte[0].GetType())' db.MapObject(ObjectId.FromString("5b6e7c66c276e7610d4a73c70ec1a1f7c1003259")' null).GetType()); " is 136.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject,The length of the statement  "            Assert.AreEqual(typeof(global::GitSharp.Core.Commit)' db.MapObject(ObjectId.FromString("540a36d136cf413e4b064c2b0e0a4db60f77feab")' null).GetType()); " is 149.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject,The length of the statement  "            Assert.AreEqual(typeof(global::GitSharp.Core.Tree)' db.MapObject(ObjectId.FromString("aabf2ffaec9b497f0950352b3e582d73035c2035")' null).GetType()); " is 147.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject,The length of the statement  "            Assert.AreEqual(typeof(global::GitSharp.Core.Tag)' db.MapObject(ObjectId.FromString("17768080a2318cd89bba4c8b87834401e2095703")' null).GetType()); " is 146.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The length of the statement  "            Assert.AreEqual((new byte[0].GetType())' repo.MapObject(ObjectId.FromString("5b6e7c66c276e7610d4a73c70ec1a1f7c1003259")' null).GetType()); " is 138.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The length of the statement  "            Assert.AreEqual(typeof(global::GitSharp.Core.Commit)' repo.MapObject(ObjectId.FromString("540a36d136cf413e4b064c2b0e0a4db60f77feab")' null).GetType()); " is 151.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The length of the statement  "            Assert.AreEqual(typeof(global::GitSharp.Core.Tree)' repo.MapObject(ObjectId.FromString("aabf2ffaec9b497f0950352b3e582d73035c2035")' null).GetType()); " is 149.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The length of the statement  "            Assert.AreEqual(typeof(global::GitSharp.Core.Tag)' repo.MapObject(ObjectId.FromString("17768080a2318cd89bba4c8b87834401e2095703")' null).GetType()); " is 148.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test30_stripWorkDir,The length of the statement  "            FileInfo relBaseFile = new FileInfo(Path.Combine(new FileInfo(Path.Combine(relBase.FullName' "other")).FullName' "module.c")); " is 126.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test30_stripWorkDir,The length of the statement  "            FileInfo absBaseFile = new FileInfo(Path.Combine(new FileInfo(Path.Combine(absBase.FullName' "other")).FullName' "module.c")); " is 126.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test30_stripWorkDir,The length of the statement  "            FileInfo relNonFile = new FileInfo(Path.Combine(new FileInfo(Path.Combine(relCwd.FullName' "not-repo")).FullName' ".gitignore")); " is 129.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test30_stripWorkDir,The length of the statement  "            FileInfo absNonFile = new FileInfo(Path.Combine(new FileInfo(Path.Combine(absCwd.FullName' "not-repo")).FullName' ".gitignore")); " is 129.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test30_stripWorkDir,The length of the statement  "            FileInfo file = new FileInfo(Path.Combine(new FileInfo(Path.Combine(db.WorkingDirectory.FullName' "subdir")).FullName' "File.java")); " is 133.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The length of the statement  "            FileInfo project1_a_txt = writeTrashFile(Path.Combine(workingDirectory.FullName' "Project-1/A.txt")' "A.txt - first version\n"); " is 128.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The length of the statement  "            FileInfo project1_b_txt = writeTrashFile(Path.Combine(workingDirectory.FullName' "Project-1/B.txt")' "B.txt - first version\n"); " is 128.
Long Statement,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The length of the statement  "            FileInfo project1_b_v2_txt = writeTrashFile(Path.Combine(workingDirectory.FullName' "Project-1/B.txt")' "B.txt - second version\n"); " is 132.
Long Statement,GitSharp.Tests.GitSharp.Core.Merge,MergeAlgorithmTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Merge\MergeAlgorithmTest.cs,testConflictAtEnd,The length of the statement  "            Assert.AreEqual(A + B + C + D + E + F + G + H + I + XXX_0 + Z + XXX_1 + Y + XXX_2' merge(@base' replace_J_by_Z' replace_J_by_Y)); " is 129.
Long Statement,GitSharp.Tests.GitSharp.Core.Merge,MergeAlgorithmTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Merge\MergeAlgorithmTest.cs,merge,The length of the statement  "            MergeResult r=MergeAlgorithm.merge(new RawText(Constants.encode(commonBase))' new RawText(Constants.encode(ours))' new RawText(Constants.encode(theirs))); " is 154.
Long Statement,GitSharp.Core.Tests.Patch,GetTextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\GetTextTest.cs,testGetText_Convert,The length of the statement  "            exp = exp.Replace("\u00C3\u0085ngstr\u00C3\u00B6m"' "\u00c5ngstr\u00f6m");  // henon: octal character representation is not legal in c# literals: "\303\205ngstr\303\266m" " is 170.
Long Statement,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_ManyUsers,The length of the statement  "			RevCommit commit = Parse("subject\n\nbody of commit\n" + "Not-A-Footer-Line: this line must not be read as a footer\n" + "\n" + "Signed-off-by: A. U. Thor <a@example.com>\n" + "CC:            <some.mailing.list@example.com>\n" + "Acked-by: Some Reviewer <sr@example.com>\n" + "Signed-off-by: Main Tain Er <mte@example.com>\n"); " is 327.
Long Statement,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_SkipNonFooter,The length of the statement  "			RevCommit commit = Parse("subject\n\nbody of commit\n" + "Not-A-Footer-Line: this line must not be read as a footer\n" + "\n" + "Signed-off-by: A. U. Thor <a@example.com>\n" + "CC:            <some.mailing.list@example.com>\n" + "not really a footer line but we'll skip it anyway\n" + "Acked-by: Some Reviewer <sr@example.com>\n" + "Signed-off-by: Main Tain Er <mte@example.com>\n"); " is 383.
Long Statement,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testFilterFootersIgnoreCase,The length of the statement  "			RevCommit commit = Parse("subject\n\nbody of commit\n" + "Not-A-Footer-Line: this line must not be read as a footer\n" + "\n" + "Signed-Off-By: A. U. Thor <a@example.com>\n" + "CC:            <some.mailing.list@example.com>\n" + "Acked-by: Some Reviewer <sr@example.com>\n" + "signed-off-by: Main Tain Er <mte@example.com>\n"); " is 327.
Long Statement,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_implicit_mixed_encoded,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => Assert.AreEqual("F\u00f6r fattare"' c.getAuthorIdent().Name)' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=549914"); " is 192.
Long Statement,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_explicit_encoded,The length of the statement  "            Assert.AreEqual("EUC-JP"' c.Encoding.WebName.ToUpperInvariant()); //Hacked as Windows uses a lowercased naming convention " is 121.
Long Statement,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_explicit_bad_encoded,The length of the statement  "            Assert.AreEqual("EUC-JP"' c.Encoding.WebName.ToUpperInvariant()); //Hacked as Windows uses a lowercased naming convention " is 121.
Long Statement,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_explicit_bad_encoded,The length of the statement  "		    AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => Assert.AreEqual("F\u00f6r fattare"' c.getAuthorIdent().Name)' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=547902"); " is 192.
Long Statement,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_explicit_bad_encoded2,The length of the statement  "            Assert.AreEqual("ISO-8859-1"' c.Encoding.WebName.ToUpperInvariant()); //Hacked as Windows uses a lowercased naming convention " is 125.
Long Statement,GitSharp.Core.Tests.RevWalk,RevTagParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevTagParseTest.cs,testParse_implicit_mixed_encoded,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => Assert.AreEqual("F\u00f6r fattare"' c.getTaggerIdent().Name)' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=549914"); " is 192.
Long Statement,GitSharp.Core.Tests.RevWalk,RevTagParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevTagParseTest.cs,testParse_explicit_bad_encoded,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => Assert.AreEqual("F\u00f6r fattare"' c.getTaggerIdent().Name)' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=547902"); " is 192.
Long Statement,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,Config,The length of the statement  "			using (var fw = new StreamWriter(new FileStream(_configFile.FullName' System.IO.FileMode.Create' FileAccess.ReadWrite)' Constants.CHARSET)) " is 139.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateFastForward,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateNonFastForwardUnknownObject,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("0000000000000000000000000000000000000001")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateNonFastForward,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("2c349335b7f797072cf729c4f3bb0914ecb6dec9")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateNonFastForwardForced,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("2c349335b7f797072cf729c4f3bb0914ecb6dec9")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateDelete,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("2c349335b7f797072cf729c4f3bb0914ecb6dec9")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateUpToDate,The length of the statement  "            RemoteRefUpdate rru = new RemoteRefUpdate(db' "2c349335b7f797072cf729c4f3bb0914ecb6dec9"' "refs/heads/master"' false' null' null); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateUpToDate,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("2c349335b7f797072cf729c4f3bb0914ecb6dec9")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateExpectedRemote,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateUnexpectedRemote,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateUnexpectedRemoteVsForce,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateRejectedByConnection,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testUpdateMixedCases,The length of the statement  "            Core.Ref refToChange = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("2c349335b7f797072cf729c4f3bb0914ecb6dec9")); " is 137.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testTrackingRefUpdateEnabled,The length of the statement  "            RemoteRefUpdate rru = new RemoteRefUpdate(db' "2c349335b7f797072cf729c4f3bb0914ecb6dec9"' "refs/heads/master"' false' "refs/remotes/test/master"' null); " is 152.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testTrackingRefUpdateEnabled,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testTrackingRefUpdateDisabled,The length of the statement  "            RemoteRefUpdate rru = new RemoteRefUpdate(db' "2c349335b7f797072cf729c4f3bb0914ecb6dec9"' "refs/heads/master"' false' null' null); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testTrackingRefUpdateDisabled,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testTrackingRefUpdateOnReject,The length of the statement  "            RemoteRefUpdate rru = new RemoteRefUpdate(db' "ac7e7e44c1885efb472ad54a78327d66bfc4ecef"' "refs/heads/master"' false' null' null); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testTrackingRefUpdateOnReject,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("2c349335b7f797072cf729c4f3bb0914ecb6dec9")); " is 130.
Long Statement,GitSharp.Core.Tests.Transport,PushProcessTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PushProcessTest.cs,testPushResult,The length of the statement  "            Core.Ref @ref = new Unpeeled(Storage.Loose' "refs/heads/master"' ObjectId.FromString("ac7e7e44c1885efb472ad54a78327d66bfc4ecef")); " is 130.
Long Statement,GitSharp.Tests.GitSharp.Core.Transport,URIishTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\URIishTests.cs,testGetEmptyHumanishName,The length of the statement  "            AssertHelper.Throws<InvalidOperationException>(() => new URIish(GIT_SCHEME).getHumanishName()' "empty path is useless"); " is 120.
Long Statement,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testEmptyIfRootIsFile,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => Assert.IsTrue(fti.eof())' "Test fails under mono due to http://bugzilla.novell.com/show_bug.cgi?id=539791'Fixed upstream"); " is 174.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readByte_Success2,The length of the statement  "			_stream.Close(); // note [henon]: we can't distinguish a read from closed stream (returns -1 in java) from read timeout' so this testcase is different than in jgit " is 163.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The length of the statement  "            var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 }; " is 154.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The length of the statement  "            var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 }; " is 149.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The length of the statement  "            var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 }; " is 149.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The length of the statement  "            var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 }; " is 125.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The length of the statement  "            var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 }; " is 164.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The length of the statement  "            var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 }; " is 153.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The length of the statement  "            var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 }; " is 153.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The length of the statement  "            var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 }; " is 177.
Long Statement,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testEmptyBuilder,The length of the statement  "            RefList<global::GitSharp.Core.Ref> list = new RefList<global::GitSharp.Core.Ref>.Builder<global::GitSharp.Core.Ref>().toRefList(); " is 130.
Long Statement,GitSharp.Core.Tests.Util,AssertHelperFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\AssertHelperFixture.cs,WhenOfTheCorrectTypeThrownExceptionCanBeFurtherExamined,The length of the statement  "            var e = AssertHelper.Throws<InvalidOperationException>(() => { throw new InvalidOperationException("Hi from below"); }); " is 120.
Long Statement,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The length of the statement  "            Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes)); " is 176.
Long Statement,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_Latin1,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => AssertDequote("\u00c5ngstr\u00f6m"' "\\305ngstr\\366m")' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=549914"); " is 187.
Long Statement,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_RawLatin1,The length of the statement  "            AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => AssertDequote("\u00c5ngstr\u00f6m"' (char)NB.BaseToDecimal("305"' 8)  + "ngstr" + (char)NB.BaseToDecimal("366"' 8) + "m")' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=549914"); " is 253.
Long Statement,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_Copy,The length of the statement  "                // [caytchen] StreamReader buffers data After the very first Read' thus advancing the Position in the underlying stream - causing this test to fail " is 147.
Long Statement,GitSharp.Tests.GitSharp,AbstractTreeNodeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\AbstractTreeNodeTests.cs,GetHistory,The length of the statement  "				Assert.AreEqual(new[] { "58be4659bb571194ed4562d04b359d26216f526e"' "6c8b137b1c652731597c89668f417b8695f28dd7" }' history); " is 123.
Long Statement,GitSharp.Tests.GitSharp,AbstractTreeNodeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\AbstractTreeNodeTests.cs,GetHistory,The length of the statement  "				Assert.AreEqual(new[] { "d86a2aada2f5e7ccf6f11880bfb9ab404e8a8864"' "ac7e7e44c1885efb472ad54a78327d66bfc4ecef" }' history); " is 123.
Long Statement,GitSharp.Tests.GitSharp,AbstractTreeNodeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\AbstractTreeNodeTests.cs,GetHistory,The length of the statement  "				Assert.AreEqual(new[] { "6db9c2ebf75590eef973081736730a9ea169a0c4"' "2c349335b7f797072cf729c4f3bb0914ecb6dec9" }' history); " is 123.
Long Statement,GitSharp.Tests.GitSharp,ApiTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\ApiTestCase.cs,AssertFileExistsInWD,The length of the statement  "			Assert.IsTrue(new FileInfo(Path.Combine(wd' path)).Exists' "Path '" + path + "' should exist in the working directory"); " is 120.
Long Statement,GitSharp.Tests.GitSharp,ApiTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\ApiTestCase.cs,AssertFileNotExistentInWD,The length of the statement  "			Assert.IsFalse(new FileInfo(Path.Combine(wd' path)).Exists' "Path '" + path + "' should *not* exist in the working directory"); " is 127.
Long Statement,GitSharp.Tests.GitSharp,BranchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\BranchTest.cs,Switch_to_Branch,The length of the statement  "				// [henon] not checking branches gitlink and symlink as there are obviously problems with them. these should be moved into their own test' once we understand gitlink and symlink better. " is 185.
Long Statement,GitSharp.Tests.GitSharp,CloneTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CloneTests.cs,Try_cloning_non_existing_repo_git,The length of the statement  "            AssertHelper.Throws<NoRemoteRepositoryException>(() => { using (Repository repo = Git.Clone(fromUrl' toPath)) { } }' "Repository shouldn't exist."); " is 148.
Long Statement,GitSharp.Tests.GitSharp,CloneTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CloneTests.cs,Checked_cloned_local_dotGit_suffixed_repo,The length of the statement  "                new DirectoryInfo(Path.Combine(trash.FullName' "OneFileRepository" + Path.GetRandomFileName() + Constants.DOT_GIT_EXT)); " is 120.
Long Statement,GitSharp.Tests.GitSharp,MergeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\MergeTests.cs,MergeStrategyRecursive_FastForwardOff,The length of the statement  "				var result = Git.Merge(new MergeOptions { NoFastForward = true' Branches = new[]{ a' c }' MergeStrategy = MergeStrategy.Recursive });  " is 133.
Long Statement,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetLineTest,The length of the statement  "			Assert.AreEqual(new[] { (byte)'P'' (byte)'l'' (byte)'a'' (byte)'y'' (byte)'e'' (byte)'r'' (byte)' '' (byte)'Q'' (byte)'u'' (byte)'e'' (byte)'e'' (byte)'n'' (byte)':'' (byte)'\r'' (byte)'\n' }' text.GetRawLine(1)); " is 213.
Long Statement,GitSharp.API.Tests,CommitDateTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CommitDateTests.cs,ShouldBeAbleToReadAuthorDate,The length of the statement  "				Assert.Ignore("Doesn't pass on Mono because of 'System.NotImplementedException : The requested feature is not implemented.at System.DateTimeOffset.Parse'."); " is 157.
Long Statement,GitSharp.API.Tests,EncodingTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\EncodingTests.cs,Chinese_UTF8,The length of the statement  "				// committing' with the message; "China is very large. The great wall is very long. Shanghai is very pretty."' Author: "a student of the chinese language" " is 154.
Long Statement,GitSharp.API.Tests,EncodingTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\EncodingTests.cs,UTF8_to_ShiftJIS_filename,The length of the statement  "			return Encoding.Default.GetString(Encoding.Convert(Encoding.UTF8' shiftJISEncoding' Encoding.UTF8.GetBytes(utf8_japanese))); " is 124.
Long Statement,GitSharp.API.Tests,FindGitDirectoryTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\FindGitDirectoryTests.cs,Honors_CurrentDirectory,The length of the statement  "                Assert.IsFalse(path.EndsWith("git")); // <--- this should be the case anyway' but if not the next assertion would not pass correctly " is 132.
Long Statement,GitSharp.API.Tests,FindGitDirectoryTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\FindGitDirectoryTests.cs,Honors_CurrentDirectory,The length of the statement  "                Assert.AreEqual(Directory.GetCurrentDirectory() + Constants.DOT_GIT_EXT' AbstractCommand.FindGitDirectory(null' false' true)); " is 126.
Long Statement,GitSharp.API.Tests,FindGitDirectoryTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\FindGitDirectoryTests.cs,Honors_CurrentDirectory,The length of the statement  "                Assert.AreEqual(Path.Combine(Directory.GetCurrentDirectory()' Constants.DOT_GIT)' AbstractCommand.FindGitDirectory(null' false' false)); " is 136.
Long Statement,GitSharp.API.Tests,IndexTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\IndexTest.cs,Access_Index_Members,The length of the statement  "				Assert.AreEqual(new[] { "a/a1"' "a/a1.txt"' "a/a2.txt"' "b/b1.txt"' "b/b2.txt"' "c/c1.txt"' "c/c2.txt"' "master.txt" }' index.Entries); " is 135.
Long Statement,GitSharp.API.Tests,IndexTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\IndexTest.cs,Stage_Unstage,The length of the statement  "				index.Unstage(foo_bar); // <--- unstage on committed file has no effect. to remove a file completely from the index we need to use remove " is 137.
Long Statement,GitSharp.API.Tests,IndexTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\IndexTest.cs,AddAll_Directory_Recursive,The length of the statement  "			// test AddAll with one new directory with a directory within it and each these directories containing a new file within it " is 123.
Long Statement,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,TracksAddedFiles,The length of the statement  "				Assert.IsTrue(status.Added.Contains("b.txt")); // the file already exists in the index (eg. has been previously git added) " is 122.
Long Statement,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,UntrackedFiles,The length of the statement  "				repo.Index.Add(writeTrashFile("untracked2.txt"' "").FullName); // <-- adding a file with same name in higher directory to test the file name comparison. " is 152.
Long Statement,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Modified_and_Staged,The length of the statement  "				index.Add(writeTrashFile("file2"' "file2 changed").FullName' writeTrashFile("dir/file3"' "dir/file3 changed").FullName); " is 120.
Long Statement,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Removed,The length of the statement  "				repo.Commit("committing staged changes' this does not delete removed files from the working directory. they should be untracked now."' Author.Anonymous); " is 153.
Long Statement,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Removed,The length of the statement  "				Assert.IsTrue(diff.Untracked.Contains("file2")); // note: this looks like a bug (actually the file is tracked but only missing in the index) but complies to cgit " is 161.
Long Statement,GitSharp.API.Tests,RepositoryTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryTests.cs,AccessGitObjectsMagic,The length of the statement  "				Assert.IsNotNull(repo.Get<Blob>("68cb1f232964f3cd698afc1dafe583937203c587")); // <--- returns the commit as blob (i.e. for inspection of the raw contents) " is 154.
Long Statement,GitSharp.API.Tests,RepositoryTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryTests.cs,AccessGitObjectsMagic,The length of the statement  "				Assert.IsTrue(repo.Get<Tree>("68cb1f232964f3cd698afc1dafe583937203c587").IsTree); // <--- returns the commit as blob (i.e. for inspection of the raw contents) " is 158.
Long Statement,Git.Tests.CLI,Utils,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\Utils.cs,AssertException,The length of the statement  "            MethodInfo method = typeof(AssertHelper).GetMethods(BindingFlags.Public | BindingFlags.Static).Single(m => m.Name == "Throws" && m.GetParameters().Count() == 1); " is 161.
Complex Conditional,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,System,The conditional expression  "dir == null || !dir.Exists || !Directory.Exists(dir.FullName) || string.IsNullOrEmpty(cmd)"  is complex.
Virtual Method Call from Constructor,GitSharp.Tests.GitSharp.Core.Util,MockSystemReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\MockSystemReader.cs,MockSystemReader,The constructor "MockSystemReader" calls a virtual method "getOperatingSystem".
Empty Catch Block,GitSharp.Core.Tests,ConcurrentRepackTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ConcurrentRepackTest.cs,WriteBlob,The method has an empty catch block.
Empty Catch Block,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,VerifyOpenPack,The method has an empty catch block.
Empty Catch Block,GitSharp.Core.Tests,ReadTreeTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReadTreeTest.cs,testCheckoutOutChanges,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readByte_Success2,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readByte_Timeout,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readBuffer_Timeout,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_skip_Timeout,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testEmpty,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testEmptyBuilder,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testIterable,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testIterable,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testIterator_RefusesRemove,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testIterator_FailsAtEnd,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testIterator_MissingUnresolvedSymbolicRefIsBug,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testPut_KeyMustMatchName_NoPrefix,The method has an empty catch block.
Empty Catch Block,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testPut_KeyMustMatchName_WithPrefix,The method has an empty catch block.
Magic Number,GitSharp.Core.Tests,CanReadMsysgitIndexFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\CanReadMsysgitIndexFixture.cs,CanAddAFileToAMSysGitIndexWhereAFileIsAlreadyWaitingToBeCommitted,The following statement contains a magic number: Assert.AreEqual(2' diff.Added.Count);
Magic Number,GitSharp.Core.Tests,CanReadMsysgitIndexFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\CanReadMsysgitIndexFixture.cs,Check_entries_of_msysgit_index,The following statement contains a magic number: Assert.AreEqual(3' dict.Count);
Magic Number,GitSharp.Core.Tests,ConcurrentRepackTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ConcurrentRepackTest.cs,Touch,The following statement contains a magic number: Thread.Sleep(25);
Magic Number,GitSharp.Core.Tests,ConstantsEncodingTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ConstantsEncodingTest.cs,testEncodeASCII_Number13,The following statement contains a magic number: const long src = 13;
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: crc.Update(145);
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: Assert.AreEqual(1426738271' crc.Value);
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: crc.Update(123456789);
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: Assert.AreEqual(1147030863' crc.Value);
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: var data = new byte[] { 145' 234' 156 };
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: var data = new byte[] { 145' 234' 156 };
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: var data = new byte[] { 145' 234' 156 };
Magic Number,GitSharp.Core.Tests,Crc32Tests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Crc32Tests.cs,Tests,The following statement contains a magic number: Assert.AreEqual(3967437022' crc.Value);
Magic Number,GitSharp.Core.Tests,IndexDiffTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexDiffTest.cs,testAdded,The following statement contains a magic number: Assert.AreEqual(2' diff.Added.Count);
Magic Number,GitSharp.Core.Tests,IndexDiffTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexDiffTest.cs,testUpdateExistingMsysgitIndex,The following statement contains a magic number: Assert.AreEqual(352' content.Length);
Magic Number,GitSharp.Core.Tests,IndexDiffTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexDiffTest.cs,testModified,The following statement contains a magic number: Assert.AreEqual(2' t.MemberCount);
Magic Number,GitSharp.Core.Tests,IndexDiffTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexDiffTest.cs,testModified,The following statement contains a magic number: Assert.AreEqual(2' diff.Changed.Count);
Magic Number,GitSharp.Core.Tests,IndexDiffTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexDiffTest.cs,testRemoved,The following statement contains a magic number: Assert.AreEqual(2' t.MemberCount);
Magic Number,GitSharp.Core.Tests,IndexDiffTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexDiffTest.cs,testRemoved,The following statement contains a magic number: Assert.AreEqual(2' diff.Removed.Count);
Magic Number,GitSharp.Core.Tests,IndexTreeWalkerTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\IndexTreeWalkerTest.cs,testIndexOnlyOneLevel,The following statement contains a magic number: Assert.AreEqual(2' IndexOnlyEntriesVisited.Count);
Magic Number,GitSharp.Core.Tests,ObjectCheckerTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ObjectCheckerTests.cs,testInvalidTreeTruncatedInObjectId,The following statement contains a magic number: b.Append("100644 b" + '\0' + (char)1 + (char)2);
Magic Number,GitSharp.Core.Tests,ObjectCheckerTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ObjectCheckerTests.cs,testValidCommit128Parent,The following statement contains a magic number: i < 128
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownOffsets = new long[] { 370' 349' 304' 12' 175' 414 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownOffsets = new long[] { 370' 349' 304' 12' 175' 414 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownOffsets = new long[] { 370' 349' 304' 12' 175' 414 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownOffsets = new long[] { 370' 349' 304' 12' 175' 414 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownOffsets = new long[] { 370' 349' 304' 12' 175' 414 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownOffsets = new long[] { 370' 349' 304' 12' 175' 414 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownCrcs = new long[] { 1376555649' 3015185563' 2667925865' 914969567' 2706901546' 39477847 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownCrcs = new long[] { 1376555649' 3015185563' 2667925865' 914969567' 2706901546' 39477847 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownCrcs = new long[] { 1376555649' 3015185563' 2667925865' 914969567' 2706901546' 39477847 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownCrcs = new long[] { 1376555649' 3015185563' 2667925865' 914969567' 2706901546' 39477847 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownCrcs = new long[] { 1376555649' 3015185563' 2667925865' 914969567' 2706901546' 39477847 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: var knownCrcs = new long[] { 1376555649' 3015185563' 2667925865' 914969567' 2706901546' 39477847 };
Magic Number,GitSharp.Core.Tests,PackIndexTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackIndexTests.cs,ObjectList,The following statement contains a magic number: Assert.AreEqual(6' index.ObjectCount);
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,testWriteIndex,The following statement contains a magic number: _writer.setIndexVersion(2);
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: ObjectId temp = expectedOrder[4];
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: expectedOrder[4] = expectedOrder[5];
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: expectedOrder[4] = expectedOrder[5];
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: expectedOrder[5] = temp;
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,WriteVerifyPack4,The following statement contains a magic number: expectedObjects = new ObjectId[4];
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,WriteVerifyPack4,The following statement contains a magic number: expectedObjects[3] = ObjectId.FromString("6ff87c4664981e4397625791c8ea3bbb5f2279a3");
Magic Number,GitSharp.Core.Tests,PackWriterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\PackWriterTest.cs,VerifyOpenPack,The following statement contains a magic number: indexer.setIndexVersion(2);
Magic Number,GitSharp.Core.Tests,ReadTreeTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReadTreeTest.cs,MakeMap,The following statement contains a magic number: (args.Length % 2) > 0
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The following statement contains a magic number: long commitTime = 1154236443000L;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The following statement contains a magic number: int tz = -4 * 60;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The following statement contains a magic number: int tz = -4 * 60;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The following statement contains a magic number: commitTime += 100;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The following statement contains a magic number: commitTime += 100;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testlogAllRefUpdates,The following statement contains a magic number: Assert.IsTrue(db.ReflogReader(Constants.HEAD).getReverseEntries().Count == 2' "Reflog for HEAD should contain two entries");
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testEnsureLogTimeAndTimeZoneOffsetAreCurrentValues,The following statement contains a magic number: long commitTime = 1154236443000L;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testEnsureLogTimeAndTimeZoneOffsetAreCurrentValues,The following statement contains a magic number: int tz = -4 * 60;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testEnsureLogTimeAndTimeZoneOffsetAreCurrentValues,The following statement contains a magic number: int tz = -4 * 60;
Magic Number,GitSharp.Core.Tests,ReflogConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogConfigTest.cs,testEnsureLogTimeAndTimeZoneOffsetAreCurrentValues,The following statement contains a magic number: long  remainder = fakeCurrentTime % 1000;
Magic Number,GitSharp.Core.Tests,ReflogReaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogReaderTest.cs,testReadOneLine,The following statement contains a magic number: Assert.AreEqual(120' e.getWho().TimeZoneOffset);
Magic Number,GitSharp.Core.Tests,ReflogReaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogReaderTest.cs,testReadTwoLine,The following statement contains a magic number: Assert.AreEqual(2' reverseEntries.Count);
Magic Number,GitSharp.Core.Tests,ReflogReaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogReaderTest.cs,testReadTwoLine,The following statement contains a magic number: Assert.AreEqual(60' e.getWho().TimeZoneOffset);
Magic Number,GitSharp.Core.Tests,ReflogReaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogReaderTest.cs,testReadTwoLine,The following statement contains a magic number: Assert.AreEqual(-60' e.getWho().TimeZoneOffset);
Magic Number,GitSharp.Core.Tests,ReflogReaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogReaderTest.cs,testReadWhileAppendIsInProgress,The following statement contains a magic number: Assert.AreEqual(2' reverseEntries.Count);
Magic Number,GitSharp.Core.Tests,ReflogReaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\ReflogReaderTest.cs,testReadWhileAppendIsInProgress,The following statement contains a magic number: Assert.AreEqual(60' e.getWho().TimeZoneOffset);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testUpdateRefDetached,The following statement contains a magic number: Assert.AreEqual(1250379778000L' e.getWho().When);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testUpdateRefDetachedUnbornHead,The following statement contains a magic number: Assert.AreEqual(1250379778000L' e.getWho().When);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameBranchHasPreviousLog,The following statement contains a magic number: Assert.AreEqual(2' db.ReflogReader("new/name").getReverseEntries().Count);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameCurrentBranch,The following statement contains a magic number: Assert.AreEqual(2' db.ReflogReader("new/name").getReverseEntries().Count);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameBranchAlsoInPack,The following statement contains a magic number: Assert.AreEqual(3' db.ReflogReader("refs/heads/new/name").getReverseEntries().Count);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameRefNameColission1avoided,The following statement contains a magic number: Assert.AreEqual(3' db.ReflogReader("a/b").getReverseEntries().Count);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameRefNameColission1avoided,The following statement contains a magic number: Assert.AreEqual("Setup"' db.ReflogReader("a/b").getReverseEntries()                      [2].getComment());
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameRefNameColission2avoided,The following statement contains a magic number: Assert.AreEqual(3' db.ReflogReader("prefix").getReverseEntries().Count);
Magic Number,GitSharp.Core.Tests,RefUpdateTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefUpdateTest.cs,testRenameRefNameColission2avoided,The following statement contains a magic number: Assert.AreEqual("Setup"' db.ReflogReader("prefix").getReverseEntries()[2].getComment());
Magic Number,GitSharp.Core.Tests,RepositoryCacheTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryCacheTest.cs,testBareFileKey,The following statement contains a magic number: name = name.Slice(0' name.Length - 4);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual("06/21/2009 15:04:53 +02:00"' 1245589493000L.MillisToDateTimeOffset(2 * 60).ToString(CultureInfo.InvariantCulture));
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual("06/21/2009 15:04:53 +02:00"' 1245589493000L.MillisToDateTimeOffset(2 * 60).ToString(CultureInfo.InvariantCulture));
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual("06/21/2009 15:04:53 +02:00"' 1245589493000L.MillisToDateTimeOffset(2 * 60).ToString(CultureInfo.InvariantCulture));
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual("04/29/2009 18:41:17 -07:00"' 1241055677000L.MillisToDateTimeOffset(-7 * 60).ToString(CultureInfo.InvariantCulture));
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual("04/29/2009 18:41:17 -07:00"' 1241055677000L.MillisToDateTimeOffset(-7 * 60).ToString(CultureInfo.InvariantCulture));
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual("04/29/2009 18:41:17 -07:00"' 1241055677000L.MillisToDateTimeOffset(-7 * 60).ToString(CultureInfo.InvariantCulture));
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1245589493000L' new DateTimeOffset(2009' 06' 21' 15' 04' 53' new TimeSpan(2' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,GitTimeToDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(1241055677000L' new DateTimeOffset(2009' 04' 29' 18' 41' 17' new TimeSpan(-7' 0' 0)).ToMillisecondsSinceEpoch());
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test001_NewIdent,The following statement contains a magic number: p = new PersonIdent("A U Thor"' "author@example.com"' 1142878501000L.MillisToUtcDateTime()'                                      (int)new TimeSpan(-5' 0' 0).TotalMinutes);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test001_NewIdent,The following statement contains a magic number: p = new PersonIdent("A U Thor"' "author@example.com"' 1142878501000L.MillisToUtcDateTime()'                                      (int)new TimeSpan(-5' 0' 0).TotalMinutes);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test001_NewIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test002_ParseIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test003_ParseIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test004_ParseIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test005_ParseIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test006_ParseIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0001_PersonIdent,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_PersonIdent.cs,test007_ParseIdent,The following statement contains a magic number: Assert.AreEqual(1142878501000L' p.When);
Magic Number,GitSharp.Core.Tests,T0002_Tree,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0002_Tree.cs,test007_manyFileLookup,The following statement contains a magic number: var files = new List<FileTreeEntry>(26 * 26);
Magic Number,GitSharp.Core.Tests,T0002_Tree,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0002_Tree.cs,test007_manyFileLookup,The following statement contains a magic number: var files = new List<FileTreeEntry>(26 * 26);
Magic Number,GitSharp.Core.Tests,T0002_Tree,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0002_Tree.cs,test008_SubtreeInternalSorting,The following statement contains a magic number: Assert.AreSame(e3' ents[2]);
Magic Number,GitSharp.Core.Tests,T0002_Tree,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0002_Tree.cs,test008_SubtreeInternalSorting,The following statement contains a magic number: Assert.AreSame(e4' ents[3]);
Magic Number,GitSharp.Core.Tests,T0002_Tree,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0002_Tree.cs,test008_SubtreeInternalSorting,The following statement contains a magic number: Assert.AreSame(e2' ents[4]);
Magic Number,GitSharp.Core.Tests,T0004_PackReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0004_PackReader.cs,test003_lookupCompressedObject,The following statement contains a magic number: Assert.AreEqual(35' or.Size);
Magic Number,GitSharp.Core.Tests,T0004_PackReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0004_PackReader.cs,test003_lookupCompressedObject,The following statement contains a magic number: Assert.AreEqual(7738' or.DataOffset);
Magic Number,GitSharp.Core.Tests,T0004_PackReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0004_PackReader.cs,test004_lookupDeltifiedObject,The following statement contains a magic number: Assert.AreEqual(18009' or.Size);
Magic Number,GitSharp.Core.Tests,T0004_PackReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0004_PackReader.cs,test004_lookupDeltifiedObject,The following statement contains a magic number: Assert.AreEqual(537' ((PackedObjectLoader)or).DataOffset);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree,The following statement contains a magic number: Assert.AreEqual(3' members.Count);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree,The following statement contains a magic number: Assert.AreEqual("a@b"' members[2].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree,The following statement contains a magic number: Assert.AreEqual(3' members.Count);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree,The following statement contains a magic number: Assert.AreEqual(3' membersr.Count);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree,The following statement contains a magic number: Assert.AreEqual("a@b"' membersr[2].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree,The following statement contains a magic number: Assert.AreEqual(3' membersr.Count);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual(6' members.Count);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a/b"' members[2].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a/c/c"' members[3].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a/d"' members[4].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a@b"' members[5].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual(6' membersr.Count);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a/b"' membersr[2].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a/c/c"' membersr[3].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a/d"' membersr[4].Name);
Magic Number,GitSharp.Core.Tests,T0007_Index,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0007_Index.cs,testReadTree2,The following statement contains a magic number: Assert.AreEqual("a@b"' membersr[5].Name);
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,setUp,The following statement contains a magic number: var testObject = new TestObject  								{  									Id = ObjectId.FromString(parts[0])'  									Type = parts[1]'  									RawSize = Convert.ToInt32(parts[2])'                                      // parts[3] is the size-in-pack  									Offset = Convert.ToInt64(parts[4])  								};
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,setUp,The following statement contains a magic number: var testObject = new TestObject  								{  									Id = ObjectId.FromString(parts[0])'  									Type = parts[1]'  									RawSize = Convert.ToInt32(parts[2])'                                      // parts[3] is the size-in-pack  									Offset = Convert.ToInt64(parts[4])  								};
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,setUp,The following statement contains a magic number: Assert.AreEqual(96' _toLoad.Count);
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,testCache_Defaults,The following statement contains a magic number: Assert.AreEqual(6' cache.getOpenFiles());
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,testCache_Defaults,The following statement contains a magic number: Assert.AreEqual(17346' cache.getOpenBytes());
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,testCache_TooFewFiles,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitOpenFiles = 2 };
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,testCache_TooSmallLimit,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitWindowSize = 4096' PackedGitLimit = 4096 };
Magic Number,GitSharp.Core.Tests,WindowCacheGetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheGetTest.cs,testCache_TooSmallLimit,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitWindowSize = 4096' PackedGitLimit = 4096 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_PackedGitWindowSize_512,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitWindowSize = 512 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_PackedGitWindowSize_4097,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitWindowSize = 4097 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitLimit = 1024' PackedGitWindowSize = 8192 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitLimit = 1024' PackedGitWindowSize = 8192 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_Limits1,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitLimit = 6 * 4096 / 5' PackedGitWindowSize = 4096 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_Limits1,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitLimit = 6 * 4096 / 5' PackedGitWindowSize = 4096 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_Limits1,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitLimit = 6 * 4096 / 5' PackedGitWindowSize = 4096 };
Magic Number,GitSharp.Core.Tests,WindowCacheReconfigureTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\WindowCacheReconfigureTest.cs,testConfigureCache_Limits1,The following statement contains a magic number: var cfg = new WindowCacheConfig { PackedGitLimit = 6 * 4096 / 5' PackedGitWindowSize = 4096 };
Magic Number,GitSharp.Core.Tests,XInputStream,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\XInputStream.cs,ReadUInt32,The following statement contains a magic number: ReadFully(_intbuf' 0' 4);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheEntryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheEntryTest.cs,testCreate_ByStringPathAndStage,The following statement contains a magic number: e = new DirCacheEntry("a/c"' 2);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheEntryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheEntryTest.cs,testCreate_ByStringPathAndStage,The following statement contains a magic number: Assert.AreEqual(2' e.getStage());
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheEntryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheEntryTest.cs,testCreate_ByStringPathAndStage,The following statement contains a magic number: e = new DirCacheEntry("a/d"' 3);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheEntryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheEntryTest.cs,testCreate_ByStringPathAndStage,The following statement contains a magic number: Assert.AreEqual(3' e.getStage());
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheEntryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheEntryTest.cs,testCreate_ByStringPathAndStage,The following statement contains a magic number: new DirCacheEntry("a"' -11);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheEntryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheEntryTest.cs,testCreate_ByStringPathAndStage,The following statement contains a magic number: new DirCacheEntry("a"' 4);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBasicTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBasicTest.cs,testWriteEmptyUnlock_RealIndex,The following statement contains a magic number: Assert.AreEqual(12 + 20' new FileInfo(lck.FullName).Length);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBasicTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBasicTest.cs,testWriteEmptyUnlock_RealIndex,The following statement contains a magic number: Assert.AreEqual(12 + 20' new FileInfo(lck.FullName).Length);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBasicTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBasicTest.cs,testWriteEmptyCommit_RealIndex,The following statement contains a magic number: Assert.AreEqual(12 + 20' new FileInfo(lck.FullName).Length);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBasicTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBasicTest.cs,testWriteEmptyCommit_RealIndex,The following statement contains a magic number: Assert.AreEqual(12 + 20' new FileInfo(lck.FullName).Length);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBasicTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBasicTest.cs,testWriteEmptyCommit_RealIndex,The following statement contains a magic number: Assert.AreEqual(12 + 20' new FileInfo(idx.FullName).Length);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBasicTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBasicTest.cs,testWriteEmptyCommit_RealIndex,The following statement contains a magic number: Assert.AreEqual(12 + 20' new FileInfo(idx.FullName).Length);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBuilderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBuilderTest.cs,testBuildOneFile_FinishWriteCommit,The following statement contains a magic number: long lastModified = 1218123387057L;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBuilderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBuilderTest.cs,testBuildOneFile_FinishWriteCommit,The following statement contains a magic number: int Length = 1342;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBuilderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBuilderTest.cs,testBuildOneFile_Commit,The following statement contains a magic number: long lastModified = 1218123387057L;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBuilderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBuilderTest.cs,testBuildOneFile_Commit,The following statement contains a magic number: int Length = 1342;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheBuilderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBuilderTest.cs,testFindSingleFile,The following statement contains a magic number: Assert.AreEqual(-2' dc.findEntry("a-zoo"));
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,CGitIndexRecord,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheCGitCompatabilityTest.cs,CGitIndexRecord,The following statement contains a magic number: Mode = NB.BaseToDecimal(line.Slice(0' sp1)' 8);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,CGitLsTreeRecord,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheCGitCompatabilityTest.cs,CGitLsTreeRecord,The following statement contains a magic number: Mode = NB.BaseToDecimal(line.Slice(0' sp1)' 8);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheFindTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheFindTest.cs,testEntriesWithin,The following statement contains a magic number: int aLast = 3;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheIteratorTest.cs,testSingleSubtree_NoRecursion,The following statement contains a magic number: var expPos = new[] { 0' -1' 4 };
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testPath_4090,The following statement contains a magic number: testLongPath(4090);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testPath_4094,The following statement contains a magic number: testLongPath(4094);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testPath_4095,The following statement contains a magic number: testLongPath(4095);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testPath_4096,The following statement contains a magic number: testLongPath(4096);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testPath_16384,The following statement contains a magic number: testLongPath(16384);
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testLongPath,The following statement contains a magic number: Assert.AreEqual(2' dc1.getEntryCount());
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,testLongPath,The following statement contains a magic number: Assert.AreEqual(2' dc2.getEntryCount());
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheLargePathTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheLargePathTest.cs,makeLongPath,The following statement contains a magic number: r.Append('a' + (i % 26));
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheTreeTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheTreeTest.cs,testSingleSubtree,The following statement contains a magic number: int aLast = 3;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheTreeTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheTreeTest.cs,testTwoLevelSubtree,The following statement contains a magic number: int aLast = 4;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheTreeTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheTreeTest.cs,testTwoLevelSubtree,The following statement contains a magic number: int acFirst = 2;
Magic Number,GitSharp.Tests.GitSharp.Core.DirectoryCache,DirCacheTreeTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheTreeTest.cs,testTwoLevelSubtree,The following statement contains a magic number: int acLast = 3;
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testCreate,The following statement contains a magic number: Assert.AreEqual(2' PathUtil.CombineDirectoryPath(d' "refs").GetFileSystemInfos().Length);
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_HeadOnOneBranch,The following statement contains a magic number: Assert.AreEqual(2' all.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DeatchedHead2,The following statement contains a magic number: Assert.AreEqual(2' all.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_HeadBranchNotBorn,The following statement contains a magic number: Assert.AreEqual(2' all.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_IgnoresGarbageRef4,The following statement contains a magic number: Assert.AreEqual(3' heads.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_IgnoresGarbageRef4,The following statement contains a magic number: Assert.AreEqual(2' heads.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_HeadsOnly_AllLoose,The following statement contains a magic number: Assert.AreEqual(2' heads.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_HeadsOnly_SymrefToPacked,The following statement contains a magic number: Assert.AreEqual(2' heads.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_HeadsOnly_Mixed,The following statement contains a magic number: Assert.AreEqual(2' heads.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversNewLoose1,The following statement contains a magic number: Assert.AreEqual(2' orig.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversNewLoose1,The following statement contains a magic number: Assert.AreEqual(3' next.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversNewLoose2,The following statement contains a magic number: Assert.AreEqual(2' next.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose1,The following statement contains a magic number: Assert.AreEqual(3' orig.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose1,The following statement contains a magic number: Assert.AreEqual(2' next.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose2,The following statement contains a magic number: Assert.AreEqual(3' orig.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose2,The following statement contains a magic number: Assert.AreEqual(2' next.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose3,The following statement contains a magic number: Assert.AreEqual(5' orig.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose3,The following statement contains a magic number: Assert.AreEqual(3' next.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose4,The following statement contains a magic number: Assert.AreEqual(3' orig.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose5,The following statement contains a magic number: Assert.AreEqual(3' orig.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_DiscoversDeletedLoose5,The following statement contains a magic number: Assert.AreEqual(3' next.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_SkipsLockFiles,The following statement contains a magic number: Assert.AreEqual(2' all.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_PackedNotPeeled_Sorted,The following statement contains a magic number: Assert.AreEqual(4' all.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,testGetRefs_PackedWithPeeled,The following statement contains a magic number: Assert.AreEqual(4' all.size());
Magic Number,GitSharp.Tests.GitSharp.Core,RefDirectoryTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RefDirectoryTest.cs,BUG_WorkAroundRacyGitIssues,The following statement contains a magic number: long set = 1250379778668L;
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,test002_ReadWithSubsection,The following statement contains a magic number: Assert.AreEqual(3' c.getInt("foo"' "zap"' "n"' 4));
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,test002_ReadWithSubsection,The following statement contains a magic number: Assert.AreEqual(3' c.getInt("foo"' "zap"' "n"' 4));
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,test002_ReadWithSubsection,The following statement contains a magic number: Assert.AreEqual(4' c.getInt("foo"' "zap"' "m"' 4));
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,test002_ReadWithSubsection,The following statement contains a magic number: Assert.AreEqual(4' c.getInt("foo"' "zap"' "m"' 4));
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(3L * 1024 * 1024' "3 m");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(3L * 1024 * 1024' "3 m");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(3L * 1024 * 1024' "3 m");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(8L * 1024' "8 k");
Magic Number,GitSharp.Tests.GitSharp.Core,RepositoryConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RepositoryConfigTest.cs,testReadLong,The following statement contains a magic number: assertReadLong(8L * 1024' "8 k");
Magic Number,GitSharp.Tests.GitSharp.Core,T0001_ObjectId,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_ObjectId.cs,GetFirstByteTest,The following statement contains a magic number: var iInHex = i.ToString("x").PadLeft(2' '0');
Magic Number,GitSharp.Tests.GitSharp.Core,T0001_ObjectId,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_ObjectId.cs,GetFirstByteTest,The following statement contains a magic number: var firstFourBytes = iInHex + j.ToString("x").PadLeft(6' '0');
Magic Number,GitSharp.Tests.GitSharp.Core,T0001_ObjectId,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0001_ObjectId.cs,GetFirstByteTest,The following statement contains a magic number: i < 255
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test001_Initalize,The following statement contains a magic number: Assert.AreEqual(2' objects.ListFiles().Length);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test001_Initalize,The following statement contains a magic number: Assert.AreEqual(23' HEAD.Length);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Tree,The following statement contains a magic number: b1.BaseStream.Position = b1.BaseStream.Length - 21;
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Tree,The following statement contains a magic number: b2.BaseStream.Position = b2.BaseStream.Length - 21;
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Tree,The following statement contains a magic number: b2.BaseStream.Position = b2.BaseStream.Length - 20;
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Tree,The following statement contains a magic number: var git_id = ObjectId.FromRaw(b2.ReadBytes(20));
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Committer = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Message = ("A Commit\n")'                              TreeEntry = (t)                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Committer = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Message = ("A Commit\n")'                              TreeEntry = (t)                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Committer = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Message = ("A Commit\n")'                              TreeEntry = (t)                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Committer = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Message = ("A Commit\n")'                              TreeEntry = (t)                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Committer = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Message = ("A Commit\n")'                              TreeEntry = (t)                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,Write_Simple_Commit,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Committer = (new PersonIdent("henon"' "meinrad.recheis@gmail.com"' 1245946742000L' 2*60))'                              Message = ("A Commit\n")'                              TreeEntry = (t)                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent(author' 1154236443000L' -4*60))'                              Committer = (new PersonIdent(committer' 1154236443000L' -4*60))'                              Message = ("A Commit\n")'                              TreeEntry = t                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent(author' 1154236443000L' -4*60))'                              Committer = (new PersonIdent(committer' 1154236443000L' -4*60))'                              Message = ("A Commit\n")'                              TreeEntry = t                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent(author' 1154236443000L' -4*60))'                              Committer = (new PersonIdent(committer' 1154236443000L' -4*60))'                              Message = ("A Commit\n")'                              TreeEntry = t                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent(author' 1154236443000L' -4*60))'                              Committer = (new PersonIdent(committer' 1154236443000L' -4*60))'                              Message = ("A Commit\n")'                              TreeEntry = t                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent(author' 1154236443000L' -4*60))'                              Committer = (new PersonIdent(committer' 1154236443000L' -4*60))'                              Message = ("A Commit\n")'                              TreeEntry = t                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: var c = new global::GitSharp.Core.Commit(db)                          {                              Author = (new PersonIdent(author' 1154236443000L' -4*60))'                              Committer = (new PersonIdent(committer' 1154236443000L' -4*60))'                              Message = ("A Commit\n")'                              TreeEntry = t                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test009_CreateCommitOldFormat,The following statement contains a magic number: Assert.IsTrue(0x789c % 31 == 0);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test020_createBlobTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = emptyId'                              TagType = "blob"'                              TagName = "test020"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test020 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test020_createBlobTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = emptyId'                              TagType = "blob"'                              TagName = "test020"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test020 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test020_createBlobTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = emptyId'                              TagType = "blob"'                              TagName = "test020"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test020 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test020_createBlobTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' MapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test020_createBlobTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' MapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test020_createBlobTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' MapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test021_createTreeTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = almostEmptyTreeId'                              TagType = "tree"'                              TagName = "test021"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test021 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test021_createTreeTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = almostEmptyTreeId'                              TagType = "tree"'                              TagName = "test021"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test021 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test021_createTreeTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = almostEmptyTreeId'                              TagType = "tree"'                              TagName = "test021"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test021 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test021_createTreeTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' MapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test021_createTreeTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' MapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test021_createTreeTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' MapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var almostEmptyCommit = new global::GitSharp.Core.Commit(db)                                          {                                              Author = new PersonIdent(author' 1154236443000L' -2*60)'                                              Committer = new PersonIdent(author' 1154236443000L' -2*60)'                                              Message = "test022\n"'                                              TreeId = almostEmptyTreeId                                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var almostEmptyCommit = new global::GitSharp.Core.Commit(db)                                          {                                              Author = new PersonIdent(author' 1154236443000L' -2*60)'                                              Committer = new PersonIdent(author' 1154236443000L' -2*60)'                                              Message = "test022\n"'                                              TreeId = almostEmptyTreeId                                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var almostEmptyCommit = new global::GitSharp.Core.Commit(db)                                          {                                              Author = new PersonIdent(author' 1154236443000L' -2*60)'                                              Committer = new PersonIdent(author' 1154236443000L' -2*60)'                                              Message = "test022\n"'                                              TreeId = almostEmptyTreeId                                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var almostEmptyCommit = new global::GitSharp.Core.Commit(db)                                          {                                              Author = new PersonIdent(author' 1154236443000L' -2*60)'                                              Committer = new PersonIdent(author' 1154236443000L' -2*60)'                                              Message = "test022\n"'                                              TreeId = almostEmptyTreeId                                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var almostEmptyCommit = new global::GitSharp.Core.Commit(db)                                          {                                              Author = new PersonIdent(author' 1154236443000L' -2*60)'                                              Committer = new PersonIdent(author' 1154236443000L' -2*60)'                                              Message = "test022\n"'                                              TreeId = almostEmptyTreeId                                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var almostEmptyCommit = new global::GitSharp.Core.Commit(db)                                          {                                              Author = new PersonIdent(author' 1154236443000L' -2*60)'                                              Committer = new PersonIdent(author' 1154236443000L' -2*60)'                                              Message = "test022\n"'                                              TreeId = almostEmptyTreeId                                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = almostEmptyCommitId'                              TagType = "commit"'                              TagName = "test022"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test022 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = almostEmptyCommitId'                              TagType = "commit"'                              TagName = "test022"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test022 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: var t = new global::GitSharp.Core.Tag(db)                          {                              Id = almostEmptyCommitId'                              TagType = "commit"'                              TagName = "test022"'                              Author = new PersonIdent(author' 1154236443000L' -4*60)'                              Message = "test022 tagged\n"                          };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test022_createCommitTag,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test023_createCommitNonAnullii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Constants.CHARSET'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test023_createCommitNonAnullii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Constants.CHARSET'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test023_createCommitNonAnullii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Constants.CHARSET'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test023_createCommitNonAnullii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Constants.CHARSET'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test024_createCommitNonAscii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Encoding.GetEncoding("ISO-8859-1")'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test024_createCommitNonAscii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Encoding.GetEncoding("ISO-8859-1")'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test024_createCommitNonAscii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Encoding.GetEncoding("ISO-8859-1")'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test024_createCommitNonAscii,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(db)                               {                                   TreeId = almostEmptyTreeId'                                   Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L' 60)'                                   Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L' 60)'                                   Encoding = Encoding.GetEncoding("ISO-8859-1")'                                   Message = "\u00dcbergeeks"                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag20.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag20.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag20.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag21.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag21.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag21.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag22.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag22.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test025_packedRefs,The following statement contains a magic number: Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)' mapTag22.Author);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c1 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c1 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c1 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c1 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c1 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c1 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c2 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 2\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c2 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 2\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c2 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 2\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c2 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 2\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c2 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 2\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c2 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 2\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c3 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 3\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c3 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 3\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c3 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 3\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c3 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 3\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c3 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 3\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c3 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 3\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: Assert.AreEqual(2' rm3.ParentIds.Length);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c4 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 4\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c4 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 4\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c4 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 4\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c4 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 4\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c4 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 4\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: var c4 = new global::GitSharp.Core.Commit(db)                           {                               Author = new PersonIdent(author' 1154236443000L' -4*60)'                               Committer = new PersonIdent(committer' 1154236443000L' -4*60)'                               Message = "A Commit 4\n"'                               TreeEntry = t                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: Assert.AreEqual(3' rm4.ParentIds.Length);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test026_CreateCommitMultipleparents,The following statement contains a magic number: Assert.AreEqual(c3.CommitId' rm4.ParentIds[2]);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The following statement contains a magic number: c.PackedGitLimit = (128 * WindowCacheConfig.Kb);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The following statement contains a magic number: c.PackedGitWindowSize = (8 * WindowCacheConfig.Kb);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,test029_mapObject_using_memory_mapped_file,The following statement contains a magic number: c.DeltaBaseCacheLimit = (8 * WindowCacheConfig.Kb);
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,BUG_WorkAroundRacyGitIssues,The following statement contains a magic number: long set = 1250379778668L;
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(repo)                               {                                   Author = new PersonIdent(author' (0L)' 60)'                                   Committer = new PersonIdent(committer' (0L)' 60)'                                   Message = "Foo\n\nMessage"'                                   TreeEntry = tree                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The following statement contains a magic number: var commit = new global::GitSharp.Core.Commit(repo)                               {                                   Author = new PersonIdent(author' (0L)' 60)'                                   Committer = new PersonIdent(committer' (0L)' 60)'                                   Message = "Foo\n\nMessage"'                                   TreeEntry = tree                               };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The following statement contains a magic number: commit = new global::GitSharp.Core.Commit(repo)                           {                               Author = new PersonIdent(author' (0L)' 60)'                               Committer = new PersonIdent(committer' (0L)' 60)'                               Message = "Modified"'                               ParentIds = new[] { commitId }'                               TreeEntry = tree                           };
Magic Number,GitSharp.Tests.GitSharp.Core,T0003_Basic_Write,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\T0003_Basic_Write.cs,testTwoSuccessiveCommitsLinkedToHead,The following statement contains a magic number: commit = new global::GitSharp.Core.Commit(repo)                           {                               Author = new PersonIdent(author' (0L)' 60)'                               Committer = new PersonIdent(committer' (0L)' 60)'                               Message = "Modified"'                               ParentIds = new[] { commitId }'                               TreeEntry = tree                           };
Magic Number,GitSharp.Core.Tests.Diff,DiffFormatterReflowTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\DiffFormatterReflowTest.cs,testContext3,The following statement contains a magic number: fmt.setContext(3);
Magic Number,GitSharp.Core.Tests.Diff,DiffFormatterReflowTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\DiffFormatterReflowTest.cs,testContext5,The following statement contains a magic number: fmt.setContext(5);
Magic Number,GitSharp.Core.Tests.Diff,DiffFormatterReflowTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\DiffFormatterReflowTest.cs,testContext10,The following statement contains a magic number: fmt.setContext(10);
Magic Number,GitSharp.Core.Tests.Diff,DiffFormatterReflowTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\DiffFormatterReflowTest.cs,testContext100,The following statement contains a magic number: fmt.setContext(100);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddOne,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddTwo,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testAddTwo,The following statement contains a magic number: Assert.AreEqual(2' l.size());
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testSet,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testRemove,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditListTest.cs,testRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreate,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreate,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreate,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreate,The following statement contains a magic number: Assert.AreEqual(2' e.EndA);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreate,The following statement contains a magic number: Assert.AreEqual(3' e.BeginB);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreate,The following statement contains a magic number: Assert.AreEqual(4' e.EndB);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreateEmpty,The following statement contains a magic number: Edit e = new Edit(1' 3);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreateEmpty,The following statement contains a magic number: Assert.AreEqual(3' e.BeginB);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testCreateEmpty,The following statement contains a magic number: Assert.AreEqual(3' e.EndB);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testSwap,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testSwap,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testSwap,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testSwap,The following statement contains a magic number: Assert.AreEqual(3' e.BeginA);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testSwap,The following statement contains a magic number: Assert.AreEqual(4' e.EndA);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testSwap,The following statement contains a magic number: Assert.AreEqual(2' e.EndB);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Insert,The following statement contains a magic number: Edit e = new Edit(1' 1' 1' 2);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Delete,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Replace,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Replace,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Empty,The following statement contains a magic number: Assert.AreEqual(Edit.Type.EMPTY' new Edit(1' 1' 2' 2).EditType);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Empty,The following statement contains a magic number: Assert.AreEqual(Edit.Type.EMPTY' new Edit(1' 1' 2' 2).EditType);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testType_Empty,The following statement contains a magic number: Assert.AreEqual(Edit.Type.EMPTY' new Edit(1' 2).EditType);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testToString,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testToString,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testEquals1,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testEquals1,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testEquals1,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testEquals1,The following statement contains a magic number: Edit e2 = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testEquals1,The following statement contains a magic number: Edit e2 = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testEquals1,The following statement contains a magic number: Edit e2 = new Edit(1' 2' 3' 4);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals1,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals1,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals1,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals1,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals1,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals1,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals2,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals2,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals2,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals2,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals2,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals3,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals3,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals3,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals3,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals3,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals4,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals4,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals4,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals4,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testNotEquals4,The following statement contains a magic number: Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendA,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendA,The following statement contains a magic number: Assert.AreEqual(new Edit(1' 3' 1' 1)' e);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendA,The following statement contains a magic number: Assert.AreEqual(new Edit(1' 4' 1' 1)' e);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendB,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendB,The following statement contains a magic number: Assert.AreEqual(new Edit(1' 2' 1' 2)' e);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendB,The following statement contains a magic number: Assert.AreEqual(new Edit(1' 2' 1' 2)' e);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendB,The following statement contains a magic number: Assert.AreEqual(new Edit(1' 2' 1' 3)' e);
Magic Number,GitSharp.Core.Tests.Diff,EditTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\EditTest.cs,testExtendB,The following statement contains a magic number: Assert.AreEqual(new Edit(1' 2' 1' 3)' e);
Magic Number,GitSharp.Core.Tests.Diff,RawTextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\RawTextTest.cs,testEquals,The following statement contains a magic number: Assert.AreEqual(2' a.size());
Magic Number,GitSharp.Core.Tests.Diff,RawTextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\RawTextTest.cs,testEquals,The following statement contains a magic number: Assert.AreEqual(2' b.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,DiffTestDataGenerator,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\DiffTestDataGenerator.cs,generateSequence,The following statement contains a magic number: text.Append((char) (32 + i % 95));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,DiffTestDataGenerator,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\DiffTestDataGenerator.cs,generateSequence,The following statement contains a magic number: text.Append((char) (32 + i % 95));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: perfData.Add(test(10000));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: perfData.Add(test(20000));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: perfData.Add(test(50000));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: perfData.Add(test(80000));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: perfData.Add(test(99999));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: perfData.Add(test(999999));
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: string a = DiffTestDataGenerator.generateSequence(characters' 971' 3);
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: string a = DiffTestDataGenerator.generateSequence(characters' 971' 3);
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: string b = DiffTestDataGenerator.generateSequence(characters' 1621' 5);
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,MyersDiffPerformanceTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,test,The following statement contains a magic number: string b = DiffTestDataGenerator.generateSequence(characters' 1621' 5);
Magic Number,GitSharp.Tests.GitSharp.Core.Diff,PerfData,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Diff\MyersDiffPerformanceTest.cs,toString,The following statement contains a magic number: return ("diffing " + N / 2 + " bytes took " + runningTime  						  + " ns. N=" + N + "' D=" + D + "' time/(N*D):"  						  + fmt(perf1()) + "' time/(N*D^2):" + fmt  																				 (perf2()));
Magic Number,GitSharp.Core.Tests.DirectoryCache,DirCacheBuilderIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\DirectoryCache\DirCacheBuilderIteratorTest.cs,testPathFilterGroup_DoesNotSkipTail,The following statement contains a magic number: const int expIdx = 2;
Magic Number,GitSharp.Core.Tests.FnMatch,FileNameMatcherTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\FnMatch\FileNameMatcherTest.cs,testCntrlGroupCase1,The following statement contains a magic number: AssertMatch("[[:cntrl:]]"' Convert.ToString((char)7)' true' false);
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testHunkHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(2' e.size());
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testFileHeader,The following statement contains a magic number: Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(3' e.size());
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e.get(0));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e.get(1));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e.get(2));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e.get(2));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e.get(2));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e.get(2));
Magic Number,GitSharp.Core.Tests.Patch,EditListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\EditListTest.cs,testTypes,The following statement contains a magic number: Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e.get(2));
Magic Number,GitSharp.Core.Tests.Patch,FileHeaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\FileHeaderTest.cs,testParseRename100_NewStyle,The following statement contains a magic number: Assert.AreEqual(100' fh.getScore());
Magic Number,GitSharp.Core.Tests.Patch,FileHeaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\FileHeaderTest.cs,testParseRename100_OldStyle,The following statement contains a magic number: Assert.AreEqual(100' fh.getScore());
Magic Number,GitSharp.Core.Tests.Patch,FileHeaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\FileHeaderTest.cs,testParseCopy100,The following statement contains a magic number: Assert.AreEqual(100' fh.getScore());
Magic Number,GitSharp.Core.Tests.Patch,FileHeaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\FileHeaderTest.cs,testParseAbbrIndexLine_WithMode,The following statement contains a magic number: const int a = 7;
Magic Number,GitSharp.Core.Tests.Patch,FileHeaderTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\FileHeaderTest.cs,testParseAbbrIndexLine_NoMode,The following statement contains a magic number: const int a = 7;
Magic Number,GitSharp.Core.Tests.Patch,GetTextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\GetTextTest.cs,testGetText_BothISO88591,The following statement contains a magic number: Assert.AreEqual(2' fh.Hunks.Count);
Magic Number,GitSharp.Core.Tests.Patch,GetTextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\GetTextTest.cs,testGetText_Convert,The following statement contains a magic number: Assert.AreEqual(2' fh.Hunks.Count);
Magic Number,GitSharp.Core.Tests.Patch,GetTextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\GetTextTest.cs,ReadTestPatchFile,The following statement contains a magic number: var tmp = new char[2048];
Magic Number,GitSharp.Core.Tests.Patch,PatchCcErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcErrorTest.cs,testError_CcTruncatedOld,The following statement contains a magic number: Assert.AreEqual(3' p.getErrors().Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcErrorTest.cs,testError_CcTruncatedOld,The following statement contains a magic number: Assert.AreEqual(346' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchCcErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcErrorTest.cs,testError_CcTruncatedOld,The following statement contains a magic number: Assert.AreEqual(346' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchCcErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcErrorTest.cs,testError_CcTruncatedOld,The following statement contains a magic number: FormatError e = p.getErrors()[2];
Magic Number,GitSharp.Core.Tests.Patch,PatchCcErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcErrorTest.cs,testError_CcTruncatedOld,The following statement contains a magic number: Assert.AreEqual(346' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(98' cfh.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(2' cfh.ParentCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(346' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(764' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(55' h.GetOldImage(0).StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(12' h.GetOldImage(0).LineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(3' h.GetOldImage(0).LinesAdded);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(163' h.GetOldImage(1).StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(13' h.GetOldImage(1).LineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(2' h.GetOldImage(1).LinesAdded);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(163' h.NewStartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(15' h.NewLineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_OneFileCc,The following statement contains a magic number: Assert.AreEqual(10' h.LinesContext);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_CcNewFile,The following statement contains a magic number: Assert.AreEqual(187' cfh.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_CcNewFile,The following statement contains a magic number: Assert.AreEqual(2' cfh.ParentCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_CcNewFile,The following statement contains a magic number: Assert.AreEqual(273' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_CcNewFile,The following statement contains a magic number: Assert.AreEqual(300' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_CcDeleteFile,The following statement contains a magic number: Assert.AreEqual(187' cfh.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchCcTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchCcTest.cs,testParse_CcDeleteFile,The following statement contains a magic number: Assert.AreEqual(2' cfh.ParentCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_DisconnectedHunk,The following statement contains a magic number: Assert.AreEqual(18' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_TruncatedOld,The following statement contains a magic number: Assert.AreEqual(313' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_TruncatedNew,The following statement contains a magic number: Assert.AreEqual(313' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_BodyTooLong,The following statement contains a magic number: Assert.AreEqual(349' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_GarbageBetweenFiles,The following statement contains a magic number: Assert.AreEqual(2' p.getFiles().Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_GarbageBetweenFiles,The following statement contains a magic number: Assert.AreEqual(926' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_GitBinaryNoForwardHunk,The following statement contains a magic number: Assert.AreEqual(2' p.getFiles().Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchErrorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchErrorTest.cs,testError_GitBinaryNoForwardHunk,The following statement contains a magic number: Assert.AreEqual(297' e.getOffset());
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2' p.getFiles().Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(572' fRepositoryConfigTest.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(1490' fRepositoryConfig.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(921' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(109' h.OldImage.StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(4' h.OldImage.LineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(109' h.NewStartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(11' h.NewLineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(4' h.LinesContext);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(7' h.OldImage.LinesAdded);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(1490' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(3' fRepositoryConfig.Hunks.Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(1803' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(236' h.OldImage.StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(9' h.OldImage.LineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(236' h.NewStartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(9' h.NewLineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(7' h.LinesContext);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2' h.OldImage.LinesAdded);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2' h.OldImage.LinesDeleted);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2434' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2434' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(300' h.OldImage.StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(7' h.OldImage.LineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(300' h.NewStartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(7' h.NewLineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(6' h.LinesContext);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2816' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: HunkHeader h = fRepositoryConfig.Hunks[2];
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2816' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(954' h.OldImage.StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(7' h.OldImage.LineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(954' h.NewStartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(7' h.NewLineCount);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(6' h.LinesContext);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_ConfigCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(3035' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_NoBinary,The following statement contains a magic number: Assert.AreEqual(5' p.getFiles().Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_NoBinary,The following statement contains a magic number: i < 4
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_NoBinary,The following statement contains a magic number: FileHeader fh = p.getFiles()[4];
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_NoBinary,The following statement contains a magic number: Assert.AreEqual(272' fh.Hunks[0].OldImage.StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = { 359' 393' 372' 404 };
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = { 359' 393' 372' 404 };
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = { 359' 393' 372' 404 };
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = { 359' 393' 372' 404 };
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: Assert.AreEqual(5' p.getFiles().Count);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: i < 4
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: FileHeader fh = p.getFiles()[4];
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryLiteral,The following statement contains a magic number: Assert.AreEqual(272' fh.Hunks[0].OldImage.StartLine);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryDelta,The following statement contains a magic number: Assert.AreEqual(12' fwd.getSize());
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryDelta,The following statement contains a magic number: Assert.AreEqual(11' rev.getSize());
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_GitBinaryDelta,The following statement contains a magic number: Assert.AreEqual(496' fh.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_FixNoNewline,The following statement contains a magic number: Assert.AreEqual(252' f.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_FixNoNewline,The following statement contains a magic number: Assert.AreEqual(317' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_FixNoNewline,The following statement contains a magic number: Assert.AreEqual(363' h.EndOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_AddNoNewline,The following statement contains a magic number: Assert.AreEqual(256' f.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_AddNoNewline,The following statement contains a magic number: Assert.AreEqual(321' h.StartOffset);
Magic Number,GitSharp.Core.Tests.Patch,PatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Patch\PatchTest.cs,testParse_AddNoNewline,The following statement contains a magic number: Assert.AreEqual(367' h.EndOffset);
Magic Number,GitSharp.Core.Tests.RevWalk,DateRevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\DateRevQueueTest.cs,testInsertOutOfOrder,The following statement contains a magic number: RevCommit b = parseBody(Commit(10' a));
Magic Number,GitSharp.Core.Tests.RevWalk,DateRevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\DateRevQueueTest.cs,testInsertOutOfOrder,The following statement contains a magic number: RevCommit c1 = parseBody(Commit(5' b));
Magic Number,GitSharp.Core.Tests.RevWalk,DateRevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\DateRevQueueTest.cs,testInsertOutOfOrder,The following statement contains a magic number: RevCommit c2 = parseBody(Commit(-50' b));
Magic Number,GitSharp.Core.Tests.RevWalk,DateRevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\DateRevQueueTest.cs,testCloneFIFO,The following statement contains a magic number: RevCommit b = parseBody(Commit(200' a));
Magic Number,GitSharp.Core.Tests.RevWalk,DateRevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\DateRevQueueTest.cs,testCloneFIFO,The following statement contains a magic number: RevCommit c = parseBody(Commit(200' b));
Magic Number,GitSharp.Core.Tests.RevWalk,FIFORevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FIFORevQueueTest.cs,testAddLargeBlocks,The following statement contains a magic number: i < 3*BlockRevQueue.Block.BLOCK_SIZE
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_ManyUsers,The following statement contains a magic number: Assert.AreEqual(4' footers.Count);
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_ManyUsers,The following statement contains a magic number: f = footers[2];
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_ManyUsers,The following statement contains a magic number: f = footers[3];
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_SkipNonFooter,The following statement contains a magic number: Assert.AreEqual(4' footers.Count);
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_SkipNonFooter,The following statement contains a magic number: f = footers[2];
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testSignedOffBy_SkipNonFooter,The following statement contains a magic number: f = footers[3];
Magic Number,GitSharp.Core.Tests.RevWalk,FooterLineTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\FooterLineTest.cs,testFilterFootersIgnoreCase,The following statement contains a magic number: Assert.AreEqual(2' footers.Count);
Magic Number,GitSharp.Core.Tests.RevWalk,LIFORevQueueTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\LIFORevQueueTest.cs,testAddLargeBlocks,The following statement contains a magic number: i < 3*BlockRevQueue.Block.BLOCK_SIZE
Magic Number,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_NoParents,The following statement contains a magic number: const int authorTime = 1218123387;
Magic Number,GitSharp.Core.Tests.RevWalk,RevCommitParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevCommitParseTest.cs,testParse_NoParents,The following statement contains a magic number: const int committerTime = 1218123390;
Magic Number,GitSharp.Core.Tests.RevWalk,RevFlagSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevFlagSetTest.cs,testAddTwo,The following statement contains a magic number: Assert.AreEqual(2' flagSet.Count);
Magic Number,GitSharp.Core.Tests.RevWalk,RevTagParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevTagParseTest.cs,testParseAllFields,The following statement contains a magic number: const int taggerTime = 1218123387;
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkCullTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkCullTest.cs,testProperlyCullAllAncestors1,The following statement contains a magic number: RevCommit b = Commit(-2400' a);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkCullTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkCullTest.cs,testProperlyCullAllAncestors2,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkCullTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkCullTest.cs,testProperlyCullAllAncestors2,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkCullTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkCullTest.cs,testProperlyCullAllAncestors_LongHistory,The following statement contains a magic number: (i & 2) == 0
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkCullTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkCullTest.cs,testProperlyCullAllAncestors_LongHistory,The following statement contains a magic number: i < 24
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkFilterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkFilterTest.cs,testCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkFilterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkFilterTest.cs,testCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkFilterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkFilterTest.cs,testCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkFilterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkFilterTest.cs,testCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkFilterTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkFilterTest.cs,testCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_COMMIT_TIME_DESC_OutOfOrder1,The following statement contains a magic number: RevCommit c = Commit(-5' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_COMMIT_TIME_DESC_OutOfOrder1,The following statement contains a magic number: RevCommit d = Commit(10' c);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_COMMIT_TIME_DESC_OutOfOrder2,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_COMMIT_TIME_DESC_OutOfOrder2,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_TOPO,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_TOPO,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_TOPO_REVERSE,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,GitSharp.Core.Tests.RevWalk,RevWalkSortTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\RevWalk\RevWalkSortTest.cs,testSort_TOPO_REVERSE,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,GitSharp.Core.Tests.Transport,LongMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\LongMapTest.cs,testSmallMap,The following statement contains a magic number: long start = 12;
Magic Number,GitSharp.Core.Tests.Transport,LongMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\LongMapTest.cs,testSmallMap,The following statement contains a magic number: long n = 8;
Magic Number,GitSharp.Core.Tests.Transport,LongMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\LongMapTest.cs,testLargeMap,The following statement contains a magic number: long n = 100000;
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testNoConfig,The following statement contains a magic number: Assert.AreEqual(22' h.getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testQuoteParsing,The following statement contains a magic number: Assert.AreEqual(6007' _osc.lookup("good").getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testQuoteParsing,The following statement contains a magic number: Assert.AreEqual(2222' _osc.lookup("multiple").getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testQuoteParsing,The following statement contains a magic number: Assert.AreEqual(2222' _osc.lookup("quoted").getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testQuoteParsing,The following statement contains a magic number: Assert.AreEqual(2222' _osc.lookup("and").getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testQuoteParsing,The following statement contains a magic number: Assert.AreEqual(2222' _osc.lookup("unquoted").getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testQuoteParsing,The following statement contains a magic number: Assert.AreEqual(2222' _osc.lookup("hosts").getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testAlias_DoesNotMatch,The following statement contains a magic number: Assert.AreEqual(22' h.port);
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testAlias_OptionsSet,The following statement contains a magic number: Assert.AreEqual(2222' h.getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testAlias_OptionsKeywordCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2222' h.getPort());
Magic Number,GitSharp.Core.Tests.Transport,OpenSshConfigTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\OpenSshConfigTest.cs,testAlias_OptionsInherit,The following statement contains a magic number: Assert.AreEqual(2222' h.getPort());
Magic Number,GitSharp.Core.Tests.Transport,PacketLineOutTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PacketLineOutTest.cs,testWritePacket3,The following statement contains a magic number: const int buflen = SideBandOutputStream.MAX_BUF - 5;
Magic Number,GitSharp.Core.Tests.Transport,PacketLineOutTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PacketLineOutTest.cs,testWritePacket3,The following statement contains a magic number: string explen = NB.DecimalToBase(buf.Length + 4' 16);
Magic Number,GitSharp.Core.Tests.Transport,PacketLineOutTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PacketLineOutTest.cs,testWritePacket3,The following statement contains a magic number: string explen = NB.DecimalToBase(buf.Length + 4' 16);
Magic Number,GitSharp.Core.Tests.Transport,PacketLineOutTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PacketLineOutTest.cs,testWritePacket3,The following statement contains a magic number: Assert.AreEqual(4 + buf.Length' act.Length);
Magic Number,GitSharp.Core.Tests.Transport,PacketLineOutTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\PacketLineOutTest.cs,testWritePacket3,The following statement contains a magic number: Assert.AreEqual(Charset.forName("UTF-8").GetString(act' 0' 4)' explen);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_SmallBlocks1,The following statement contains a magic number: o = new SideBandOutputStream(SideBandOutputStream.CH_DATA' 6' rawOut);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_SmallBlocks2,The following statement contains a magic number: o = new SideBandOutputStream(SideBandOutputStream.CH_DATA' 6' rawOut);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_SmallBlocks2,The following statement contains a magic number: o.Write(new byte[] { (byte)'a'' (byte)'b'' (byte)'c' }' 0' 3);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_SmallBlocks3,The following statement contains a magic number: o = new SideBandOutputStream(SideBandOutputStream.CH_DATA' 7' rawOut);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_SmallBlocks3,The following statement contains a magic number: o.Write(new byte[] { (byte)'b'' (byte)'c' }' 0' 2);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_Large,The following statement contains a magic number: string explen = NB.DecimalToBase(buf.Length + SideBandOutputStream.HDR_SIZE' 16);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_Large,The following statement contains a magic number: Assert.AreEqual(Charset.forName("UTF-8").GetString(act' 0' 4)' explen);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testWrite_Large,The following statement contains a magic number: Assert.AreEqual(1' act[4]);
Magic Number,GitSharp.Core.Tests.Transport,SideBandOutputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\SideBandOutputStreamTest.cs,testConstructor_RejectsBadChannel,The following statement contains a magic number: new SideBandOutputStream(256' SideBandOutputStream.MAX_BUF' rawOut);
Magic Number,GitSharp.Core.Tests.Transport,TransportTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\TransportTest.cs,testFindRemoteRefUpdatesWildcardNoTracking,The following statement contains a magic number: Assert.AreEqual(12' result.Count);
Magic Number,GitSharp.Core.Tests.Transport,TransportTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\TransportTest.cs,testFindRemoteRefUpdatesTwoRefSpecs,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testMirror,The following statement contains a magic number: Assert.AreEqual(2' rc.Fetch.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testBackup,The following statement contains a magic number: Assert.AreEqual(2' allURIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testBackup,The following statement contains a magic number: Assert.AreEqual(2' rc.Push.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveFirstURI,The following statement contains a magic number: Assert.AreEqual(3' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveFirstURI,The following statement contains a magic number: Assert.AreEqual(c' rc.URIs[2]);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveMiddleURI,The following statement contains a magic number: Assert.AreEqual(3' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveMiddleURI,The following statement contains a magic number: Assert.AreEqual(c' rc.URIs[2]);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveMiddleURI,The following statement contains a magic number: Assert.AreEqual(2' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveLastURI,The following statement contains a magic number: Assert.AreEqual(3' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveLastURI,The following statement contains a magic number: Assert.AreEqual(c' rc.URIs[2]);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testRemoveLastURI,The following statement contains a magic number: Assert.AreEqual(2' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testSaveAddURI,The following statement contains a magic number: Assert.AreEqual(2' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testSaveRemoveLastURI,The following statement contains a magic number: Assert.AreEqual(2' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testSaveRemoveFirstURI,The following statement contains a magic number: Assert.AreEqual(2' rc.URIs.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testSimpleTimeout,The following statement contains a magic number: Assert.AreEqual(12' rc.Timeout);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,RemoteConfigTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\RemoteConfigTests.cs,testSaveTimeout,The following statement contains a magic number: rc.Timeout = 60;
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,URIishTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\URIishTests.cs,testGitProtoUnixPort,The following statement contains a magic number: Assert.AreEqual(333' u.Port);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,URIishTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\URIishTests.cs,testGitProtoWindowsPort,The following statement contains a magic number: Assert.AreEqual(338' u.Port);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,URIishTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\URIishTests.cs,testSshProtoWithUserAndPort,The following statement contains a magic number: Assert.AreEqual(33' u.Port);
Magic Number,GitSharp.Tests.GitSharp.Core.Transport,URIishTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Transport\URIishTests.cs,testSshProtoWithUserPassAndPort,The following statement contains a magic number: Assert.AreEqual(33' u.Port);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testGrowPath,The following statement contains a magic number: i.growPath(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testGrowPath,The following statement contains a magic number: Assert.AreEqual(origpath.Length * 2' i.Path.Length);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEnsurePathCapacityFastCase,The following statement contains a magic number: int want = 50;
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEnsurePathCapacityFastCase,The following statement contains a magic number: i.ensurePathCapacity(want' 2);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEnsurePathCapacityGrows,The following statement contains a magic number: int want = 384;
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEnsurePathCapacityGrows,The following statement contains a magic number: i.ensurePathCapacity(want' 2);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEnsurePathCapacityGrows,The following statement contains a magic number: Assert.AreEqual(512' i.Path.Length);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEntryPath,The following statement contains a magic number: Assert.AreEqual(2' i.NameLength);
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEntryPath,The following statement contains a magic number: byte[] b = new byte[3];
Magic Number,GitSharp.Core.Tests.TreeWalk,AbstractTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\AbstractTreeIteratorTest.cs,testEntryPath,The following statement contains a magic number: Assert.AreEqual('d'' b[2]);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testBackwards_ConfusingPathName,The following statement contains a magic number: ctp.next(3);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testBackwards_ConfusingPathName,The following statement contains a magic number: ctp.back(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testFreakingHugePathName,The following statement contains a magic number: int n = AbstractTreeIterator.DEFAULT_PATH_SIZE*4;
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testThreeEntries_BackwardsTwo,The following statement contains a magic number: ctp.next(3);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testThreeEntries_BackwardsTwo,The following statement contains a magic number: ctp.back(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testThreeEntries_Seek2,The following statement contains a magic number: ctp.next(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testThreeEntries_Seek3IsEOF,The following statement contains a magic number: ctp.next(3);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testTwoEntries_BackwardsOneAtATime,The following statement contains a magic number: ctp.next(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testTwoEntries_BackwardsTwo,The following statement contains a magic number: ctp.next(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testTwoEntries_BackwardsTwo,The following statement contains a magic number: ctp.back(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testTwoEntries_Seek2IsEOF,The following statement contains a magic number: ctp.next(2);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testBackwords_Prebuilts1,The following statement contains a magic number: ctp.next(3);
Magic Number,GitSharp.Core.Tests.TreeWalk,CanonicalTreeParserTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\CanonicalTreeParserTest.cs,testBackwords_Prebuilts2,The following statement contains a magic number: ctp.next(3);
Magic Number,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testSimpleIterate,The following statement contains a magic number: Assert.AreEqual(Paths[2]' NameOf(sub));
Magic Number,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testSimpleIterate,The following statement contains a magic number: Assert.AreEqual(Paths[2].Length' subfti.getEntryLength());
Magic Number,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testSimpleIterate,The following statement contains a magic number: Assert.AreEqual(_mtime[2]' subfti.getEntryLastModified());
Magic Number,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testSimpleIterate,The following statement contains a magic number: Assert.AreEqual(Paths[3]' NameOf(top));
Magic Number,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testSimpleIterate,The following statement contains a magic number: Assert.AreEqual(Paths[3].Length' top.getEntryLength());
Magic Number,GitSharp.Core.Tests.TreeWalk,FileTreeIteratorTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\FileTreeIteratorTest.cs,testSimpleIterate,The following statement contains a magic number: Assert.AreEqual(_mtime[3]' top.getEntryLastModified());
Magic Number,GitSharp.Core.Tests.TreeWalk,NameConflictTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\NameConflictTreeWalkTest.cs,testNoDF_NoGap,The following statement contains a magic number: Assert.AreEqual(3' tree0.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,NameConflictTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\NameConflictTreeWalkTest.cs,testDF_NoGap,The following statement contains a magic number: Assert.AreEqual(3' tree0.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,NameConflictTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\NameConflictTreeWalkTest.cs,testDF_GapByOne,The following statement contains a magic number: Assert.AreEqual(3' tree0.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,NameConflictTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\NameConflictTreeWalkTest.cs,testDF_GapByOne,The following statement contains a magic number: Assert.AreEqual(2' tree1.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,NameConflictTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\NameConflictTreeWalkTest.cs,testDF_SkipsSeenSubtree,The following statement contains a magic number: Assert.AreEqual(2' tree0.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,NameConflictTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\NameConflictTreeWalkTest.cs,testDF_SkipsSeenSubtree,The following statement contains a magic number: Assert.AreEqual(3' tree1.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,PostOrderTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\PostOrderTreeWalkTest.cs,testNoPostOrder,The following statement contains a magic number: Assert.AreEqual(4' tree.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,PostOrderTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\PostOrderTreeWalkTest.cs,testWithPostOrder_EnterSubtree,The following statement contains a magic number: Assert.AreEqual(4' tree.getEntryCount());
Magic Number,GitSharp.Core.Tests.TreeWalk,PostOrderTreeWalkTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\TreeWalk\PostOrderTreeWalkTest.cs,testWithPostOrder_NoEnterSubtree,The following statement contains a magic number: Assert.AreEqual(4' tree.getEntryCount());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readByte_Success2,The following statement contains a magic number: Assert.AreEqual(exp[2]' _timeoutstream.ReadByte());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readBuffer_Success2,The following statement contains a magic number: IO.ReadFully(t' act' 2' 1);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readBuffer_Timeout,The following statement contains a magic number: IO.ReadFully(_timeoutstream' new byte[512]' 0' 512);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_readBuffer_Timeout,The following statement contains a magic number: IO.ReadFully(_timeoutstream' new byte[512]' 0' 512);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_skip_Success,The following statement contains a magic number: Assert.AreEqual(2' t.skip(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_skip_Success,The following statement contains a magic number: Assert.AreEqual(2' t.skip(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,testTimeout_skip_Timeout,The following statement contains a magic number: _timeoutstream.skip(1024);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TimeoutStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IO\TimeoutStreamTest.cs,assertTimeout,The following statement contains a magic number: Assert.IsTrue(Math.Abs(wait - timeout) < 50);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 1' 0' 2 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 3 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: Assert.AreEqual(3' u.available());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: Assert.AreEqual(2' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: Assert.AreEqual(3' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: Assert.AreEqual(4' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: Assert.AreEqual(5' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { (byte)255 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadSingleBytes,The following statement contains a magic number: Assert.AreEqual(255' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 1' 0' 2 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 3 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: var r = new byte[5];
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.AreEqual(5' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.AreEqual(5' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.IsTrue(r.SequenceEqual(new byte[] { 1' 0' 2' 3' 4 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.IsTrue(r.SequenceEqual(new byte[] { 1' 0' 2' 3' 4 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.IsTrue(r.SequenceEqual(new byte[] { 1' 0' 2' 3' 4 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.AreEqual(1' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.AreEqual(5' r[0]);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testReadByteBlocks,The following statement contains a magic number: Assert.AreEqual(-1' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: var u = new UnionInputStream(                  new MemoryStream(new byte[] { 1' 0' 2 })'                  new MemoryStream(new byte[] { 3 })'                  new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: var u = new UnionInputStream(                  new MemoryStream(new byte[] { 1' 0' 2 })'                  new MemoryStream(new byte[] { 3 })'                  new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: var u = new UnionInputStream(                  new MemoryStream(new byte[] { 1' 0' 2 })'                  new MemoryStream(new byte[] { 3 })'                  new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: var u = new UnionInputStream(                  new MemoryStream(new byte[] { 1' 0' 2 })'                  new MemoryStream(new byte[] { 3 })'                  new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: var r = new byte[5];
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.AreEqual(5' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.AreEqual(5' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.IsTrue(r.SequenceEqual(new byte[] { 1' 0' 2' 3' 4 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.IsTrue(r.SequenceEqual(new byte[] { 1' 0' 2' 3' 4 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.IsTrue(r.SequenceEqual(new byte[] { 1' 0' 2' 3' 4 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.AreEqual(1' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.AreEqual(5' r[0]);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testArrayConstructor,The following statement contains a magic number: Assert.AreEqual(-1' u.Read(r' 0' 5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testMarkSupported,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 1' 0' 2 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 1' 0' 2 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 3 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: u.add(new MemoryStream(new byte[] { 4' 5 }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(4' u.skip(4));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(4' u.skip(4));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(4' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(1' u.skip(5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(0' u.skip(5));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: u.add(new MockMemoryStream(new byte[] { 20' 30 }' null));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: u.add(new MockMemoryStream(new byte[] { 20' 30 }' null));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(2' u.skip(8));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testSkip,The following statement contains a magic number: Assert.AreEqual(2' u.skip(8));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testAutoCloseDuringRead,The following statement contains a magic number: var closed = new bool[2];
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testAutoCloseDuringRead,The following statement contains a magic number: u.add(new MockMemoryStream(new byte[] { 2 }' () => { closed[1] = true; }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testAutoCloseDuringRead,The following statement contains a magic number: Assert.AreEqual(2' u.read());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testCloseDuringClose,The following statement contains a magic number: var closed = new bool[2];
Magic Number,GitSharp.Tests.GitSharp.Core.Util,UnionInputStreamTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\UnionInputStreamTest.cs,testCloseDuringClose,The following statement contains a magic number: u.add(new MockMemoryStream(new byte[] { 2 }' () => { closed[1] = true; }));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForward,The following statement contains a magic number: list.AddLast(2);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForward,The following statement contains a magic number: list.AddLast(3);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForward,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForward,The following statement contains a magic number: Assert.AreEqual(2' iter.next());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForward,The following statement contains a magic number: Assert.AreEqual(3' iter.next());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForward,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForwardAndRemoval,The following statement contains a magic number: list.AddLast(2);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForwardAndRemoval,The following statement contains a magic number: list.AddLast(3);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForwardAndRemoval,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForwardAndRemoval,The following statement contains a magic number: Assert.AreEqual(2' iter.next());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForwardAndRemoval,The following statement contains a magic number: Assert.AreEqual(3' iter.next());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,LinkedListFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LinkedListFixture.cs,FilledList_NavigateForwardAndRemoval,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 44' 29' 256 - 116' 256 - 39' 256 - 113' 0' 256 - 78' 4' 256 - 23' 256 - 128' 9' 256 - 104' 256 - 20' 256 - 8' 66' 126 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,EmptyString,The following statement contains a magic number: Assert.AreEqual(16' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: Assert.AreEqual(16' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 101' 256 - 19' 26' 256 - 3' 85' 256 - 19' 125' 33' 256 - 20' 256 - 96' 256 - 100' 256 - 24' 256 - 54' 69' 256 - 87' 14 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: Assert.AreEqual(16' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 3' 33' 256 - 57' 74' 256 - 58' 256 - 26' 72' 20' 85' 113' 119' 21' 256 - 74' 81' 120' 83 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: i < 20
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: Assert.AreEqual(16' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,BlowTheHeap,The following statement contains a magic number: Assert.DoesNotThrow(() =>              {                  MessageDigest md = CreateSUT();                  var bytes = new byte[10000];                  for (int i = 0; i < 100000; i++)                  {                      md.Update(bytes);                  }              });
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Md5MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Md5MessageDigestTest.cs,BlowTheHeap,The following statement contains a magic number: Assert.DoesNotThrow(() =>              {                  MessageDigest md = CreateSUT();                  var bytes = new byte[10000];                  for (int i = 0; i < 100000; i++)                  {                      md.Update(bytes);                  }              });
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: var expected = new byte[] { 256 - 38' 57' 256 - 93' 256 - 18' 94' 107' 75' 13' 50' 85' 256 - 65' 256 - 17' 256 - 107' 96' 24' 256 - 112' 256 - 81' 256 - 40' 7' 9 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,EmptyString,The following statement contains a magic number: Assert.AreEqual(20' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringOneUpdate,The following statement contains a magic number: Assert.AreEqual(20' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: var expected = new byte[] { 48' 15' 76' 31' 256 - 27' 18' 256 - 16' 66' 256 - 67' 256 - 20' 8' 70' 256 - 23' 114' 104' 256 - 49' 113' 97' 55' 256 - 65 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,ShortStringTwoUpdates,The following statement contains a magic number: Assert.AreEqual(20' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: var expected = new byte[] { 256 - 25' 115' 256 - 78' 84' 256 - 32' 116' 38' 256 - 76' 256 - 96' 85' 256 - 69' 256 - 88' 89' 256 - 81' 256 - 41' 35' 256 - 99' 39' 256 - 52' 86 };
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: i < 20
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,LongStringOneUpdate,The following statement contains a magic number: Assert.AreEqual(20' result.Length);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,BlowTheHeap,The following statement contains a magic number: Assert.DoesNotThrow(() =>              {                  MessageDigest md = CreateSUT();                  var bytes = new byte[10000];                  for (int i = 0; i < 100000; i++)                  {                      md.Update(bytes);                  }              });
Magic Number,GitSharp.Tests.GitSharp.Core.Util,Sha1MessageDigestTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\Sha1MessageDigestTest.cs,BlowTheHeap,The following statement contains a magic number: Assert.DoesNotThrow(() =>              {                  MessageDigest md = CreateSUT();                  var bytes = new byte[10000];                  for (int i = 0; i < 100000; i++)                  {                      md.Update(bytes);                  }              });
Magic Number,GitSharp.Tests.GitSharp.Core.Util,MockSystemReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\MockSystemReader.cs,getCurrentTime,The following statement contains a magic number: return 1250379778668L;
Magic Number,GitSharp.Tests.GitSharp.Core.Util,MockSystemReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\MockSystemReader.cs,getTimezone,The following statement contains a magic number: var expectedOffset = new TimeSpan(-3' -30' 0);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,MockSystemReader,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\MockSystemReader.cs,getTimezone,The following statement contains a magic number: var expectedOffset = new TimeSpan(-3' -30' 0);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testEmptyBuilder,The following statement contains a magic number: Assert.IsNull(list.get(16 - 1));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testEmptyBuilder,The following statement contains a magic number: list.get(16);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_AddThenSort,The following statement contains a magic number: Assert.AreEqual(2' list.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_AddThenSort,The following statement contains a magic number: Assert.AreEqual(2' list.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_AddAll,The following statement contains a magic number: builder.addAll(src' 1' 2);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_AddAll,The following statement contains a magic number: Assert.AreEqual(2' list.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_Set,The following statement contains a magic number: Assert.AreEqual(2' builder.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_Set,The following statement contains a magic number: Assert.AreEqual(2' list.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testBuilder_Set,The following statement contains a magic number: Assert.AreEqual(2' list.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testSet,The following statement contains a magic number: Assert.AreEqual(2' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testSet,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testAddToFrontOfList,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testAddToEndOfList,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: Assert.AreEqual(-2' one.find(REF_B.Name));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: Assert.AreEqual(2' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: Assert.AreEqual(3' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: Assert.AreSame(REF_c' two.get(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testPutNewEntry,The following statement contains a magic number: Assert.AreEqual(2' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testPutNewEntry,The following statement contains a magic number: Assert.AreEqual(3' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testPutNewEntry,The following statement contains a magic number: Assert.AreSame(REF_c' two.get(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testPutReplaceEntry,The following statement contains a magic number: Assert.AreEqual(2' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testPutReplaceEntry,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveFrontOfList,The following statement contains a magic number: Assert.AreEqual(3' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveFrontOfList,The following statement contains a magic number: Assert.AreSame(REF_c' one.get(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveFrontOfList,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveMiddleOfList,The following statement contains a magic number: Assert.AreEqual(3' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveMiddleOfList,The following statement contains a magic number: Assert.AreSame(REF_c' one.get(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveMiddleOfList,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveEndOfList,The following statement contains a magic number: RefList<global::GitSharp.Core.Ref> two = one.remove(2);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveEndOfList,The following statement contains a magic number: Assert.AreEqual(3' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveEndOfList,The following statement contains a magic number: Assert.AreSame(REF_c' one.get(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testRemoveEndOfList,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testFindContainsGet,The following statement contains a magic number: Assert.AreEqual(2' list.find("c"));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testFindContainsGet,The following statement contains a magic number: Assert.AreEqual(-2' list.find("AB"));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testFindContainsGet,The following statement contains a magic number: Assert.AreEqual(-3' list.find("a"));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testFindContainsGet,The following statement contains a magic number: Assert.AreEqual(-4' list.find("z"));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testIterable,The following statement contains a magic number: Assert.AreEqual(3' idx);
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testCopyLeadingPrefix,The following statement contains a magic number: RefList<global::GitSharp.Core.Ref> two = one.copy(2).toRefList();
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testCopyLeadingPrefix,The following statement contains a magic number: Assert.AreEqual(3' one.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testCopyLeadingPrefix,The following statement contains a magic number: Assert.AreSame(REF_c' one.get(2));
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefListTest.cs,testCopyLeadingPrefix,The following statement contains a magic number: Assert.AreEqual(2' two.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testMerge_HeadMaster,The following statement contains a magic number: Assert.AreEqual(2' map.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testMerge_PackedLooseLoose,The following statement contains a magic number: Assert.AreEqual(3' map.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,RefMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RefMapTest.cs,testMerge_WithPrefix,The following statement contains a magic number: Assert.AreEqual(2' map.size());
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TestRepository,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TestRepository.cs,TestRepository,The following statement contains a magic number: this.now = 1236977987000L;
Magic Number,GitSharp.Tests.GitSharp.Core.Util,TestRepository,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TestRepository.cs,tick,The following statement contains a magic number: now += secDelta * 1000L;
Magic Number,GitSharp.Core.Tests.Util,ByteArrayExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ByteArrayExtensionsFixture.cs,ReadLine_CanNotExtractWithOutOfRangePosition,The following statement contains a magic number: var parsedLined = input.ReadLine(10);
Magic Number,GitSharp.Core.Tests.Util,ByteArrayExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ByteArrayExtensionsFixture.cs,ReadLine_CanExtractAByteArrayContainingOnlyACRLF,The following statement contains a magic number: Assert.AreEqual(2' parsedLined.NextIndex);
Magic Number,GitSharp.Core.Tests.Util,ByteArrayExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ByteArrayExtensionsFixture.cs,ReadLine_CanExtractFirstLineDelimitedWithACRLF,The following statement contains a magic number: Assert.AreEqual(firstLine.Length + 2' parsedLined.NextIndex);
Magic Number,GitSharp.Core.Tests.Util,ByteArrayExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ByteArrayExtensionsFixture.cs,ReadLine_CanExtractSecondLineDelimitedWithACRLF,The following statement contains a magic number: var parsedLined = input.ReadLine(firstLine.Length + 2);
Magic Number,GitSharp.Core.Tests.Util,ByteArrayExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ByteArrayExtensionsFixture.cs,ReadLine_CanExtractSecondLineDelimitedWithACRLF2,The following statement contains a magic number: var parsedLined = input.ReadLine(firstLine.Length + 2);
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2009' 08' 15' 20' 12' 58' 668' new TimeSpan(-3' -30' 0))' 1250379778668L.MillisToDateTimeOffset((int)new TimeSpan(-3' -30' 0).TotalMinutes));
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,ExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\ExtensionsFixture.cs,getCurrentTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 08' 15' 23' 42' 58' 668)' 1250379778668L.MillisToUtcDateTime());
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testEmpty_SpecificCapacity,The following statement contains a magic number: IntList i = new IntList(5);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testAdd_SmallGroup,The following statement contains a magic number: int n = 5;
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testAdd_SmallGroup,The following statement contains a magic number: i.add(10 + v);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testAdd_SmallGroup,The following statement contains a magic number: Assert.AreEqual(10 + v' i.get(v));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testAdd_LargeGroup,The following statement contains a magic number: int n = 500;
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testAdd_LargeGroup,The following statement contains a magic number: i.add(10 + v);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testAdd_LargeGroup,The following statement contains a magic number: Assert.AreEqual(10 + v' i.get(v));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testFillTo100,The following statement contains a magic number: i.fillTo(100' int.MinValue);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testFillTo100,The following statement contains a magic number: Assert.AreEqual(100' i.size());
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testFillTo100,The following statement contains a magic number: i.add(3);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testFillTo100,The following statement contains a magic number: Assert.AreEqual(int.MinValue' i.get(99));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testFillTo100,The following statement contains a magic number: Assert.AreEqual(3' i.get(100));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testFillTo100,The following statement contains a magic number: Assert.AreEqual(3' i.get(100));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testClear,The following statement contains a magic number: int n = 5;
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testClear,The following statement contains a magic number: i.add(10 + v);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: i.set(0' 5);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: Assert.AreEqual(5' i.get(0));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: AssertHelper.Throws<ArgumentException>(() => i.set(5' 5)' "accepted set of 5 beyond end of list");
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: AssertHelper.Throws<ArgumentException>(() => i.set(5' 5)' "accepted set of 5 beyond end of list");
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: i.set(1' 2);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: Assert.AreEqual(2' i.size());
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testSet,The following statement contains a magic number: Assert.AreEqual(2' i.get(1));
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testToString,The following statement contains a magic number: i.add(13);
Magic Number,GitSharp.Core.Tests.Util,IntListTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\IntListTest.cs,testToString,The following statement contains a magic number: i.add(5);
Magic Number,GitSharp.Core.Tests.Util,LocalDiskRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LocalDiskRepositoryTestCase.cs,setUp,The following statement contains a magic number: c.PackedGitLimit = (128 * WindowCacheConfig.Kb);
Magic Number,GitSharp.Core.Tests.Util,LocalDiskRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LocalDiskRepositoryTestCase.cs,setUp,The following statement contains a magic number: c.PackedGitWindowSize = (8 * WindowCacheConfig.Kb);
Magic Number,GitSharp.Core.Tests.Util,LocalDiskRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LocalDiskRepositoryTestCase.cs,setUp,The following statement contains a magic number: c.DeltaBaseCacheLimit = (8 * WindowCacheConfig.Kb);
Magic Number,GitSharp.Core.Tests.Util,LocalDiskRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LocalDiskRepositoryTestCase.cs,tick,The following statement contains a magic number: long delta = (long)TimeSpan.FromMinutes(5).TotalMilliseconds;
Magic Number,GitSharp.Core.Tests.Util,LocalDiskRepositoryTestCase,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\LocalDiskRepositoryTestCase.cs,putPersonIdent,The following statement contains a magic number: string date = ident.Substring(ident.IndexOf("> ") + 2);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0' NB.decodeUInt16(Padb(3' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0' NB.decodeUInt16(Padb(3' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(3' NB.decodeUInt16(b(0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(3' NB.decodeUInt16(b(0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(3' NB.decodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(3' NB.decodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(3' NB.decodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(3' NB.decodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0xde03' NB.decodeUInt16(b(0xde' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0xde03' NB.decodeUInt16(Padb(3' 0xde' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0xde03' NB.decodeUInt16(Padb(3' 0xde' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0xde03' NB.decodeUInt16(Padb(3' 0xde' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0x03de' NB.decodeUInt16(b(3' 0xde)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0x03de' NB.decodeUInt16(Padb(3' 3' 0xde)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0x03de' NB.decodeUInt16(Padb(3' 3' 0xde)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0x03de' NB.decodeUInt16(Padb(3' 3' 0xde)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0xffff' NB.decodeUInt16(Padb(3' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt16,The following statement contains a magic number: Assert.AreEqual(0xffff' NB.decodeUInt16(Padb(3' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(0' NB.DecodeInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(0' NB.DecodeInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(3' NB.DecodeInt32(b(0' 0' 0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(3' NB.DecodeInt32(b(0' 0' 0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual((int)0xdeadbeef' NB.DecodeInt32(Padb(3' 0xde' 0xad' 0xbe' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual((int)0xdeadbeef' NB.DecodeInt32(Padb(3' 0xde' 0xad' 0xbe' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(0x0310adef' NB.DecodeInt32(Padb(3' 0x03' 0x10' 0xad' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual(0x0310adef' NB.DecodeInt32(Padb(3' 0x03' 0x10' 0xad' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual((int)0xffffffff' NB.DecodeInt32(Padb(3' 0xff' 0xff' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeInt32,The following statement contains a magic number: Assert.AreEqual((int)0xffffffff' NB.DecodeInt32(Padb(3' 0xff' 0xff' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0L' NB.decodeUInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0L' NB.decodeUInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(3L' NB.decodeUInt32(b(0' 0' 0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(3L' NB.decodeUInt32(b(0' 0' 0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(3L' NB.decodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(3L' NB.decodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(3L' NB.decodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(3L' NB.decodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0xdeadbeefL' NB.decodeUInt32(Padb(3' 0xde' 0xad' 0xbe'                      0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0xdeadbeefL' NB.decodeUInt32(Padb(3' 0xde' 0xad' 0xbe'                      0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0x0310adefL' NB.decodeUInt32(Padb(3' 0x03' 0x10' 0xad'                      0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0x0310adefL' NB.decodeUInt32(Padb(3' 0x03' 0x10' 0xad'                      0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0xffffffffL' NB.decodeUInt32(Padb(3' 0xff' 0xff' 0xff'                      0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt32,The following statement contains a magic number: Assert.AreEqual(0xffffffffL' NB.decodeUInt32(Padb(3' 0xff' 0xff' 0xff'                      0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0' 0)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(3L' NB.DecodeUInt64(b(0' 0' 0' 0' 0' 0' 0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(3L' NB.DecodeUInt64(b(0' 0' 0' 0' 0' 0' 0' 3)' 0));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0' 3)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0xdeadbeefL' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0xde' 0xad' 0xbe' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0xdeadbeefL' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0xde' 0xad' 0xbe' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0x0310adefL' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0x03' 0x10' 0xad' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0x0310adefL' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0x03' 0x10' 0xad' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual((long)0xc0ffee78deadbeefL' NB.DecodeUInt64(Padb(3' 0xc0' 0xff'                          0xee' 0x78' 0xde' 0xad' 0xbe' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual((long)0xc0ffee78deadbeefL' NB.DecodeUInt64(Padb(3' 0xc0' 0xff'                          0xee' 0x78' 0xde' 0xad' 0xbe' 0xef)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0x00000000ffffffffL' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0'                          0xff' 0xff' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual(0x00000000ffffffffL' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0'                          0xff' 0xff' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual((long)0xffffffffffffffffL' NB.DecodeUInt64(Padb(3' 0xff' 0xff'                          0xff' 0xff' 0xff' 0xff' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testDecodeUInt64,The following statement contains a magic number: Assert.AreEqual((long)0xffffffffffffffffL' NB.DecodeUInt64(Padb(3' 0xff' 0xff'                          0xff' 0xff' 0xff' 0xff' 0xff' 0xff)' 3));
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: var @out = new byte[16];
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: NB.encodeInt16(@out' 3' 0);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: AssertOutput(b(0' 0)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: NB.encodeInt16(@out' 0' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: AssertOutput(b(0' 3)' @out' 0);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: NB.encodeInt16(@out' 3' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: NB.encodeInt16(@out' 3' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: AssertOutput(b(0' 3)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: AssertOutput(b(0' 3)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: NB.encodeInt16(@out' 3' 0xdeac);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: AssertOutput(b(0xde' 0xac)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: NB.encodeInt16(@out' 3' -1);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt16,The following statement contains a magic number: AssertOutput(b(0xff' 0xff)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: var @out = new byte[16];
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 3' 0);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 0' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 3)' @out' 0);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 3' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 3' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 3)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 3)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 3' 0xdeac);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0' 0' 0xde' 0xac)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 3' (int)0xdeac9853);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0xde' 0xac' 0x98' 0x53)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: NB.encodeInt32(@out' 3' -1);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt32,The following statement contains a magic number: AssertOutput(b(0xff' 0xff' 0xff' 0xff)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: var @out = new byte[16];
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' 0L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0' 0' 0' 0' 0)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 0' 3L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0' 0' 0' 0' 3)' @out' 0);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' 3L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' 3L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0' 0' 0' 0' 3)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0' 0' 0' 0' 3)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' 0xdeacL);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0' 0' 0' 0xde' 0xac)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' 0xdeac9853L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0' 0' 0' 0' 0xde' 0xac' 0x98' 0x53)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' (long)0xac431242deac9853L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0xac' 0x43' 0x12' 0x42' 0xde' 0xac' 0x98' 0x53)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: NB.encodeInt64(@out' 3' -1L);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,testEncodeInt64,The following statement contains a magic number: AssertOutput(b(0xff' 0xff' 0xff' 0xff' 0xff' 0xff' 0xff' 0xff)' @out' 3);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,TestDecimalToBase,The following statement contains a magic number: string x = NB.DecimalToBase(15' 16);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,TestDecimalToBase,The following statement contains a magic number: string x = NB.DecimalToBase(15' 16);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,TestDecimalToBase,The following statement contains a magic number: x = NB.DecimalToBase(8' 8);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,TestDecimalToBase,The following statement contains a magic number: x = NB.DecimalToBase(8' 8);
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: var r = new byte[len + 2];
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: var r = new byte[len + 4];
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 2] = (byte)c;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 3] = (byte)d;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: var r = new byte[len + 8];
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 2] = (byte)c;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 3] = (byte)d;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 4] = (byte)e;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 5] = (byte)f;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 6] = (byte)g;
Magic Number,GitSharp.Core.Tests.Util,NBTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\NBTests.cs,Padb,The following statement contains a magic number: r[len + 7] = (byte)h;
Magic Number,GitSharp.Core.Tests.Util,QuotedStringBourneStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringBourneStyleTest.cs,testDequote_BareABCZ_OnlyBC,The following statement contains a magic number: Assert.AreEqual("bc"' QuotedString.BOURNE.dequote(b' p' p + 2));
Magic Number,GitSharp.Core.Tests.Util,QuotedStringBourneStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringBourneStyleTest.cs,testDequote_Empty2,The following statement contains a magic number: Assert.AreEqual(string.Empty' QuotedString.BOURNE.dequote(new[] {(byte) '\''' (byte) '\''}' 0' 2));
Magic Number,GitSharp.Core.Tests.Util,QuotedStringBourneUserPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringBourneUserPathStyleTest.cs,testDequote_Empty2,The following statement contains a magic number: Assert.AreEqual(string.Empty' QuotedString.BOURNE_USER_PATH.dequote(new byte[] { (byte)'\''' (byte)'\'' }' 0'                                                                                  2));
Magic Number,GitSharp.Core.Tests.Util,QuotedStringBourneUserPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringBourneUserPathStyleTest.cs,testDequote_BareABCZ_OnlyBC,The following statement contains a magic number: Assert.AreEqual("bc"' QuotedString.BOURNE_USER_PATH.dequote(b' p' p + 2));
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_Empty2,The following statement contains a magic number: Assert.AreEqual(string.Empty' GitPath.dequote(new byte[] { (byte)'"'' (byte)'"' }' 0' 2));
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_BareABCZ_OnlyBC,The following statement contains a magic number: Assert.AreEqual("bc"' GitPath.dequote(b' p' p + 2));
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_OctalAll,The following statement contains a magic number: i < 127
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_OctalAll,The following statement contains a magic number: int f = 0xC0 | (i >> 6);
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_OctalAll,The following statement contains a magic number: i < 256
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,octalEscape,The following statement contains a magic number: String s = Convert.ToString(i' 8);
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,octalEscape,The following statement contains a magic number: s.Length < 3
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_RawLatin1,The following statement contains a magic number: AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => AssertDequote("\u00c5ngstr\u00f6m"' (char)NB.BaseToDecimal("305"' 8)  + "ngstr" + (char)NB.BaseToDecimal("366"' 8) + "m")' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=549914");
Magic Number,GitSharp.Core.Tests.Util,QuotedStringGitPathStyleTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\QuotedStringGitPathStyleTest.cs,testDequote_RawLatin1,The following statement contains a magic number: AssertHelper.IgnoreOn(AssertedPlatform.Mono' () => AssertDequote("\u00c5ngstr\u00f6m"' (char)NB.BaseToDecimal("305"' 8)  + "ngstr" + (char)NB.BaseToDecimal("366"' 8) + "m")' "Will fail in mono due to https://bugzilla.novell.com/show_bug.cgi?id=549914");
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(2' RawParseUtils.parseHexInt4((byte)'2'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(3' RawParseUtils.parseHexInt4((byte)'3'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(4' RawParseUtils.parseHexInt4((byte)'4'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(5' RawParseUtils.parseHexInt4((byte)'5'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(6' RawParseUtils.parseHexInt4((byte)'6'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(7' RawParseUtils.parseHexInt4((byte)'7'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(8' RawParseUtils.parseHexInt4((byte)'8'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(9' RawParseUtils.parseHexInt4((byte)'9'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(10' RawParseUtils.parseHexInt4((byte)'a'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(11' RawParseUtils.parseHexInt4((byte)'b'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(12' RawParseUtils.parseHexInt4((byte)'c'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(13' RawParseUtils.parseHexInt4((byte)'d'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(14' RawParseUtils.parseHexInt4((byte)'e'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(15' RawParseUtils.parseHexInt4((byte)'f'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(10' RawParseUtils.parseHexInt4((byte)'A'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(11' RawParseUtils.parseHexInt4((byte)'B'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(12' RawParseUtils.parseHexInt4((byte)'C'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(13' RawParseUtils.parseHexInt4((byte)'D'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(14' RawParseUtils.parseHexInt4((byte)'E'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_HexParseTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_HexParseTest.cs,testInt4_1,The following statement contains a magic number: Assert.AreEqual(15' RawParseUtils.parseHexInt4((byte)'F'));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testEmpty,The following statement contains a magic number: Assert.AreEqual(2' map.size());
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testOneBlankLine,The following statement contains a magic number: Assert.AreEqual(3' map.size());
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testOneBlankLine,The following statement contains a magic number: Assert.AreEqual(1' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineFooBar,The following statement contains a magic number: Assert.AreEqual(4' map.size());
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineFooBar,The following statement contains a magic number: Assert.AreEqual(4' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineFooBar,The following statement contains a magic number: Assert.AreEqual(4' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineFooBar,The following statement contains a magic number: Assert.AreEqual(buf.Length' map.get(3));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineNoLF,The following statement contains a magic number: Assert.AreEqual(4' map.size());
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineNoLF,The following statement contains a magic number: Assert.AreEqual(4' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineNoLF,The following statement contains a magic number: Assert.AreEqual(4' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testTwoLineNoLF,The following statement contains a magic number: Assert.AreEqual(buf.Length' map.get(3));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(6' map.size());
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(4' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(4' map.get(2));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(5' map.get(3));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(5' map.get(3));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(6' map.get(4));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(6' map.get(4));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_LineMapTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_LineMapTest.cs,testFourLineBlanks,The following statement contains a magic number: Assert.AreEqual(buf.Length' map.get(5));
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_MatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_MatchTest.cs,testMatch_Equal,The following statement contains a magic number: Assert.IsTrue(RawParseUtils.match(dst' 3' src) == 3 + src.Length);
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_MatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_MatchTest.cs,testMatch_Equal,The following statement contains a magic number: Assert.IsTrue(RawParseUtils.match(dst' 3' src) == 3 + src.Length);
Magic Number,GitSharp.Core.Tests.Util,RawParseUtils_MatchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\RawParseUtils_MatchTest.cs,testMatch_NotEqual,The following statement contains a magic number: Assert.IsTrue(RawParseUtils.match(dst' 2' src) < 0);
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldReturnExpectedResult,The following statement contains a magic number: Assert.AreEqual("urge"' "hamburger".Slice(4' 8));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldReturnExpectedResult,The following statement contains a magic number: Assert.AreEqual("urge"' "hamburger".Slice(4' 8));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldReturnExpectedResult,The following statement contains a magic number: Assert.AreEqual("mile"' "smiles".Slice(1' 5));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldThrowIfBeginIndexIsNegative,The following statement contains a magic number: AssertHelper.Throws<ArgumentOutOfRangeException>(() => "hamburger".Slice(-1' 8));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldThrowIfEndIndexIsGreaterThanTheLengthOfTheString,The following statement contains a magic number: AssertHelper.Throws<ArgumentOutOfRangeException>(() => "hamburger".Slice(4' 42));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldThrowIfEndIndexIsGreaterThanTheLengthOfTheString,The following statement contains a magic number: AssertHelper.Throws<ArgumentOutOfRangeException>(() => "hamburger".Slice(4' 42));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldThrowIfBeginIndexIsGreaterThanEndIndex,The following statement contains a magic number: AssertHelper.Throws<ArgumentOutOfRangeException>(() => "hamburger".Slice(8' 4));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SliceShouldThrowIfBeginIndexIsGreaterThanEndIndex,The following statement contains a magic number: AssertHelper.Throws<ArgumentOutOfRangeException>(() => "hamburger".Slice(8' 4));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,DifferentLength_compareTo_2,The following statement contains a magic number: Assert.AreEqual(-2' "".compareTo("aa"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,DifferentLength_compareTo_4,The following statement contains a magic number: Assert.AreEqual(2' "aa".compareTo(""));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,DifferentLength_compareTo_5,The following statement contains a magic number: Assert.AreEqual(2' "bb".compareTo(""));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_2,The following statement contains a magic number: Assert.AreEqual(32' "a".compareTo("A"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_3,The following statement contains a magic number: Assert.AreEqual(-32' "A".compareTo("a"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_4,The following statement contains a magic number: Assert.AreEqual(32' "aaa".compareTo("aaA"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_5,The following statement contains a magic number: Assert.AreEqual(-32' "aaA".compareTo("aaa"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_6,The following statement contains a magic number: Assert.AreEqual(32' "aaaa".compareTo("aaAB"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_7,The following statement contains a magic number: Assert.AreEqual(31' "aaAb".compareTo("aaAC"));
Magic Number,GitSharp.Core.Tests.Util,StringExtensionsFixture,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\StringExtensionsFixture.cs,SameLength_compareTo_8,The following statement contains a magic number: Assert.AreEqual(2' "aaCb".compareTo("aaAa"));
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' 0' 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' 2' 4);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' 2' 4);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' 6' test.Length - 6 - 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' 6' test.Length - 6 - 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' 6' test.Length - 6 - 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' test.Length - 2' 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlock_BulkWrite,The following statement contains a magic number: b.write(test' test.Length - 2' 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: byte[] test = new TestRng(getName()).nextBytes(Block.SZ * 3 / 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: byte[] test = new TestRng(getName()).nextBytes(Block.SZ * 3 / 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' 0' 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' 2' 4);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' 2' 4);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' 6' test.Length - 6 - 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' 6' test.Length - 6 - 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' 6' test.Length - 6 - 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' test.Length - 2' 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.write(test' test.Length - 2' 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_SingleWrite,The following statement contains a magic number: byte[] test = new TestRng(getName())                     .nextBytes(Block.SZ * 3 / 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_SingleWrite,The following statement contains a magic number: byte[] test = new TestRng(getName())                     .nextBytes(Block.SZ * 3 / 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_Copy,The following statement contains a magic number: byte[] test = new TestRng(getName())                     .nextBytes(Block.SZ * 3 / 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testOneBlockAndHalf_Copy,The following statement contains a magic number: byte[] test = new TestRng(getName())                     .nextBytes(Block.SZ * 3 / 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testLarge_SingleWrite,The following statement contains a magic number: byte[] test = new TestRng(getName()).nextBytes(TemporaryBuffer.DEFAULT_IN_CORE_LIMIT * 3);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testInCoreLimit_SwitchBeforeAppendByte,The following statement contains a magic number: byte[] test = new TestRng(getName())                     .nextBytes(TemporaryBuffer.DEFAULT_IN_CORE_LIMIT * 3);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testInCoreLimit_SwitchOnCopy,The following statement contains a magic number: byte[] test = new TestRng(getName())                     .nextBytes(TemporaryBuffer.DEFAULT_IN_CORE_LIMIT * 2);
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testDestroyWhileOpen,The following statement contains a magic number: b.write(new TestRng(getName())                          .nextBytes(TemporaryBuffer.DEFAULT_IN_CORE_LIMIT * 2));
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testRandomWrites,The following statement contains a magic number: int max = TemporaryBuffer.DEFAULT_IN_CORE_LIMIT * 2;
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testHeap,The following statement contains a magic number: byte[] r = new byte[8*1024];
Magic Number,GitSharp.Core.Tests.Util,TemporaryBufferTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TemporaryBufferTest.cs,testHeap,The following statement contains a magic number: byte[] r = new byte[8*1024];
Magic Number,GitSharp.Core.Tests.Util,TestRng,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TestRng.cs,TestRng,The following statement contains a magic number: next = next * 11 + (byte)(seed[i]);
Magic Number,GitSharp.Core.Tests.Util,TestRng,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TestRng.cs,nextInt,The following statement contains a magic number: next = next * 1103515245 + 12345;
Magic Number,GitSharp.Core.Tests.Util,TestRng,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\TestRng.cs,nextInt,The following statement contains a magic number: next = next * 1103515245 + 12345;
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestBitCount,The following statement contains a magic number: Assert.AreEqual(1' (2 << 5).BitCount());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestBitCount,The following statement contains a magic number: Assert.AreEqual(1' (2 << 5).BitCount());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestBitCount,The following statement contains a magic number: Assert.AreEqual(2' 3.BitCount());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestBitCount,The following statement contains a magic number: Assert.AreEqual(2' 3.BitCount());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestNumberOfTrailingZeros,The following statement contains a magic number: Assert.AreEqual(1' 2.NumberOfTrailingZeros());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestNumberOfTrailingZeros,The following statement contains a magic number: Assert.AreEqual(6' (2 << 5).NumberOfTrailingZeros());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestNumberOfTrailingZeros,The following statement contains a magic number: Assert.AreEqual(6' (2 << 5).NumberOfTrailingZeros());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestNumberOfTrailingZeros,The following statement contains a magic number: Assert.AreEqual(6' (2 << 5).NumberOfTrailingZeros());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestNumberOfTrailingZeros,The following statement contains a magic number: Assert.AreEqual(0' ((2 << 5)+1).NumberOfTrailingZeros());
Magic Number,GitSharp.Core.Tests.Util,VariousUtilityTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp.Core\Util\VariousUtilityTests.cs,TestNumberOfTrailingZeros,The following statement contains a magic number: Assert.AreEqual(0' ((2 << 5)+1).NumberOfTrailingZeros());
Magic Number,GitSharp.Tests.GitSharp,BranchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\BranchTest.cs,Switch_to_Branch,The following statement contains a magic number: Assert.AreEqual(12' repo.Branches.Count);
Magic Number,GitSharp.Tests.GitSharp,BranchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\BranchTest.cs,ResetHard1,The following statement contains a magic number: Assert.AreEqual(8' repo.Status.Removed.Count);
Magic Number,GitSharp.Tests.GitSharp,BranchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\BranchTest.cs,ResetSoft1,The following statement contains a magic number: Assert.AreEqual(3' repo.Status.Added.Count);
Magic Number,GitSharp.Tests.GitSharp,BranchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\BranchTest.cs,ResetMixed,The following statement contains a magic number: Assert.AreEqual(2' status.Untracked.Count);
Magic Number,GitSharp.Tests.GitSharp,BranchTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\BranchTest.cs,ResetMixed1,The following statement contains a magic number: Assert.AreEqual(3' repo.Status.Untracked.Count);
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,DifferenceAtTheBeginning,The following statement contains a magic number: Assert.AreEqual(2' diff.Sections.Count());
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,DifferenceAtTheBeginning,The following statement contains a magic number: Assert.AreEqual(3' section.EndB);
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,DifferenceAtTheBeginning,The following statement contains a magic number: Assert.AreEqual(3' section.BeginB);
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,DifferenceAtTheBeginning,The following statement contains a magic number: Assert.AreEqual(Text.NumberOfLines + 1 + 2' section.EndB);
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,DifferenceAtTheEnd,The following statement contains a magic number: Assert.AreEqual(2' diff.Sections.Count());
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,MultipleReplacements,The following statement contains a magic number: Assert.AreEqual(10' diff.Sections.Count());
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,MultipleReplacements,The following statement contains a magic number: section = secs[9];
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,EditType,The following statement contains a magic number: section = secs[3];
Magic Number,GitSharp.Tests.GitSharp,DiffTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\DiffTests.cs,EditType,The following statement contains a magic number: section = secs[5];
Magic Number,GitSharp.Tests.GitSharp,MergeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\MergeTests.cs,MergeStrategyOurs,The following statement contains a magic number: Assert.AreEqual(2' a.CurrentCommit.Parents.Count());
Magic Number,GitSharp.Tests.GitSharp,MergeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\MergeTests.cs,MergeStrategyTheirs,The following statement contains a magic number: Assert.AreEqual(2' a.CurrentCommit.Parents.Count());
Magic Number,GitSharp.Tests.GitSharp,MergeTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\MergeTests.cs,MergeStrategyRecursive_FastForwardOff,The following statement contains a magic number: Assert.AreEqual(2' a.CurrentCommit.Parents.Count());
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetLineTest,The following statement contains a magic number: Assert.AreEqual("\r\n"' text.GetLine(4));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetLineTest,The following statement contains a magic number: Assert.AreEqual(new[] { (byte)'\r'' (byte)'\n' }' text.GetRawLine(4));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetLineTest,The following statement contains a magic number: Assert.AreEqual("The lady doth protest too much' methinks."' text.GetLine(18));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetLineTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => text.GetLine(19));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetLineTest,The following statement contains a magic number: Assert.AreEqual(18' text.NumberOfLines);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual("ÖÄÜ\n"' t.GetLine(2));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => t.GetLine(3));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(2' t.NumberOfLines);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(9' t.Length);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(9' new Text(s).Length);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(2' new Text("你好").Length);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(6' new Text("你好").RawLength);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(2' new Text("你好"' Encoding.UTF32).Length);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual(8' new Text("你好"' Encoding.UTF32).RawLength);
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual(""' text.GetBlock(14' 14));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual(""' text.GetBlock(14' 14));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual("Hamlet:\r\n"' text.GetBlock(14' 15));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual("Hamlet:\r\n"' text.GetBlock(14' 15));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual(block' text.GetBlock(14' 16));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual(block' text.GetBlock(14' 16));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual(Encoding.UTF8.GetBytes(TEXT)' text.GetRawBlock(1' 19));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.AreEqual(TEXT' text.GetBlock(1' 19));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => text.GetBlock(14' 13));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => text.GetBlock(14' 13));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => text.GetBlock(0' 14));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => text.GetBlock(14' 20));
Magic Number,GitSharp.Tests.GitSharp,TextTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\TextTests.cs,GetBlockTest,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => text.GetBlock(14' 20));
Magic Number,GitSharp.API.Tests,CommitTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CommitTests.cs,Commit_into_empty_repository,The following statement contains a magic number: Assert.AreEqual(2' changes.Count);
Magic Number,GitSharp.API.Tests,CommitTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CommitTests.cs,Commit_changes_to_existing_commit,The following statement contains a magic number: Assert.AreEqual(9' changes.Count);
Magic Number,GitSharp.API.Tests,CommitTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CommitTests.cs,Commit_changes_against_multiple_parents,The following statement contains a magic number: Assert.AreEqual(3' commit.Parents.Count());
Magic Number,GitSharp.API.Tests,CommitTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\CommitTests.cs,Commit_changes_against_multiple_parents,The following statement contains a magic number: Assert.AreEqual(2' commit.Parents.Count());
Magic Number,GitSharp.API.Tests,EncodingTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\EncodingTests.cs,CommitHonorsConfigCommitEncoding,The following statement contains a magic number: Array.Copy(blob.RawData' 190' messageBytes' 0' message.Length);
Magic Number,GitSharp.API.Tests,IndexTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\IndexTest.cs,IndexAdd,The following statement contains a magic number: Assert.AreEqual(2' status.Added.Count);
Magic Number,GitSharp.API.Tests,IndexTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\IndexTest.cs,AddAll_New_File_And_New_Directory_With_File,The following statement contains a magic number: Assert.AreEqual(2' status.Added.Count);
Magic Number,GitSharp.API.Tests,IndexTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\IndexTest.cs,AddAll_Directory_Recursive,The following statement contains a magic number: Assert.AreEqual(3' status.Added.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,TracksAddedFiles,The following statement contains a magic number: Assert.AreEqual(2' status.Added.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,UntrackedFiles,The following statement contains a magic number: Assert.AreEqual(2' status.Untracked.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,UntrackedFiles,The following statement contains a magic number: Assert.AreEqual(8' status.Removed.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Modified_and_Staged,The following statement contains a magic number: Assert.AreEqual(2' status.Staged.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Removed,The following statement contains a magic number: Assert.AreEqual(2' diff.Removed.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Removed,The following statement contains a magic number: Assert.AreEqual(2' diff.Untracked.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Removed,The following statement contains a magic number: Assert.AreEqual(2' diff.Untracked.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Missing,The following statement contains a magic number: Assert.AreEqual(2' diff.Added.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Missing,The following statement contains a magic number: Assert.AreEqual(4' diff.Missing.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,Missing,The following statement contains a magic number: Assert.AreEqual(4' diff.Missing.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,IgnoreUntrackedFilesAndDirectories,The following statement contains a magic number: Assert.AreEqual(4' status.Untracked.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,IgnoreUntrackedFilesAndDirectories,The following statement contains a magic number: Assert.AreEqual(5' status.Untracked.Count);
Magic Number,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,AlternativeCallbackApiTest,The following statement contains a magic number: Assert.AreEqual(6' status.Missing.Count);
Magic Number,Git.Tests.CLI,OptionContextTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionContextTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (typeof(ArgumentOutOfRangeException)'  					"Argument is out of range.\nParameter name: index"'  					c' v => { string ignore = v.OptionValues [2]; });
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,BundledValues,The following statement contains a magic number: Assert.AreEqual (defines.Count' 3);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,BundledValues,The following statement contains a magic number: Assert.AreEqual (defines [2]' "NAME3");
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,BundledValues,The following statement contains a magic number: Assert.AreEqual (libs.Count' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,RequiredValues,The following statement contains a magic number: Assert.AreEqual (extra.Count' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,RequiredValues,The following statement contains a magic number: Assert.AreEqual (n' 42);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,OptionalValues,The following statement contains a magic number: Assert.AreEqual (n.Value' 42);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,OptionalValues,The following statement contains a magic number: Assert.AreEqual (n.Value' 42);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CombinationPlatter,The following statement contains a magic number: OptionSet p = new OptionSet () {  				{ "a="' v => { a = 1; av = v; } }'  				{ "b"' "desc"' v => {b = 2; bv = v;} }'  				{ "f="' (Foo v) => f = v }'  				{ "v"' v => { ++verbose; } }'  				{ "h|?|help"' (v) => { switch (v) {  					case "h": help |= 0x1; break;   					case "?": help |= 0x2; break;  					case "help": help |= 0x4; break;  				} } }'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CombinationPlatter,The following statement contains a magic number: Assert.AreEqual (e.Count' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CombinationPlatter,The following statement contains a magic number: Assert.AreEqual (b' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CombinationPlatter,The following statement contains a magic number: Assert.AreEqual (verbose' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,HaltProcessing,The following statement contains a magic number: Assert.AreEqual (e.Count' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,AssertDictionary,The following statement contains a magic number: Assert.AreEqual (dict.Count' set.Length / 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CustomKeyValue,The following statement contains a magic number: var p = new OptionSet () {  				new CustomOption ("a==:"' null' 2' v => a.Add (v [0]' v [1]))'  				new CustomOption ("b==:"' null' 3' v => b.Add (v [0]' new string[]{v [1]' v [2]}))'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CustomKeyValue,The following statement contains a magic number: var p = new OptionSet () {  				new CustomOption ("a==:"' null' 2' v => a.Add (v [0]' v [1]))'  				new CustomOption ("b==:"' null' 3' v => b.Add (v [0]' new string[]{v [1]' v [2]}))'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CustomKeyValue,The following statement contains a magic number: var p = new OptionSet () {  				new CustomOption ("a==:"' null' 2' v => a.Add (v [0]' v [1]))'  				new CustomOption ("b==:"' null' 3' v => b.Add (v [0]' new string[]{v [1]' v [2]}))'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CustomKeyValue,The following statement contains a magic number: Assert.AreEqual (a.Count' 6);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CustomKeyValue,The following statement contains a magic number: Assert.AreEqual (b.Count' 4);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,OptionContext,The following statement contains a magic number: var p = new OptionSet () {  				new ContextCheckerOption ("a="' "a desc"' "/a"'   "a-val"' 1)'  				new ContextCheckerOption ("b"'  "b desc"' "--b+"' "--b+"'  2)'  				new ContextCheckerOption ("c="' "c desc"' "--c"'  "C"'     3)'  				new ContextCheckerOption ("d"'  "d desc"' "/d-"'  null'    4)'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,OptionContext,The following statement contains a magic number: var p = new OptionSet () {  				new ContextCheckerOption ("a="' "a desc"' "/a"'   "a-val"' 1)'  				new ContextCheckerOption ("b"'  "b desc"' "--b+"' "--b+"'  2)'  				new ContextCheckerOption ("c="' "c desc"' "--c"'  "C"'     3)'  				new ContextCheckerOption ("d"'  "d desc"' "/d-"'  null'    4)'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,OptionContext,The following statement contains a magic number: var p = new OptionSet () {  				new ContextCheckerOption ("a="' "a desc"' "/a"'   "a-val"' 1)'  				new ContextCheckerOption ("b"'  "b desc"' "--b+"' "--b+"'  2)'  				new ContextCheckerOption ("c="' "c desc"' "--c"'  "C"'     3)'  				new ContextCheckerOption ("d"'  "d desc"' "/d-"'  null'    4)'  			};
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,OptionContext,The following statement contains a magic number: Assert.AreEqual (p.Count' 4);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandler,The following statement contains a magic number: Assert.AreEqual (extra.Count' 4);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandler,The following statement contains a magic number: Assert.AreEqual (extra [2]' "--c=D");
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandler,The following statement contains a magic number: Assert.AreEqual (extra [3]' "E");
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,MixedDefaultHandler,The following statement contains a magic number: Assert.AreEqual (tests.Count' 5);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,MixedDefaultHandler,The following statement contains a magic number: Assert.AreEqual (tests [2]' "C");
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,MixedDefaultHandler,The following statement contains a magic number: Assert.AreEqual (tests [3]' "D");
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,MixedDefaultHandler,The following statement contains a magic number: Assert.AreEqual (tests [4]' "--E=F");
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandlerRuns,The following statement contains a magic number: Assert.AreEqual (formats.Count' 3);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandlerRuns,The following statement contains a magic number: Assert.AreEqual (formats ["foo"].Count' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandlerRuns,The following statement contains a magic number: Assert.AreEqual (formats ["bar"].Count' 2);
Magic Number,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,DefaultHandlerRuns,The following statement contains a magic number: Assert.AreEqual (formats ["baz"].Count' 2);
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (typeof(ArgumentException)'  					"The default option handler '<>' cannot require values.\nParameter name: prototype"'  					p' v => { new DefaultOption ("t|<>="' null' 2); });
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => { new DefaultOption ("a|b="' null' 2); });
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a="' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 2);  						Assert.AreEqual (s [0]' ":");  						Assert.AreEqual (s [1]' "=");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a="' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 2);  						Assert.AreEqual (s [0]' ":");  						Assert.AreEqual (s [1]' "=");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a={}"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 0);  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a={-->}{=>}"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 2);  						Assert.AreEqual (s [0]' "-->");  						Assert.AreEqual (s [1]' "=>");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a={-->}{=>}"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 2);  						Assert.AreEqual (s [0]' "-->");  						Assert.AreEqual (s [1]' "=>");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a=+-*/"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 4);  						Assert.AreEqual (s [0]' "+");  						Assert.AreEqual (s [1]' "-");  						Assert.AreEqual (s [2]' "*");  						Assert.AreEqual (s [3]' "/");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a=+-*/"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 4);  						Assert.AreEqual (s [0]' "+");  						Assert.AreEqual (s [1]' "-");  						Assert.AreEqual (s [2]' "*");  						Assert.AreEqual (s [3]' "/");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a=+-*/"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 4);  						Assert.AreEqual (s [0]' "+");  						Assert.AreEqual (s [1]' "-");  						Assert.AreEqual (s [2]' "*");  						Assert.AreEqual (s [3]' "/");  					});
Magic Number,Git.Tests.CLI,OptionTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionTest.cs,Exceptions,The following statement contains a magic number: Utils.AssertException (null' null'  					p' v => {  						var d = new DefaultOption ("a=+-*/"' null' 2);  						string[] s = d.GetValueSeparators ();  						Assert.AreEqual (s.Length' 4);  						Assert.AreEqual (s [0]' "+");  						Assert.AreEqual (s [1]' "-");  						Assert.AreEqual (s [2]' "*");  						Assert.AreEqual (s [3]' "/");  					});
Missing Default,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,AlternativeCallbackApiTest,The following switch statement is missing a default case: switch (path_status.WorkingPathStatus)  						{  							case WorkingPathStatus.Missing:  								Assert.IsTrue(status.Missing.Contains(path_status.Path));  								break;  							case WorkingPathStatus.Modified:  								Assert.IsTrue(status.Modified.Contains(path_status.Path));  								break;  							case WorkingPathStatus.Untracked:  								Assert.IsTrue(status.Untracked.Contains(path_status.Path));  								break;  						}
Missing Default,GitSharp.API.Tests,RepositoryStatusTests,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\GitSharp\RepositoryStatusTests.cs,AlternativeCallbackApiTest,The following switch statement is missing a default case: switch (path_status.IndexPathStatus)  						{  							case IndexPathStatus.Added:  								Assert.IsTrue(status.Added.Contains(path_status.Path));  								break;  							case IndexPathStatus.Removed:  								Assert.IsTrue(status.Removed.Contains(path_status.Path));  								break;  							case IndexPathStatus.Staged:  								Assert.IsTrue(status.Staged.Contains(path_status.Path));  								break;  						}
Missing Default,Git.Tests.CLI,FooConverter,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,ConvertFrom,The following switch statement is missing a default case: switch (v) {  					case "A": return Foo.A;  					case "B": return Foo.B;  				}
Missing Default,Git.Tests.CLI,OptionSetTest,D:\research\architectureSmells\repos\henon_GitSharp\GitSharp.Tests\Git\CLI\OptionSetTest.cs,CombinationPlatter,The following switch statement is missing a default case: switch (v) {  					case "h": help |= 0x1; break;   					case "?": help |= 0x2; break;  					case "help": help |= 0x4; break;  				}
