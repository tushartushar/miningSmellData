Implementation smell,Namespace,Class,File,Method,Description
Long Method,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,SettingViewModel,The method has 100 lines of code.
Complex Method,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,InitWindow,Cyclomatic complexity of the method is 10
Complex Method,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,Apply,Cyclomatic complexity of the method is 11
Long Parameter List,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,OnWindowMessage,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Identifier,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,,The length of the parameter maxUpstreamRatePerBroadcastChannel is 34.
Long Identifier,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,,The length of the parameter maxUpstreamRatePerRelayChannel is 30.
Long Statement,PeerCastStation.WPF,IntegerUpDown,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\IntegerUpDown.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/integerupdown.xaml"' System.UriKind.Relative); " is 122.
Long Statement,PeerCastStation.WPF,SettingsDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\SettingsDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/settingsdialog.xaml"' System.UriKind.Relative); " is 123.
Long Statement,PeerCastStation.WPF,SettingsDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\SettingsDialog.xaml.cs,Connect,The length of the statement  "            ((PeerCastStation.WPF.SettingsDialog)(target)).AddHandler(System.Windows.Controls.Validation.ErrorEvent' new System.EventHandler<System.Windows.Controls.ValidationErrorEventArgs>(this.Window_Error)); " is 199.
Long Statement,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/coresettings/bandwidthcheckdialog.xaml"' System.UriKind.Relative); " is 142.
Long Statement,PeerCastStation.WPF.CoreSettings,RelaySettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\RelaySettingControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/coresettings/relaysettingcontrol.xaml"' System.UriKind.Relative); " is 141.
Long Statement,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/coresettings/settingcontrol.xaml"' System.UriKind.Relative); " is 136.
Long Statement,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click); " is 123.
Long Statement,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click); " is 127.
Long Statement,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click); " is 123.
Long Statement,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click); " is 127.
Long Statement,PeerCastStation.WPF.ChannelLists.ConnectionLists,ConnectionListControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ConnectionLists\ConnectionListControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/channellists/connectionlists/connectionlistcontrol" + " is 129.
Long Statement,PeerCastStation.WPF.ChannelLists.Dialogs,BroadcastWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\Dialogs\BroadcastWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/channellists/dialogs/broadcastwindow.xaml"' System.UriKind.Relative); " is 145.
Long Statement,PeerCastStation.WPF.ChannelLists.ChannelInfos,ChannelInfoControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ChannelInfos\ChannelInfoControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/channellists/channelinfos/channelinfocontrol.xaml"' System.UriKind.Relative); " is 153.
Long Statement,PeerCastStation.WPF.ChannelLists,ChannelListControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ChannelListControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/channellists/channellistcontrol.xaml"' System.UriKind.Relative); " is 140.
Long Statement,PeerCastStation.WPF.ChannelLists,ChannelListControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ChannelListControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TabControl)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.TabControl_SelectionChanged); " is 158.
Long Statement,PeerCastStation.WPF.ChannelLists.RelayTrees,RelayTreeControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\RelayTrees\RelayTreeControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/channellists/relaytrees/relaytreecontrol.xaml"' System.UriKind.Relative); " is 149.
Long Statement,PeerCastStation.WPF.Dialogs,UpdaterWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/dialogs/updaterwindow.xaml"' System.UriKind.Relative); " is 130.
Long Statement,PeerCastStation.WPF.Dialogs,UpdaterWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterWindow.xaml.cs,Connect,The length of the statement  "            ((PeerCastStation.WPF.Dialogs.UpdaterWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded); " is 122.
Long Statement,PeerCastStation.WPF.Dialogs,VersionInfoWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\VersionInfoWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/dialogs/versioninfowindow.xaml"' System.UriKind.Relative); " is 134.
Long Statement,PeerCastStation.WPF.Logs,LogControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Logs\LogControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/PeerCastStation.WPF;component/logs/logcontrol.xaml"' System.UriKind.Relative); " is 124.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Virtual Method Call from Constructor,PeerCastStation.WPF.ChannelLists.ConnectionLists,ConnectionListViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ConnectionLists\ConnectionListViewModel.cs,ConnectionListViewModel,The constructor "ConnectionListViewModel" calls a virtual method "Disconnect".
Virtual Method Call from Constructor,PeerCastStation.WPF.ChannelLists.ConnectionLists,ConnectionListViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ConnectionLists\ConnectionListViewModel.cs,ConnectionListViewModel,The constructor "ConnectionListViewModel" calls a virtual method "Reconnect".
Virtual Method Call from Constructor,PeerCastStation.WPF.Logs,LogViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Logs\LogViewModel.cs,LogViewModel,The constructor "LogViewModel" calls a virtual method "OnPropertyChanged".
Empty Catch Block,PeerCastStation.WPF,Screen,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Screen.cs,Screen,The method has an empty catch block.
Empty Catch Block,PeerCastStation.WPF,Screen,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Screen.cs,Screen,The method has an empty catch block.
Empty Catch Block,PeerCastStation.WPF,UrlLink,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UrlLink.xaml.cs,UrlLink,The method has an empty catch block.
Empty Catch Block,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,AddPort,The method has an empty catch block.
Empty Catch Block,PeerCastStation.WPF.ChannelLists,ChannelListControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ChannelListControl.xaml.cs,OnCopyContactUrlExecuted,The method has an empty catch block.
Empty Catch Block,PeerCastStation.WPF.ChannelLists,ChannelListControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ChannelListControl.xaml.cs,OnCopyStreamUrlExecuted,The method has an empty catch block.
Magic Number,PeerCastStation.WPF,IntegerUpDown,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\IntegerUpDown.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.valueTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.valueTextBox_KeyDown);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.LostFocus += new System.Windows.RoutedEventHandler(this.valueTextBox_Validate);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.valueTextBox_MouseWheel);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.valueTextBox_PreviewKeyDown);                            #line default              #line hidden              return;              case 2:              this.upButton = ((System.Windows.Controls.Primitives.RepeatButton)(target));                            #line 18 "..\..\IntegerUpDown.xaml"              this.upButton.Click += new System.Windows.RoutedEventHandler(this.upButton_Click);                            #line default              #line hidden              return;              case 3:              this.downButton = ((System.Windows.Controls.Primitives.RepeatButton)(target));                            #line 21 "..\..\IntegerUpDown.xaml"              this.downButton.Click += new System.Windows.RoutedEventHandler(this.downButton_Click);                            #line default              #line hidden              return;              }
Magic Number,PeerCastStation.WPF,IntegerUpDown,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\IntegerUpDown.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.valueTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.valueTextBox_KeyDown);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.LostFocus += new System.Windows.RoutedEventHandler(this.valueTextBox_Validate);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.valueTextBox_MouseWheel);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.valueTextBox_PreviewKeyDown);                            #line default              #line hidden              return;              case 2:              this.upButton = ((System.Windows.Controls.Primitives.RepeatButton)(target));                            #line 18 "..\..\IntegerUpDown.xaml"              this.upButton.Click += new System.Windows.RoutedEventHandler(this.upButton_Click);                            #line default              #line hidden              return;              case 3:              this.downButton = ((System.Windows.Controls.Primitives.RepeatButton)(target));                            #line 21 "..\..\IntegerUpDown.xaml"              this.downButton.Click += new System.Windows.RoutedEventHandler(this.downButton_Click);                            #line default              #line hidden              return;              }
Magic Number,PeerCastStation.WPF,NotifyIconManager,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\NotifyIconManager.cs,NotifyNewVersions,The following statement contains a magic number: notifyIcon.ShowBalloonTip(          60000'          "新しいバージョンがあります"'          newVersionInfo.First().Title'          ToolTipIcon.Info);
Magic Number,PeerCastStation.WPF,NotifyIconManager,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\NotifyIconManager.cs,ShowNotificationMessage,The following statement contains a magic number: var timeout = 5000;
Magic Number,PeerCastStation.WPF,Screen,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Screen.cs,Screen,The following statement contains a magic number: uint dpix = 96' dpiy = 96;
Magic Number,PeerCastStation.WPF,Screen,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Screen.cs,Screen,The following statement contains a magic number: uint dpix = 96' dpiy = 96;
Magic Number,PeerCastStation.WPF,Screen,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Screen.cs,GetWorkingAreaWithDpi,The following statement contains a magic number: area.Scale(96.0 / dpi' 96.0 / dpi);
Magic Number,PeerCastStation.WPF,Screen,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Screen.cs,GetWorkingAreaWithDpi,The following statement contains a magic number: area.Scale(96.0 / dpi' 96.0 / dpi);
Magic Number,PeerCastStation.WPF,UISettingsViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UISettingsViewModel.cs,AddBroadcastHistory,The following statement contains a magic number: BroadcastHistory = new ObservableCollection<BroadcastInfoViewModel>(          fav.Concat(Enumerable.Repeat(info' 1))             .Concat(others.Take(19))        );
Magic Number,PeerCastStation.WPF,UrlLink,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UrlLink.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\UrlLink.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              case 2:              this.openMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 3:              this.copyMenu = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,PeerCastStation.WPF,UrlLink,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UrlLink.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\UrlLink.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              case 2:              this.openMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 3:              this.copyMenu = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,PeerCastStation.WPF,UserInterface,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UserInterface.cs,OnStart,The following statement contains a magic number: versionCheckTimer = new Timer(OnVersionCheckTimer' null' 1000' 1000*3600*24);
Magic Number,PeerCastStation.WPF,UserInterface,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UserInterface.cs,OnStart,The following statement contains a magic number: versionCheckTimer = new Timer(OnVersionCheckTimer' null' 1000' 1000*3600*24);
Magic Number,PeerCastStation.WPF,UserInterface,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UserInterface.cs,OnStart,The following statement contains a magic number: versionCheckTimer = new Timer(OnVersionCheckTimer' null' 1000' 1000*3600*24);
Magic Number,PeerCastStation.WPF,UserInterface,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UserInterface.cs,OnStart,The following statement contains a magic number: versionCheckTimer = new Timer(OnVersionCheckTimer' null' 1000' 1000*3600*24);
Magic Number,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,OnLocationChanged,The following statement contains a magic number: bounds.Scale(dpi / 96.0' dpi / 96.0);
Magic Number,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,OnLocationChanged,The following statement contains a magic number: bounds.Scale(dpi / 96.0' dpi / 96.0);
Magic Number,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,OnRenderSizeChanged,The following statement contains a magic number: bounds.Scale(dpi / 96.0' dpi / 96.0);
Magic Number,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,OnRenderSizeChanged,The following statement contains a magic number: bounds.Scale(dpi / 96.0' dpi / 96.0);
Magic Number,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 56 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateCheck_Click);                            #line default              #line hidden              return;              case 2:              this.ChannelList = ((PeerCastStation.WPF.ChannelLists.ChannelListControl)(target));              return;              }
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Result = (int)((result.Bitrate / 1000) * 0.8 / 100) * 100;
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Result = (int)((result.Bitrate / 1000) * 0.8 / 100) * 100;
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Result = (int)((result.Bitrate / 1000) * 0.8 / 100) * 100;
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Result = (int)((result.Bitrate / 1000) * 0.8 / 100) * 100;
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Status = String.Format("帯域測定完了: {0}kbps' 設定推奨値: {1}kbps"'                result.Bitrate/1000'                (int)((result.Bitrate / 1000) * 0.8 / 100) * 100);
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Status = String.Format("帯域測定完了: {0}kbps' 設定推奨値: {1}kbps"'                result.Bitrate/1000'                (int)((result.Bitrate / 1000) * 0.8 / 100) * 100);
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Status = String.Format("帯域測定完了: {0}kbps' 設定推奨値: {1}kbps"'                result.Bitrate/1000'                (int)((result.Bitrate / 1000) * 0.8 / 100) * 100);
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Status = String.Format("帯域測定完了: {0}kbps' 設定推奨値: {1}kbps"'                result.Bitrate/1000'                (int)((result.Bitrate / 1000) * 0.8 / 100) * 100);
Magic Number,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,OnInitialized,The following statement contains a magic number: Status = String.Format("帯域測定完了: {0}kbps' 設定推奨値: {1}kbps"'                result.Bitrate/1000'                (int)((result.Bitrate / 1000) * 0.8 / 100) * 100);
Magic Number,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,SettingViewModel,The following statement contains a magic number: this.AddPortCommand = new Command(() => AddPort(7144' NetworkType.IPv4));
Magic Number,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,SettingViewModel,The following statement contains a magic number: channelCleanupInactiveLimit = ChannelCleaner.InactiveLimit/60000;
Magic Number,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,Apply,The following statement contains a magic number: ChannelCleaner.InactiveLimit = channelCleanupInactiveLimit*60000;
Magic Number,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Magic Number,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Magic Number,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Magic Number,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Magic Number,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Magic Number,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Magic Number,PeerCastStation.WPF.ChannelLists.Dialogs,BroadcastWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\Dialogs\BroadcastWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 211 "..\..\..\..\ChannelLists\Dialogs\BroadcastWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              case 2:                            #line 212 "..\..\..\..\ChannelLists\Dialogs\BroadcastWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,PeerCastStation.WPF.Dialogs,UpdaterViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterViewModel.cs,DoDownload,The following statement contains a magic number: client.DownloadProgressChanged += (sender' args) => {            this.Progress = args.ProgressPercentage/100.0;          };
Magic Number,PeerCastStation.WPF.Dialogs,UpdaterViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterViewModel.cs,DoInstall,The following statement contains a magic number: switch (System.IO.Path.GetExtension(downloadPath).ToLowerInvariant()) {        case ".msi":        case ".exe":          Process.Start(downloadPath);          PeerCastApplication.Current.Stop();          break;        case ".zip":          PeerCastApplication.Current.Stop(3);          break;        default:          Process.Start("explorer.exe"' $"/select'\"{downloadPath}\"");          PeerCastApplication.Current.Stop();          break;        }
Magic Number,PeerCastStation.WPF.Dialogs,UpdaterWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 26 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((PeerCastStation.WPF.Dialogs.UpdaterWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.FormsHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\..\Dialogs\UpdaterWindow.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 118 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,PeerCastStation.WPF.Dialogs,UpdaterWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 26 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((PeerCastStation.WPF.Dialogs.UpdaterWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.FormsHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\..\Dialogs\UpdaterWindow.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 118 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,PeerCastStation.WPF.Dialogs,UpdaterWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 26 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((PeerCastStation.WPF.Dialogs.UpdaterWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.FormsHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\..\Dialogs\UpdaterWindow.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 118 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,PeerCastStation.WPF.Logs,LogControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Logs\LogControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 46 "..\..\..\Logs\LogControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              case 2:              this.outputFileName = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,PeerCastStation.WPF,IntegerUpDown,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\IntegerUpDown.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.valueTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.valueTextBox_KeyDown);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.LostFocus += new System.Windows.RoutedEventHandler(this.valueTextBox_Validate);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.valueTextBox_MouseWheel);                            #line default              #line hidden                            #line 17 "..\..\IntegerUpDown.xaml"              this.valueTextBox.PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.valueTextBox_PreviewKeyDown);                            #line default              #line hidden              return;              case 2:              this.upButton = ((System.Windows.Controls.Primitives.RepeatButton)(target));                            #line 18 "..\..\IntegerUpDown.xaml"              this.upButton.Click += new System.Windows.RoutedEventHandler(this.upButton_Click);                            #line default              #line hidden              return;              case 3:              this.downButton = ((System.Windows.Controls.Primitives.RepeatButton)(target));                            #line 21 "..\..\IntegerUpDown.xaml"              this.downButton.Click += new System.Windows.RoutedEventHandler(this.downButton_Click);                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF,NotifyIconManager,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\NotifyIconManager.cs,ShowNotificationMessage,The following switch statement is missing a default case: switch (msg.Type) {        case NotificationMessageType.Normal:  icon = ToolTipIcon.None; break;        case NotificationMessageType.Info:    icon = ToolTipIcon.Info; break;        case NotificationMessageType.Warning: icon = ToolTipIcon.Warning; break;        case NotificationMessageType.Error:   icon = ToolTipIcon.Error; break;        }
Missing Default,PeerCastStation.WPF,SettingsDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\SettingsDialog.xaml.cs,ViewModel_PropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName) {        case nameof(SettingViewModel.IsModified):          ApplyCommand.OnCanExecuteChanged();          break;        }
Missing Default,PeerCastStation.WPF,SettingsDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\SettingsDialog.xaml.cs,Window_Error,The following switch statement is missing a default case: switch (e.Action) {        case ValidationErrorEventAction.Added:          if (errorControls.Add(src)) {            OKCommand.OnCanExecuteChanged();            ApplyCommand.OnCanExecuteChanged();            if (e.OriginalSource is FrameworkElement) {              ((FrameworkElement)e.OriginalSource).Unloaded += Control_Unloaded;            }          }          break;        case ValidationErrorEventAction.Removed:          if (!Validation.GetHasError((DependencyObject)e.OriginalSource)) {            if (errorControls.Remove(src)) {              OKCommand.OnCanExecuteChanged();              ApplyCommand.OnCanExecuteChanged();              if (e.OriginalSource is FrameworkElement) {                ((FrameworkElement)e.OriginalSource).Unloaded -= Control_Unloaded;              }            }          }          break;        }
Missing Default,PeerCastStation.WPF,SettingsDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\SettingsDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 11 "..\..\SettingsDialog.xaml"              ((PeerCastStation.WPF.SettingsDialog)(target)).AddHandler(System.Windows.Controls.Validation.ErrorEvent' new System.EventHandler<System.Windows.Controls.ValidationErrorEventArgs>(this.Window_Error));                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF,UrlLink,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\UrlLink.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 10 "..\..\UrlLink.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              case 2:              this.openMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 3:              this.copyMenu = ((System.Windows.Controls.MenuItem)(target));              return;              }
Missing Default,PeerCastStation.WPF,MainWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 56 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateCheck_Click);                            #line default              #line hidden              return;              case 2:              this.ChannelList = ((PeerCastStation.WPF.ChannelLists.ChannelListControl)(target));              return;              }
Missing Default,PeerCastStation.WPF.CoreSettings,BandwidthCheckDialog,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\BandwidthCheckDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 21 "..\..\..\CoreSettings\BandwidthCheckDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF.CoreSettings,SettingViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingViewModel.cs,AddPort,The following switch statement is missing a default case: switch (network) {        case NetworkType.IPv4:          ports.Add(new OutputListenerViewModel(this' new System.Net.IPEndPoint(System.Net.IPAddress.Any' new_port)));          break;        case NetworkType.IPv6:          ports.Add(new OutputListenerViewModel(this' new System.Net.IPEndPoint(System.Net.IPAddress.IPv6Any' new_port)));          break;        }
Missing Default,PeerCastStation.WPF.CoreSettings,SettingControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\CoreSettings\SettingControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 188 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 2:                            #line 230 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 3:                            #line 235 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 4:                            #line 363 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PortCheckButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 430 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButton_Click);                            #line default              #line hidden              return;              case 6:                            #line 435 "..\..\..\CoreSettings\SettingControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BandwidthCheckButtonIPv6_Click);                            #line default              #line hidden              return;              case 7:              this.advancedSettings = ((System.Windows.Controls.RadioButton)(target));              return;              }
Missing Default,PeerCastStation.WPF.ChannelLists.Dialogs,BroadcastWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\Dialogs\BroadcastWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 211 "..\..\..\..\ChannelLists\Dialogs\BroadcastWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              case 2:                            #line 212 "..\..\..\..\ChannelLists\Dialogs\BroadcastWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF.ChannelLists,ChannelListControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\ChannelLists\ChannelListControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 191 "..\..\..\ChannelLists\ChannelListControl.xaml"              ((System.Windows.Controls.TabControl)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.TabControl_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF.Dialogs,UpdaterViewModel,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterViewModel.cs,Execute,The following switch statement is missing a default case: switch (this.State) {  			case UpdateActionState.Idle:  			case UpdateActionState.NoUpdates:  				await DoCheckUpdate();  				break;  			case UpdateActionState.NewVersionFound:  			case UpdateActionState.Aborted:  				await DoDownload();  				break;  			case UpdateActionState.Checking:  			case UpdateActionState.Downloading:  				cancelSource.Cancel();  				break;  			case UpdateActionState.Downloaded:  				DoInstall();  				break;  			}
Missing Default,PeerCastStation.WPF.Dialogs,UpdaterWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\UpdaterWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 26 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((PeerCastStation.WPF.Dialogs.UpdaterWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.FormsHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\..\Dialogs\UpdaterWindow.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 118 "..\..\..\Dialogs\UpdaterWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF.Dialogs,VersionInfoWindow,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Dialogs\VersionInfoWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 45 "..\..\..\Dialogs\VersionInfoWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,PeerCastStation.WPF.Logs,LogControl,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.WPF\Logs\LogControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 46 "..\..\..\Logs\LogControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              case 2:              this.outputFileName = ((System.Windows.Controls.TextBox)(target));              return;              }
