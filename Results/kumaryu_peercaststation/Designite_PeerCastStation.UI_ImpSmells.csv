Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,Cyclomatic complexity of the method is 14
Complex Method,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,Cyclomatic complexity of the method is 10
Long Parameter List,PeerCastStation.UI,PortCheckResult,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PCPPortChecker.cs,PortCheckResult,The method has 5 parameters. Parameters: success' address' globalAddress' ports' elapsed
Long Parameter List,PeerCastStation.UI.PortMapper,MappedPort,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,MappedPort,The method has 5 parameters. Parameters: device' protocol' internal_port' external_port' expiration
Long Parameter List,PeerCastStation.UI.PortMapper,UPnPServiceDescription,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,UPnPServiceDescription,The method has 8 parameters. Parameters: device_name' device_type' udn' service_id' service_type' control_url' event_sub_url' scpd_url
Long Statement,PeerCastStation.UI,AppCastReader,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\AppCastReader.cs,GetDateTimeValue,The length of the statement  "      if (!DateTime.TryParse(GetStringValue(src)' System.Globalization.DateTimeFormatInfo.InvariantInfo' System.Globalization.DateTimeStyles.None' out result)) { " is 155.
Long Statement,PeerCastStation.UI,AppCastReader,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\AppCastReader.cs,ParseResponse,The length of the statement  "        using (var s=new System.IO.Compression.GZipStream(new System.IO.MemoryStream(body)' System.IO.Compression.CompressionMode.Decompress)) { " is 136.
Long Statement,PeerCastStation.UI,AppCastReader,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\AppCastReader.cs,ParseResponse,The length of the statement  "        using (var s=new System.IO.Compression.DeflateStream(new System.IO.MemoryStream(body)' System.IO.Compression.CompressionMode.Decompress)) { " is 139.
Long Statement,PeerCastStation.UI.PortMapper,UPnPService,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SendActionAsync,The length of the statement  "        logger.Debug("Sending UPnP Action {0} to {1}"' this.ServiceDescription.ServiceType+"#"+action' this.ServiceDescription.ControlUrl); " is 131.
Long Statement,PeerCastStation.UI.PortMapper,UPnPService,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SendActionAsync,The length of the statement  "                await client.PostAsync(this.ServiceDescription.ControlUrl' content' cancel_token).ConfigureAwait(false)).ConfigureAwait(false); " is 127.
Long Statement,PeerCastStation.UI.PortMapper,WANCommonInterfaceConfigService,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,GetCommonLinkProperties,The length of the statement  "      if (result.Parameters.TryGetValue("NewLayer1UpstreamMaxBitRate"' out value)) Int32.TryParse(value' out layer1_upstream_max_bitrate); " is 132.
Long Statement,PeerCastStation.UI.PortMapper,WANCommonInterfaceConfigService,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,GetCommonLinkProperties,The length of the statement  "      if (result.Parameters.TryGetValue("NewLayer1DownstreamMaxBitRate"' out value)) Int32.TryParse(value' out layer1_downstream_max_bitrate); " is 136.
Long Statement,PeerCastStation.UI.PortMapper,WANCommonInterfaceConfigService,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,GetCommonLinkProperties,The length of the statement  "      return new CommonLinkProperties(wan_access_type' layer1_upstream_max_bitrate' layer1_downstream_max_bitrate' physical_link_status); " is 131.
Long Statement,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,The length of the statement  "            var response = System.Text.Encoding.ASCII.GetString(result.Buffer).Split(new string[] { "\r\n" }' StringSplitOptions.None); " is 123.
Long Statement,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,GetUPnPServiceAsync,The length of the statement  "            return new UPnPServiceDescription(friendly_name' device_type' udn' service_id' service_type' control_url' event_sub_url' scpd_url); " is 131.
Empty Catch Block,PeerCastStation.UI,AppCastReader,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\AppCastReader.cs,ParseAppCast,The method has an empty catch block.
Empty Catch Block,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The method has an empty catch block.
Empty Catch Block,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The method has an empty catch block.
Empty Catch Block,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,UnmapAsync,The method has an empty catch block.
Empty Catch Block,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The method has an empty catch block.
Empty Catch Block,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The method has an empty catch block.
Magic Number,PeerCastStation.UI,PCPPortChecker,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PCPPortChecker.cs,RunAsync,The following statement contains a magic number: cancel.CancelAfter(5000);
Magic Number,PeerCastStation.UI,PortMapperMonitor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapperPlugin.cs,Dispose,The following statement contains a magic number: cancelSource.CancelAfter(1000);
Magic Number,PeerCastStation.UI,PortMapperMonitor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapperPlugin.cs,AddPortOnDevice,The following statement contains a magic number: device.MapAsync(MappingProtocol.TCP' port' TimeSpan.FromSeconds(7200)' cancelSource.Token);
Magic Number,PeerCastStation.UI,PortMapperMonitor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapperPlugin.cs,AddPortOnDevice,The following statement contains a magic number: device.MapAsync(MappingProtocol.UDP' port' TimeSpan.FromSeconds(7200)' cancelSource.Token);
Magic Number,PeerCastStation.UI,PortMapperMonitor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapperPlugin.cs,OnTimer,The following statement contains a magic number: renewTimer.ElapsedMilliseconds>=60000
Magic Number,PeerCastStation.UI,UISettings,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\UISettings.cs,AddBroadcastHistory,The following statement contains a magic number: BroadcastHistory = fav.Concat(Enumerable.Repeat(info' 1).Concat(others.Take(19))).ToArray();
Magic Number,PeerCastStation.UI,Updater,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\Updater.cs,DownloadAsync,The following statement contains a magic number: client.DownloadProgressChanged += (sender' args) => {              onprogress(args.ProgressPercentage/100.0f);            };
Magic Number,PeerCastStation.UI,Updater,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\Updater.cs,Install,The following statement contains a magic number: switch (downloaded.Enclosure.InstallerType) {          case InstallerType.Archive:          case InstallerType.ServiceArchive:            PeerCastApplication.Current.Stop(3);            break;          case InstallerType.Installer:            System.Diagnostics.Process.Start(downloaded.FilePath);            PeerCastApplication.Current.Stop();            break;          case InstallerType.ServiceInstaller:            System.Diagnostics.Process.Start(downloaded.FilePath' "/quiet");            break;          case InstallerType.Unknown:            throw new ApplicationException();          }
Magic Number,PeerCastStation.UI,YPChannelList,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\YPChannelList.cs,UpdateAsync,The following statement contains a magic number: cancel.CancelAfter(5000);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetUInt16BE,The following statement contains a magic number: return (bytes[offset]<<8) | bytes[offset+1];
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,PutUInt16BE,The following statement contains a magic number: bytes[offset+0] = (byte)((value & 0xFF00) >> 8);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetUInt32BE,The following statement contains a magic number: return          ((uint)bytes[offset+0]<<24) |          ((uint)bytes[offset+1]<<16) |          ((uint)bytes[offset+2]<<8) |          ((uint)bytes[offset+3]);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetUInt32BE,The following statement contains a magic number: return          ((uint)bytes[offset+0]<<24) |          ((uint)bytes[offset+1]<<16) |          ((uint)bytes[offset+2]<<8) |          ((uint)bytes[offset+3]);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetUInt32BE,The following statement contains a magic number: return          ((uint)bytes[offset+0]<<24) |          ((uint)bytes[offset+1]<<16) |          ((uint)bytes[offset+2]<<8) |          ((uint)bytes[offset+3]);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetUInt32BE,The following statement contains a magic number: return          ((uint)bytes[offset+0]<<24) |          ((uint)bytes[offset+1]<<16) |          ((uint)bytes[offset+2]<<8) |          ((uint)bytes[offset+3]);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetUInt32BE,The following statement contains a magic number: return          ((uint)bytes[offset+0]<<24) |          ((uint)bytes[offset+1]<<16) |          ((uint)bytes[offset+2]<<8) |          ((uint)bytes[offset+3]);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,PutUInt32BE,The following statement contains a magic number: bytes[offset+0] = (byte)((value & 0xFF000000) >> 24);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,PutUInt32BE,The following statement contains a magic number: bytes[offset+1] = (byte)((value & 0x00FF0000) >> 16);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,PutUInt32BE,The following statement contains a magic number: bytes[offset+2] = (byte)((value & 0x0000FF00) >> 8);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,PutUInt32BE,The following statement contains a magic number: bytes[offset+2] = (byte)((value & 0x0000FF00) >> 8);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,PutUInt32BE,The following statement contains a magic number: bytes[offset+3] = (byte)(value & 0x000000FF);
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetIPv4AddressBE,The following statement contains a magic number: return new IPAddress(new byte[] {           bytes[offset+0]'          bytes[offset+1]'          bytes[offset+2]'          bytes[offset+3]'        });
Magic Number,PeerCastStation.UI.PortMapper,BinaryAccessor,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatDeviceDiscoverer.cs,GetIPv4AddressBE,The following statement contains a magic number: return new IPAddress(new byte[] {           bytes[offset+0]'          bytes[offset+1]'          bytes[offset+2]'          bytes[offset+3]'        });
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: cancel_source.CancelAfter(250*tries);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: var bytes = new byte[12];
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: BinaryAccessor.PutUInt16BE(bytes' 2' 0);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: BinaryAccessor.PutUInt16BE(bytes' 4' port);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: BinaryAccessor.PutUInt16BE(bytes' 6' port);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: BinaryAccessor.PutUInt32BE(bytes' 8' lifetime);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: !msg.RemoteEndPoint.Address.Equals(this.DeviceAddress) || msg.Buffer.Length<16
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: var err    = BinaryAccessor.GetUInt16BE(msg.Buffer' 2);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: var time   = BinaryAccessor.GetUInt32BE(msg.Buffer' 4);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: var internal_port = BinaryAccessor.GetUInt16BE(msg.Buffer' 8);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: var external_port = BinaryAccessor.GetUInt16BE(msg.Buffer' 10);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following statement contains a magic number: var mapped_lifetime = BinaryAccessor.GetUInt32BE(msg.Buffer' 12);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsync,The following statement contains a magic number: return MapAsyncInternal(          protocol'          port'          lifetime.TotalSeconds<=0 ? 7200 : (int)lifetime.TotalSeconds'          cancel_token);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The following statement contains a magic number: cancel_source.CancelAfter(250*tries);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The following statement contains a magic number: !msg.RemoteEndPoint.Address.Equals(this.DeviceAddress) || msg.Buffer.Length<12
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The following statement contains a magic number: var err    = BinaryAccessor.GetUInt16BE(msg.Buffer' 2);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The following statement contains a magic number: var time   = BinaryAccessor.GetUInt32BE(msg.Buffer' 4);
Magic Number,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,GetExternalAddressAsync,The following statement contains a magic number: var external_ip = BinaryAccessor.GetIPv4AddressBE(msg.Buffer' 8);
Magic Number,PeerCastStation.UI.PortMapper,WANConnectionService,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,MapAsync,The following statement contains a magic number: return new MappedPort(this' protocol' port' port' DateTime.Now+TimeSpan.FromSeconds(604800));
Magic Number,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,The following statement contains a magic number: i<3
Magic Number,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,The following statement contains a magic number: await Task.Delay(100' cancel_token).ConfigureAwait(false);
Magic Number,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,The following statement contains a magic number: i<10 && client.Available==0 && !cancel_token.IsCancellationRequested
Magic Number,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,The following statement contains a magic number: var value = md.Groups[2].Value.Trim();
Magic Number,PeerCastStation.UI.PortMapper,SSDPDiscoverer,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\UPnPDevice.cs,SSDPAsync,The following statement contains a magic number: await Task.Delay(100' cancel_token).ConfigureAwait(false);
Missing Default,PeerCastStation.UI,Updater,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\Updater.cs,Install,The following switch statement is missing a default case: switch (downloaded.Enclosure.InstallerType) {          case InstallerType.Archive:          case InstallerType.ServiceArchive:            PeerCastApplication.Current.Stop(3);            break;          case InstallerType.Installer:            System.Diagnostics.Process.Start(downloaded.FilePath);            PeerCastApplication.Current.Stop();            break;          case InstallerType.ServiceInstaller:            System.Diagnostics.Process.Start(downloaded.FilePath' "/quiet");            break;          case InstallerType.Unknown:            throw new ApplicationException();          }
Missing Default,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following switch statement is missing a default case: switch (protocol) {            case MappingProtocol.TCP:              BinaryAccessor.PutByte(bytes' 1' PMPOpMapTcp);              break;            case MappingProtocol.UDP:              BinaryAccessor.PutByte(bytes' 1' PMPOpMapUdp);              break;            }
Missing Default,PeerCastStation.UI.PortMapper,NatPmpDevice,D:\research\architectureSmells\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI\PortMapper\NatPmpDevice.cs,MapAsyncInternal,The following switch statement is missing a default case: switch (protocol) {            case MappingProtocol.TCP:              if (opcode!=PMPOpResultMapTcp) {                if (tries++<PMPTries) goto retry;                throw new PortMappingException();              }              break;            case MappingProtocol.UDP:              if (opcode!=PMPOpResultMapUdp) {                if (tries++<PMPTries) goto retry;                throw new PortMappingException();              }              break;            }
