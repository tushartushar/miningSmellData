Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,SetChannelInfo,Cyclomatic complexity of the method is 14
Complex Method,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,GetChannelConnection,Cyclomatic complexity of the method is 8
Complex Method,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,BroadcastChannel,Cyclomatic complexity of the method is 10
Long Parameter List,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,AddYellowPage,The method has 5 parameters. Parameters: protocol' name' uri' announceUri' channelsUri
Long Parameter List,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,AddListener,The method has 6 parameters. Parameters: address' port' localAccepts' globalAccepts' localAuthorizationRequired' globalAuthorizationRequired
Long Parameter List,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,BroadcastChannel,The method has 6 parameters. Parameters: yellowPageId' sourceUri' contentReader' info' track' sourceStream
Long Parameter List,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,OWINHostOutputStream,The method has 8 parameters. Parameters: peercast' input_stream' output_stream' remote_endpoint' access_control' request' header' application
Long Parameter List,PeerCastStation.UI.HTTP,OWINHostOutputStreamFactory,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,Create,The method has 6 parameters. Parameters: input_stream' output_stream' remote_endpoint' access_control' channel_id' header
Long Statement,PeerCastStation.UI.HTTP,AdminHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\AdminHost.cs,OnStart,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,AdminHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\AdminHost.cs,OnStop,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,HTMLHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\HTMLHost.cs,OnStart,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,HTMLHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\HTMLHost.cs,OnStop,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,HTMLHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\HTMLHost.cs,SendResponseMoveToIndex,The length of the statement  "        env.SetResponseHeader("Set-Cookie"' "auth=" + HTTPUtils.CreateAuthorizationToken(env.AccessControlInfo.AuthenticationKey)); " is 123.
Long Statement,PeerCastStation.UI.HTTP,HTMLHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\HTMLHost.cs,SendResponseFileContent,The length of the statement  "          env.SetResponseHeader("Set-Cookie"' "auth=" + HTTPUtils.CreateAuthorizationToken(env.AccessControlInfo.AuthenticationKey)); " is 123.
Long Statement,PeerCastStation.UI.HTTP,APIHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,OnStart,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,APIHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,OnStop,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,APIHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,OnProcess,The length of the statement  "              var buf = await body.ReadBytesAsync((int)len' CancellationTokenSource.CreateLinkedTokenSource(cancel_token' timeout_token.Token).Token); " is 136.
Long Statement,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,GetListener,The length of the statement  "        res["authToken"]     = listener.AuthenticationKey!=null ? HTTPUtils.CreateAuthorizationToken(listener.AuthenticationKey) : null; " is 128.
Long Statement,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,OnStart,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,OnStop,The length of the statement  "        Application.PeerCast.OutputStreamFactories.FirstOrDefault(factory => factory is OWINHostOutputStreamFactory) as OWINHostOutputStreamFactory; " is 140.
Long Statement,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,SendResponseMoveToIndex,The length of the statement  "        env.SetResponseHeader("Set-Cookie"' "auth=" + HTTPUtils.CreateAuthorizationToken(env.AccessControlInfo.AuthenticationKey)); " is 123.
Long Statement,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,SendResponseChannelList,The length of the statement  "        env.SetResponseHeader("Set-Cookie"' "auth=" + HTTPUtils.CreateAuthorizationToken(env.AccessControlInfo.AuthenticationKey)); " is 123.
Complex Conditional,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The conditional expression  "status_code >= 100 && status_code <= 199 || // 1xx Informational            status_code == 204 || // 204 No Content            status_code == 304"  is complex.
Empty Catch Block,PeerCastStation.UI.HTTP,AdminHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\AdminHost.cs,FindChannelFromQuery,The method has an empty catch block.
Empty Catch Block,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,CreateRelayTreeNode,The method has an empty catch block.
Magic Number,PeerCastStation.UI.HTTP,AdminHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\AdminHost.cs,BuildChannelXml,The following statement contains a magic number: if (c.Nodes.Count>0) {          hits = new XElement("hits"'            new XAttribute("hosts"'      c.Nodes.Count)'            new XAttribute("listeners"'  c.Nodes.Sum(n => n.DirectCount))'            new XAttribute("relays"'     c.Nodes.Sum(n => n.RelayCount))'            new XAttribute("firewalled"' c.Nodes.Count(n => n.IsFirewalled))'            new XAttribute("closest"'    c.Nodes.Min(n => n.Hops==0 ? int.MaxValue : n.Hops))'            new XAttribute("furthest"'   c.Nodes.Max(n => n.Hops))'            new XAttribute("newest"'     Environment.TickCount-c.Nodes.Max(n => n.LastUpdated)));          foreach (var n in c.Nodes) {            var host = new XElement("host");            if (n.GlobalEndPoint!=null || n.LocalEndPoint!=null) {              host.Add(new XAttribute("ip"' (n.GlobalEndPoint ?? n.LocalEndPoint).ToString()));            }            host.Add(new XAttribute("hops"'      n.Hops));            host.Add(new XAttribute("listeners"' n.DirectCount));            host.Add(new XAttribute("relays"'    n.RelayCount));            host.Add(new XAttribute("uptime"'    (int)n.Uptime.TotalSeconds));            host.Add(new XAttribute("push"'      n.IsFirewalled  ? 1 : 0));            host.Add(new XAttribute("relay"'     n.IsRelayFull   ? 0 : 1));            host.Add(new XAttribute("direct"'    n.IsDirectFull  ? 0 : 1));            host.Add(new XAttribute("cin"'       n.IsControlFull ? 0 : 1));            host.Add(new XAttribute("stable"'    0));            host.Add(new XAttribute("version"'   n.Version));            host.Add(new XAttribute("update"'    (Environment.TickCount-n.LastUpdated)/1000));            host.Add(new XAttribute("tracker"'   n.IsTracker ? 1 : 0));            hits.Add(host);          }        }        else {          hits = new XElement("hits"'            new XAttribute("hosts"'      0)'            new XAttribute("listeners"'  0)'            new XAttribute("relays"'     0)'            new XAttribute("firewalled"' 0)'            new XAttribute("closest"'    0)'            new XAttribute("furthest"'   0)'            new XAttribute("newest"'     0));        }
Magic Number,PeerCastStation.UI.HTTP,APIContext,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\APIHost.cs,CheckBandWidth,The following statement contains a magic number: if (AppSettingsReader.TryGetUri("BandwidthChecker"' out target_uri)) {            var checker = new BandwidthChecker(target_uri);            checker.BandwidthCheckCompleted += (sender' args) => {              if (args.Success) {                result = (int)args.Bitrate/1000;              }            };            checker.Run();          }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,CreateOWINEnvironment,The following statement contains a magic number: env["owin.ResponseStatusCode"] = 200;
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The following statement contains a magic number: if (status_code >= 100 && status_code <= 199 || // 1xx Informational            status_code == 204 || // 204 No Content            status_code == 304) { // 304 Not Modified          return false;        }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The following statement contains a magic number: if (status_code >= 100 && status_code <= 199 || // 1xx Informational            status_code == 204 || // 204 No Content            status_code == 304) { // 304 Not Modified          return false;        }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The following statement contains a magic number: if (status_code >= 100 && status_code <= 199 || // 1xx Informational            status_code == 204 || // 204 No Content            status_code == 304) { // 304 Not Modified          return false;        }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The following statement contains a magic number: if (status_code >= 100 && status_code <= 199 || // 1xx Informational            status_code == 204 || // 204 No Content            status_code == 304) { // 304 Not Modified          return false;        }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The following statement contains a magic number: if (request_method == "CONNECT" &&            status_code >= 200 && status_code <= 299) {          return false;        }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ResponseHasMessageBody,The following statement contains a magic number: if (request_method == "CONNECT" &&            status_code >= 200 && status_code <= 299) {          return false;        }
Magic Number,PeerCastStation.UI.HTTP,OWINHostOutputStream,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\OWINHost.cs,ProcessResponse,The following statement contains a magic number: var status_code   = GetEnvValue(env' "owin.ResponseStatusCode"' 200);
Magic Number,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,FormatUptime,The following statement contains a magic number: if (sec.HasValue) {          var hours   = sec.Value/3600;          var minutes = sec.Value/60%60;          return String.Format("{0}:{1:D2}"' hours' minutes);        }        else {          return "";        }
Magic Number,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,FormatUptime,The following statement contains a magic number: if (sec.HasValue) {          var hours   = sec.Value/3600;          var minutes = sec.Value/60%60;          return String.Format("{0}:{1:D2}"' hours' minutes);        }        else {          return "";        }
Magic Number,PeerCastStation.UI.HTTP,YPChannelsHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\YPChannelsHost.cs,FormatUptime,The following statement contains a magic number: if (sec.HasValue) {          var hours   = sec.Value/3600;          var minutes = sec.Value/60%60;          return String.Format("{0}:{1:D2}"' hours' minutes);        }        else {          return "";        }
Missing Default,PeerCastStation.UI.HTTP,AdminHost,C:\repos\kumaryu_peercaststation\PeerCastStation\PeerCastStation.UI.HTTP\AdminHost.cs,BuildChannelXml,The following switch statement is missing a default case: switch (c.Status) {        case SourceStreamStatus.Connecting: status = "CONNECT"; break;        case SourceStreamStatus.Error:      status = "ERROR";   break;        case SourceStreamStatus.Idle:       status = "IDLE";    break;        case SourceStreamStatus.Searching:  status = "SEARCH";  break;        case SourceStreamStatus.Receiving:          if (c.IsBroadcasting) status = "BROADCAST";          else                  status = "RECEIVE";          break;        }
