Implementation smell,Namespace,Class,File,Method,Description
Long Method,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The method has 63 lines of code.
Complex Method,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,NextToken,Cyclomatic complexity of the method is 14
Complex Method,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,Cyclomatic complexity of the method is 27
Complex Method,SierraLib.Translation,TranslationManager,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\TranslationManager.cs,RefreshCurrentTranslation,Cyclomatic complexity of the method is 7
Complex Method,SierraLib.Translation,TranslationManager,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\TranslationManager.cs,LoadTranslations,Cyclomatic complexity of the method is 7
Long Parameter List,SierraLib.Translation,TranslationValueConverter,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\TranslationValueConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,SierraLib.Translation,TranslationValueConverter,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\TranslationValueConverter.cs,ConvertBack,The method has 4 parameters.
Long Statement,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The length of the statement  "				throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ()); " is 153.
Long Statement,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The length of the statement  "				throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ()); " is 155.
Long Statement,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The length of the statement  "			throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'"); " is 136.
Long Statement,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The length of the statement  "			throw new FileFormatException ("Expected a Key field but found a " + ActiveToken.Type.ToString () + " token instead. File may be missing a value for a key"); " is 157.
Long Statement,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The length of the statement  "			throw new FileFormatException ("Expected a Value field but found a " + ActiveToken.Type.ToString () + " token instead. File may be missing a value for a key"); " is 159.
Long Statement,SierraLib.Translation,TranslationManager,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\TranslationManager.cs,RefreshCurrentTranslation,The length of the statement  "			CurrentTranslation = Translations.FirstOrDefault (x => x.Culture.Equals (DefaultLanguage)) ?? new DesignerTranslation (); " is 121.
Virtual Method Call from Constructor,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,FileBasedTranslation,The constructor "FileBasedTranslation" calls a virtual method "ProcessFile".
Empty Catch Block,SierraLib.Translation,TranslationManager,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\TranslationManager.cs,LoadTranslations,The method has an empty catch block.
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: for (var i = 0; i < data.Length; i++) {  	var nextTokenType = NextToken (data' ref i' ActiveToken.Type);  	switch (nextTokenType) {  	case LexerToken.Ignore:  		continue;  	case LexerToken.BeginKey:  	case LexerToken.BeginValue:  		ActiveToken.Value = ActiveStringBuilder.ToString ();  		ActiveStringBuilder.Clear ();  		ActiveToken = ActiveToken.Next = new Token () {  			Type = nextTokenType  		};  		break;  	case LexerToken.Key:  		if (ActiveToken.Type == LexerToken.BeginKey) {  			ActiveToken.Type = LexerToken.Key;  			ActiveStringBuilder.Append (data [i]);  		} else if (ActiveToken.Type == LexerToken.Key)  			ActiveStringBuilder.Append (data [i]);  		else  			throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  		break;  	case LexerToken.Value:  		if (ActiveToken.Type == LexerToken.BeginValue) {  			ActiveToken.Type = LexerToken.Value;  			ActiveStringBuilder.Append (data [i]);  		} else if (ActiveToken.Type == LexerToken.Value)  			ActiveStringBuilder.Append (data [i]);  		else  			throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  		break;  	case LexerToken.Invalid:  		throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  	}  }  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: for (var i = 0; i < data.Length; i++) {  	var nextTokenType = NextToken (data' ref i' ActiveToken.Type);  	switch (nextTokenType) {  	case LexerToken.Ignore:  		continue;  	case LexerToken.BeginKey:  	case LexerToken.BeginValue:  		ActiveToken.Value = ActiveStringBuilder.ToString ();  		ActiveStringBuilder.Clear ();  		ActiveToken = ActiveToken.Next = new Token () {  			Type = nextTokenType  		};  		break;  	case LexerToken.Key:  		if (ActiveToken.Type == LexerToken.BeginKey) {  			ActiveToken.Type = LexerToken.Key;  			ActiveStringBuilder.Append (data [i]);  		} else if (ActiveToken.Type == LexerToken.Key)  			ActiveStringBuilder.Append (data [i]);  		else  			throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  		break;  	case LexerToken.Value:  		if (ActiveToken.Type == LexerToken.BeginValue) {  			ActiveToken.Type = LexerToken.Value;  			ActiveStringBuilder.Append (data [i]);  		} else if (ActiveToken.Type == LexerToken.Value)  			ActiveStringBuilder.Append (data [i]);  		else  			throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  		break;  	case LexerToken.Invalid:  		throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  	}  }  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: for (var i = 0; i < data.Length; i++) {  	var nextTokenType = NextToken (data' ref i' ActiveToken.Type);  	switch (nextTokenType) {  	case LexerToken.Ignore:  		continue;  	case LexerToken.BeginKey:  	case LexerToken.BeginValue:  		ActiveToken.Value = ActiveStringBuilder.ToString ();  		ActiveStringBuilder.Clear ();  		ActiveToken = ActiveToken.Next = new Token () {  			Type = nextTokenType  		};  		break;  	case LexerToken.Key:  		if (ActiveToken.Type == LexerToken.BeginKey) {  			ActiveToken.Type = LexerToken.Key;  			ActiveStringBuilder.Append (data [i]);  		} else if (ActiveToken.Type == LexerToken.Key)  			ActiveStringBuilder.Append (data [i]);  		else  			throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  		break;  	case LexerToken.Value:  		if (ActiveToken.Type == LexerToken.BeginValue) {  			ActiveToken.Type = LexerToken.Value;  			ActiveStringBuilder.Append (data [i]);  		} else if (ActiveToken.Type == LexerToken.Value)  			ActiveStringBuilder.Append (data [i]);  		else  			throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  		break;  	case LexerToken.Invalid:  		throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  	}  }  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: switch (nextTokenType) {  case LexerToken.Ignore:  	continue;  case LexerToken.BeginKey:  case LexerToken.BeginValue:  	ActiveToken.Value = ActiveStringBuilder.ToString ();  	ActiveStringBuilder.Clear ();  	ActiveToken = ActiveToken.Next = new Token () {  		Type = nextTokenType  	};  	break;  case LexerToken.Key:  	if (ActiveToken.Type == LexerToken.BeginKey) {  		ActiveToken.Type = LexerToken.Key;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Key)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Value:  	if (ActiveToken.Type == LexerToken.BeginValue) {  		ActiveToken.Type = LexerToken.Value;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Value)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Invalid:  	throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  }  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: switch (nextTokenType) {  case LexerToken.Ignore:  	continue;  case LexerToken.BeginKey:  case LexerToken.BeginValue:  	ActiveToken.Value = ActiveStringBuilder.ToString ();  	ActiveStringBuilder.Clear ();  	ActiveToken = ActiveToken.Next = new Token () {  		Type = nextTokenType  	};  	break;  case LexerToken.Key:  	if (ActiveToken.Type == LexerToken.BeginKey) {  		ActiveToken.Type = LexerToken.Key;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Key)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Value:  	if (ActiveToken.Type == LexerToken.BeginValue) {  		ActiveToken.Type = LexerToken.Value;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Value)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Invalid:  	throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  }  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: switch (nextTokenType) {  case LexerToken.Ignore:  	continue;  case LexerToken.BeginKey:  case LexerToken.BeginValue:  	ActiveToken.Value = ActiveStringBuilder.ToString ();  	ActiveStringBuilder.Clear ();  	ActiveToken = ActiveToken.Next = new Token () {  		Type = nextTokenType  	};  	break;  case LexerToken.Key:  	if (ActiveToken.Type == LexerToken.BeginKey) {  		ActiveToken.Type = LexerToken.Key;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Key)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Value:  	if (ActiveToken.Type == LexerToken.BeginValue) {  		ActiveToken.Type = LexerToken.Value;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Value)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Invalid:  	throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  }  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  
Magic Number,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following statement contains a magic number: throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  
Missing Default,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following switch statement is missing a default case: switch (nextTokenType) {  case LexerToken.Ignore:  	continue;  case LexerToken.BeginKey:  case LexerToken.BeginValue:  	ActiveToken.Value = ActiveStringBuilder.ToString ();  	ActiveStringBuilder.Clear ();  	ActiveToken = ActiveToken.Next = new Token () {  		Type = nextTokenType  	};  	break;  case LexerToken.Key:  	if (ActiveToken.Type == LexerToken.BeginKey) {  		ActiveToken.Type = LexerToken.Key;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Key)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a key cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Value:  	if (ActiveToken.Type == LexerToken.BeginValue) {  		ActiveToken.Type = LexerToken.Value;  		ActiveStringBuilder.Append (data [i]);  	} else if (ActiveToken.Type == LexerToken.Value)  		ActiveStringBuilder.Append (data [i]);  	else  		throw new InvalidOperationException ("Invalid state transitions in translation file lexer' a value cannot appear after a " + ActiveToken.Type.ToString ());  	break;  case LexerToken.Invalid:  	throw new FileFormatException ("Bad file format near '" + data.Substring (Math.Max (0' i - 10)' Math.Min (20' data.Length - 20)) + "'");  }  
Missing Default,SierraLib.Translation,FileBasedTranslation,D:\newReposJune17\Mpstark_articulate\SierraLib.Translation\FileBasedTranslation.cs,ProcessFile,The following switch statement is missing a default case: switch (key) {  case "translation_author":  	Author = value;  	break;  }  
