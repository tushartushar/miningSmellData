Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Gendarme,Settings,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Settings.cs,LoadRulesFromAssembly,Cyclomatic complexity of the method is 8
Complex Method,Gendarme,Settings,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Settings.cs,SetCustomParameters,Cyclomatic complexity of the method is 11
Complex Method,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,ParseSeverity,Cyclomatic complexity of the method is 10
Complex Method,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,ParseConfidence,Cyclomatic complexity of the method is 9
Complex Method,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,Gendarme,IgnoreFileList,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\IgnoreFileList.cs,ProcessLine,Cyclomatic complexity of the method is 11
Complex Method,Gendarme,IgnoreFileList,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\IgnoreFileList.cs,Resolve,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Statement,Gendarme,Settings,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Settings.cs,SetCustomParameters,The length of the statement  "					throw GetException ("The value '{2}' could not be converted into the property {1} type for rule {0}"' ruleName' propertyName' value); " is 133.
Long Statement,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,Help,The length of the statement  "			Console.WriteLine ("  --v\t\t\tWhen present additional progress information is written to stdout (can be used multiple times)."); " is 129.
Complex Conditional,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,Report,The conditional expression  "console || (log_file != null) || ((xml_file == null) && (html_file == null))"  is complex.
Complex Conditional,NDesk.Options,Option,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Magic Number,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,Execute,The following statement contains a magic number: return 3;
Magic Number,Gendarme,ConsoleRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\ConsoleRunner.cs,TimeToString,The following statement contains a magic number: time >= TimeSpan.FromMilliseconds (100)
Magic Number,Gendarme,IgnoreFileList,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\IgnoreFileList.cs,Parse,The following statement contains a magic number: char [] buffer = new char [4096];
Magic Number,Gendarme,IgnoreFileList,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\IgnoreFileList.cs,GetString,The following statement contains a magic number: int start = 2;
Magic Number,Gendarme,TextResultWriter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\TextResultWriter.cs,Write,The following statement contains a magic number: string delimiter = new string ('-'' 60);
Magic Number,Gendarme,TextResultWriter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\TextResultWriter.cs,BeginColor,The following statement contains a magic number: switch (color_scheme) {  			case ColorScheme.Dark:  				Console.ForegroundColor = color;  				break;  			case ColorScheme.Light:  				Console.ForegroundColor = (ConsoleColor) color + 8;  				break;  			}
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: string prefix = new string (' '' OptionWidth+2);
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Missing Default,Gendarme,Settings,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Settings.cs,SetCustomParameters,The following switch statement is missing a default case: switch (Type.GetTypeCode (property.PropertyType)) {  				case TypeCode.Int32:  					int i;  					if (Int32.TryParse (value' out i))  						values [0] = i;  					break;  				case TypeCode.Double:  					double d;  					if (Double.TryParse (value' out d))  						values [0] = d;  					break;  				case TypeCode.String:  					values [0] = value;  					break;  				}
Missing Default,Gendarme,TextResultWriter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\TextResultWriter.cs,BeginColor,The following switch statement is missing a default case: switch (color_scheme) {  			case ColorScheme.Dark:  				Console.ForegroundColor = color;  				break;  			case ColorScheme.Light:  				Console.ForegroundColor = (ConsoleColor) color + 8;  				break;  			}
Missing Default,Gendarme,TextResultWriter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\TextResultWriter.cs,EndColor,The following switch statement is missing a default case: switch (color_scheme) {  			case ColorScheme.Dark:  			case ColorScheme.Light:  				Console.ResetColor ();  				break;  			}
Missing Default,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
Missing Default,NDesk.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\console\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  					case ' ':  					case '\t':  					case '\v':  					case '-':  					case ''':  					case '.':  					case ';':  						sep = i;  						break;  					case '\n':  						return i;  				}
