Implementation smell,Namespace,Class,File,Method,Description
Long Method,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The method has 101 lines of code.
Long Method,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareMemberLists,The method has 141 lines of code.
Long Method,GuiCompare,InfoManager,C:\repos\mono_mono-tools\gui-compare\InfoManager.cs,Ensure,The method has 143 lines of code.
Complex Method,GuiCompare,CecilUtils,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PrettyType,Cyclomatic complexity of the method is 9
Complex Method,GuiCompare,CecilUtils,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMemberLists,Cyclomatic complexity of the method is 27
Complex Method,GuiCompare,CecilAssembly,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilAssembly,Cyclomatic complexity of the method is 10
Complex Method,GuiCompare,CecilMethod,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,FormatName,Cyclomatic complexity of the method is 12
Complex Method,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareTypeLists,Cyclomatic complexity of the method is 9
Complex Method,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareAttributeArguments,Cyclomatic complexity of the method is 10
Complex Method,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareMemberLists,Cyclomatic complexity of the method is 14
Complex Method,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,AddMissing,Cyclomatic complexity of the method is 17
Complex Method,GuiCompare,XMLClass,C:\repos\mono_mono-tools\gui-compare\Masterinfo.cs,LoadData,Cyclomatic complexity of the method is 16
Complex Method,GuiCompare,XMLParameter,C:\repos\mono_mono-tools\gui-compare\Masterinfo.cs,LoadData,Cyclomatic complexity of the method is 9
Complex Method,GuiCompare,XMLMethods,C:\repos\mono_mono-tools\gui-compare\Masterinfo.cs,LoadExtraData,Cyclomatic complexity of the method is 13
Complex Method,GuiCompare,MasterUtils,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,PopulateMemberLists,Cyclomatic complexity of the method is 11
Complex Method,GuiCompare,CompNamed,C:\repos\mono_mono-tools\gui-compare\Metadata.cs,Compare,Cyclomatic complexity of the method is 8
Long Parameter List,GuiCompare,CecilUtils,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMemberLists,The method has 7 parameters. Parameters: fromDef' interface_list' constructor_list' method_list' property_list' field_list' event_list
Long Parameter List,GuiCompare,CecilUtils,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateTypeLists,The method has 6 parameters. Parameters: fromDef' class_list' enum_list' delegate_list' interface_list' struct_list
Long Parameter List,GuiCompare,InfoManager,C:\repos\mono_mono-tools\gui-compare\InfoManager.cs,Populate,The method has 5 parameters. Parameters: container' caption' pdir' collection' elements
Long Parameter List,GuiCompare,MasterUtils,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,PopulateMemberLists,The method has 7 parameters. Parameters: xml_cls' interface_list' constructor_list' method_list' property_list' field_list' event_list
Long Parameter List,GuiCompare,MasterUtils,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,PopulateTypeLists,The method has 6 parameters. Parameters: fromDef' class_list' enum_list' delegate_list' interface_list' struct_list
Long Parameter List,GuiCompare,MasterField,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,MasterField,The method has 5 parameters. Parameters: name' fieldType' fieldValue' fieldAccess' attributes
Long Parameter List,GuiCompare,MasterMethod,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,MasterMethod,The method has 7 parameters. Parameters: name' signatureFlags' returnType' parameters' genericParameters' methodAccess' attributes
Long Statement,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Error,The length of the statement  "			MessageDialog md = new MessageDialog (this' DialogFlags.DestroyWithParent' MessageType.Error' ButtonsType.Close' String.Format (format' args)); " is 143.
Long Statement,GuiCompare,CecilUtils,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateTypeLists,The length of the statement  "				//Console.WriteLine ("Got {0}.{1} => {2}"' type_def.Namespace' type_def.Name' type_def.Attributes & TypeAttributes.VisibilityMask); " is 131.
Long Statement,GuiCompare,CecilInterface,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,GetBaseType,The length of the statement  "			return (type_def == null || type_def.BaseType == null) ? null : CecilUtils.FormatTypeLikeCorCompare (type_def.BaseType); " is 120.
Long Statement,GuiCompare,CecilField,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,GetLiteralValue,The length of the statement  "					return string.Format (CultureInfo.InvariantCulture' (char) field_def.Constant < 0x80 ? "\\x{0:X02}" : "\\u{0:X04}"' (int)(char) field_def.Constant); " is 148.
Long Statement,GuiCompare,CecilMethod,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,ThrowsNotImplementedException,The length of the statement  "                                                if (i.Previous.Operand != null && i.Previous.Operand.ToString ().StartsWith ("System.Void System.NotImplementedException")) " is 123.
Long Statement,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CreatePropertyFieldMapping,The length of the statement  "			Dictionary<PropertyDefinition' FieldReference> property_mapping = new Dictionary<PropertyDefinition' FieldReference> (); " is 120.
Long Statement,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The length of the statement  "					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) : " is 128.
Long Statement,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The length of the statement  "					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value); " is 130.
Long Statement,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareParameters,The length of the statement  "				throw new NotImplementedException (string.Format ("Should never happen with valid data ({0} != {1})"' r.Count' t.Count)); " is 121.
Long Statement,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareTypeParameters,The length of the statement  "					parent.AddError (string.Format ("Expected type parameter {2} with {0} generic attributes but found type parameter {3} with {1} generic attributes"' " is 147.
Long Statement,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareTypeLists,The length of the statement  "					ProgressChange ((double)comparisons_performed / total_comparisons * 100.0' String.Format ("Comparing {0} {1}"' reference_list[m].Type' reference_list[m].Name)); " is 160.
Long Statement,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareAttributeArguments,The length of the statement  "					parent.AddError (String.Format ("Expected value `{0}' for attribute property `{1}' but found `{2}'"' entry_value' entry.Key' target_value)); " is 140.
Long Statement,GuiCompare,ComparisonNode,C:\repos\mono_mono-tools\gui-compare\Comparison.cs,ConstructMSDNUrl,The length of the statement  "			if (Type == CompType.Method && Parent.Type == CompType.Property && (name.StartsWith ("get_") || name.StartsWith ("set_"))) " is 122.
Long Statement,GuiCompare,ComparisonNode,C:\repos\mono_mono-tools\gui-compare\Comparison.cs,ConstructMSDNUrl,The length of the statement  "			else if (Type == CompType.Method && Parent.Type == CompType.Event && (name.StartsWith ("add_") || name.StartsWith ("remove_"))) " is 127.
Long Statement,GuiCompare,MasterUtils,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,PopulateMemberLists,The length of the statement  "					string type = (xml_cls.fields.fieldTypes == null || !xml_cls.fields.fieldTypes.ContainsKey(key)) ? null : (string)xml_cls.fields.fieldTypes[key]; " is 145.
Long Statement,GuiCompare,MasterUtils,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,PopulateMemberLists,The length of the statement  "					string fvalue = (xml_cls.fields.fieldValues == null || !xml_cls.fields.fieldValues.ContainsKey(key)) ? null : (string)xml_cls.fields.fieldValues[key]; " is 150.
Long Statement,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The length of the statement  "			this.filechooserbutton1 = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select A File")' ((global::Gtk.FileChooserAction)(0))); " is 154.
Long Statement,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The length of the statement  "			this.filechooserbutton2 = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select A File")' ((global::Gtk.FileChooserAction)(0))); " is 154.
Complex Conditional,GuiCompare,CecilInterface,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilInterface,The conditional expression  "!type_def.IsNotPublic || type_def.IsPublic || type_def.IsNestedPublic || type_def.IsNestedFamily ||  			    type_def.IsNestedFamilyAndAssembly || type_def.IsNestedFamilyOrAssembly"  is complex.
Complex Conditional,GuiCompare,CecilDelegate,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilDelegate,The conditional expression  "!type_def.IsNotPublic || type_def.IsPublic || type_def.IsNestedPublic || type_def.IsNestedFamily ||  			    type_def.IsNestedFamilyAndAssembly || type_def.IsNestedFamilyOrAssembly"  is complex.
Complex Conditional,GuiCompare,CecilEnum,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilEnum,The conditional expression  "!type_def.IsNotPublic || type_def.IsPublic || type_def.IsNestedPublic || type_def.IsNestedFamily ||  			    type_def.IsNestedFamilyAndAssembly || type_def.IsNestedFamilyOrAssembly"  is complex.
Complex Conditional,GuiCompare,CecilClass,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilClass,The conditional expression  "!type_def.IsNotPublic || type_def.IsPublic || type_def.IsNestedPublic || type_def.IsNestedFamily ||  			    type_def.IsNestedFamilyAndAssembly || type_def.IsNestedFamilyOrAssembly"  is complex.
Complex Conditional,GuiCompare,CecilField,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilField,The conditional expression  "field_def.IsPublic || field_def.IsFamily || field_def.IsFamilyAndAssembly || field_def.IsFamilyOrAssembly"  is complex.
Complex Conditional,GuiCompare,CecilMethod,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilMethod,The conditional expression  "method_def.IsFamily || method_def.IsFamilyAndAssembly || method_def.IsFamilyOrAssembly || method_def.IsPublic"  is complex.
Complex Conditional,GuiCompare,CecilProperty,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilProperty,The conditional expression  "getMethod != null && (getMethod.IsPublic || getMethod.IsFamily || getMethod.IsFamilyAndAssembly || getMethod.IsFamilyOrAssembly)"  is complex.
Complex Conditional,GuiCompare,CecilProperty,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilProperty,The conditional expression  "setMethod != null && (setMethod.IsPublic || setMethod.IsFamily || setMethod.IsFamilyAndAssembly || setMethod.IsFamilyOrAssembly)"  is complex.
Complex Conditional,GuiCompare,CecilEvent,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilEvent,The conditional expression  "addMethod != null && (addMethod.IsPublic || addMethod.IsFamily || addMethod.IsFamilyAndAssembly || addMethod.IsFamilyOrAssembly)"  is complex.
Complex Conditional,GuiCompare,CecilEvent,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CecilEvent,The conditional expression  "removeMethod != null && (removeMethod.IsPublic || removeMethod.IsFamily || removeMethod.IsFamilyAndAssembly || removeMethod.IsFamilyOrAssembly)"  is complex.
Complex Conditional,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareTypeParameters,The conditional expression  "r == null && t == null || (r == null && t != null) || (r != null && t == null)"  is complex.
Complex Conditional,GuiCompare,ComparisonNode,C:\repos\mono_mono-tools\gui-compare\Comparison.cs,ConstructMSDNUrl,The conditional expression  "Type == CompType.Method && Parent.Type == CompType.Property && (name.StartsWith ("get_") || name.StartsWith ("set_"))"  is complex.
Complex Conditional,GuiCompare,ComparisonNode,C:\repos\mono_mono-tools\gui-compare\Comparison.cs,ConstructMSDNUrl,The conditional expression  "Type == CompType.Method && Parent.Type == CompType.Event && (name.StartsWith ("add_") || name.StartsWith ("remove_"))"  is complex.
Complex Conditional,GuiCompare,XMLData,C:\repos\mono_mono-tools\gui-compare\Masterinfo.cs,IsMonoTODOAttribute,The conditional expression  "s.EndsWith ("MonoDocumentationNoteAttribute") ||  			    s.EndsWith ("MonoExtensionAttribute") ||  //			    s.EndsWith ("MonoInternalNoteAttribute") ||  			    s.EndsWith ("MonoLimitationAttribute") ||  			    s.EndsWith ("MonoNotSupportedAttribute")"  is complex.
Virtual Method Call from Constructor,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,CustomCompare,The constructor "CustomCompare" calls a virtual method "Build".
Virtual Method Call from Constructor,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,ProviderSelector,The constructor "ProviderSelector" calls a virtual method "Build".
Empty Catch Block,GuiCompare,Config,C:\repos\mono_mono-tools\gui-compare\Config.cs,Config,The method has an empty catch block.
Empty Catch Block,GuiCompare,Config,C:\repos\mono_mono-tools\gui-compare\Config.cs,Save,The method has an empty catch block.
Empty Catch Block,GuiCompare,Config,C:\repos\mono_mono-tools\gui-compare\Config.cs,Save,The method has an empty catch block.
Magic Number,GuiCompare,MainClass,C:\repos\mono_mono-tools\gui-compare\Main.cs,Main,The following statement contains a magic number: if (args.Length != 0 && args[0].StartsWith ("--profile-path="))  				profile_path = args[0].Substring (15);
Magic Number,GuiCompare,MainClass,C:\repos\mono_mono-tools\gui-compare\Main.cs,Main,The following statement contains a magic number: if (args.Length == 2 && File.Exists (args [0]) && File.Exists (args [1])){  				win.ComparePaths (args [0]' args [1]);  			}
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 12;
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.hbox1.BorderWidth = ((uint)(4));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.GtkAlignment2.LeftPadding = ((uint)(12));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.reference.Events = ((Gdk.EventMask)(256));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: w4.Padding = ((uint)(4));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.GtkAlignment3.LeftPadding = ((uint)(12));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.target.Events = ((Gdk.EventMask)(256));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: w7.Padding = ((uint)(4));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: w9.Spacing = 6;
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: w9.BorderWidth = ((uint)(5));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: w9.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.DefaultWidth = 578;
Magic Number,GuiCompare,CustomCompare,C:\repos\mono_mono-tools\gui-compare\gtk-gui\GuiCompare.CustomCompare.cs,Build,The following statement contains a magic number: this.DefaultHeight = 273;
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CreateArgumentFieldMapping,The following statement contains a magic number: foreach (Instruction instruction in constructor.Body.Instructions) {  				switch (instruction.OpCode.Code) {  				case Code.Ldarg_1:  					argument = 1;  					break;  				case Code.Ldarg_2:  					argument = 2;  					break;  				case Code.Ldarg_3:  					argument = 3;  					break;  				case Code.Ldarg:  				case Code.Ldarg_S:  					argument = ((ParameterDefinition) instruction.Operand).Index + 1;  					break;    				case Code.Stfld:  					FieldReference field = (FieldReference) instruction.Operand;  					if (field.DeclaringType.FullName != constructor.DeclaringType.FullName)  						continue;    					if (!argument.HasValue)  						break;    					if (!field_mapping.ContainsKey (field))  						field_mapping.Add (field' (int) argument - 1);    					argument = null;  					break;  				}  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CreateArgumentFieldMapping,The following statement contains a magic number: foreach (Instruction instruction in constructor.Body.Instructions) {  				switch (instruction.OpCode.Code) {  				case Code.Ldarg_1:  					argument = 1;  					break;  				case Code.Ldarg_2:  					argument = 2;  					break;  				case Code.Ldarg_3:  					argument = 3;  					break;  				case Code.Ldarg:  				case Code.Ldarg_S:  					argument = ((ParameterDefinition) instruction.Operand).Index + 1;  					break;    				case Code.Stfld:  					FieldReference field = (FieldReference) instruction.Operand;  					if (field.DeclaringType.FullName != constructor.DeclaringType.FullName)  						continue;    					if (!argument.HasValue)  						break;    					if (!field_mapping.ContainsKey (field))  						field_mapping.Add (field' (int) argument - 1);    					argument = null;  					break;  				}  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PopulateMapping,The following statement contains a magic number: if (constructor.DeclaringType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute") {  				var ca = attribute.ConstructorArguments;  				var dca = constructor.Parameters[2].ParameterType == constructor.Module.TypeSystem.Int32 ?  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (int) ca[2].Value' (int) ca[3].Value' (int) ca[4].Value) :  					new DecimalConstantAttribute ((byte) ca[0].Value' (byte) ca[1].Value' (uint) ca[2].Value' (uint) ca[3].Value' (uint) ca[4].Value);    				mapping.Add ("Value"' dca.Value);  				return;  			}
Magic Number,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareTypeLists,The following statement contains a magic number: while (m < reference_list.Count || a < target_list.Count) {  				if (m == reference_list.Count) {  					AddExtra (parent' target_list[a]);  					a++;  					continue;  				}  				else if (a == target_list.Count) {  					AddMissing (parent' reference_list[m]);  					m++;  					continue;  				}    				int c = String.Compare (reference_list[m].Name' target_list[a].Name);  				comparisons_performed ++;  				  				if (c == 0) {  					ProgressChange ((double)comparisons_performed / total_comparisons * 100.0' String.Format ("Comparing {0} {1}"' reference_list[m].Type' reference_list[m].Name));    					/* the names match' further investigation is required */  					ComparisonNode comparison = target_list[a].GetComparisonNode();  					parent.AddChild (comparison);    					// compare base types  					if (reference_list[m] is ICompHasBaseType && target_list[a] is ICompHasBaseType) {  						CompareBaseTypes (comparison'  								  (ICompHasBaseType)reference_list[m]'  								  (ICompHasBaseType)target_list[a]);  					}  					  					// compares generic type parameters  					if (reference_list[m] is ICompGenericParameter && target_list[a] is ICompGenericParameter) {  						CompareTypeParameters (comparison'  								(ICompGenericParameter)reference_list[m]'  								(ICompGenericParameter)target_list[a]);  					}  					  					// compare nested types  					if (reference_list[m] is ICompTypeContainer && target_list[a] is ICompTypeContainer) {  						CompareNestedTypes (comparison'  						                    (ICompTypeContainer)reference_list[m]'  						                    (ICompTypeContainer)target_list[a]);  					}  					if (reference_list[m] is ICompMemberContainer && target_list[a] is ICompMemberContainer) {  						CompareMembers (comparison'  						                (ICompMemberContainer)reference_list[m]'  						                (ICompMemberContainer)target_list[a]);  					}  					if (reference_list[m] is ICompAttributeContainer && target_list[a] is ICompAttributeContainer) {  						CompareAttributes (comparison'  								   (ICompAttributeContainer)reference_list[m]'  								   (ICompAttributeContainer)target_list[a]);  					}    					m++;  					a++;  				}  				else if (c < 0) {  					/* reference name is before target name' reference name is missing from target */  					AddMissing (parent' reference_list[m]);  					m++;  				}  				else {  					/* reference name is after target name' target name is extra */  					AddExtra (parent' target_list[a]);  					a++;  				}  			}
Magic Number,GuiCompare,InfoManager,C:\repos\mono_mono-tools\gui-compare\InfoManager.cs,Ensure,The following statement contains a magic number: Thread async_thread = new Thread (delegate (object state) {  				HttpWebRequest request = (HttpWebRequest) WebRequest.Create (u);  				FileInfo targetInfo = new FileInfo (target);  				if (targetInfo.Exists)  					request.IfModifiedSince = targetInfo.CreationTime;    				try {  					HttpWebResponse response = (HttpWebResponse)request.GetResponse ();  					if (response.StatusCode == HttpStatusCode.OK) {  						Application.Invoke (delegate {  							main.Status = "Downloading masterinfo file...";  						});  						Stream responseStream = response.GetResponseStream ();  						using (FileStream fs = File.Create (target)) {  							int position = 0;  							int readBytes = -1;  							byte[] buffer = new byte[4096];  							while (position < response.ContentLength) {  								readBytes = responseStream.Read (buffer' 0' buffer.Length);  								if (readBytes > 0) {  									position += readBytes;  									fs.Write (buffer' 0' readBytes);  									if (response.ContentLength > 0) {  										Application.Invoke (delegate {  											main.Progress = ((double)position / response.ContentLength) * 100;  										});  									}  								}  							}  						}  						  						Application.Invoke (delegate {  							main.Status = "Unpacking masterinfo file...s";  						});  						  						ProcessStartInfo pi = new ProcessStartInfo();  						pi.WorkingDirectory = pdir;  						pi.UseShellExecute = true;  						pi.FileName = "tar";  						pi.Arguments = "xzf " + target + " --strip-components=1";  						Process p = Process.Start (pi);  						p.WaitForExit ();  						  						Application.Invoke (delegate {  							main.Progress = 0;  							main.Status = "Download complete";  							if (done != null)  								done (masterinfo);  						});  					}  				}  				catch (System.Net.WebException wex) {  					if (wex != null && wex.Response != null && ((HttpWebResponse)wex.Response).StatusCode == HttpStatusCode.NotModified) {  						Console.WriteLine ("remote file not modified since we downloaded it");  						Application.Invoke (delegate {  							main.Progress = 0;  							main.Status = "";  							if (done != null)  								done (masterinfo);  						});  					}  					else {  						Application.Invoke (delegate {  							main.Progress = 0;  							FileInfo masterinfoInfo = new FileInfo (masterinfo);  							if (masterinfoInfo.Exists) {  								main.Status = "Download failed' reusing cached (possibly out of date) masterinfo";  								if (done != null)  									done (masterinfo);  							}  							else  								main.Status = "Download failed";  						});  					}  				}  				catch (Exception e) {  					Console.WriteLine (e);  					Application.Invoke (delegate {  						main.Progress = 0;  						FileInfo masterinfoInfo = new FileInfo (masterinfo);  						if (masterinfoInfo.Exists) {  							main.Status = "Download failed' reusing cached (possibly out of date) masterinfo";  							if (done != null)  								done (masterinfo);  						}  						else  							main.Status = "Download failed";  					});  				}  			});
Magic Number,GuiCompare,InfoManager,C:\repos\mono_mono-tools\gui-compare\InfoManager.cs,Ensure,The following statement contains a magic number: Thread async_thread = new Thread (delegate (object state) {  				HttpWebRequest request = (HttpWebRequest) WebRequest.Create (u);  				FileInfo targetInfo = new FileInfo (target);  				if (targetInfo.Exists)  					request.IfModifiedSince = targetInfo.CreationTime;    				try {  					HttpWebResponse response = (HttpWebResponse)request.GetResponse ();  					if (response.StatusCode == HttpStatusCode.OK) {  						Application.Invoke (delegate {  							main.Status = "Downloading masterinfo file...";  						});  						Stream responseStream = response.GetResponseStream ();  						using (FileStream fs = File.Create (target)) {  							int position = 0;  							int readBytes = -1;  							byte[] buffer = new byte[4096];  							while (position < response.ContentLength) {  								readBytes = responseStream.Read (buffer' 0' buffer.Length);  								if (readBytes > 0) {  									position += readBytes;  									fs.Write (buffer' 0' readBytes);  									if (response.ContentLength > 0) {  										Application.Invoke (delegate {  											main.Progress = ((double)position / response.ContentLength) * 100;  										});  									}  								}  							}  						}  						  						Application.Invoke (delegate {  							main.Status = "Unpacking masterinfo file...s";  						});  						  						ProcessStartInfo pi = new ProcessStartInfo();  						pi.WorkingDirectory = pdir;  						pi.UseShellExecute = true;  						pi.FileName = "tar";  						pi.Arguments = "xzf " + target + " --strip-components=1";  						Process p = Process.Start (pi);  						p.WaitForExit ();  						  						Application.Invoke (delegate {  							main.Progress = 0;  							main.Status = "Download complete";  							if (done != null)  								done (masterinfo);  						});  					}  				}  				catch (System.Net.WebException wex) {  					if (wex != null && wex.Response != null && ((HttpWebResponse)wex.Response).StatusCode == HttpStatusCode.NotModified) {  						Console.WriteLine ("remote file not modified since we downloaded it");  						Application.Invoke (delegate {  							main.Progress = 0;  							main.Status = "";  							if (done != null)  								done (masterinfo);  						});  					}  					else {  						Application.Invoke (delegate {  							main.Progress = 0;  							FileInfo masterinfoInfo = new FileInfo (masterinfo);  							if (masterinfoInfo.Exists) {  								main.Status = "Download failed' reusing cached (possibly out of date) masterinfo";  								if (done != null)  									done (masterinfo);  							}  							else  								main.Status = "Download failed";  						});  					}  				}  				catch (Exception e) {  					Console.WriteLine (e);  					Application.Invoke (delegate {  						main.Progress = 0;  						FileInfo masterinfoInfo = new FileInfo (masterinfo);  						if (masterinfoInfo.Exists) {  							main.Status = "Download failed' reusing cached (possibly out of date) masterinfo";  							if (done != null)  								done (masterinfo);  						}  						else  							main.Status = "Download failed";  					});  				}  			});
Magic Number,GuiCompare,MasterProperty,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,MasterProperty,The following statement contains a magic number: string[] keyparts = key.Split(new char[] {':'}' 3);
Magic Number,GuiCompare,MasterProperty,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,FormatName,The following statement contains a magic number: string[] keyparts = key.Split(new char[] {':'}' 3);
Magic Number,GuiCompare,MasterProperty,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,FormatName,The following statement contains a magic number: if (keyparts[2] != "")  				sb.AppendFormat ("[{0}]"' keyparts[2]);
Magic Number,GuiCompare,MasterProperty,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,FormatName,The following statement contains a magic number: if (keyparts[2] != "")  				sb.AppendFormat ("[{0}]"' keyparts[2]);
Magic Number,GuiCompare,Config,C:\repos\mono_mono-tools\gui-compare\Config.cs,AddRecent,The following statement contains a magic number: if (Recent == null || Recent.Length < 15){  				CompareDefinition [] copy = new CompareDefinition [Recent == null ? 1 : Recent.Length+1];  				copy [0] = cd;  				if (Recent != null)  					Recent.CopyTo (copy' 1);  				Recent = copy;  			} else {  				Array.Copy (Recent' 0' Recent' 1' Recent.Length - 1);  				Recent[0] = cd;  			}
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: this.table2 = new global::Gtk.Table (((uint)(4))' ((uint)(2))' false);
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: this.table2 = new global::Gtk.Table (((uint)(4))' ((uint)(2))' false);
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: this.table2.RowSpacing = ((uint)(6));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: this.table2.ColumnSpacing = ((uint)(6));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: this.table2.BorderWidth = ((uint)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w1.BottomAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w1.RightAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w1.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w2.TopAttach = ((uint)(3));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w2.BottomAttach = ((uint)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w2.RightAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: this.label2.Xpad = 8;
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w3.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w4.RightAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w5.TopAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(3));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w5.RightAttach = ((uint)(2));
Magic Number,guicompare,ProviderSelector,C:\repos\mono_mono-tools\gui-compare\gtk-gui\guicompare.ProviderSelector.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Missing Default,GuiCompare,CecilUtils,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,PrettyType,The following switch statement is missing a default case: switch (type.FullName) {  			case "System.Boolean": return "bool";  			case "System.Byte": return "byte";  			case "System.Char": return "char";  			case "System.Decimal": return "decimal";  			case "System.Double": return "double";  			case "System.Int16": return "short";  			case "System.Int32": return "int";  			case "System.Int64": return "long";  			case "System.Object": return "object";  			case "System.SByte": return "sbyte";  			case "System.Single": return "float";  			case "System.String": return "string";  			case "System.UInt16": return "ushort";  			case "System.UInt32": return "uint";  			case "System.UInt64": return "ulong";  			case "System.Void": return "void";  			}
Missing Default,GuiCompare,CecilAttribute,C:\repos\mono_mono-tools\gui-compare\CecilMetadata.cs,CreateArgumentFieldMapping,The following switch statement is missing a default case: switch (instruction.OpCode.Code) {  				case Code.Ldarg_1:  					argument = 1;  					break;  				case Code.Ldarg_2:  					argument = 2;  					break;  				case Code.Ldarg_3:  					argument = 3;  					break;  				case Code.Ldarg:  				case Code.Ldarg_S:  					argument = ((ParameterDefinition) instruction.Operand).Index + 1;  					break;    				case Code.Stfld:  					FieldReference field = (FieldReference) instruction.Operand;  					if (field.DeclaringType.FullName != constructor.DeclaringType.FullName)  						continue;    					if (!argument.HasValue)  						break;    					if (!field_mapping.ContainsKey (field))  						field_mapping.Add (field' (int) argument - 1);    					argument = null;  					break;  				}
Missing Default,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareAttributeArguments,The following switch statement is missing a default case: switch (referenceAttribute.Name) {  			case "System.Diagnostics.DebuggerDisplayAttribute":  			case "System.Diagnostics.DebuggerTypeProxyAttribute":  			case "System.Runtime.CompilerServices.CompilationRelaxationsAttribute":  			case "System.Reflection.AssemblyFileVersionAttribute":  			case "System.Reflection.AssemblyCompanyAttribute":  			case "System.Reflection.AssemblyCopyrightAttribute":  			case "System.Reflection.AssemblyProductAttribute":  			case "System.Reflection.AssemblyTrademarkAttribute":  			case "System.Reflection.AssemblyInformationalVersionAttribute":  			case "System.Reflection.AssemblyKeyFileAttribute":    			// Don't care about these for now  			case "System.ComponentModel.EditorAttribute":  			case "System.ComponentModel.DesignerAttribute":  				return;  			}
Missing Default,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareAttributeArguments,The following switch statement is missing a default case: switch (referenceAttribute.Name) {  					case "System.AttributeUsageAttribute":  						// AllowMultiple defaults to false  						if (entry.Key == "AllowMultiple" && entry.Value == "False")  							continue;  						// Inherited defaults to true  						if (entry.Key == "Inherited" && entry.Value == "True")  							continue;  						break;  					case "System.ObsoleteAttribute":  						if (entry.Key == "IsError" && entry.Value == "False")  							continue;    						if (entry.Key == "Message")  							continue;    						break;  					}
Missing Default,GuiCompare,CompareContext,C:\repos\mono_mono-tools\gui-compare\CompareContext.cs,CompareAttributeArguments,The following switch statement is missing a default case: switch (referenceAttribute.Name) {  				case "System.Runtime.CompilerServices.TypeForwardedFromAttribute":  					if (entry.Key == "AssemblyFullName")  						target_value = target_value.Replace ("neutral"' "Neutral");  					break;  				case "System.Runtime.InteropServices.GuidAttribute":  					if (entry.Key == "Value") {  						target_value = target_value.ToUpperInvariant ();  						entry_value = entry_value.ToUpperInvariant ();  					}  					break;  				case "System.ObsoleteAttribute":  					if (entry.Key == "Message")  						continue;    					break;  				}
Missing Default,GuiCompare,MasterUtils,C:\repos\mono_mono-tools\gui-compare\MasterMetadata.cs,IsImplementationSpecificAttribute,The following switch statement is missing a default case: switch (name) {  				case "System.Diagnostics.CodeAnalysis.SuppressMessageAttribute":  				case "System.NonSerializedAttribute":  				case "System.Runtime.CompilerServices.CompilerGeneratedAttribute":  				case "System.Security.SecuritySafeCriticalAttribute":  				case "System.Security.SecurityCriticalAttribute":  				case "System.Diagnostics.DebuggerHiddenAttribute":  				case "System.Diagnostics.DebuggerStepThroughAttribute":  				case "System.Runtime.CompilerServices.InternalsVisibleToAttribute":  				case "System.Runtime.TargetedPatchingOptOutAttribute":  				case "System.Runtime.InteropServices.ComVisibleAttribute":  				case "System.Runtime.AssemblyTargetedPatchBandAttribute":  				case "System.Diagnostics.DebuggableAttribute":  				case "System.Runtime.CompilerServices.IteratorStateMachineAttribute":  				return true;  			}
