Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mono.CSharp.Gui,Shell,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Shell.cs,OnKeyPressEvent,The method has 113 lines of code.
Long Method,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The method has 157 lines of code.
Long Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineType,The method has 204 lines of code.
Complex Method,Mono.CSharp.Gui,Shell,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Shell.cs,OnKeyPressEvent,Cyclomatic complexity of the method is 19
Complex Method,Mono.CSharp.Gui,Shell,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Shell.cs,EscapeChar,Cyclomatic complexity of the method is 10
Complex Method,Mono.CSharp.Gui,Shell,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Shell.cs,PrettyPrint,Cyclomatic complexity of the method is 15
Complex Method,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,LoadSettings,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,Option,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,Option,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Complex Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineType,Cyclomatic complexity of the method is 40
Complex Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineProperty,Cyclomatic complexity of the method is 14
Complex Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineField,Cyclomatic complexity of the method is 11
Complex Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,FormatType,Cyclomatic complexity of the method is 24
Complex Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OperatorFromName,Cyclomatic complexity of the method is 25
Complex Method,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,ShowMember,Cyclomatic complexity of the method is 9
Long Parameter List,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,DrawAxes,The method has 6 parameters. Parameters: g' p' x1' y1' x2' y2
Long Parameter List,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,PlotFunction,The method has 5 parameters. Parameters: g' p' x1' x2' function
Long Parameter List,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Parameter List,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,Outline,The method has 5 parameters. Parameters: t' output' declared_only' show_private' filter_obsolete
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,OnDescribeTypeActionActivated,The length of the statement  "				MessageDialog d = new MessageDialog (this' DialogFlags.Modal' MessageType.Error' ButtonsType.Ok' false' "The type {0} was not found"' dt.TypeName); " is 147.
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The length of the statement  "			this.QuitAction = new global::Gtk.Action ("QuitAction"' global::Mono.Unix.Catalog.GetString ("_Quit")' null' "gtk-quit"); " is 121.
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The length of the statement  "			this.AttachToProcessAction = new global::Gtk.Action ("AttachToProcessAction"' global::Mono.Unix.Catalog.GetString ("Attach to Process")' null' null); " is 149.
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The length of the statement  "			this.DescribeTypeAction = new global::Gtk.Action ("DescribeTypeAction"' global::Mono.Unix.Catalog.GetString ("Describe Type")' null' null); " is 139.
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The length of the statement  "			this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='AttachToProcessAction' action='AttachToProcessAction'/><separator/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='ViewAction' action='ViewAction'><menuitem name='gtkpane' action='gtkpane'/></menu><menu name='ToolsAction' action='ToolsAction'><menuitem name='DescribeTypeAction' action='DescribeTypeAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>"); " is 577.
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The length of the statement  "			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("Set the contents of this pane by adding Gtk.Widgets children to the <b>PaneContainer</b> property.  The PaneContainer is a Gtk.EventBox.   \n\nTry it like this:\n\nLoadPackage (\"gtk-sharp-2.0\");\nvar l = new Label (\"Hello world\");\nPaneContainer.Add (l);\nl.ShowAll ();"); " is 338.
Long Statement,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The length of the statement  "			global::Gtk.Notebook.NotebookChild w11 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.standalone_container])); " is 124.
Long Statement,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineType,The length of the statement  "		if (((parent != null && parent != typeof (object) && parent != typeof (ValueType)) || interfaces.Length != 0) && ! t.IsEnum) { " is 126.
Complex Conditional,Mono.Options,Option,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Complex Conditional,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineType,The conditional expression  "((parent != null && parent != typeof (object) && parent != typeof (ValueType)) || interfaces.Length != 0) && ! t.IsEnum"  is complex.
Complex Conditional,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineType,The conditional expression  "! ((pi.CanRead  && ShowMember (pi.GetGetMethod (true))) ||  			       (pi.CanWrite && ShowMember (pi.GetSetMethod (true))))"  is complex.
Virtual Method Call from Constructor,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,MainWindow,The constructor "MainWindow" calls a virtual method "Build".
Virtual Method Call from Constructor,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,ProcessSelector,The constructor "ProcessSelector" calls a virtual method "Build".
Virtual Method Call from Constructor,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,DescribeType,The constructor "DescribeType" calls a virtual method "Build".
Empty Catch Block,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,LoadSettings,The method has an empty catch block.
Empty Catch Block,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,OnDescribeTypeActionActivated,The method has an empty catch block.
Magic Number,Mono.CSharp.Gui,MainClass,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Main.cs,StartAgent,The following statement contains a magic number: HostHasGtkRunning = handle.WaitOne (3000' true);
Magic Number,Mono.CSharp.Gui,Shell,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Shell.cs,EscapeChar,The following statement contains a magic number: c > 32
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,LoadSettings,The following statement contains a magic number: width = System.Math.Max (width' 200);
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,LoadSettings,The following statement contains a magic number: height = System.Math.Max (height' 120);
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,AddPage,The following statement contains a magic number: b.SetSizeRequest (18' 18);
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,AddPage,The following statement contains a magic number: b.SetSizeRequest (18' 18);
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.DefaultWidth = 600;
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.DefaultHeight = 500;
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.hpaned.Position = 472;
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.label4.Xpad = 10;
Magic Number,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,Build,The following statement contains a magic number: this.label4.Xalign = 0.1F;
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.frame1.BorderWidth = ((uint)(2));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.GtkAlignment.LeftPadding = ((uint)(12));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: w5.Padding = ((uint)(3));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: w6.Spacing = 6;
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: w6.BorderWidth = ((uint)(5));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: w6.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.DefaultWidth = 400;
Magic Number,Mono.CSharp.Gui,ProcessSelector,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\ProcessSelector.cs,Build,The following statement contains a magic number: this.DefaultHeight = 300;
Magic Number,Mono.CSharp.Gui,BitmapWidget,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\SysDrawing.cs,BitmapWidget,The following statement contains a magic number: bounds.Height = System.Math.Min (bounds.Height' 600);
Magic Number,Mono.CSharp.Gui,BitmapWidget,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\SysDrawing.cs,BitmapWidget,The following statement contains a magic number: bounds.Width = System.Math.Min (bounds.Width' 400);
Magic Number,Mono.CSharp.Gui,GraphicsHelper,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\SysDrawing.cs,FromDrawable,The following statement contains a magic number: object [] args = new object [2] { (IntPtr) gdk_x11_drawable_get_xid (drawable.Handle)' (IntPtr) display };
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following statement contains a magic number: switch (i % 4){  			case 0:  				p = new Pen (Color.Blue);  				break;  			case 1:  				p = new Pen (Color.Red);  				break;  			case 2:  				p = new Pen (Color.Green);  				break;  				  			default:  				p = new Pen (Color.Black);  				break;  			}
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following statement contains a magic number: switch (i % 4){  			case 0:  				p = new Pen (Color.Blue);  				break;  			case 1:  				p = new Pen (Color.Red);  				break;  			case 2:  				p = new Pen (Color.Green);  				break;  				  			default:  				p = new Pen (Color.Black);  				break;  			}
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following statement contains a magic number: switch ((i >> 2) % 4){  			case 0:  				break;  				  			case 1:  				p.DashStyle = DashStyle.DashDot;  				break;  				  			case 2:  				p.DashStyle = DashStyle.DashDotDot;  				break;  				  			case 3:  				p.DashStyle = DashStyle.Dash;  				break;  			}
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following statement contains a magic number: switch ((i >> 2) % 4){  			case 0:  				break;  				  			case 1:  				p.DashStyle = DashStyle.DashDot;  				break;  				  			case 2:  				p.DashStyle = DashStyle.DashDotDot;  				break;  				  			case 3:  				p.DashStyle = DashStyle.Dash;  				break;  			}
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following statement contains a magic number: switch ((i >> 2) % 4){  			case 0:  				break;  				  			case 1:  				p.DashStyle = DashStyle.DashDot;  				break;  				  			case 2:  				p.DashStyle = DashStyle.DashDotDot;  				break;  				  			case 3:  				p.DashStyle = DashStyle.Dash;  				break;  			}
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following statement contains a magic number: switch ((i >> 2) % 4){  			case 0:  				break;  				  			case 1:  				p.DashStyle = DashStyle.DashDot;  				break;  				  			case 2:  				p.DashStyle = DashStyle.DashDotDot;  				break;  				  			case 3:  				p.DashStyle = DashStyle.Dash;  				break;  			}
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,PlotFunctions,The following statement contains a magic number: t.Translate (width/2' height/2);
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,PlotFunctions,The following statement contains a magic number: t.Translate (width/2' height/2);
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,PlotFunctions,The following statement contains a magic number: t.Scale (2f' -2f);
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,PlotFunctions,The following statement contains a magic number: t.Scale (2f' -2f);
Magic Number,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,PlotFunction,The following statement contains a magic number: double step = (x2-x1)/(width/2);
Magic Number,Mono.CSharp.Gui,TypeView,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\TypeView.cs,GetTypeTag,The following statement contains a magic number: typetag.TextEvent += delegate (object o' TextEventArgs e){  				EventButton eb = e.Event as EventButton;  				  				if (eb != null && eb.Button == 1){  					if (eb.Type == EventType.ButtonPress){  						press_x = eb.X;  						press_y = eb.Y;  					} else if (eb.Type == EventType.ButtonRelease){  						if (press_x != -1){  							int dx = System.Math.Abs ((int)(eb.X - press_x));  							int dy = System.Math.Abs ((int)(eb.Y - press_y));    							if (dx < 8 && dy < 8){  								container.Describe (t);  							}  						}  						press_x = -1;  					}  				}  			};
Magic Number,Mono.CSharp.Gui,TypeView,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\TypeView.cs,GetTypeTag,The following statement contains a magic number: typetag.TextEvent += delegate (object o' TextEventArgs e){  				EventButton eb = e.Event as EventButton;  				  				if (eb != null && eb.Button == 1){  					if (eb.Type == EventType.ButtonPress){  						press_x = eb.X;  						press_y = eb.Y;  					} else if (eb.Type == EventType.ButtonRelease){  						if (press_x != -1){  							int dx = System.Math.Abs ((int)(eb.X - press_x));  							int dy = System.Math.Abs ((int)(eb.Y - press_y));    							if (dx < 8 && dy < 8){  								container.Describe (t);  							}  						}  						press_x = -1;  					}  				}  			};
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.label1.Xpad = 5;
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.label1.Ypad = 15;
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: w5.Spacing = 6;
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: w5.BorderWidth = ((uint)(5));
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: w5.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.DefaultWidth = 284;
Magic Number,Mono.CSharp.Gui,DescribeType,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\DescribeType.cs,Build,The following statement contains a magic number: this.DefaultHeight = 133;
Magic Number,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: string prefix = new string (' '' OptionWidth+2);
Magic Number,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,OutlineOperator,The following statement contains a magic number: o.Write (mi.Name.Substring (3).ToLower ());
Magic Number,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,FormatType,The following statement contains a magic number: return type.Substring(7);
Magic Number,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,FormatType,The following statement contains a magic number: type.LastIndexOf(".") == 6
Missing Default,Mono.CSharp.Gui,MainWindow,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\MainWindow.cs,LoadSettings,The following switch statement is missing a default case: switch (e.Name.LocalName){  					case "history":  						shell.LoadHistory (e.Elements ());  						break;  					case "Width":  						width = Int32.Parse (e.Value);  						break;  					case "Height":  						height = Int32.Parse (e.Value);  						break;  					case "PaneVisible":  						panevisible = Int32.Parse (e.Value) == 1;  						break;  					case "PanePosition":  						position = Int32.Parse (e.Value);  						break;  					}
Missing Default,Mono.CSharp.Gui,InteractiveGraphicsBase,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\InteractiveGraphicsBase.cs,GetPen,The following switch statement is missing a default case: switch ((i >> 2) % 4){  			case 0:  				break;  				  			case 1:  				p.DashStyle = DashStyle.DashDot;  				break;  				  			case 2:  				p.DashStyle = DashStyle.DashDotDot;  				break;  				  			case 3:  				p.DashStyle = DashStyle.Dash;  				break;  			}
Missing Default,Mono.CSharp.Gui,TypeView,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\TypeView.cs,ShowType,The following switch statement is missing a default case: switch (kind){  				case 0:  					current_tag = "default";  					break;  				case 1:  					current_tag = GetTypeTag ((Type) value);  					break;  				}
Missing Default,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
Missing Default,Mono.Options,OptionSet,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  					case ' ':  					case '\t':  					case '\v':  					case '-':  					case ''':  					case '.':  					case ';':  						sep = i;  						break;  					case '\n':  						return i;  				}
Missing Default,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,FormatType,The following switch statement is missing a default case: switch (type) {  		case "System.Byte": return "byte";  		case "System.SByte": return "sbyte";  		case "System.Int16": return "short";  		case "System.Int32": return "int";  		case "System.Int64": return "long";  			  		case "System.UInt16": return "ushort";  		case "System.UInt32": return "uint";  		case "System.UInt64": return "ulong";  			  		case "System.Single":  return "float";  		case "System.Double":  return "double";  		case "System.Decimal": return "decimal";  		case "System.Boolean": return "bool";  		case "System.Char":    return "char";  		case "System.String":  return "string";  			  		case "System.Object":  return "object";  		case "System.Void":  return "void";  		}
Missing Default,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,ShowMember,The following switch statement is missing a default case: switch (mi.MemberType) {  		case MemberTypes.Constructor:  		case MemberTypes.Method:  			MethodBase mb = mi as MethodBase;  		  			if (mb.IsFamily || mb.IsPublic || mb.IsFamilyOrAssembly)  				return true;  			  			if (MethodIsExplicitIfaceImpl (mb))  				return true;  					  			return false;  		  		  		case MemberTypes.Field:  			FieldInfo fi = mi as FieldInfo;  		  			if (fi.IsFamily || fi.IsPublic || fi.IsFamilyOrAssembly)  				return true;  			  			return false;  		  		  		case MemberTypes.NestedType:  		case MemberTypes.TypeInfo:  			Type t = mi as Type;  		  			switch (t.Attributes & TypeAttributes.VisibilityMask){  			case TypeAttributes.Public:  			case TypeAttributes.NestedPublic:  			case TypeAttributes.NestedFamily:  			case TypeAttributes.NestedFamORAssem:  				return true;  			}  			  			return false;  		}
Missing Default,Mono.CSharp,Outline,C:\research\architectureSmells\repos\mono_mono-tools\gsharp\outline.cs,ShowMember,The following switch statement is missing a default case: switch (t.Attributes & TypeAttributes.VisibilityMask){  			case TypeAttributes.Public:  			case TypeAttributes.NestedPublic:  			case TypeAttributes.NestedFamily:  			case TypeAttributes.NestedFamORAssem:  				return true;  			}
