Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Gendarme.Rules.Gendarme,DefectsMustBeReportedRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\DefectsMustBeReportedRule.cs,CheckType,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Rules.Gendarme,DoNotThrowExceptionRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\DoNotThrowExceptionRule.cs,CheckMethod,Cyclomatic complexity of the method is 10
Complex Method,Gendarme.Rules.Gendarme,MissingEngineDependencyRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\MissingEngineDependencyRule.cs,CheckType,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckIfRuleHasAllRequiredAttributes,Cyclomatic complexity of the method is 10
Complex Conditional,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The conditional expression  "!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5]))"  is complex.
Complex Conditional,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckIfAttributeUsedOnRulesProperty,The conditional expression  "property == null || !IsRule (property.DeclaringType) ||   				!property.GetMethod.IsPublic || !property.SetMethod.IsPublic"  is complex.
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
Magic Number,Gendarme.Rules.Gendarme,ReviewAttributesOnRulesRule,C:\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Gendarme\ReviewAttributesOnRulesRule.cs,CheckFxCopCompatibilityAttribute,The following statement contains a magic number: if (!((length == 6 || (length > 8 && argumentValue [6] == ':')) &&   				Char.IsLetter (argumentValue [0]) && Char.IsLetter(argumentValue[1]) &&   				Char.IsDigit(argumentValue[2]) && Char.IsDigit(argumentValue[3]) &&   				Char.IsDigit(argumentValue[4])  && Char.IsDigit(argumentValue[5])))   				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should match the followint format: XX9999:Name");  			else if (length == 6)  				Runner.Report (provider' Severity.Medium' Confidence.High'  					attributeTypeName + " second argument should contain both rule ID and name");
