Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Test.Rules.Correctness,Good6,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewInconsistentIdentityTest.cs,CompareTo,Cyclomatic complexity of the method is 10
Long Parameter List,Test.Rules.Correctness,Coverage,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,ManyParameters,The method has 5 parameters. Parameters: a' b' c' d' e
Long Parameter List,Test.Rules.Correctness,Coverage,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,StaticManyParameters,The method has 5 parameters. Parameters: a' b' c' d' e
Long Parameter List,Test.Rules.Correctness,FormattingCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideCorrectArgumentsToFormattingMethodsTest.cs,MethodWithGoodFormattingAndFiveParams,The method has 5 parameters. Parameters: value1' value2' value3' value4' value5
Long Identifier,Test.Rules.Correctness,FinalizersShouldCallBaseClassFinalizerTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\FinalizersShouldCallBaseClassFinalizerTest.cs,,The length of the parameter finalizer_not_calling_base_class is 32.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,GenerateFakeAssembly,The length of the statement  "			CustomAttribute attribute = new CustomAttribute (DefinitionLoader.GetMethodDefinition<ValidSince> (".ctor"' new Type[] {typeof (string)})); " is 139.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,GenerateFakeAssembly,The length of the statement  "			attribute = new CustomAttribute (DefinitionLoader.GetMethodDefinition<Reference> (".ctor"' new Type[] {typeof (string)})); " is 122.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,GenerateFakeModuleAnnotatedAssembly,The length of the statement  "			CustomAttribute attribute = new CustomAttribute (DefinitionLoader.GetMethodDefinition<ValidSince> (".ctor"' new Type[] {typeof (string)})); " is 139.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,GenerateFakeModuleAnnotatedAssembly,The length of the statement  "			attribute = new CustomAttribute (DefinitionLoader.GetMethodDefinition<Reference> (".ctor"' new Type[] {typeof (string)})); " is 122.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,TearDown,The length of the statement  "				if (String.Compare (attribute.AttributeType.FullName' "System.Runtime.CompilerServices.RuntimeCompatibilityAttribute") != 0) " is 124.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,SuccessOnWellAttributedAssemblyTest,The length of the statement  "			AssertRuleSuccess (GenerateFakeAssembly ("1.0.0.0"' "http://www.mono-project.com/Gendarme"' "00000101-0000-0000-c000-000000000046")); " is 133.
Long Statement,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,SuccessOnWellAttributedModuleTest,The length of the statement  "			AssertRuleSuccess (GenerateFakeModuleAnnotatedAssembly ("1.0.0.0"' "http://www.mono-project.com/Gendarme"' "00000101-0000-0000-c000-000000000046")); " is 148.
Long Statement,Test.Rules.Correctness,AvoidConstructorsInStaticTypesTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidConstructorsInStaticTypesTest.cs,StaticType,The length of the statement  "			TypeDefinition type = DefinitionLoader.GetTypeDefinition (a' "Test.Rules.Correctness.AvoidConstructorsInStaticTypesTest/StaticClass"); " is 134.
Long Statement,Test.Rules.Correctness,FormattingCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideCorrectArgumentsToFormattingMethodsTest.cs,MethodWithSpecialCharacters,The length of the statement  "				String.Format ("The {2} '{0}' is not valid in the locked list for this section.  The following {3} can be locked: '{1}'"' value' value' value' value); " is 150.
Long Statement,Test.Rules.Correctness,Bad10,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewInconsistentIdentityTest.cs,GetHashCode,The length of the statement  "				return base.GetHashCode ();	// very bad to do this for classes' also bad for structs if all fields don't participate in equality " is 128.
Virtual Method Call from Constructor,Test.Rules.Correctness,DelegatedOutsideDispose,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DisposableFieldsShouldBeDisposedTest.cs,DelegatedOutsideDispose,The constructor "DelegatedOutsideDispose" calls a virtual method "Dispose".
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyMethodTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadAttributedMethodTest,The following statement contains a magic number: AssertRuleFailure<AttributeStringLiteralsShouldParseCorrectlyMethodTest> ("BadAttributedMethod"' 3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyMethodTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadParameterAttributedMethodTest,The following statement contains a magic number: AssertRuleFailure<AttributeStringLiteralsShouldParseCorrectlyMethodTest> ("BadParameterAttributedMethod"' 3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyMethodTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadGenericParameterAttributedMethodTest,The following statement contains a magic number: AssertRuleFailure<AttributeStringLiteralsShouldParseCorrectlyMethodTest> ("BadGenericParameterAttributedMethod"' 3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyTypeTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadAttributedClassTest,The following statement contains a magic number: AssertRuleFailure<BadAttributedClass> (3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyTypeTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadAttributedClassWithFieldsTest,The following statement contains a magic number: AssertRuleFailure<BadAttributedClassWithFields> (3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyTypeTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnClassWithBadAttributedPropertyTest,The following statement contains a magic number: AssertRuleFailure<ClassWithBadAttributedProperty> (3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyTypeTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnClassWithBadAttributedEventTest,The following statement contains a magic number: AssertRuleFailure<ClassWithBadAttributedEvent> (3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyTypeTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnClassWithBadAttributedGenericParameterTest,The following statement contains a magic number: AssertRuleFailure<ClassWithBadAttributedGenericParameter<int>> (3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadAttributedAssemblyTest,The following statement contains a magic number: AssertRuleFailure (GenerateFakeAssembly ("foo"' "bar"' "0")' 3);
Magic Number,Test.Rules.Correctness,AttributeStringLiteralsShouldParseCorrectlyAssemblyTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AttributeStringLiteralsShouldParseCorrectlyTest.cs,FailOnBadAttributedModuleTest,The following statement contains a magic number: AssertRuleFailure (GenerateFakeModuleAnnotatedAssembly ("foo"' "bar"' "0")' 3);
Magic Number,Test.Rules.Correctness,AvoidCodeWithSideEffectsInConditionalCodeTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Cases,The following statement contains a magic number: AssertRuleFailure<TestCases> ("Bad1"' 5);
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Good1,The following statement contains a magic number: NonConditionalCall (data = 100);
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Good2,The following statement contains a magic number: ConditionalCall (data > 0 ? 100 : 2);
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Good2,The following statement contains a magic number: ConditionalCall (data > 0 ? 100 : 2);
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Good2,The following statement contains a magic number: ConditionalCall (new string ('x'' 32));
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Good2,The following statement contains a magic number: data = 100;
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Bad1,The following statement contains a magic number: ConditionalCall (data = 10);
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Bad3,The following statement contains a magic number: ConditionalCall (instance_data = 10);
Magic Number,Test.Rules.Correctness,TestCases,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidCodeWithSideEffectsInConditionalCodeTest.cs,Bad4,The following statement contains a magic number: ConditionalCall (class_data = 10);
Magic Number,Test.Rules.Correctness,AvoidFloatingPointEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidFloatingPointEqualityTest.cs,TestFields,The following statement contains a magic number: AssertRuleFailure<Float> ("Fields"' 2);
Magic Number,Test.Rules.Correctness,AvoidFloatingPointEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidFloatingPointEqualityTest.cs,TestFields,The following statement contains a magic number: AssertRuleFailure<Double> ("Fields"' 2);
Magic Number,Test.Rules.Correctness,AvoidFloatingPointEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidFloatingPointEqualityTest.cs,TestMethodResult,The following statement contains a magic number: AssertRuleFailure<Float> ("MethodResult"' 2);
Magic Number,Test.Rules.Correctness,AvoidFloatingPointEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidFloatingPointEqualityTest.cs,TestMethodResult,The following statement contains a magic number: AssertRuleFailure<Double> ("MethodResult"' 2);
Magic Number,Test.Rules.Correctness,AvoidFloatingPointEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\AvoidFloatingPointEqualityTest.cs,TestEqualsCall,The following statement contains a magic number: AssertRuleFailure<Double> ("EqualsCall"' 3);
Magic Number,Test.Rules.Correctness,BadRec,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,StaticBadFibo,The following statement contains a magic number: return StaticBadFibo (n - 1) + StaticBadFibo (n - 2);
Magic Number,Test.Rules.Correctness,BadRec,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,BadFibo,The following statement contains a magic number: return BadFibo (n - 1) + BadFibo (n - 2);
Magic Number,Test.Rules.Correctness,BadRec,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,StaticFibonacci,The following statement contains a magic number: n < 2
Magic Number,Test.Rules.Correctness,BadRec,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,StaticFibonacci,The following statement contains a magic number: return StaticFibonacci (n - 1) + StaticFibonacci (n - 2);
Magic Number,Test.Rules.Correctness,BadRec,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,Fibonacci,The following statement contains a magic number: n < 2
Magic Number,Test.Rules.Correctness,BadRec,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\BadRecursiveInvocationTest.cs,Fibonacci,The following statement contains a magic number: return Fibonacci (n - 1) + Fibonacci (n - 2);
Magic Number,Test.Rules.Correctness,CallingEqualsOnArray,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\CallingEqualsWithNullArgTest.cs,PassingNullArg,The following statement contains a magic number: int [] b = new int [] {1' 2' 3};
Magic Number,Test.Rules.Correctness,CallingEqualsOnArray,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\CallingEqualsWithNullArgTest.cs,PassingNullArg,The following statement contains a magic number: int [] b = new int [] {1' 2' 3};
Magic Number,Test.Rules.Correctness,CallingEqualsOnArray,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\CallingEqualsWithNullArgTest.cs,PassingNonNullArg,The following statement contains a magic number: int [] b = new int [] {1' 2' 3};
Magic Number,Test.Rules.Correctness,CallingEqualsOnArray,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\CallingEqualsWithNullArgTest.cs,PassingNonNullArg,The following statement contains a magic number: int [] b = new int [] {1' 2' 3};
Magic Number,Test.Rules.Correctness,DoNotRecurseInEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRecurseInEqualityTest.cs,Test,The following statement contains a magic number: AssertRuleFailure<BadEquality> ("op_Equality"' 2);
Magic Number,Test.Rules.Correctness,DoNotRecurseInEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRecurseInEqualityTest.cs,Test,The following statement contains a magic number: AssertRuleFailure<BadInequality> ("op_Inequality"' 2);
Magic Number,Test.Rules.Correctness,DoNotRecurseInEqualityTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRecurseInEqualityTest.cs,GenericsTest,The following statement contains a magic number: AssertRuleFailure (md' 2);
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,RoundIntegerDecimal,The following statement contains a magic number: return Math.Round ((decimal) sx' 2);
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,RoundDoubleDecimal,The following statement contains a magic number: return Math.Round ((decimal) sd' 2' MidpointRounding.AwayFromZero);
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,TruncateFloatDecimal,The following statement contains a magic number: float f = 42f;
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,TruncateFloatDouble,The following statement contains a magic number: float f = 42f;
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,TruncateDoubleDecimal,The following statement contains a magic number: double d = 3.14d;
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,TruncateDoubleDouble,The following statement contains a magic number: double d = 3.14d;
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,ChainDecimal,The following statement contains a magic number: return Math.Round (Decimal.Parse (s)' 2);
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (4.0' ChainAllByte (1)' "ChainAllByte");
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: AssertRuleFailure<DoNotRoundIntegersTest> ("ChainAllByte"' 4);
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (3.0' ChainFloatingPoint ((3.14).ToString ())' "ChainFloatingPoint");
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (3.0' ChainFloatingPoint ((3.14).ToString ())' "ChainFloatingPoint");
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (3.14m' ChainDecimal ((3.1415).ToString ())' "ChainDecimal");
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (3.14m' ChainDecimal ((3.1415).ToString ())' "ChainDecimal");
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (4m' ChainChainDecimal ((3.1415).ToString ())' "ChainChainDecimal");
Magic Number,Test.Rules.Correctness,DoNotRoundIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Others,The following statement contains a magic number: Assert.AreEqual (4m' ChainChainDecimal ((3.1415).ToString ())' "ChainChainDecimal");
Magic Number,Test.Rules.Correctness,FalsePositive8,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Run,The following statement contains a magic number: int x = 5;
Magic Number,Test.Rules.Correctness,FalsePositive8,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\DoNotRoundIntegersTest.cs,Run,The following statement contains a magic number: return Math.Round (x * 0.5M);
Magic Number,Test.Rules.Correctness,EnsureLocalDisposalTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\EnsureLocalDisposalTest.cs,Failure5,The following statement contains a magic number: AssertRuleFailure<DisposalCases> ("Failure5"' 2);
Magic Number,Test.Rules.Correctness,EnsureLocalDisposalTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\EnsureLocalDisposalTest.cs,Failure6,The following statement contains a magic number: AssertRuleFailure<DisposalCases> ("Failure6"' 2);
Magic Number,Test.Rules.Correctness,EnsureLocalDisposalTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\EnsureLocalDisposalTest.cs,NestedFluentCallThree,The following statement contains a magic number: stringWriter.GetHashCode () % 2 == 1
Magic Number,Test.Rules.Correctness,Item,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\MethodCanBeMadeStaticTest.cs,Foo,The following statement contains a magic number: return 42;
Magic Number,Test.Rules.Correctness,Item,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\MethodCanBeMadeStaticTest.cs,Bar,The following statement contains a magic number: return _bar = 42;
Magic Number,Test.Rules.Correctness,Item,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\MethodCanBeMadeStaticTest.cs,Baz,The following statement contains a magic number: return 42;
Magic Number,Test.Rules.Correctness,ProvideCorrectArgumentsToFormattingMethodsTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideCorrectArgumentsToFormattingMethodsTest.cs,FailOnMethodWithBadFormattingAndStringResource,The following statement contains a magic number: AssertRuleFailure<FormattingCases> ("MethodWithBadFormattingAndStringResource"' 2);
Magic Number,Test.Rules.Correctness,ProvideCorrectRegexPatternTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideCorrectRegexPatternTest.cs,Failure67,The following statement contains a magic number: AssertRuleFailure<RegexCases> ("Failure67"' 2);
Magic Number,Test.Rules.Correctness,ProvideValidXmlStringTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXmlStringTest.cs,FailureNullOrEmpty,The following statement contains a magic number: AssertRuleFailure<XmlCases> ("FailureNull"' 3);
Magic Number,Test.Rules.Correctness,ProvideValidXmlStringTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXmlStringTest.cs,FailureNullOrEmpty,The following statement contains a magic number: AssertRuleFailure<XmlCases> ("FailureEmpty"' 3);
Magic Number,Test.Rules.Correctness,ProvideValidXPathExpressionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXPathExpressionTest.cs,Failure5,The following statement contains a magic number: AssertRuleFailure<XPathCases> ("Failure5"' 2);
Magic Number,Test.Rules.Correctness,ProvideValidXPathExpressionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXPathExpressionTest.cs,Failure6,The following statement contains a magic number: AssertRuleFailure<XPathCases> ("Failure6"' 2);
Magic Number,Test.Rules.Correctness,ProvideValidXPathExpressionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXPathExpressionTest.cs,Failure8,The following statement contains a magic number: AssertRuleFailure<XPathCases> ("Failure8"' 2);
Magic Number,Test.Rules.Correctness,ProvideValidXPathExpressionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXPathExpressionTest.cs,FailureNullOrEmpty,The following statement contains a magic number: AssertRuleFailure<XPathCases> ("FailureNull"' 2);
Magic Number,Test.Rules.Correctness,ProvideValidXPathExpressionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ProvideValidXPathExpressionTest.cs,FailureNullOrEmpty,The following statement contains a magic number: AssertRuleFailure<XPathCases> ("FailureEmpty"' 2);
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.0d' DoubleBadIntDivParameters (3' 2)' "3/2==1d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.0d' DoubleBadIntDivParameters (3' 2)' "3/2==1d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.5d' DoubleCorrectIntDivParameters (3' 2)' "3/2==1.5d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.5d' DoubleCorrectIntDivParameters (3' 2)' "3/2==1.5d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.5d' DoubleCorrectIntDivParameters (3' 2)' "3/2==1.5d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.0f' FloatBadIntDivParameters (3' 2)' "3/2==1f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.0f' FloatBadIntDivParameters (3' 2)' "3/2==1f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.5f' FloatCorrectIntDivParameters (3' 2)' "3/2==1.5f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.5f' FloatCorrectIntDivParameters (3' 2)' "3/2==1.5f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Parameters,The following statement contains a magic number: Assert.AreEqual (1.5f' FloatCorrectIntDivParameters (3' 2)' "3/2==1.5f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,StaticFields,The following statement contains a magic number: Assert.AreEqual (2.0d' sdr' "5/2==2d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,StaticFields,The following statement contains a magic number: Assert.AreEqual (2.5d' sdr' "3/2==1.5d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,StaticFields,The following statement contains a magic number: Assert.AreEqual (2.0d' sfr' "5/2==2f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,StaticFields,The following statement contains a magic number: Assert.AreEqual (2.5d' sfr' "3/2==1.5f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Fields,The following statement contains a magic number: Assert.AreEqual (3.0d' idr' "10/3==3d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Fields,The following statement contains a magic number: Assert.AreEqual (3.33d' idr' 0.1d' "10/3==3.33d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Fields,The following statement contains a magic number: Assert.AreEqual (3.33d' idr' 0.1d' "10/3==3.33d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Fields,The following statement contains a magic number: Assert.AreEqual (3.0f' ifr' "10/3==3f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Fields,The following statement contains a magic number: Assert.AreEqual (3.33f' ifr' 0.1f' "10/3==3.33f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Fields,The following statement contains a magic number: Assert.AreEqual (3.33f' ifr' 0.1f' "10/3==3.33f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,DoubleBadIntDivLocals,The following statement contains a magic number: long a = 42;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,DoubleBadIntDivLocals,The following statement contains a magic number: return a / 4;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,DoubleGoodIntDivLocals,The following statement contains a magic number: long b = 4;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,DoubleGoodIntDivLocals,The following statement contains a magic number: return 42 / (double) b;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,FloatBadIntDivLocals,The following statement contains a magic number: ulong a = 42;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,FloatBadIntDivLocals,The following statement contains a magic number: return a / 4;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,FloatGoodIntDivLocals,The following statement contains a magic number: ulong b = 4;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,FloatGoodIntDivLocals,The following statement contains a magic number: return 42 / (float) b;
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Locals,The following statement contains a magic number: Assert.AreEqual (10.0d' DoubleBadIntDivLocals ()' "42/4==10d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Locals,The following statement contains a magic number: Assert.AreEqual (10.5d' DoubleGoodIntDivLocals ()' 0.1d' "42/4==10.5d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Locals,The following statement contains a magic number: Assert.AreEqual (10.5d' DoubleGoodIntDivLocals ()' 0.1d' "42/4==10.5d");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Locals,The following statement contains a magic number: Assert.AreEqual (10.0f' FloatBadIntDivLocals ()' "42/4==10f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Locals,The following statement contains a magic number: Assert.AreEqual (10.5f' FloatGoodIntDivLocals ()' 0.1d' "42/4==10.5f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerDivisionTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerDivisionTest.cs,Locals,The following statement contains a magic number: Assert.AreEqual (10.5f' FloatGoodIntDivLocals ()' 0.1d' "42/4==10.5f");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerMultiplicationTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerMultiplicationTest.cs,CastIntoInt64,The following statement contains a magic number: Assert.AreEqual (-131071' BadMulUInt16 (UInt16.MaxValue' UInt16.MaxValue)' "BadMulInt16");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerMultiplicationTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerMultiplicationTest.cs,CastIntoInt64,The following statement contains a magic number: Assert.AreEqual (4294836225' GoodMulUInt16 (UInt16.MaxValue' UInt16.MaxValue)' "GoodMulInt16");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerMultiplicationTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerMultiplicationTest.cs,CastIntoInt64,The following statement contains a magic number: Assert.AreEqual (4611686014132420609' GoodMulInt32 (Int32.MaxValue' Int32.MaxValue)' "GoodMulInt32");
Magic Number,Test.Rules.Correctness,ReviewCastOnIntegerMultiplicationTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewCastOnIntegerMultiplicationTest.cs,CastIntoUInt64,The following statement contains a magic number: Assert.AreEqual (18446744065119617025' GoodMulUInt32 (UInt32.MaxValue' UInt32.MaxValue)' "GoodMulInt32");
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignmentOnField,The following statement contains a magic number: b = b = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignementOnDifferentFields,The following statement contains a magic number: ul1 = ul2 = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignementOnDifferentInstanceFields,The following statement contains a magic number: s1.Field = s2.Field = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,Fields,The following statement contains a magic number: AssertRuleFailure<ReviewDoubleAssignmentTest> ("DoubleAssignmentOnField"' 2);
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignementOnDifferentStaticFields,The following statement contains a magic number: s1 = s2 = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,StaticFields,The following statement contains a magic number: AssertRuleFailure<ReviewDoubleAssignmentTest> ("DoubleAssignmentOnStaticField"' 2);
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,SingleAssignmentOnLocal,The following statement contains a magic number: int x = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignmentOnLocal,The following statement contains a magic number: long x = x = -42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignmentOnLocal,The following statement contains a magic number: ulong y = y = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignementOnDifferentLocals,The following statement contains a magic number: b1 = b2 = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,Locals,The following statement contains a magic number: AssertRuleFailure<ReviewDoubleAssignmentTest> ("DoubleAssignmentOnLocal"' 2);
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,SingleAssignmentOnStaticLocal,The following statement contains a magic number: float f = 42.0f;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignmentOnStaticLocal,The following statement contains a magic number: double d = d = 42.0;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,DoubleAssignementOnDifferentStaticLocals,The following statement contains a magic number: f1 = f2 = 42.0f;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,MixedDoubleAssignments,The following statement contains a magic number: b = bs = 42;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,MixedDoubleAssignments,The following statement contains a magic number: bs = b = 21;
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,Call,The following statement contains a magic number: SingleAssignments (42' 42);
Magic Number,Test.Rules.Correctness,ReviewDoubleAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewDoubleAssignmentTest.cs,Call,The following statement contains a magic number: SingleAssignments (42' 42);
Magic Number,Test.Rules.Correctness,Bad6,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewInconsistentIdentityTest.cs,GetHashCode,The following statement contains a magic number: return 7*age;
Magic Number,Test.Rules.Correctness,ReviewSelfAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewSelfAssignmentTest.cs,InstanceFields,The following statement contains a magic number: AssertRuleFailure<ReviewSelfAssignmentTest> ("SameInstanceField"' 2);
Magic Number,Test.Rules.Correctness,ReviewSelfAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewSelfAssignmentTest.cs,Variable,The following statement contains a magic number: int z = y * 3;
Magic Number,Test.Rules.Correctness,ReviewSelfAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewSelfAssignmentTest.cs,SameParameter,The following statement contains a magic number: x = y * 2;
Magic Number,Test.Rules.Correctness,ReviewSelfAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewSelfAssignmentTest.cs,Parameter,The following statement contains a magic number: x = y * 2;
Magic Number,Test.Rules.Correctness,ReviewSelfAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewSelfAssignmentTest.cs,HashSetBad_Value,The following statement contains a magic number: links [411].Next = links [411].Next;
Magic Number,Test.Rules.Correctness,ReviewSelfAssignmentTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewSelfAssignmentTest.cs,HashSetBad_Value,The following statement contains a magic number: links [411].Next = links [411].Next;
Magic Number,Test.Rules.Correctness,ReviewUseOfInt64BitsToDoubleTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewUseOfInt64BitsToDoubleTest.cs,LocalVariableBad,The following statement contains a magic number: int x = 42;
Magic Number,Test.Rules.Correctness,ReviewUseOfInt64BitsToDoubleTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewUseOfInt64BitsToDoubleTest.cs,Bad,The following statement contains a magic number: AssertRuleFailure<ReviewUseOfInt64BitsToDoubleTest> ("ParametersBad"' 2);
Magic Number,Test.Rules.Correctness,ReviewUseOfInt64BitsToDoubleTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewUseOfInt64BitsToDoubleTest.cs,LocalVariableGood,The following statement contains a magic number: long x = 42;
Magic Number,Test.Rules.Correctness,ReviewUseOfModuloOneOnIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewUseOfModuloOneOnIntegersTest.cs,ModuloTwo,The following statement contains a magic number: return (i % 2);
Magic Number,Test.Rules.Correctness,ReviewUseOfModuloOneOnIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewUseOfModuloOneOnIntegersTest.cs,ModuloTwoUnsigned,The following statement contains a magic number: return (i % 2);
Magic Number,Test.Rules.Correctness,ReviewUseOfModuloOneOnIntegersTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\ReviewUseOfModuloOneOnIntegersTest.cs,ConstantAndVariable,The following statement contains a magic number: AssertRuleFailure<ReviewUseOfModuloOneOnIntegersTest> ("TwoModuloOneConst"' 2);
Magic Number,Test.Rules.Correctness,DisposeableFieldsArrayAssigned,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\TypesWithDisposableFieldsShouldBeDisposableTest.cs,Clone,The following statement contains a magic number: B = new Disposable [10];
Magic Number,Test.Rules.Correctness,TypesWithDisposableFieldsShouldBeDisposableTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\TypesWithDisposableFieldsShouldBeDisposableTest.cs,TestDisposeableFieldsImplementsIDisposeableAbstract,The following statement contains a magic number: AssertRuleFailure<DisposeableFieldsImplementsIDisposeableAbstractAssigned> (2);
Magic Number,Tests.Rules.Correctness,CheckParametersNullityInVisibleMethodsTest,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\rules\Gendarme.Rules.Correctness\Test\CheckParametersNullityInVisibleMethodsTest.cs,Reference,The following statement contains a magic number: AssertRuleFailure<CheckParametersNullityInVisibleMethodsTest> ("Enumerate"' 2);
