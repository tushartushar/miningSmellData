Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Gendarme.Framework.Engines,SuppressMessageEngine,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Engines\SuppressMessageEngine.cs,OnCustomAttributes,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Framework.Engines,SuppressMessageEngine,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Engines\SuppressMessageEngine.cs,ResolveTargets,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Framework.Helpers,MethodPrinter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\MethodPrinter.cs,ToString,Cyclomatic complexity of the method is 13
Complex Method,Gendarme.Framework.Helpers,StreamLineReader,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StreamLineReader.cs,ReadLine,Cyclomatic complexity of the method is 11
Complex Method,Gendarme.Framework.Helpers,MethodSignature,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\MethodSignature.cs,Matches,Cyclomatic complexity of the method is 11
Complex Method,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,CheckUsedBy,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FollowStackEntry,Cyclomatic complexity of the method is 9
Complex Method,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FindLoad,Cyclomatic complexity of the method is 22
Complex Method,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,GetLoadSlot,Cyclomatic complexity of the method is 11
Complex Method,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,GetStoreSlot,Cyclomatic complexity of the method is 10
Complex Method,Gendarme.Framework.Rocks,MetadataTokenProviderRock,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\CecilRocks.cs,GetAssembly,Cyclomatic complexity of the method is 13
Complex Method,Gendarme.Framework.Rocks,MetadataTokenProviderRock,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\CecilRocks.cs,GetAssemblyUsingCasts,Cyclomatic complexity of the method is 11
Complex Method,Gendarme.Framework.Rocks,InstructionRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\InstructionRocks.cs,GetOperandType,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Framework.Rocks,InstructionRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\InstructionRocks.cs,GetPopCount,Cyclomatic complexity of the method is 13
Complex Method,Gendarme.Framework.Rocks,MethodRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\MethodRocks.cs,CompareSignature,Cyclomatic complexity of the method is 11
Complex Method,Gendarme.Framework.Rocks,TypeRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\TypeRocks.cs,GetMethod,Cyclomatic complexity of the method is 15
Complex Method,Gendarme.Framework.Rocks,TypeRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\TypeRocks.cs,Inherits,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Framework.Rocks,TypeRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\TypeRocks.cs,IsNamed,Cyclomatic complexity of the method is 8
Complex Method,Gendarme.Framework,EngineController,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\EngineController.cs,Build,Cyclomatic complexity of the method is 10
Complex Method,Gendarme.Framework,BasicIgnoreList,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\BasicIgnoreList.cs,IsIgnored,Cyclomatic complexity of the method is 12
Complex Method,Gendarme.Framework,BasicIgnoreList,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\BasicIgnoreList.cs,IsIgnoredUsingCasts,Cyclomatic complexity of the method is 11
Long Parameter List,Gendarme.Framework.Rocks,TypeRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\TypeRocks.cs,GetMethod,The method has 6 parameters. Parameters: self' attributes' name' returnType' parameters' customCondition
Long Parameter List,Gendarme.Framework.Rocks,TypeRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\TypeRocks.cs,GetMethod,The method has 5 parameters. Parameters: self' attributes' name' returnType' parameters
Long Parameter List,Gendarme.Framework,Defect,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Defect.cs,Defect,The method has 6 parameters. Parameters: rule' target' location' severity' confidence' text
Long Parameter List,Gendarme.Framework,Defect,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Defect.cs,Defect,The method has 5 parameters. Parameters: rule' target' location' severity' confidence
Long Parameter List,Gendarme.Framework,Defect,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Defect.cs,Defect,The method has 7 parameters. Parameters: rule' target' location' ins' severity' confidence' text
Long Parameter List,Gendarme.Framework,Defect,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Defect.cs,Defect,The method has 6 parameters. Parameters: rule' target' location' ins' severity' confidence
Long Parameter List,Gendarme.Framework,IRunner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\IRunner.cs,Report,The method has 5 parameters. Parameters: method' ins' severity' confidence' message
Long Parameter List,Gendarme.Framework,Runner,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Runner.cs,Report,The method has 5 parameters. Parameters: method' ins' severity' confidence' message
Long Statement,Gendarme.Framework.Engines,SuppressMessageEngine,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Engines\SuppressMessageEngine.cs,OnAssembly,The length of the statement  "			if (assembly.MainModule.AnyTypeReference ((TypeReference tr) => { return tr.IsNamed ("System.Diagnostics.CodeAnalysis"' "SuppressMessageAttribute"); })) { " is 154.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,GetStackEntryUsage,The length of the statement  "			 * Then we check each usage for a store (to a local variable or an argument)' search for corrosponding loads and search for usages of the new Stackentry. " is 152.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,GetStackEntryUsage,The length of the statement  "			while (lastAlternativesCount != AlternativePaths.Count) { //continue until no more alternatives have been found (by CheckUsedBy) " is 128.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,GetStackEntryUsage,The length of the statement  "				for (int i = lastAlternativesCount; i < AlternativePaths.Count; i++) { //find the instruction that pops the value and follow all branches " is 137.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FollowStackEntry,The length of the statement  "						AlternativePaths.AddIfNew (new KeyValuePair<InstructionWithLeave' int> (startInstruction.Copy (oneTarget)' stackEntryDistance)); " is 128.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FollowStackEntry,The length of the statement  "							AlternativePaths.AddIfNew (new KeyValuePair<InstructionWithLeave' int> (startInstruction.Copy (switchTarget)' stackEntryDistance)); " is 131.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FollowStackEntry,The length of the statement  "				if (nextInstruction.OpCode.FlowControl == FlowControl.Branch || nextInstruction.OpCode.FlowControl == FlowControl.Cond_Branch) { " is 128.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FollowStackEntry,The length of the statement  "					AlternativePaths.AddIfNew (new KeyValuePair<InstructionWithLeave' int> (startInstruction.Copy (nextInstruction)' stackEntryDistance)); " is 134.
Long Statement,Gendarme.Framework.Helpers,StackEntryAnalysis,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StackEntryAnalysis.cs,FindLoad,The length of the statement  "								LoadAlternatives.AddIfNew (insWithLeave.Push (handler.HandlerStart' ins)); //push the leave instruction onto the leave stack " is 124.
Long Statement,Gendarme.Framework.Rocks,ModuleRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\ModuleRocks.cs,LoadDebuggingSymbols,The length of the statement  "				reader_type = Type.GetType ("Mono.Cecil.Mdb.MdbReaderProvider' Mono.Cecil.Mdb' Version=0.9.4.0' Culture=neutral' PublicKeyToken=0738eb9f132ed756"); " is 147.
Empty Catch Block,Gendarme.Framework.Rocks,ModuleRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\ModuleRocks.cs,LoadDebuggingSymbols,The method has an empty catch block.
Empty Catch Block,Gendarme.Framework.Rocks,ModuleRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\ModuleRocks.cs,LoadDebuggingSymbols,The method has an empty catch block.
Empty Catch Block,Gendarme.Framework.Rocks,ModuleRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\ModuleRocks.cs,LoadDebuggingSymbols,The method has an empty catch block.
Empty Catch Block,Gendarme.Framework.Rocks,ModuleRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\ModuleRocks.cs,LoadDebuggingSymbols,The method has an empty catch block.
Empty Catch Block,Gendarme.Framework.Rocks,ModuleRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\ModuleRocks.cs,LoadDebuggingSymbols,The method has an empty catch block.
Empty Catch Block,Gendarme.Framework,AssemblyResolver,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\AssemblyResolver.cs,Resolve,The method has an empty catch block.
Magic Number,Gendarme.Framework.Helpers,StreamLineReader,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\StreamLineReader.cs,Initialize,The following statement contains a magic number: buff = new char [4096];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,OpCodeBitmask,The following statement contains a magic number: mask [2] = bitmask.mask [2];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,OpCodeBitmask,The following statement contains a magic number: mask [2] = bitmask.mask [2];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,OpCodeBitmask,The following statement contains a magic number: mask [3] = bitmask.mask [3];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,OpCodeBitmask,The following statement contains a magic number: mask [3] = bitmask.mask [3];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,OpCodeBitmask,The following statement contains a magic number: mask [2] = c;
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,OpCodeBitmask,The following statement contains a magic number: mask [3] = d;
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Clear,The following statement contains a magic number: mask [index >> 6] &= ~((ulong) 1 << (index & 63));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Clear,The following statement contains a magic number: mask [index >> 6] &= ~((ulong) 1 << (index & 63));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,ClearAll,The following statement contains a magic number: mask [0] = mask [1] = mask [2] = mask [3] = 0;
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,ClearAll,The following statement contains a magic number: mask [0] = mask [1] = mask [2] = mask [3] = 0;
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Get,The following statement contains a magic number: return ((mask [index >> 6] & ((ulong) 1 << (index & 63))) != 0);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Get,The following statement contains a magic number: return ((mask [index >> 6] & ((ulong) 1 << (index & 63))) != 0);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Set,The following statement contains a magic number: mask [index >> 6] |= ((ulong) 1 << (index & 63));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Set,The following statement contains a magic number: mask [index >> 6] |= ((ulong) 1 << (index & 63));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,SetAll,The following statement contains a magic number: mask [0] = mask [1] = mask [2] = mask [3] = UInt64.MaxValue;
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,SetAll,The following statement contains a magic number: mask [0] = mask [1] = mask [2] = mask [3] = UInt64.MaxValue;
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,UnionWith,The following statement contains a magic number: mask [2] |= bitmask.mask [2];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,UnionWith,The following statement contains a magic number: mask [2] |= bitmask.mask [2];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,UnionWith,The following statement contains a magic number: mask [3] |= bitmask.mask [3];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,UnionWith,The following statement contains a magic number: mask [3] |= bitmask.mask [3];
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Intersect,The following statement contains a magic number: (mask [2] & bitmask.mask [2]) != 0
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Intersect,The following statement contains a magic number: (mask [2] & bitmask.mask [2]) != 0
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Intersect,The following statement contains a magic number: return ((mask [3] & bitmask.mask [3]) != 0);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Intersect,The following statement contains a magic number: return ((mask [3] & bitmask.mask [3]) != 0);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,IsSubsetOf,The following statement contains a magic number: (mask [2] & bitmask.mask [2]) != mask [2]
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,IsSubsetOf,The following statement contains a magic number: (mask [2] & bitmask.mask [2]) != mask [2]
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,IsSubsetOf,The following statement contains a magic number: (mask [2] & bitmask.mask [2]) != mask [2]
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,IsSubsetOf,The following statement contains a magic number: return ((mask [3] & bitmask.mask [3]) == mask [3]);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,IsSubsetOf,The following statement contains a magic number: return ((mask [3] & bitmask.mask [3]) == mask [3]);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,IsSubsetOf,The following statement contains a magic number: return ((mask [3] & bitmask.mask [3]) == mask [3]);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Equals,The following statement contains a magic number: return ((mask [0] == other.mask [0]) || (mask [1] == other.mask [1]) ||  				(mask [2] == other.mask [2]) || (mask [3] == other.mask [3]));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Equals,The following statement contains a magic number: return ((mask [0] == other.mask [0]) || (mask [1] == other.mask [1]) ||  				(mask [2] == other.mask [2]) || (mask [3] == other.mask [3]));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Equals,The following statement contains a magic number: return ((mask [0] == other.mask [0]) || (mask [1] == other.mask [1]) ||  				(mask [2] == other.mask [2]) || (mask [3] == other.mask [3]));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,Equals,The following statement contains a magic number: return ((mask [0] == other.mask [0]) || (mask [1] == other.mask [1]) ||  				(mask [2] == other.mask [2]) || (mask [3] == other.mask [3]));
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,GetHashCode,The following statement contains a magic number: return (mask [0] ^ mask [1] ^ mask [2] ^ mask [3]).GetHashCode ();
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,GetHashCode,The following statement contains a magic number: return (mask [0] ^ mask [1] ^ mask [2] ^ mask [3]).GetHashCode ();
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,ToString,The following statement contains a magic number: return String.Format (CultureInfo.InvariantCulture' "0x{0:X}:0x{1:X}:0x{2:X}:0x{3:X}"'   				mask [0]' mask [1]' mask [2]' mask [3]);
Magic Number,Gendarme.Framework.Helpers,OpCodeBitmask,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\OpCodeBitmask.cs,ToString,The following statement contains a magic number: return String.Format (CultureInfo.InvariantCulture' "0x{0:X}:0x{1:X}:0x{2:X}:0x{3:X}"'   				mask [0]' mask [1]' mask [2]' mask [3]);
Magic Number,Gendarme.Framework.Rocks,InstructionRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\InstructionRocks.cs,GetPopCount,The following statement contains a magic number: switch (self.OpCode.StackBehaviourPop) {  			case StackBehaviour.Pop0:  				return 0;    			case StackBehaviour.Pop1:  			case StackBehaviour.Popi:  			case StackBehaviour.Popref:  				return 1;    			case StackBehaviour.Pop1_pop1:  			case StackBehaviour.Popi_pop1:  			case StackBehaviour.Popi_popi8:  			case StackBehaviour.Popi_popr4:  			case StackBehaviour.Popi_popr8:  			case StackBehaviour.Popref_pop1:  			case StackBehaviour.Popref_popi:  			case StackBehaviour.Popi_popi:  				return 2;    			case StackBehaviour.Popi_popi_popi:  			case StackBehaviour.Popref_popi_popi:  			case StackBehaviour.Popref_popi_popi8:  			case StackBehaviour.Popref_popi_popr4:  			case StackBehaviour.Popref_popi_popr8:  			case StackBehaviour.Popref_popi_popref:  				return 3;    			case StackBehaviour.Varpop:  				switch (self.OpCode.FlowControl) {  				case FlowControl.Return:  					return method.ReturnType.IsNamed ("System"' "Void") ? 0 : 1;    				case FlowControl.Call:  					IMethodSignature calledMethod = (IMethodSignature) self.Operand;  					// avoid allocating empty ParameterDefinitionCollection  					int n = calledMethod.HasParameters ? calledMethod.Parameters.Count : 0;  					if (self.OpCode.Code != Code.Newobj) {  						if (calledMethod.HasThis)  							n++;  					}  					return n;    				default:  					throw new NotImplementedException ("Varpop not supported for this Instruction.");  				}    			case StackBehaviour.PopAll:  				return -1;  			default:  				string unknown = String.Format (CultureInfo.InvariantCulture'  					"'{0}' is not a valid value for instruction '{1}'."'  					self.OpCode.StackBehaviourPush' self.OpCode);  				throw new InvalidOperationException (unknown);  			}
Magic Number,Gendarme.Framework.Rocks,InstructionRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\InstructionRocks.cs,GetPopCount,The following statement contains a magic number: switch (self.OpCode.StackBehaviourPop) {  			case StackBehaviour.Pop0:  				return 0;    			case StackBehaviour.Pop1:  			case StackBehaviour.Popi:  			case StackBehaviour.Popref:  				return 1;    			case StackBehaviour.Pop1_pop1:  			case StackBehaviour.Popi_pop1:  			case StackBehaviour.Popi_popi8:  			case StackBehaviour.Popi_popr4:  			case StackBehaviour.Popi_popr8:  			case StackBehaviour.Popref_pop1:  			case StackBehaviour.Popref_popi:  			case StackBehaviour.Popi_popi:  				return 2;    			case StackBehaviour.Popi_popi_popi:  			case StackBehaviour.Popref_popi_popi:  			case StackBehaviour.Popref_popi_popi8:  			case StackBehaviour.Popref_popi_popr4:  			case StackBehaviour.Popref_popi_popr8:  			case StackBehaviour.Popref_popi_popref:  				return 3;    			case StackBehaviour.Varpop:  				switch (self.OpCode.FlowControl) {  				case FlowControl.Return:  					return method.ReturnType.IsNamed ("System"' "Void") ? 0 : 1;    				case FlowControl.Call:  					IMethodSignature calledMethod = (IMethodSignature) self.Operand;  					// avoid allocating empty ParameterDefinitionCollection  					int n = calledMethod.HasParameters ? calledMethod.Parameters.Count : 0;  					if (self.OpCode.Code != Code.Newobj) {  						if (calledMethod.HasThis)  							n++;  					}  					return n;    				default:  					throw new NotImplementedException ("Varpop not supported for this Instruction.");  				}    			case StackBehaviour.PopAll:  				return -1;  			default:  				string unknown = String.Format (CultureInfo.InvariantCulture'  					"'{0}' is not a valid value for instruction '{1}'."'  					self.OpCode.StackBehaviourPush' self.OpCode);  				throw new InvalidOperationException (unknown);  			}
Magic Number,Gendarme.Framework.Rocks,InstructionRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\InstructionRocks.cs,GetPushCount,The following statement contains a magic number: switch (self.OpCode.StackBehaviourPush) {  			case StackBehaviour.Push0:  				return 0;    			case StackBehaviour.Push1:  			case StackBehaviour.Pushi:  			case StackBehaviour.Pushi8:  			case StackBehaviour.Pushr4:  			case StackBehaviour.Pushr8:  			case StackBehaviour.Pushref:  				return 1;    			case StackBehaviour.Push1_push1:  				return 2;    			case StackBehaviour.Varpush:  				IMethodSignature calledMethod = (IMethodSignature) self.Operand;  				if (calledMethod != null)  					return calledMethod.ReturnType.IsNamed ("System"' "Void") ? 0 : 1;    				throw new NotImplementedException ("Varpush not supported for this Instruction.");  			default:  				string unknown = String.Format (CultureInfo.InvariantCulture'  					"'{0}' is not a valid value for instruction '{1}'."'  					self.OpCode.StackBehaviourPush' self.OpCode);  				throw new InvalidOperationException (unknown);  			}
Magic Number,Gendarme.Framework.Rocks,MethodRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\MethodRocks.cs,IsEventCallback,The following statement contains a magic number: parameters.Count != 2
Magic Number,Gendarme.Framework.Rocks,MethodRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\MethodRocks.cs,GetPropertyByAccessor,The following statement contains a magic number: String.CompareOrdinal (pname' 0' mname' 4' pname.Length) == 0
Magic Number,Gendarme.Framework,Bitmask<T>,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Bitmask.cs,Count,The following statement contains a magic number: i < 64
Magic Number,Gendarme.Framework,Bitmask<T>,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Bitmask.cs,SetUp,The following statement contains a magic number: SetRange (bit.ToInt32 (null)' 64);
Magic Number,Gendarme.Framework,Bitmask<T>,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework\Bitmask.cs,GetHashCode,The following statement contains a magic number: return unchecked ((int) (mask ^ (mask >> 32)));
Missing Default,Gendarme.Framework.Engines,SuppressMessageEngine,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Engines\SuppressMessageEngine.cs,AddIgnore,The following switch statement is missing a default case: switch (token.MetadataToken.TokenType) {  			case TokenType.Property:  				PropertyDefinition pd = (token as PropertyDefinition);  				foreach (string name in mapped_names) {  					ignore.Add (name' pd.GetMethod);  					ignore.Add (name' pd.SetMethod);  				}  				break;  			case TokenType.Event:  				EventDefinition ed = (token as EventDefinition);  				foreach (string name in mapped_names) {  					ignore.Add (name' ed.AddMethod);  					ignore.Add (name' ed.RemoveMethod);  					ignore.Add (name' ed.InvokeMethod);  					if (ed.HasOtherMethods) {  						foreach (MethodDefinition md in ed.OtherMethods) {  							ignore.Add (name' md);  						}  					}  				}  				break;  			}
Missing Default,Gendarme.Framework.Helpers,MethodPrinter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\MethodPrinter.cs,BranchTargets,The following switch statement is missing a default case: switch (instruction.OpCode.OperandType) {  			case OperandType.InlineSwitch:  				Instruction[] targets = (Instruction[])instruction.Operand;  				result = new int[targets.Length];  				int i = 0;  				foreach (Instruction target in targets) {  					result [i] = target.Offset;  					i++;  				}  				break;  			case OperandType.InlineBrTarget:  				result = new int[1];  				result [0] = ((Instruction)instruction.Operand).Offset;  				break;  			case OperandType.ShortInlineBrTarget:  				result = new int[1];  				result [0] = ((Instruction)instruction.Operand).Offset;  				break;  			}
Missing Default,Gendarme.Framework.Helpers,MethodPrinter,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Helpers\MethodPrinter.cs,IsBranch,The following switch statement is missing a default case: switch (instruction.OpCode.FlowControl) {  			case FlowControl.Branch:  			case FlowControl.Cond_Branch:  			case FlowControl.Return:  			/* Throw creates a new basic block' but it has no target'  			 * because the object to be thrown is taken from the stack.  			 * Thus' its type is not known before runtime' and we can't  			 * know which catch block will recieve it. */  			case FlowControl.Throw:  				return true;  			}
Missing Default,Gendarme.Framework.Rocks,TypeRocks,C:\research\architectureSmells\repos\mono_mono-tools\gendarme\framework\Gendarme.Framework.Rocks\TypeRocks.cs,IsGeneratedCode,The following switch statement is missing a default case: switch (self.Name [0]) {  			case '<': // e.g. <Module>' <PrivateImplementationDetails>  			case '$': // e.g. $ArrayType$1 nested inside <PrivateImplementationDetails>  				return true;  			}
