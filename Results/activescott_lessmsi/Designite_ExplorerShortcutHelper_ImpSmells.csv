Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,Cyclomatic complexity of the method is 9
Long Statement,Willeke.Scott.ExplorerShortcutHelper,RegistryTool,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\RegistryTools.cs,OpenRegistryKeyWithAddedErrorInfo,The length of the statement  "				throw new SecurityException("You do not have the permissions required to create or write the registry key '" + registryKeyName + "'."' eSecurity); " is 146.
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,The following statement contains a magic number: if (args.Length < 2)  				return CommandLineError("Invalid argument. Expected a unique command name.");
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,The following statement contains a magic number: if (args.Length < 3)  				return CommandLineError("Invalid argument. Expected a file class.");
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,The following statement contains a magic number: var fileClass = args[2];
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,The following statement contains a magic number: if (isAddingKey.Value)  			{	// if we're adding a key we're expecting more arguments:    				if (args.Length < 3)  					return CommandLineError("Invalid argument. Expected caption.");    				var contextMenuCaption = args[3]; // e.g. "&Extract Files";  				var shellCommandToExecute = args[4]; //e.g. '\"' + GetExePath() + "\" /x \"%1\" \"%1_extracted\"";  				  				var message = string.Format(CultureInfo.InvariantCulture'  										"Adding a shortcut for '{0}' files that will execute the following command: '{1}'..."'  										fileClass' shellCommandToExecute);    				Console.WriteLine(message);  				try  				{  					RegistryTool.RegisterFileVerb(commandName' fileClass' contextMenuCaption' shellCommandToExecute);  				}  				catch (Exception oops)  				{  					Console.WriteLine("Error adding shortcut menu: " + oops.ToString());  					return -1;  				}  				Console.WriteLine("Shortcut added.");  			}  			else  			{  				Console.WriteLine("Removing shortcut...");  				try  				{  					RegistryTool.UnRegisterFileVerb(commandName' fileClass);  				}  				catch (Exception oops)  				{  					Console.WriteLine("Error removing shortcut menu: " + oops.ToString());  					return -1;  				}  				Console.WriteLine("Shortcut removed.");  			}
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,The following statement contains a magic number: if (isAddingKey.Value)  			{	// if we're adding a key we're expecting more arguments:    				if (args.Length < 3)  					return CommandLineError("Invalid argument. Expected caption.");    				var contextMenuCaption = args[3]; // e.g. "&Extract Files";  				var shellCommandToExecute = args[4]; //e.g. '\"' + GetExePath() + "\" /x \"%1\" \"%1_extracted\"";  				  				var message = string.Format(CultureInfo.InvariantCulture'  										"Adding a shortcut for '{0}' files that will execute the following command: '{1}'..."'  										fileClass' shellCommandToExecute);    				Console.WriteLine(message);  				try  				{  					RegistryTool.RegisterFileVerb(commandName' fileClass' contextMenuCaption' shellCommandToExecute);  				}  				catch (Exception oops)  				{  					Console.WriteLine("Error adding shortcut menu: " + oops.ToString());  					return -1;  				}  				Console.WriteLine("Shortcut added.");  			}  			else  			{  				Console.WriteLine("Removing shortcut...");  				try  				{  					RegistryTool.UnRegisterFileVerb(commandName' fileClass);  				}  				catch (Exception oops)  				{  					Console.WriteLine("Error removing shortcut menu: " + oops.ToString());  					return -1;  				}  				Console.WriteLine("Shortcut removed.");  			}
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,Main,The following statement contains a magic number: if (isAddingKey.Value)  			{	// if we're adding a key we're expecting more arguments:    				if (args.Length < 3)  					return CommandLineError("Invalid argument. Expected caption.");    				var contextMenuCaption = args[3]; // e.g. "&Extract Files";  				var shellCommandToExecute = args[4]; //e.g. '\"' + GetExePath() + "\" /x \"%1\" \"%1_extracted\"";  				  				var message = string.Format(CultureInfo.InvariantCulture'  										"Adding a shortcut for '{0}' files that will execute the following command: '{1}'..."'  										fileClass' shellCommandToExecute);    				Console.WriteLine(message);  				try  				{  					RegistryTool.RegisterFileVerb(commandName' fileClass' contextMenuCaption' shellCommandToExecute);  				}  				catch (Exception oops)  				{  					Console.WriteLine("Error adding shortcut menu: " + oops.ToString());  					return -1;  				}  				Console.WriteLine("Shortcut added.");  			}  			else  			{  				Console.WriteLine("Removing shortcut...");  				try  				{  					RegistryTool.UnRegisterFileVerb(commandName' fileClass);  				}  				catch (Exception oops)  				{  					Console.WriteLine("Error removing shortcut menu: " + oops.ToString());  					return -1;  				}  				Console.WriteLine("Shortcut removed.");  			}
Magic Number,Willeke.Scott.ExplorerShortcutHelper,Program,C:\repos\activescott_lessmsi\src\ExplorerShortcutHelper\Program.cs,CommandLineError,The following statement contains a magic number: return 100;
