Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LessMsi.Cli,ListTableCommand,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\ListTableCommand.cs,Run,Cyclomatic complexity of the method is 12
Complex Method,LessMsi.Cli,ShowVersionCommand,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\ShowVersionCommand.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,Option,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,NDesk.Options,Option,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,AddSeparators,Cyclomatic complexity of the method is 17
Complex Method,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParseBundledValue,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,GetDescription,Cyclomatic complexity of the method is 20
Complex Method,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,GetLines,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,GetLineEnd,Cyclomatic complexity of the method is 11
Long Parameter List,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,GetOptionParts,The method has 5 parameters.
Long Statement,LessMsi.Cli,Program,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Program.cs,Main,The length of the statement  "				 * See https://github.com/mono/mono/blob/master/mcs/tools/mdoc/Mono.Documentation/mdoc.cs#L54  for an example of using "commands" and "subcommands" with the NDesk.Options lib." is 174.
Long Statement,NDesk.Options,OptionValueCollection,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,AssertValid,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Missing required value for option '{0}'.")' c.OptionName)' c.OptionName); " is 146.
Long Statement,NDesk.Options,Option,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,Parse,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Could not convert string `{0}' to type {1} for option `{2}'.")' value' typeof(T).Name' c.OptionName)' c.OptionName' e); " is 192.
Long Statement,NDesk.Options,Option,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParsePrototype,The length of the statement  "			throw new ArgumentException (string.Format ("Conflicting option types: '{0}' vs. '{1}'."' type' name [end])' "prototype"); " is 122.
Long Statement,NDesk.Options,Option,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParsePrototype,The length of the statement  "		throw new ArgumentException (string.Format ("Cannot provide key/value separators for Options taking {0} value(s)."' count)' "prototype"); " is 137.
Long Statement,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,Parse,The length of the statement  "	where ++c.OptionIndex >= 0 && (process || def != null) ? process ? argument == "--" ? (process = false) : !Parse (argument' c) ? def != null ? Unprocessed (null' def' c' argument) : true : false : def != null ? Unprocessed (null' def' c' argument) : true : true " is 261.
Long Statement,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParseValue,The length of the statement  "		foreach (string o in c.Option.ValueSeparators != null ? option.Split (c.Option.ValueSeparators' StringSplitOptions.None) : new string[] { " is 137.
Long Statement,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParseValue,The length of the statement  "		throw new OptionException (localizer (string.Format ("Error: Found {0} option values when expecting {1}."' c.OptionValues.Count' c.Option.MaxValueCount))' c.OptionName); " is 169.
Long Statement,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParseBool,The length of the statement  "	if (n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))) { " is 127.
Complex Conditional,NDesk.Options,Option,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 && ((names.Length == 1 && this.type != OptionValueType.None) || (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))"  is complex.
Magic Number,LessMsi.Cli,OpenGuiCommand,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\OpenGuiCommand.cs,Run,The following statement contains a magic number: if (args.Count < 2)  	throw new OptionException ("You must specify the name of the msi file to open when using the o command."' "o");  
Magic Number,LessMsi.Cli,ShowVersionCommand,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\ShowVersionCommand.cs,Run,The following statement contains a magic number: if (args.Count < 2)  	throw new OptionException ("You must specify an msi filename."' "v");  
Magic Number,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	List<string> lines = GetLines (localizer (GetDescription (p.Description)));  	o.WriteLine (lines [0]);  	string prefix = new string (' '' OptionWidth + 2);  	for (int i = 1; i < lines.Count; ++i) {  		o.Write (prefix);  		o.WriteLine (lines [i]);  	}  }  
Missing Default,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  case OptionValueType.None:  	c.OptionValues.Add (n);  	c.Option.Invoke (c);  	break;  case OptionValueType.Optional:  case OptionValueType.Required:  	ParseValue (v' c);  	break;  }  
Missing Default,NDesk.Options,OptionSet,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Cli\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  case ' ':  case '\t':  case '\v':  case '-':  case ''':  case '.':  case ';':  	sep = i;  	break;  case '\n':  	return i;  }  
