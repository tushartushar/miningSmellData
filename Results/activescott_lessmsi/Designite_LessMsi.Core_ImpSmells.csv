Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetMsiDirectories,Cyclomatic complexity of the method is 9
Complex Method,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractFiles,Cyclomatic complexity of the method is 12
Complex Method,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CabsFromMsiToDisk,Cyclomatic complexity of the method is 10
Complex Method,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackage,Cyclomatic complexity of the method is 9
Long Statement,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetPath,The length of the statement  "		//Sometimes parent is a '.' In this case' the files should be directly put into the parent of the parent. See http://msdn.microsoft.com/en-us/library/aa368295%28VS.85%29.aspx " is 174.
Long Statement,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetMsiDirectories,The length of the statement  "			//Semi colons can delmit the "target" and "sorce" names of the directory in DefaultDir' so we're going to use the Target here (in looking at MSI files' I found Target seems most meaningful. " is 189.
Long Statement,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetMsiDirectories,The length of the statement  "                    To specify different source and target directory names' separate the target and source names with a colon as follows: [targetname]:[sourcename]." is 144.
Long Statement,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetMsiDirectories,The length of the statement  "                    If the value of the Directory_Parent column is null or is equal to the Directory column' the DefaultDir column specifies the name of a root source directory." is 157.
Long Statement,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetMsiDirectories,The length of the statement  "                    For a non-root source directory' a period (.) entered in the DefaultDir column for the source directory name or the target directory name indicates the directory should be located in its parent directory without a subdirectory." is 227.
Long Statement,LessMsi.Msi,MsiDirectory,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\MsiDirectory.cs,GetMsiDirectories,The length of the statement  "		//  ...or is equal to the Directory column' the DefaultDir column specifies the name of a root source directory. - https://msdn.microsoft.com/en-us/library/windows/desktop/aa368295(v=vs.85).aspx " is 194.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,GetMsiFileFromFileNames,The length of the statement  "	Array.Sort (msiFiles' (f1' f2) => string.Compare (f1.LongFileName' f2.LongFileName' StringComparison.InvariantCulture)); " is 120.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractFiles,The length of the statement  "				//NOTE: This used to be triggered when we ignored case of file' but now we don't ignore case so this is unlikely to occur. " is 122.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractFiles,The length of the statement  "				// Differing only by case is not compliant with the msi specification but some installers do it (e.g. python' see issue 28). " is 124.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractFiles,The length of the statement  "		Debug.Assert (fileEntryMap.Count == filesToExtract.Length' "Duplicate files must have caused some files to not be in the map."); " is 128.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractFiles,The length of the statement  "						Debug.Fail ("output file already exists. We'll make it unique' but this is probably a strange msi or a bug in this program."); " is 126.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,DeleteFileForcefully,The length of the statement  "	// In github issue #4 found that the cab files in the Win7SDK have the readonly attribute set and File.Delete fails to delete them. Explicitly unsetting that bit before deleting works okay... " is 191.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,MergeCabs,The length of the statement  "			 * Otherwise extracting a file that extends beyond the bounds of one cab in the set will fail. This happens in VBRuntime.msi" is 123.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,MergeCabs,The length of the statement  "			 * if (flags & MSCAB_HDR_PREVCAB) is non-zero' there is a predecessor cabinet to open() and prepend(). Its MS-DOS case-insensitive filename is mscabd_cabinet::prevname" is 166.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,MergeCabs,The length of the statement  "			 * if (flags & MSCAB_HDR_NEXTCAB) is non-zero' there is a successor cabinet to open() and append(). Its MS-DOS case-insensitive filename is mscabd_cabinet::nextname" is 163.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CabsFromMsiToDisk,The length of the statement  "								* apparently in some cases a file spans multiple CABs (VBRuntime.msi) so due to that we have get all CAB files out of the MSI and then begin extraction. Then after we extract everything out of all CAbs we need to release the CAB extractors and delete temp files." is 262.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackage,The length of the statement  "	//NOTE: checking inputDatabase.TableExists("_Streams") here is not accurate. It reports that it doesn't exist at times when it is perfectly queryable. So we actually try it and look for a specific exception: " is 207.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackage,The length of the statement  "	//NOTE: we do want to tryStreams. It is more reliable when available and AFAICT it always /should/ be there according to the docs but isn't. " is 140.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackage,The length of the statement  "			// don't have _Streams table yet they still install. Since it appears that msi files generally (BUT NOT ALWAYS - see X86 Debuggers And Tools-x86_en-us.msi) will have only one cab file' we'll try to just find it in the sterams and use it instead: " is 245.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackage,The length of the statement  "		// MSIs do exist with >1. If we use the ExtractCabFromPackageTraditionalWay (via _Streams table) then it handles that. If we are using this fallback approach' multiple cabs is a bad sign! " is 187.
Long Statement,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackageTraditionalWay,The length of the statement  "	using (View view = inputDatabase.OpenExecuteView (String.Concat ("SELECT * FROM `_Streams` WHERE `Name` = '"' cabName' "'"))) { " is 127.
Long Statement,LessMsi.OleStorage,OleStorageFile,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\OleStorage\OleStorageFile.cs,GetStorageRoot,The length of the statement  "	var storageRoot = (StorageInfo)InvokeStorageRootMethod (null' "Open"' fileName.FullPathString' FileMode.Open' FileAccess.Read' FileShare.Read); " is 143.
Long Statement,LessMsi.OleStorage,OleStorageFile,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\OleStorage\OleStorageFile.cs,InvokeStorageRootMethod,The length of the statement  "	object result = storageRootType.InvokeMember (methodName' BindingFlags.Static | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.InvokeMethod' null' storageRoot' methodArgs); " is 209.
Long Statement,LessMsi.OleStorage,OleStorageFile,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\OleStorage\OleStorageFile.cs,Dump,The length of the statement  "	var dumpfileName = Path.Combine (BasePath' Path.GetFileName (_oleStorageFilePath.FullPathString) + "_streams.xml").FullPathString; " is 130.
Long Statement,LessMsi.OleStorage,OleStorageFile,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\OleStorage\OleStorageFile.cs,DumpStorage,The length of the statement  "			File.WriteAllBytes (Path.Combine (streamsBase' stream.Name).FullPathString' rawStream.ReadBytes ((int)rawStream.BaseStream.Length)); " is 132.
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CabsFromMsiToDisk,The following statement contains a magic number: using (View view = msidb.OpenExecuteView (query)) {  	Record record;  	while (view.Fetch (out record)) {  		using (record) {  			const int MsiInterop_Media_Cabinet = 4;  			string cabSourceName = record [MsiInterop_Media_Cabinet];  			if (string.IsNullOrEmpty (cabSourceName)) {  				Debug.Print ("Empty Cabinet value in Media table. This happens' but it's rare and it's weird!");  				//Debug.Fail("Couldn't find media CAB file inside the MSI (bad media table?).");   				continue;  			}  			if (!string.IsNullOrEmpty (cabSourceName)) {  				bool extract = false;  				if (cabSourceName.StartsWith ("#")) {  					extract = true;  					cabSourceName = cabSourceName.Substring (1);  				}  				Path localCabFile = Path.Combine (outputDir' cabSourceName);  				if (extract) {  					// extract cabinet' then explode all of the files to a temp directory  					ExtractCabFromPackage (localCabFile' cabSourceName' msidb' msi);  				} else {  					Path originalCabFile = Path.Combine (msi.Parent' cabSourceName);  					FileSystem.Copy (originalCabFile' localCabFile);  				}  				/* http://code.google.com/p/lessmsi/issues/detail?id=1 								* apparently in some cases a file spans multiple CABs (VBRuntime.msi) so due to that we have get all CAB files out of the MSI and then begin extraction. Then after we extract everything out of all CAbs we need to release the CAB extractors and delete temp files. 								* Thanks to Christopher Hamburg for explaining this! 							*/var c = new CabInfo (localCabFile.PathString' cabSourceName);  				localCabFiles.Add (c);  			}  		}  	}  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CabsFromMsiToDisk,The following statement contains a magic number: while (view.Fetch (out record)) {  	using (record) {  		const int MsiInterop_Media_Cabinet = 4;  		string cabSourceName = record [MsiInterop_Media_Cabinet];  		if (string.IsNullOrEmpty (cabSourceName)) {  			Debug.Print ("Empty Cabinet value in Media table. This happens' but it's rare and it's weird!");  			//Debug.Fail("Couldn't find media CAB file inside the MSI (bad media table?).");   			continue;  		}  		if (!string.IsNullOrEmpty (cabSourceName)) {  			bool extract = false;  			if (cabSourceName.StartsWith ("#")) {  				extract = true;  				cabSourceName = cabSourceName.Substring (1);  			}  			Path localCabFile = Path.Combine (outputDir' cabSourceName);  			if (extract) {  				// extract cabinet' then explode all of the files to a temp directory  				ExtractCabFromPackage (localCabFile' cabSourceName' msidb' msi);  			} else {  				Path originalCabFile = Path.Combine (msi.Parent' cabSourceName);  				FileSystem.Copy (originalCabFile' localCabFile);  			}  			/* http://code.google.com/p/lessmsi/issues/detail?id=1 								* apparently in some cases a file spans multiple CABs (VBRuntime.msi) so due to that we have get all CAB files out of the MSI and then begin extraction. Then after we extract everything out of all CAbs we need to release the CAB extractors and delete temp files. 								* Thanks to Christopher Hamburg for explaining this! 							*/var c = new CabInfo (localCabFile.PathString' cabSourceName);  			localCabFiles.Add (c);  		}  	}  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CabsFromMsiToDisk,The following statement contains a magic number: using (record) {  	const int MsiInterop_Media_Cabinet = 4;  	string cabSourceName = record [MsiInterop_Media_Cabinet];  	if (string.IsNullOrEmpty (cabSourceName)) {  		Debug.Print ("Empty Cabinet value in Media table. This happens' but it's rare and it's weird!");  		//Debug.Fail("Couldn't find media CAB file inside the MSI (bad media table?).");   		continue;  	}  	if (!string.IsNullOrEmpty (cabSourceName)) {  		bool extract = false;  		if (cabSourceName.StartsWith ("#")) {  			extract = true;  			cabSourceName = cabSourceName.Substring (1);  		}  		Path localCabFile = Path.Combine (outputDir' cabSourceName);  		if (extract) {  			// extract cabinet' then explode all of the files to a temp directory  			ExtractCabFromPackage (localCabFile' cabSourceName' msidb' msi);  		} else {  			Path originalCabFile = Path.Combine (msi.Parent' cabSourceName);  			FileSystem.Copy (originalCabFile' localCabFile);  		}  		/* http://code.google.com/p/lessmsi/issues/detail?id=1 								* apparently in some cases a file spans multiple CABs (VBRuntime.msi) so due to that we have get all CAB files out of the MSI and then begin extraction. Then after we extract everything out of all CAbs we need to release the CAB extractors and delete temp files. 								* Thanks to Christopher Hamburg for explaining this! 							*/var c = new CabInfo (localCabFile.PathString' cabSourceName);  		localCabFiles.Add (c);  	}  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackageTraditionalWay,The following statement contains a magic number: using (View view = inputDatabase.OpenExecuteView (String.Concat ("SELECT * FROM `_Streams` WHERE `Name` = '"' cabName' "'"))) {  	Record record;  	if (view.Fetch (out record)) {  		using (record) {  			Func<byte[]' int> streamReader = destBuffer => {  				const int msiInteropStoragesData = 2;  				//From wiX:Index to column name Data into Record for row in Msi Table Storages  				var bytesWritten = record.GetStream (msiInteropStoragesData' destBuffer' destBuffer.Length);  				return bytesWritten;  			};  			CopyStreamToFile (streamReader' destCabPath);  		}  	}  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackageTraditionalWay,The following statement contains a magic number: if (view.Fetch (out record)) {  	using (record) {  		Func<byte[]' int> streamReader = destBuffer => {  			const int msiInteropStoragesData = 2;  			//From wiX:Index to column name Data into Record for row in Msi Table Storages  			var bytesWritten = record.GetStream (msiInteropStoragesData' destBuffer' destBuffer.Length);  			return bytesWritten;  		};  		CopyStreamToFile (streamReader' destCabPath);  	}  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,ExtractCabFromPackageTraditionalWay,The following statement contains a magic number: using (record) {  	Func<byte[]' int> streamReader = destBuffer => {  		const int msiInteropStoragesData = 2;  		//From wiX:Index to column name Data into Record for row in Msi Table Storages  		var bytesWritten = record.GetStream (msiInteropStoragesData' destBuffer' destBuffer.Length);  		return bytesWritten;  	};  	CopyStreamToFile (streamReader' destCabPath);  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CopyStreamToFile,The following statement contains a magic number: using (var writer = new BinaryWriter (FileSystem.CreateFile (destFile))) {  	var buf = new byte[1024 * 1024];  	int bytesWritten;  	do {  		bytesWritten = streamReader (buf);  		if (bytesWritten > 0)  			writer.Write (buf' 0' bytesWritten);  	} while (bytesWritten > 0);  }  
Magic Number,LessMsi.Msi,Wixtracts,F:\newReposMay17\activescott_lessmsi\src\LessMsi.Core\Msi\Wixtracts.cs,CopyStreamToFile,The following statement contains a magic number: using (var writer = new BinaryWriter (FileSystem.CreateFile (destFile))) {  	var buf = new byte[1024 * 1024];  	int bytesWritten;  	do {  		bytesWritten = streamReader (buf);  		if (bytesWritten > 0)  			writer.Write (buf' 0' bytesWritten);  	} while (bytesWritten > 0);  }  
