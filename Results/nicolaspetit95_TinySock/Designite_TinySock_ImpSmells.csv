Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,ThreadReceived,The length of the statement  "		this.m_Socket.BeginReceive (this.m_Buffer' 0' this.m_Buffer.Length' SocketFlags.None' new AsyncCallback (this.ReceiveCallBack)' (object)this.m_Socket); " is 151.
Empty Catch Block,TinySock,TinyServer,C:\repos\nicolaspetit95_TinySock\TinySock\TinyServer.cs,Close,The method has an empty catch block.
Empty Catch Block,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,TinySocket,The method has an empty catch block.
Empty Catch Block,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,CloseSocket,The method has an empty catch block.
Empty Catch Block,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,Send,The method has an empty catch block.
Empty Catch Block,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,ThreadReceived,The method has an empty catch block.
Magic Number,TinySock,TinyServer,C:\repos\nicolaspetit95_TinySock\TinySock\TinyServer.cs,WaitConnection,The following statement contains a magic number: try {  	this.m_Socket = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp);  	this.m_Socket.Bind ((EndPoint)m_ListeningAdress);  	this.m_Socket.Listen (10);  	(new Thread (new ThreadStart (this.AcceptThread))).Start ();  	this.Listening (m_ListeningAdress);  }  catch (Exception ex) {  	this.ListeningFailed (ex);  }  
Magic Number,TinySock,TinyServer,C:\repos\nicolaspetit95_TinySock\TinySock\TinyServer.cs,WaitConnection,The following statement contains a magic number: this.m_Socket.Listen (10);  
Magic Number,TinySock,TinyServer,C:\repos\nicolaspetit95_TinySock\TinySock\TinyServer.cs,AcceptCallBack,The following statement contains a magic number: lock (this.m_Locker) {  	try {  		this.AcceptedSocket (new TinySocket (this.m_Socket.EndAccept (ar)' 5000));  		this.AcceptThread ();  	}  	catch {  		this.AcceptThread ();  	}  }  
Magic Number,TinySock,TinyServer,C:\repos\nicolaspetit95_TinySock\TinySock\TinyServer.cs,AcceptCallBack,The following statement contains a magic number: try {  	this.AcceptedSocket (new TinySocket (this.m_Socket.EndAccept (ar)' 5000));  	this.AcceptThread ();  }  catch {  	this.AcceptThread ();  }  
Magic Number,TinySock,TinyServer,C:\repos\nicolaspetit95_TinySock\TinySock\TinyServer.cs,AcceptCallBack,The following statement contains a magic number: this.AcceptedSocket (new TinySocket (this.m_Socket.EndAccept (ar)' 5000));  
Magic Number,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,ReceiveCallBack,The following statement contains a magic number: lock (this.m_Locker) {  	try {  		int rcv = this.m_Socket.EndReceive (ar);  		if (rcv > 0) {  			byte[] bytes = new byte[rcv];  			for (int b = 0; b <= rcv - 1; ++b)  				bytes [b] = this.m_Buffer [b];  			this.NotifyDataReceived (bytes);  			this.m_Buffer = new byte[5000];  			this.ThreadReceived ();  		}  		else  			this.NotifySocketClosed ();  	}  	catch {  		this.NotifySocketClosed ();  	}  }  
Magic Number,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,ReceiveCallBack,The following statement contains a magic number: try {  	int rcv = this.m_Socket.EndReceive (ar);  	if (rcv > 0) {  		byte[] bytes = new byte[rcv];  		for (int b = 0; b <= rcv - 1; ++b)  			bytes [b] = this.m_Buffer [b];  		this.NotifyDataReceived (bytes);  		this.m_Buffer = new byte[5000];  		this.ThreadReceived ();  	}  	else  		this.NotifySocketClosed ();  }  catch {  	this.NotifySocketClosed ();  }  
Magic Number,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,ReceiveCallBack,The following statement contains a magic number: if (rcv > 0) {  	byte[] bytes = new byte[rcv];  	for (int b = 0; b <= rcv - 1; ++b)  		bytes [b] = this.m_Buffer [b];  	this.NotifyDataReceived (bytes);  	this.m_Buffer = new byte[5000];  	this.ThreadReceived ();  }  else  	this.NotifySocketClosed ();  
Magic Number,TinySock,TinySocket,C:\repos\nicolaspetit95_TinySock\TinySock\TinySocket.cs,ReceiveCallBack,The following statement contains a magic number: this.m_Buffer = new byte[5000];  
