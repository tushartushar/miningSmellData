Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,LeakNativeMethodPtr,The length of the statement  "	var methodBuilder = typeBuilder.DefineMethod ("LeakNativeMethodPtr"' MethodAttributes.Public | MethodAttributes.Static' typeof(IntPtr)' null); " is 142.
Magic Number,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,LeakNativeMethodPtr,The following statement contains a magic number: try {  	// Call the method and return its JITed address  	var address = (IntPtr)method.Invoke (null' new object[0]);  	Console.WriteLine ("0x{0}"' address.ToString (string.Format ("X{0})"' IntPtr.Size * 2)));  	return address;  }  catch (Exception e) {  	Console.WriteLine ("{0} cannot return an unmanaged address.");  }  
Magic Number,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,LeakNativeMethodPtr,The following statement contains a magic number: Console.WriteLine ("0x{0}"' address.ToString (string.Format ("X{0})"' IntPtr.Size * 2)));  
Magic Number,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,Main,The following statement contains a magic number: buf [2] = (byte)0xc0;  
Magic Number,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,Main,The following statement contains a magic number: buf [3] = (byte)0xc3;  
Magic Number,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,Main,The following statement contains a magic number: using (var decoded = DiStorm3.Decode (ci' 10)) {  	foreach (var x in decoded.Instructions) {  		var s = String.Format ("{0:X} {1} {2}"' x.Offset' x.Mnemonic' x.Operands);  		Console.WriteLine (s);  	}  }  
Magic Number,TestDiStorm,Program,C:\repos\damageboy_distorm-net\diStorm.Sample\Program.cs,Main,The following statement contains a magic number: using (var decomposed = DiStorm3.Decompose (ci' 10)) {  	foreach (var y in decomposed.Instructions) {  		if (y.Opcode == Opcode.RET)  			continue;  		var x = DiStorm3.Format (ci' y);  		var s = String.Format ("{0:X} {1} {2}"' x.Offset' x.Mnemonic' x.Operands);  		Console.WriteLine (s);  	}  }  
