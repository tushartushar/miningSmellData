Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,CreateSyntaxTree,The length of the statement  "	var clientNamespace = SyntaxFactory.NamespaceDeclaration (SyntaxFactory.ParseName ("Clients")).AddMembers (types).AddMembers (CreateSimpleTypes (collectedSimpleTypes).ToArray<MemberDeclarationSyntax> ()); " is 204.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,CreateSyntaxTree,The length of the statement  "	var unit = SyntaxFactory.CompilationUnit ().AddUsings (SyntaxFactory.UsingDirective (SyntaxFactory.ParseName (typeof(RestClient).Namespace))' SyntaxFactory.UsingDirective (SyntaxFactory.ParseName (typeof(IEnumerable<>).Namespace))' SyntaxFactory.UsingDirective (SyntaxFactory.ParseName (typeof(Guid).Namespace))).AddMembers (clientNamespace); " is 342.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,EmitSimpleClass,The length of the statement  "	return SyntaxFactory.ClassDeclaration (ty.Name).AddMembers (EmitTypeProperties (ty).ToArray<MemberDeclarationSyntax> ()).AddModifiers (SyntaxFactory.Token (SyntaxKind.PublicKeyword)).WithLeadingTrivia (newlineTrivia).WithTrailingTrivia (newlineTrivia); " is 252.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,EmitSimpleTypeProperty,The length of the statement  "	return SyntaxFactory.PropertyDeclaration (SyntaxFactory.ParseTypeName (mem.TypeName)' mem.Name).AddModifiers (SyntaxFactory.Token (SyntaxKind.PublicKeyword)).AddAccessorListAccessors (SyntaxFactory.AccessorDeclaration (SyntaxKind.GetAccessorDeclaration)' SyntaxFactory.AccessorDeclaration (SyntaxKind.SetAccessorDeclaration)).WithLeadingTrivia (newlineTrivia).WithTrailingTrivia (newlineTrivia); " is 395.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,EmitClass,The length of the statement  "	return SyntaxFactory.ClassDeclaration (clientInfo.ClientName).AddModifiers (SyntaxFactory.Token (SyntaxKind.PublicKeyword)).AddBaseListTypes (SyntaxFactory.ParseTypeName (typeof(RestClient).FullName)).AddMembers (EmitMembers (clientInfo.RestEndpoints)).AddMembers (EmitConstructor ()).WithLeadingTrivia (newlineTrivia).WithTrailingTrivia (newlineTrivia); " is 354.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,EmitConstructor,The length of the statement  "	return SyntaxFactory.ConstructorDeclaration (".ctor").WithParameterList (SyntaxFactory.ParseParameterList ("(string baseUri)")).WithInitializer (SyntaxFactory.ConstructorInitializer (kind: SyntaxKind.BaseConstructorInitializer' argumentList: SyntaxFactory.ParseArgumentList ("(baseUri)"))).WithBody (SyntaxFactory.Block ()).WithLeadingTrivia (newlineTrivia' newlineTrivia).WithTrailingTrivia (newlineTrivia); " is 408.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,GenerateMethod,The length of the statement  "		returnType = SyntaxFactory.GenericName ("System.Threading.Tasks.Task").WithTypeArgumentList (SyntaxFactory.TypeArgumentList ().AddArguments (SyntaxFactory.ParseTypeName (restEndpointInfo.ReturnType))); " is 201.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,GenerateMethod,The length of the statement  "	return SyntaxFactory.MethodDeclaration (returnType' restEndpointInfo.Name).AddParameterListParameters (restEndpointInfo.Parameters.Select (GenerateParameter).ToArray ()).AddBodyStatements (GenerateMethodBody (restEndpointInfo)).WithTrailingTrivia (newlineTrivia).WithLeadingTrivia (newlineTrivia); " is 297.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,GenerateMethodBody,The length of the statement  "	var nullExpression = SyntaxFactory.LiteralExpression (SyntaxKind.NullLiteralExpression).WithLeadingTrivia (SyntaxFactory.SyntaxTrivia (SyntaxKind.WhitespaceTrivia' " ")); " is 170.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,GenerateMethodBody,The length of the statement  "		SyntaxFactory.LocalDeclarationStatement (SyntaxFactory.VariableDeclaration (SyntaxFactory.ParseTypeName (typeof(RestRequest).FullName)' SyntaxFactory.SeparatedList<VariableDeclaratorSyntax> ().Add (SyntaxFactory.VariableDeclarator ("@_request").WithInitializer (SyntaxFactory.EqualsValueClause (SyntaxFactory.ObjectCreationExpression (SyntaxFactory.ParseTypeName (typeof(RestRequest).FullName)).AddArgumentListArguments (SyntaxFactory.Argument (SyntaxFactory.LiteralExpression (SyntaxKind.StringLiteralExpression' SyntaxFactory.Literal (restEndpointInfo.Uri)))' SyntaxFactory.Argument (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.ParseTypeName (typeof(Method).FullName)' SyntaxFactory.IdentifierName (restEndpointInfo.Method.ToString ())))))))))' " is 795.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,GenerateMethodBody,The length of the statement  "		SyntaxFactory.ExpressionStatement (SyntaxFactory.InvocationExpression (SyntaxFactory.GenericName ("Execute").AddTypeArgumentListArguments (SyntaxFactory.ParseTypeName ("object"))).AddArgumentListArguments (SyntaxFactory.Argument (SyntaxFactory.IdentifierName ("@_request")))).WithTrailingTrivia (newlineTrivia).WithLeadingTrivia (newlineTrivia)' " is 345.
Long Statement,HttpClientGenerator,ClientEmitter,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\ClientEmitter.cs,GenerateParameter,The length of the statement  "	return SyntaxFactory.Parameter (SyntaxFactory.Identifier (endpointParameter.Name)).WithType (SyntaxFactory.ParseTypeName (endpointParameter.TypeName)); " is 151.
Long Statement,HttpClientGenerator,EndpointCollector,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\EndpointCollector.cs,CollectParameterSimpleTypes,The length of the statement  "	return _actionMethods.SelectMany (p => p.Parameters).Where (IsComplexType).Select (p => p.Type).Distinct ().Select (CreateSimpleType); " is 134.
Long Statement,HttpClientGenerator,EndpointCollector,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\EndpointCollector.cs,CreateActionUri,The length of the statement  "	var classRoute = action.ContainingType.GetAttributes ().SingleOrDefault (a => a.AttributeClass.Name == typeof(RoutePrefixAttribute).Name); " is 138.
Long Statement,HttpClientGenerator,EndpointCollector,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\EndpointCollector.cs,CreateActionUri,The length of the statement  "	string actionRouteUrl = actionRoute.ConstructorArguments.Length > 0 ? (string)actionRoute.ConstructorArguments [0].Value : string.Empty; " is 136.
Long Statement,HttpClientGenerator,EndpointCollector,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\EndpointCollector.cs,GetReturnTypeName,The length of the statement  "	if (methodSymbol.ReturnType.Name == typeof(IHttpActionResult).Name || (methodSymbol.ReturnType is INamedTypeSymbol && ((methodSymbol.ReturnType as INamedTypeSymbol).IsGenericType) && ((INamedTypeSymbol)methodSymbol.ReturnType).TypeArguments [0].Name == typeof(IHttpActionResult).Name)) { " is 287.
Long Statement,HttpClientGenerator,Program,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\Program.cs,BuildClient,The length of the statement  "	Console.WriteLine ("Actions: {0}"' string.Join ("' "' actionMethods.Select (act => act.ContainingType.Name + "." + act.Name))); " is 127.
Long Statement,HttpClientGenerator,TypeHelper,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\TypeHelper.cs,GetTypeName,The length of the statement  "		return string.Concat (type.Name' '<'' string.Join ("' "' ((INamedTypeSymbol)type).TypeArguments.Select (GetTypeName))' '>'); " is 124.
Long Statement,HttpClientGenerator.Projects,ProjectCompilationFactory,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\Projects\ProjectCompilationFactory.cs,CreateCompilation,The length of the statement  "	return CSharpCompilation.Create ("Server"' inputFiles.Select (file => CSharpSyntaxTree.ParseFile (Path.Combine (Path.GetDirectoryName (_projectPath)' file)))' references); " is 171.
Long Statement,HttpClientGenerator.References,ReferenceCache,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\References\ReferenceCache.cs,ResolveSystemRuntimeLocation,The length of the statement  "	var resolver = new MetadataFileReferenceResolver (searchPaths: ImmutableArray.Create (runtimeDirectory)' baseDirectory: null); " is 126.
Long Statement,HttpClientGenerator.References,ReferenceCache,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\References\ReferenceCache.cs,ForAssemblyLocation,The length of the statement  "	return _metadataFileReferences.GetOrAdd (assemblyLocation' location => new MetadataFileReference (fullPath: location' kind: MetadataImageKind.Assembly)); " is 153.
Complex Conditional,HttpClientGenerator,EndpointCollector,C:\repos\jakeswenson_HttpClientGenerator\HttpClientGenerator\HttpClientGenerator\EndpointCollector.cs,GetReturnTypeName,The conditional expression  "methodSymbol.ReturnType.Name == typeof(IHttpActionResult).Name || (methodSymbol.ReturnType is INamedTypeSymbol && ((methodSymbol.ReturnType as INamedTypeSymbol).IsGenericType) && ((INamedTypeSymbol)methodSymbol.ReturnType).TypeArguments [0].Name == typeof(IHttpActionResult).Name)"  is complex.
