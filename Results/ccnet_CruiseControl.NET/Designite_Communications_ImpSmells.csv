Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,Update,Cyclomatic complexity of the method is 20
Complex Method,ThoughtWorks.CruiseControl.Remote.Monitor,Server,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Server.cs,OnWatcherUpdate,Cyclomatic complexity of the method is 18
Complex Method,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateOperation,Cyclomatic complexity of the method is 9
Long Parameter List,ThoughtWorks.CruiseControl.Remote,ProjectStatus,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\ProjectStatus.cs,ProjectStatus,The method has 14 parameters.
Long Parameter List,ThoughtWorks.CruiseControl.Remote,ProjectStatus,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\ProjectStatus.cs,ProjectStatus,The method has 14 parameters.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetProjectStatus,The length of the statement  "	ProjectStatusResponse resp = ValidateResponse (connection.SendMessage ("GetProjectStatus"' GenerateServerRequest ())) as ProjectStatusResponse; " is 143.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetCruiseServerSnapshot,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetCruiseServerSnapshot"' GenerateServerRequest ())) as SnapshotResponse; " is 132.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetLatestBuildName,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetLatestBuildName"' GenerateProjectRequest (projectName))) as DataResponse; " is 135.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetBuildNames,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetBuildNames"' GenerateProjectRequest (projectName))) as DataListResponse; " is 134.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetServerLog,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetServerLog"' GenerateProjectRequest (projectName))) as DataResponse; " is 129.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetServerVersion,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetServerVersion"' GenerateServerRequest ())) as DataResponse; " is 121.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetProject,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetProject"' GenerateProjectRequest (projectName))) as DataResponse; " is 127.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetExternalLinks,The length of the statement  "	ExternalLinksListResponse resp = ValidateResponse (connection.SendMessage ("GetExternalLinks"' GenerateProjectRequest (projectName))) as ExternalLinksListResponse; " is 163.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetArtifactDirectory,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetArtifactDirectory"' GenerateProjectRequest (projectName))) as DataResponse; " is 137.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetStatisticsDocument,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetStatisticsDocument"' GenerateProjectRequest (projectName))) as DataResponse; " is 138.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetModificationHistoryDocument,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetModificationHistoryDocument"' GenerateProjectRequest (projectName))) as DataResponse; " is 147.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetRSSFeed,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetRSSFeed"' GenerateProjectRequest (projectName))) as DataResponse; " is 127.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetSecurityConfiguration,The length of the statement  "	var resp = this.ValidateResponse (connection.SendMessage ("GetSecurityConfiguration"' GenerateServerRequest ())) as DataResponse; " is 129.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,ListUsers,The length of the statement  "	ListUsersResponse resp = ValidateResponse (connection.SendMessage ("ListUsers"' GenerateServerRequest ())) as ListUsersResponse; " is 128.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,DiagnoseSecurityPermissions,The length of the statement  "	DiagnoseSecurityResponse resp = ValidateResponse (connection.SendMessage ("DiagnoseSecurityPermissions"' request)) as DiagnoseSecurityResponse; " is 143.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,ListBuildParameters,The length of the statement  "	BuildParametersResponse resp = ValidateResponse (connection.SendMessage ("ListBuildParameters"' GenerateProjectRequest (projectName))) as BuildParametersResponse; " is 162.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,ProcessMessage,The length of the statement  "			response.ErrorMessages.Add (new ErrorMessage (string.Format (CultureInfo.CurrentCulture' "Unable to translate message: '{0}' is unknown"' messageXml.DocumentElement.Name))); " is 173.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,GetBuildSummaries,The length of the statement  "	var resp = this.ValidateResponse (this.connection.SendMessage ("GetBuildSummaries"' request)) as ListBuildSummaryResponse; " is 122.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerClient.cs,ValidateResponse,The length of the statement  "		string message = "Request processing has failed on the remote server:" + Environment.NewLine + response.ConcatenateErrors (); " is 125.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerHttpClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerHttpClient.cs,SendButtonPush,The length of the statement  "		throw new CommunicationsException (string.Format (System.Globalization.CultureInfo.CurrentCulture' "{0} failed: {1}"' command' error.Message)' error); " is 150.
Long Statement,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,Equals,The length of the statement  "	return object.Equals (this.projectStatuses' other.projectStatuses) && object.Equals (this.queueSetSnapshot' other.queueSetSnapshot); " is 132.
Long Statement,ThoughtWorks.CruiseControl.Remote,EncryptingConnection,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\EncryptingConnection.cs,InitialisePassword,The length of the statement  "			throw new CommunicationsException ("Server did not allow the connection to be secured: " + loginResponse.ConcatenateErrors ()); " is 127.
Long Statement,ThoughtWorks.CruiseControl.Remote,HttpConnection,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\HttpConnection.cs,GenerateTargetUri,The length of the statement  "	var baseAddress = this.serverAddress.AbsoluteUri + (this.serverAddress.AbsoluteUri.EndsWith ("/") ? string.Empty : "/") + "server/" + request.ServerName + "/RawXmlMessage.aspx"; " is 177.
Long Statement,ThoughtWorks.CruiseControl.Remote,IntegrationRequest,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\IntegrationRequest.cs,ToString,The length of the statement  "		return string.Format (System.Globalization.CultureInfo.CurrentCulture' "{0} triggered a build ({1}) from {2}"' UserName' BuildCondition' Source); " is 145.
Long Statement,ThoughtWorks.CruiseControl.Remote,IntegrationRequest,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\IntegrationRequest.cs,ToString,The length of the statement  "		return string.Format (System.Globalization.CultureInfo.CurrentCulture' "Build ({1}) triggered from {0}"' Source' BuildCondition); " is 129.
Long Statement,ThoughtWorks.CruiseControl.Remote,XmlConversionUtil,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\XmlConversionUtil.cs,ProcessResponse,The length of the statement  "		throw new CommunicationsException (string.Format (CultureInfo.CurrentCulture' "Unable to translate message: '{0}' is unknown"' messageXml.DocumentElement.Name)); " is 161.
Long Statement,ThoughtWorks.CruiseControl.Remote,XmlConversionUtil,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\XmlConversionUtil.cs,FindMessageType,The length of the statement  "			XmlRootAttribute[] attributes = remotingType.GetCustomAttributes (typeof(XmlRootAttribute)' false) as XmlRootAttribute[]; " is 121.
Long Statement,ThoughtWorks.CruiseControl.Remote,XmlConversionUtil,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\XmlConversionUtil.cs,FindMessageType,The length of the statement  "					throw new ApplicationException (string.Format (System.Globalization.CultureInfo.CurrentCulture' "Duplicate message type found: '{0}'.\r\nFirst type: {1}\r\nSecond type: {2}"' attribute.ElementName' messageTypes [attribute.ElementName].FullName' remotingType.FullName)); " is 269.
Long Statement,ThoughtWorks.CruiseControl.Remote.Messages,Response,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Messages\Response.cs,Equals,The length of the statement  "		return string.Equals (other.requestIdentifier' requestIdentifier' StringComparison.CurrentCulture) && DateTime.Equals (other.Timestamp' Timestamp); " is 147.
Long Statement,ThoughtWorks.CruiseControl.Remote.Monitor,BuildQueueRequest,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\BuildQueueRequest.cs,GetHashCode,The length of the statement  "	return (this.BuildQueue == null ? 0 : this.BuildQueue.GetHashCode ()) + (this.Name ?? string.Empty).GetHashCode () + (InnerBuildQueueRequest == null ? 0 : this.RequestTime.GetHashCode ()); " is 188.
Long Statement,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,Validate,The length of the statement  "				exceptions.Add (GenerateException ("Value of '{name}' is less than the minimum allowed ({0})"' myMinValue.ToString (CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern' CultureInfo.InvariantCulture))); " is 210.
Long Statement,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,Validate,The length of the statement  "				exceptions.Add (GenerateException ("Value of '{name}' is more than the maximum allowed ({0})"' myMaxValue.ToString (CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern' CultureInfo.InvariantCulture))); " is 210.
Long Statement,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The length of the statement  "		date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture)); " is 124.
Long Statement,ThoughtWorks.CruiseControl.Remote.Parameters,SelectParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\SelectParameter.cs,Validate,The length of the statement  "			if ((string.IsNullOrEmpty (allowedValue.Name) && (allowedValue.Value == value)) || (!string.IsNullOrEmpty (allowedValue.Name) && (allowedValue.Name == value))) { " is 161.
Long Statement,ThoughtWorks.CruiseControl.Remote.Parameters,SelectParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\SelectParameter.cs,Convert,The length of the statement  "		if ((testValue == valueToCheck.Name) || (string.IsNullOrEmpty (valueToCheck.Name) && (testValue == valueToCheck.Value))) { " is 122.
Complex Conditional,ThoughtWorks.CruiseControl.Remote.Parameters,SelectParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\SelectParameter.cs,Validate,The conditional expression  "(string.IsNullOrEmpty (allowedValue.Name) && (allowedValue.Value == value)) || (!string.IsNullOrEmpty (allowedValue.Name) && (allowedValue.Name == value))"  is complex.
Empty Catch Block,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The method has an empty catch block.
Empty Catch Block,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The method has an empty catch block.
Empty Catch Block,ThoughtWorks.CruiseControl.Remote.Monitor,Server,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Server.cs,InitialiseServer,The method has an empty catch block.
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerRemotingClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerRemotingClient.cs,CruiseServerRemotingClient,The following statement contains a magic number: if (builder.Port == -1)  	builder.Port = 21234;  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerRemotingClient,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerRemotingClient.cs,CruiseServerRemotingClient,The following statement contains a magic number: builder.Port = 21234;  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,GetHashCode,The following statement contains a magic number: unchecked {  	if (projectStatuses != null)  		hashCode += 1000000007 * projectStatuses.GetHashCode ();  	if (queueSetSnapshot != null)  		hashCode += 1000000009 * queueSetSnapshot.GetHashCode ();  }  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,GetHashCode,The following statement contains a magic number: unchecked {  	if (projectStatuses != null)  		hashCode += 1000000007 * projectStatuses.GetHashCode ();  	if (queueSetSnapshot != null)  		hashCode += 1000000009 * queueSetSnapshot.GetHashCode ();  }  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,GetHashCode,The following statement contains a magic number: if (projectStatuses != null)  	hashCode += 1000000007 * projectStatuses.GetHashCode ();  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000007 * projectStatuses.GetHashCode ();  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,GetHashCode,The following statement contains a magic number: if (queueSetSnapshot != null)  	hashCode += 1000000009 * queueSetSnapshot.GetHashCode ();  
Magic Number,ThoughtWorks.CruiseControl.Remote,CruiseServerSnapshot,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\CruiseServerSnapshot.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000009 * queueSetSnapshot.GetHashCode ();  
Magic Number,ThoughtWorks.CruiseControl.Remote,EncryptingConnection,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\EncryptingConnection.cs,InitialisePassword,The following statement contains a magic number: try {  	// Request the public key  	var publicKeyRequest = new ServerRequest ();  	var publicKeyResponse = innerConnection.SendMessage ("RetrievePublicKey"' publicKeyRequest);  	if (publicKeyResponse.Result == ResponseResult.Failure) {  		throw new CommunicationsException ("Server does not export a public key: " + publicKeyResponse.ConcatenateErrors ());  	}  	// Generate a password   	var crypto = new RijndaelManaged ();  	crypto.KeySize = 128;  	crypto.GenerateKey ();  	crypto.GenerateIV ();  	cryptoKey = crypto.Key;  	cryptoIv = crypto.IV;  	// Encrypt the password  	var passwordKey = Convert.ToBase64String (cryptoKey);  	var passwordIv = Convert.ToBase64String (cryptoIv);  	var provider = new RSACryptoServiceProvider ();  	provider.FromXmlString ((publicKeyResponse as DataResponse).Data);  	var encryptedPasswordKey = Convert.ToBase64String (provider.Encrypt (UTF8Encoding.UTF8.GetBytes (passwordKey)' false));  	var encryptedPasswordIv = Convert.ToBase64String (provider.Encrypt (UTF8Encoding.UTF8.GetBytes (passwordIv)' false));  	// Send the password to the server  	var loginRequest = new LoginRequest (encryptedPasswordKey);  	loginRequest.AddCredential (LoginRequest.PasswordCredential' encryptedPasswordIv);  	var loginResponse = innerConnection.SendMessage ("InitialiseSecureConnection"' loginRequest);  	if (loginResponse.Result == ResponseResult.Failure) {  		throw new CommunicationsException ("Server did not allow the connection to be secured: " + loginResponse.ConcatenateErrors ());  	}  } catch {  	// Reset the password on any exception  	cryptoIv = new byte[0];  	cryptoKey = new byte[0];  	throw;  }  
Magic Number,ThoughtWorks.CruiseControl.Remote,EncryptingConnection,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\EncryptingConnection.cs,InitialisePassword,The following statement contains a magic number: crypto.KeySize = 128;  
Magic Number,ThoughtWorks.CruiseControl.Remote,RemotingConnection,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\RemotingConnection.cs,RemotingConnection,The following statement contains a magic number: if (builder.Port == -1)  	builder.Port = 21234;  
Magic Number,ThoughtWorks.CruiseControl.Remote,RemotingConnection,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\RemotingConnection.cs,RemotingConnection,The following statement contains a magic number: builder.Port = 21234;  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,PollingServerWatcher,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\PollingServerWatcher.cs,Poll,The following statement contains a magic number: while (!disposing) {  	Thread.Sleep (500);  	if (!disposing && (DateTime.Now > nextRefresh)) {  		RetrieveSnapshot ();  		nextRefresh = DateTime.Now.AddSeconds (interval);  	}  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,PollingServerWatcher,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\PollingServerWatcher.cs,Poll,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The following statement contains a magic number: lock (lockObject) {  	buildsLoaded = true;  	if (builds.Count == 0) {  		// This is the first load - so load all of the builds  		string[] buildNames =  {    		};  		try {  			client.ProcessSingleAction (p => {  				buildNames = client.GetBuildNames (p.Name);  			}' InnerProject);  		} catch {  			// Ignore any errors - just means that no builds will be loaded  		}  		foreach (var buildName in buildNames ?? new string[0]) {  			builds.Add (buildName' new ProjectBuild (buildName' this' client));  		}  	} else {  		if (project.LastBuildDate != value.LastBuildDate) {  			// Last build date has changed' therefore there will be one or more builds to load  			string[] buildNames =  {    			};  			try {  				client.ProcessSingleAction (p => {  					// Cannot pass in a date' only a number' so guessing there will be no more then   					// 10 builds since the last build  					buildNames = client.GetMostRecentBuildNames (p.Name' 10);  				}' InnerProject);  			} catch {  				// Ignore any errors - just means that no builds will be loaded  			}  			foreach (var buildName in buildNames) {  				if (!builds.ContainsKey (buildName)) {  					builds.Add (buildName' new ProjectBuild (buildName' this' client));  				}  			}  		}  	}  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The following statement contains a magic number: if (builds.Count == 0) {  	// This is the first load - so load all of the builds  	string[] buildNames =  {    	};  	try {  		client.ProcessSingleAction (p => {  			buildNames = client.GetBuildNames (p.Name);  		}' InnerProject);  	} catch {  		// Ignore any errors - just means that no builds will be loaded  	}  	foreach (var buildName in buildNames ?? new string[0]) {  		builds.Add (buildName' new ProjectBuild (buildName' this' client));  	}  } else {  	if (project.LastBuildDate != value.LastBuildDate) {  		// Last build date has changed' therefore there will be one or more builds to load  		string[] buildNames =  {    		};  		try {  			client.ProcessSingleAction (p => {  				// Cannot pass in a date' only a number' so guessing there will be no more then   				// 10 builds since the last build  				buildNames = client.GetMostRecentBuildNames (p.Name' 10);  			}' InnerProject);  		} catch {  			// Ignore any errors - just means that no builds will be loaded  		}  		foreach (var buildName in buildNames) {  			if (!builds.ContainsKey (buildName)) {  				builds.Add (buildName' new ProjectBuild (buildName' this' client));  			}  		}  	}  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The following statement contains a magic number: if (project.LastBuildDate != value.LastBuildDate) {  	// Last build date has changed' therefore there will be one or more builds to load  	string[] buildNames =  {    	};  	try {  		client.ProcessSingleAction (p => {  			// Cannot pass in a date' only a number' so guessing there will be no more then   			// 10 builds since the last build  			buildNames = client.GetMostRecentBuildNames (p.Name' 10);  		}' InnerProject);  	} catch {  		// Ignore any errors - just means that no builds will be loaded  	}  	foreach (var buildName in buildNames) {  		if (!builds.ContainsKey (buildName)) {  			builds.Add (buildName' new ProjectBuild (buildName' this' client));  		}  	}  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The following statement contains a magic number: try {  	client.ProcessSingleAction (p => {  		// Cannot pass in a date' only a number' so guessing there will be no more then   		// 10 builds since the last build  		buildNames = client.GetMostRecentBuildNames (p.Name' 10);  	}' InnerProject);  } catch {  	// Ignore any errors - just means that no builds will be loaded  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The following statement contains a magic number: client.ProcessSingleAction (p => {  	// Cannot pass in a date' only a number' so guessing there will be no more then   	// 10 builds since the last build  	buildNames = client.GetMostRecentBuildNames (p.Name' 10);  }' InnerProject);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Project,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Project.cs,LoadBuilds,The following statement contains a magic number: buildNames = client.GetMostRecentBuildNames (p.Name' 10);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,ProjectBuild,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\ProjectBuild.cs,ProjectBuild,The following statement contains a magic number: BuildDate = DateTime.ParseExact (name.Substring (3' 14)' "yyyyMMddHHmmss"' CultureInfo.InvariantCulture);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,ProjectBuild,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\ProjectBuild.cs,ProjectBuild,The following statement contains a magic number: BuildDate = DateTime.ParseExact (name.Substring (3' 14)' "yyyyMMddHHmmss"' CultureInfo.InvariantCulture);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,ProjectBuild,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\ProjectBuild.cs,ProjectBuild,The following statement contains a magic number: IsSuccessful = (name.Substring (17' 1) == "L");  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,ProjectBuild,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\ProjectBuild.cs,ProjectBuild,The following statement contains a magic number: if (IsSuccessful) {  	var startPos = name.IndexOf ("build."' StringComparison.OrdinalIgnoreCase) + 6;  	var endPos = name.LastIndexOf ('.');  	Label = name.Substring (startPos' endPos - startPos);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Monitor,Server,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Monitor\Server.cs,OnWatcherUpdate,The following statement contains a magic number: syncLock.AcquireWriterLock (10000);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: if (value.StartsWith ("today"' StringComparison.CurrentCultureIgnoreCase)) {  	date = CalculateOperation (value.Substring (5)' DateTime.Today);  } else if (dayOfWeekRegex.IsMatch (value)) {  	var day = dayOfWeekRegex.Match (value).Value;  	var diff = (int)DateTime.Today.DayOfWeek;  	date = DateTime.Today.AddDays (System.Convert.ToInt32 (day' CultureInfo.CurrentCulture) - diff);  	date = CalculateOperation (value.Substring (12)' date);  } else if (dayOfMonthRegex.IsMatch (value)) {  	var day = dayOfMonthRegex.Match (value);  	date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture));  	date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  } else {  	date = DateTime.Parse (value' CultureInfo.CurrentCulture);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: if (value.StartsWith ("today"' StringComparison.CurrentCultureIgnoreCase)) {  	date = CalculateOperation (value.Substring (5)' DateTime.Today);  } else if (dayOfWeekRegex.IsMatch (value)) {  	var day = dayOfWeekRegex.Match (value).Value;  	var diff = (int)DateTime.Today.DayOfWeek;  	date = DateTime.Today.AddDays (System.Convert.ToInt32 (day' CultureInfo.CurrentCulture) - diff);  	date = CalculateOperation (value.Substring (12)' date);  } else if (dayOfMonthRegex.IsMatch (value)) {  	var day = dayOfMonthRegex.Match (value);  	date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture));  	date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  } else {  	date = DateTime.Parse (value' CultureInfo.CurrentCulture);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: if (value.StartsWith ("today"' StringComparison.CurrentCultureIgnoreCase)) {  	date = CalculateOperation (value.Substring (5)' DateTime.Today);  } else if (dayOfWeekRegex.IsMatch (value)) {  	var day = dayOfWeekRegex.Match (value).Value;  	var diff = (int)DateTime.Today.DayOfWeek;  	date = DateTime.Today.AddDays (System.Convert.ToInt32 (day' CultureInfo.CurrentCulture) - diff);  	date = CalculateOperation (value.Substring (12)' date);  } else if (dayOfMonthRegex.IsMatch (value)) {  	var day = dayOfMonthRegex.Match (value);  	date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture));  	date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  } else {  	date = DateTime.Parse (value' CultureInfo.CurrentCulture);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: date = CalculateOperation (value.Substring (5)' DateTime.Today);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: if (dayOfWeekRegex.IsMatch (value)) {  	var day = dayOfWeekRegex.Match (value).Value;  	var diff = (int)DateTime.Today.DayOfWeek;  	date = DateTime.Today.AddDays (System.Convert.ToInt32 (day' CultureInfo.CurrentCulture) - diff);  	date = CalculateOperation (value.Substring (12)' date);  } else if (dayOfMonthRegex.IsMatch (value)) {  	var day = dayOfMonthRegex.Match (value);  	date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture));  	date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  } else {  	date = DateTime.Parse (value' CultureInfo.CurrentCulture);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: if (dayOfWeekRegex.IsMatch (value)) {  	var day = dayOfWeekRegex.Match (value).Value;  	var diff = (int)DateTime.Today.DayOfWeek;  	date = DateTime.Today.AddDays (System.Convert.ToInt32 (day' CultureInfo.CurrentCulture) - diff);  	date = CalculateOperation (value.Substring (12)' date);  } else if (dayOfMonthRegex.IsMatch (value)) {  	var day = dayOfMonthRegex.Match (value);  	date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture));  	date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  } else {  	date = DateTime.Parse (value' CultureInfo.CurrentCulture);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: date = CalculateOperation (value.Substring (12)' date);  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: if (dayOfMonthRegex.IsMatch (value)) {  	var day = dayOfMonthRegex.Match (value);  	date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' System.Convert.ToInt32 (day.Value' CultureInfo.CurrentCulture));  	date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  } else {  	date = DateTime.Parse (value' CultureInfo.CurrentCulture);  }  
Magic Number,ThoughtWorks.CruiseControl.Remote.Parameters,DateParameter,F:\newReposMay17\ccnet_CruiseControl.NET\project\Remote\Parameters\DateParameter.cs,CalculateDate,The following statement contains a magic number: date = CalculateOperation (value.Substring (day.Value.Length + 12)' date);  
