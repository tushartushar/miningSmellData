Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,CodeGenerator,Cyclomatic complexity of the method is 9
Complex Method,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,WhereByOriginalValue,Cyclomatic complexity of the method is 9
Complex Method,Mysoft.Map.Extensions.CodeDom,BuildManager,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\BuildManager.cs,FindEntityTypes,Cyclomatic complexity of the method is 8
Complex Method,Mysoft.Map.Extensions.CodeDom,BuildManager,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\BuildManager.cs,BatchCompile,Cyclomatic complexity of the method is 8
Complex Method,Mysoft.Map.Extensions.DAL,BaseEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\BaseEntity.cs,SetPropertyDefaultValue,Cyclomatic complexity of the method is 42
Complex Method,Mysoft.Map.Extensions.DAL,StoreProcedure,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\StoreProcedure.cs,GetSpParameters,Cyclomatic complexity of the method is 8
Complex Method,Mysoft.Map.Extensions.Workflow,BusinessTypeManager,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Workflow\BusinessTypeManager.cs,Bind,Cyclomatic complexity of the method is 13
Complex Method,Mysoft.Map.Extensions.Workflow,BusinessTypeManager,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Workflow\BusinessTypeManager.cs,BindGroup,Cyclomatic complexity of the method is 22
Complex Method,Mysoft.Map.Extensions.Workflow,BusinessTypeManager,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Workflow\BusinessTypeManager.cs,BindValue,Cyclomatic complexity of the method is 12
Complex Method,Mysoft.Map.Extensions.Xml,AppFormOption,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Xml\AppFormOption.cs,WriteXml,Cyclomatic complexity of the method is 9
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeDomCompiler,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeDomCompiler.cs,CreateDelegate,The length of the statement  "		Func<int' object[]' object> executeFunc = Delegate.CreateDelegate (typeof(Func<int' object[]' object>)' methodExecute) as Func<int' object[]' object>; " is 150.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,Switch,The length of the statement  "	_sb.AppendFormat ("case 8: return ConcurrencyUpdate_TimeStamp(({0})parameters[0]' ({0})parameters[1]' ({0})parameters[2]);\r\n"' _entityType.FullName); " is 151.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,Switch,The length of the statement  "	_sb.AppendFormat ("case 9: return ConcurrencyUpdate_OriginalValue(({0})parameters[0]' ({0})parameters[1]' ({0})parameters[2]);\r\n"' _entityType.FullName); " is 155.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,Insert,The length of the statement  "		_sb.AppendFormat ("parameters.Add(new SqlParameter(\"@{0}\"' {1}));\r\n"' info.NetName' OutPropertyGetValue (info' "t1")); " is 122.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,EnsureExistPrimaryField,The length of the statement  "		_sb.AppendFormat ("throw new InvalidOperationException(" + "\"类型 {0} 没有定义主键字段，不能执行{1}操作。\");"' _entityType.FullName' actionName); " is 129.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,CheckPrimaryKeyValue,The length of the statement  "		_sb.AppendFormat ("if( {0}.{1} == s_Empty.{1} ) throw new InvalidOperationException(\"没有为主键字段赋值：{0}.{1}\");\r\n"' varName' info.NetName); " is 137.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,SetField,The length of the statement  "	_sb.AppendFormat ("query=query+ \" [{0}] = \" + (new SqlParameter(\"@{1}{3}\"' {2}));\r\n"' info.DbName' paraNamePrefix' OutPropertyGetValue (info' varName)' info.NetName); " is 172.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,ConcurrencyUpdate,The length of the statement  "	_sb.AppendFormat ("public static CPQuery ConcurrencyUpdate_{1}({0} t1' {0} t2' {0} t3){{\r\n"' _entityType.FullName' concurrencyMode.ToString ()); " is 146.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,ConcurrencyDelete,The length of the statement  "	_sb.AppendFormat ("public static CPQuery ConcurrencyDelete_{1}({0} t2) {{\r\n"' _entityType.FullName' concurrencyMode.ToString ()); " is 131.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,IsTimeStampFieldNotExist,The length of the statement  "		_sb.AppendFormat ("throw new InvalidOperationException(" + "\"数据实体类型 {0} 对应的数据表没有TimeStamp字段。\");"' _entityType.FullName); " is 122.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,WhereByTimeStamp,The length of the statement  "			_sb.AppendFormat ("query=query+ \" [{0}] = \" + (new SqlParameter(\"@{1}{3}\"' CodeUtil.LongToByte({2}.{3}) ));\r\n"' _timeStampField.DbName' "original_"' "t2"' _timeStampField.NetName); " is 186.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,WhereByOriginalValue,The length of the statement  "	_sb.AppendFormat ("private static void WhereByOriginalValue(CPQuery query' {0} t1' {0} t2) {{\r\n"' _entityType.FullName); " is 122.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,WhereByOriginalValue,The length of the statement  "			_sb.AppendFormat ("query=query+ \" ([{0}] = \" + (new SqlParameter(\"@{1}{3}\"' {2})) + \" or @{1}{3} is null and [{0}] is null)\";\r\n"' info.DbName' "original_"' OutPropertyGetValue (info' "t2")' info.NetName); " is 212.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,WhereByOriginalValue,The length of the statement  "			_sb.AppendFormat ("query=query+ \" ([{0}] = \" + (new SqlParameter(\"@{1}{3}\"' {2})) + \")\";\r\n"' info.DbName' "original_"' OutPropertyGetValue (info' "t2")' info.NetName); " is 175.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,SetEntityProperty,The length of the statement  "	_sb.AppendFormat ("private static void SetEntityProperty({0} obj' string columnName' object value){{"' _entityType.FullName); " is 125.
Long Statement,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,XmlToEntity,The length of the statement  "	_sb.AppendFormat ("private static void XmlToProperty({0} obj' string columnName' string value){{\r\n"' _entityType.FullName); " is 125.
Long Statement,Mysoft.Map.Extensions.DAL,DataTableExtensions,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DataTableExtensions.cs,ToList,The length of the statement  "		throw new InvalidProgramException (string.Format ("类型 {0} 找不到ToList的操作方法，请确认已将实体类型定义在*.Entity.dll结尾的程序集中，且不是嵌套类，并已提供无参的构造函数。"' type.FullName)); " is 143.
Long Statement,Mysoft.Map.Extensions.DAL,BaseEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\BaseEntity.cs,GetNonStandardExecption,The length of the statement  "	return new Mysoft.Map.Extensions.Exception.NonStandardExecption (string.Format ("类型 {0} 不能执行指定的操作，因为它的定义不符合规范。请确认已将此类型定义在 .Entity.dll 结尾的程序集中，且不是嵌套类，并已提供无参的构造函数。"' entryType.FullName)); " is 185.
Long Statement,Mysoft.Map.Extensions,ReflectionExtensions,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Reflection\ReflectionExtensions.cs,IsNullableType,The length of the statement  "	return ((nullableType.IsGenericType && !nullableType.IsGenericTypeDefinition) && (nullableType.GetGenericTypeDefinition () == typeof(Nullable<>))); " is 147.
Long Statement,Mysoft.Map.Extensions,InitializerModule,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\InitializerModule.cs,InitMyDBAPI,The length of the statement  "	string connectionString = (string)type.InvokeMember ("GetSqlConnectionString"' BindingFlags.Static | BindingFlags.Public | BindingFlags.InvokeMethod' null' null' null); " is 168.
Long Statement,Mysoft.Map.Extensions,InitializerModule,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\InitializerModule.cs,InitAdditionalAPI,The length of the statement  "	//    throw new InvalidProgramException("没有找到期望的 Mysoft.Map.AdditionalAPI.XmlConvertor.ParseAppFormXmlToSqlCommand 方法。"); " is 121.
Long Statement,Mysoft.Map.Extensions,InitializerModule,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\InitializerModule.cs,InitAdditionalAPI,The length of the statement  "	//Mysoft.Map.Extensions.Xml.XmlDataEntity.SaveXmlFunc = Delegate.CreateDelegate(typeof(Func<string' string' List<KeyValuePair<string' SqlCommand>>>)' miSaveXml)  " is 160.
Long Statement,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The length of the statement  "		CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage) " is 122.
Complex Conditional,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,Insert,The conditional expression  "info.Attr != null && (info.Attr.Identity || info.Attr.TimeStamp || info.Attr.SeqGuid)"  is complex.
Complex Conditional,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,Insert_AllField,The conditional expression  "info.Attr != null && (info.Attr.Identity || info.Attr.TimeStamp || info.Attr.SeqGuid)"  is complex.
Complex Conditional,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,Insert_AllField,The conditional expression  "info.Attr != null && (info.Attr.Identity || info.Attr.TimeStamp || info.Attr.SeqGuid)"  is complex.
Complex Conditional,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,UpdateSetFields,The conditional expression  "info.Attr != null && (info.Attr.Identity || info.Attr.TimeStamp || info.Attr.PrimaryKey)"  is complex.
Empty Catch Block,Mysoft.Map.Extensions.DAL,ConnectionScope,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\ConnectionScope.cs,ForceClose,The method has an empty catch block.
Empty Catch Block,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,EventManager_OnException,The method has an empty catch block.
Empty Catch Block,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,EventManager_AfterExecute,The method has an empty catch block.
Magic Number,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,CodeGenerator,The following statement contains a magic number: _sb = new StringBuilder (1024 * 20);  
Magic Number,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,CodeGenerator,The following statement contains a magic number: _sb = new StringBuilder (1024 * 20);  
Magic Number,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,CodeGenerator,The following statement contains a magic number: _allFields = new List<DbMapInfo> (20);  
Magic Number,Mysoft.Map.Extensions.CodeDom,CodeGenerator,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\CodeDom\CodeGenerator.cs,CodeGenerator,The following statement contains a magic number: _keyFields = new List<DbMapInfo> (3);  
Magic Number,Mysoft.Map.Extensions.DAL,DataTableExtensions,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DataTableExtensions.cs,ToList,The following statement contains a magic number: if (description.ExecuteFunc != null)  	try {  		return description.ExecuteFunc (10' new object[] {  			table  		}) as List<T>;  	}  	catch (System.Exception ex) {  		//这里不希望调用者看到代码生成器产生的代码结构'于是在这里抛出捕获到的异常  		throw ex;  	}  else if (type.IsSubclassOf (typeof(BaseEntity)))  	throw new InvalidProgramException (string.Format ("类型 {0} 找不到ToList的操作方法，请确认已将实体类型定义在*.Entity.dll结尾的程序集中，且不是嵌套类，并已提供无参的构造函数。"' type.FullName));  else  	return DbHelper.ToList<T> (table' description);  
Magic Number,Mysoft.Map.Extensions.DAL,DataTableExtensions,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DataTableExtensions.cs,ToList,The following statement contains a magic number: try {  	return description.ExecuteFunc (10' new object[] {  		table  	}) as List<T>;  }  catch (System.Exception ex) {  	//这里不希望调用者看到代码生成器产生的代码结构'于是在这里抛出捕获到的异常  	throw ex;  }  
Magic Number,Mysoft.Map.Extensions.DAL,DataTableExtensions,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DataTableExtensions.cs,ToList,The following statement contains a magic number: return description.ExecuteFunc (10' new object[] {  	table  }) as List<T>;  
Magic Number,Mysoft.Map.Extensions.DAL,DbHelper,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DbHelper.cs,ToSingle,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	return scope.Current.ExecuteCommand<T> (cmd' p =>  {  		using (SqlDataReader reader = p.ExecuteReader ()) {  			if (description.ExecuteFunc != null) {  				return description.ExecuteFunc (2' new object[] {  					reader  				}) as T;  			}  			else if (type.IsSubclassOf (typeof(BaseEntity)))  				throw BaseEntity.GetNonStandardExecption (type);  			else  				return ToSingle<T> (reader' description);  		}  	});  }  
Magic Number,Mysoft.Map.Extensions.DAL,DbHelper,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DbHelper.cs,ToSingle,The following statement contains a magic number: return scope.Current.ExecuteCommand<T> (cmd' p =>  {  	using (SqlDataReader reader = p.ExecuteReader ()) {  		if (description.ExecuteFunc != null) {  			return description.ExecuteFunc (2' new object[] {  				reader  			}) as T;  		}  		else if (type.IsSubclassOf (typeof(BaseEntity)))  			throw BaseEntity.GetNonStandardExecption (type);  		else  			return ToSingle<T> (reader' description);  	}  });  
Magic Number,Mysoft.Map.Extensions.DAL,DbHelper,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DbHelper.cs,ToSingle,The following statement contains a magic number: using (SqlDataReader reader = p.ExecuteReader ()) {  	if (description.ExecuteFunc != null) {  		return description.ExecuteFunc (2' new object[] {  			reader  		}) as T;  	}  	else if (type.IsSubclassOf (typeof(BaseEntity)))  		throw BaseEntity.GetNonStandardExecption (type);  	else  		return ToSingle<T> (reader' description);  }  
Magic Number,Mysoft.Map.Extensions.DAL,DbHelper,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DbHelper.cs,ToSingle,The following statement contains a magic number: if (description.ExecuteFunc != null) {  	return description.ExecuteFunc (2' new object[] {  		reader  	}) as T;  }  else if (type.IsSubclassOf (typeof(BaseEntity)))  	throw BaseEntity.GetNonStandardExecption (type);  else  	return ToSingle<T> (reader' description);  
Magic Number,Mysoft.Map.Extensions.DAL,DbHelper,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\DbHelper.cs,ToSingle,The following statement contains a magic number: return description.ExecuteFunc (2' new object[] {  	reader  }) as T;  
Magic Number,Mysoft.Map.Extensions.DAL,BaseEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\BaseEntity.cs,SetPropertyDefaultValue,The following statement contains a magic number: if (_zeroProperties == null)  	_zeroProperties = new List<string> (8);  
Magic Number,Mysoft.Map.Extensions.DAL,BaseEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\BaseEntity.cs,SetPropertyDefaultValue,The following statement contains a magic number: _zeroProperties = new List<string> (8);  
Magic Number,Mysoft.Map.Extensions.DAL,BaseEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\BaseEntity.cs,TrackChange,The following statement contains a magic number: bakObject = description.ExecuteFunc (13' new object[] {  	this  }) as BaseEntity;  
Magic Number,Mysoft.Map.Extensions,TimeStampExtensions,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Tools\TimeStampExtensions.cs,TimeStampToInt64,The following statement contains a magic number: if (array.Length != 8)  	throw new ArgumentOutOfRangeException ("array"' "byte[]数组表示的时间戳，长度应该为8。");  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: using (ConnectionScope scope = new ConnectionScope ()) {  	SqlParameter[] parameters = new SqlParameter[] {  		new SqlParameter ("@LogGUID"' Guid.NewGuid ())'  		new SqlParameter ("@ExeUser"' userName)'  		new SqlParameter ("@ExeIP"' clientIp)'  		new SqlParameter ("@ExePage"' pageUrl)'  		new SqlParameter ("@ExeSQL"' sb.ToString ())'  		new SqlParameter ("@ErrorMessage"' message)  	};  	parameters [0].SqlDbType = SqlDbType.UniqueIdentifier;  	parameters [1].SqlDbType = SqlDbType.VarChar;  	parameters [2].SqlDbType = SqlDbType.VarChar;  	parameters [3].SqlDbType = SqlDbType.VarChar;  	parameters [4].SqlDbType = SqlDbType.Text;  	parameters [5].SqlDbType = SqlDbType.Text;  	parameters [1].Size = 50;  	parameters [2].Size = 40;  	parameters [3].Size = 100;  	CPQuery query = CPQuery.From (@"INSERT INTO mySQLLog (LogGUID' ExeDateTime' ExeUser' ExeIP' ExePage' ExeSQL' ErrorMessage)  					VALUES(@LogGUID' GETDATE()' @ExeUser' @ExeIP' @ExePage' @ExeSQL' @ErrorMessage)"' parameters);  	query.ExecuteNonQuery ();  }  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [2].SqlDbType = SqlDbType.VarChar;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [3].SqlDbType = SqlDbType.VarChar;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [4].SqlDbType = SqlDbType.Text;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [5].SqlDbType = SqlDbType.Text;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [1].Size = 50;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [2].Size = 40;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [2].Size = 40;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [3].Size = 100;  
Magic Number,Mysoft.Map.Extensions,TableTrace,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\TableTrace.cs,WriteSqlLog,The following statement contains a magic number: parameters [3].Size = 100;  
Magic Number,Mysoft.Map.Extensions.Xml,XmlDataEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Xml\XmlDataEntity.cs,ConvertXmlToSingle,The following statement contains a magic number: try {  	return description.ExecuteFunc (11' new object[] {  		xml  	}) as T;  }  catch (System.Exception ex) {  	//这里不希望调用者看到代码生成器产生的代码结构'于是在这里抛出捕获到的异常  	throw ex;  }  
Magic Number,Mysoft.Map.Extensions.Xml,XmlDataEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Xml\XmlDataEntity.cs,ConvertXmlToSingle,The following statement contains a magic number: return description.ExecuteFunc (11' new object[] {  	xml  }) as T;  
Magic Number,Mysoft.Map.Extensions.Xml,XmlDataEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Xml\XmlDataEntity.cs,ConvertXmlToList,The following statement contains a magic number: try {  	return description.ExecuteFunc (12' new object[] {  		xml  	}) as List<T>;  }  catch (System.Exception ex) {  	//这里不希望调用者看到代码生成器产生的代码结构'于是在这里抛出捕获到的异常  	throw ex;  }  
Magic Number,Mysoft.Map.Extensions.Xml,XmlDataEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\Xml\XmlDataEntity.cs,ConvertXmlToList,The following statement contains a magic number: return description.ExecuteFunc (12' new object[] {  	xml  }) as List<T>;  
Missing Default,Mysoft.Map.Extensions.DAL,BaseEntity,C:\repos\liefdiy_Mysoft.OnlineLibrary\sourcecode\Extensions\DAL\BaseEntity.cs,SetPropertyDefaultValue,The following switch statement is missing a default case: switch (propInfo.PropertyType.ToString ()) {  case "System.Boolean":  	propInfo.SetValue (this' GetDefaultValue<bool> ()' null);  	break;  case "System.Byte":  	propInfo.SetValue (this' GetDefaultValue<byte> ()' null);  	break;  //case "System.Char":  //    propInfo.SetValue(this' GetDefaultValue<char>()' null);  //    break;  case "System.DateTime":  	propInfo.SetValue (this' GetDefaultValue<DateTime> ()' null);  	break;  case "System.Decimal":  	propInfo.SetValue (this' GetDefaultValue<decimal> ()' null);  	break;  case "System.Double":  	propInfo.SetValue (this' GetDefaultValue<double> ()' null);  	break;  case "System.Int16":  	propInfo.SetValue (this' GetDefaultValue<short> ()' null);  	break;  case "System.Int32":  	propInfo.SetValue (this' GetDefaultValue<int> ()' null);  	break;  case "System.Int64":  	propInfo.SetValue (this' GetDefaultValue<long> ()' null);  	break;  //case "System.SByte":  //    propInfo.SetValue(this' GetDefaultValue<sbyte>()' null);  //    break;  case "System.Single":  	propInfo.SetValue (this' GetDefaultValue<float> ()' null);  	break;  //case "System.UInt16":  //    propInfo.SetValue(this' GetDefaultValue<ushort>()' null);  //    break;  //case "System.UInt32":  //    propInfo.SetValue(this' GetDefaultValue<uint>()' null);  //    break;  //case "System.UInt64":  //    propInfo.SetValue(this' GetDefaultValue<ulong>()' null);  //    break;  case "System.Guid":  	propInfo.SetValue (this' GetDefaultValue<Guid> ()' null);  	break;  case "System.DateTimeOffset":  	propInfo.SetValue (this' GetDefaultValue<DateTimeOffset> ()' null);  	break;  case "System.TimeSpan":  	propInfo.SetValue (this' GetDefaultValue<TimeSpan> ()' null);  	break;  }  
