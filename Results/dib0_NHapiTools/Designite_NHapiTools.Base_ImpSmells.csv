Implementation smell,Namespace,Class,File,Method,Description
Long Method,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The method has 106 lines of code.
Complex Method,NHapiTools.Base.IO,MultipleFilesStream,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\MultipleFilesStream.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,Cyclomatic complexity of the method is 18
Long Parameter List,NHapiTools.Base,Extensions,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Extensions.cs,GenerateAck,The method has 5 parameters. Parameters: message' ackType' appCommName' envName' errorMessage
Long Statement,NHapiTools.Base.CustomImplementation.V21.Messages,ACK,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\CustomImplementation\V21\Messages\ACK.cs,init,The length of the statement  "                HapiLogFactory.GetHapiLog(this.GetType()).Error((object)"Unexpected error creating ACK - this is probably a bug in the source code generator."' (Exception)ex); " is 159.
Long Statement,NHapiTools.Base.CustomImplementation.V22.Messages,ACK,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\CustomImplementation\V22\Messages\ACK.cs,init,The length of the statement  "                HapiLogFactory.GetHapiLog(this.GetType()).Error((object)"Unexpected error creating ACK - this is probably a bug in the source code generator."' (Exception)ex); " is 159.
Long Statement,NHapiTools.Base.IO,HL7FilterBase64AttachmentsStream,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7FilterBase64AttachmentsStream.cs,Read,The length of the statement  "                    if (subBuffer[i] != '|' && subBuffer[i] != '\r' && subBuffer[i] != '\n' && subBuffer[i] != '^' && subBuffer[i] != '~' && subBuffer[i] != '&') " is 141.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            bool exists = messagesOutput.ToString().Contains(string.Format("public static IEnumerable Get{1}Records(this {0} message)"' typeName' name)); " is 141.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            messagesOutput.Append(string.Format("        public static IEnumerable Get{1}Records(this {0} message)\n"' typeName' name)); " is 124.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            messagesOutput.Append(string.Format("            object[] result = message.GetRecords(\"{0}RepetitionsUsed\"' \"Get{0}\");\n"' name)); " is 134.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            messagesOutput.Append(string.Format("        public static List<{0}> GetAll{1}Records(this {2} message)\n"' returnType' name' typeName)); " is 137.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            messagesOutput.Append(string.Format("            return message.GetAllRecords<{1}>(\"{0}RepetitionsUsed\"' \"Get{0}\");\n"' name' returnType)); " is 143.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            messagesOutput.Append(string.Format("        public static {0} Add{1}(this {2} message)\n"' returnType' name' typeName)); " is 121.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateMessageMethods,The length of the statement  "            messagesOutput.Append(string.Format("            return message.Get{0}(message.{0}RepetitionsUsed);\n"' name' returnType)); " is 123.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            bool exists = segmentOutput.ToString().Contains(string.Format("public static IEnumerable Get{1}Records(this {0} message)"' typeName' name)); " is 140.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            segmentOutput.Append(string.Format("        public static IEnumerable Get{1}Records(this {0} message)\n"' typeName' name)); " is 123.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            segmentOutput.Append(string.Format("            object[] result = message.GetRecords(\"{0}RepetitionsUsed\"' \"Get{0}\");\n"' name)); " is 133.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            segmentOutput.Append(string.Format("        public static List<{0}> GetAll{1}Records(this {2} message)\n"' returnType' name' typeName)); " is 136.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            segmentOutput.Append(string.Format("            return message.GetAllRecords<{1}>(\"{0}RepetitionsUsed\"' \"Get{0}\");\n"' name' returnType)); " is 142.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            segmentOutput.Append(string.Format("        public static {0} Add{1}(this {2} message)\n"' returnType' name' typeName)); " is 120.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateSegmentMethods,The length of the statement  "            segmentOutput.Append(string.Format("            return message.Get{0}(message.{0}RepetitionsUsed);\n"' name' returnType)); " is 122.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateGroupMethods,The length of the statement  "            bool exists = groupOutput.ToString().Contains(string.Format("public static IEnumerable Get{1}Records(this {0} message)"' typeName' name)); " is 138.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateGroupMethods,The length of the statement  "            groupOutput.Append(string.Format("        public static IEnumerable Get{1}Records(this {0} message)\n"' typeName' name)); " is 121.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateGroupMethods,The length of the statement  "            groupOutput.Append(string.Format("            object[] result = message.GetRecords(\"{0}RepetitionsUsed\"' \"Get{0}\");\n"' name)); " is 131.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateGroupMethods,The length of the statement  "            groupOutput.Append(string.Format("        public static List<{0}> GetAll{1}Records(this {2} message)\n"' returnType' name' typeName)); " is 134.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateGroupMethods,The length of the statement  "            groupOutput.Append(string.Format("            return message.GetAllRecords<{1}>(\"{0}RepetitionsUsed\"' \"Get{0}\");\n"' name' returnType)); " is 140.
Long Statement,NHapiTools.Base.ModelToolsGenerator,Generator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\ModelToolsGenerator\Generator.cs,GenerateGroupMethods,The length of the statement  "            groupOutput.Append(string.Format("            return message.Get{0}(message.{0}RepetitionsUsed);\n"' name' returnType)); " is 120.
Long Statement,NHapiTools.Base.Model,GenericMessageWrapper,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Model\GenericMessageWrapper.cs,InstantiateMessage,The length of the statement  "            IMessage message = (IMessage)wrappedMessageType.GetConstructor(new Type[1] { typeof(IModelClassFactory) }).Invoke(new object[1] { (object)factory }); " is 149.
Long Statement,NHapiTools.Base.Net,SimpleMLLPClient,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Net\SimpleMLLPClient.cs,EnableSsl,The length of the statement  "            SslStream sslStream = new SslStream(clientStream' false' new RemoteCertificateValidationCallback(ValidateServerCertificate)' null); " is 131.
Long Statement,NHapiTools.Base.Util,Ack,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\Ack.cs,MakeACK,The length of the statement  "            //this should avoid an unhandled null reference exception in "inboundMessage.Version"' because people tend to send the inboudMessage without a check " is 148.
Long Statement,NHapiTools.Base.Util,Ack,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\Ack.cs,MakeACK,The length of the statement  "                throw new ArgumentNullException("Either process the valid message while retreiving the ack or handle invalid message differently"); " is 131.
Long Statement,NHapiTools.Base.Util,Ack,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\Ack.cs,MakeACK,The length of the statement  "            string ackClassType = string.Format("NHapi.Model.V{0}.Message.ACK' NHapi.Model.V{0}"' inboundMessage.Version.Replace("."' "")); " is 127.
Long Statement,NHapiTools.Base.Validation,ConfigurableContext,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\ConfigurableContext.cs,Init,The length of the statement  "            ValidationSection section = (ValidationSection)ConfigurationManager.GetSection("hl7ValidationRulesGroup/hl7ValidationRules"); " is 125.
Long Statement,NHapiTools.Base.Validation.Rule,MessageFieldMandatoryRule,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\Rule\MessageFieldMandatoryRule.cs,test,The length of the statement  "                        result = new ValidationException[1] { new ValidationException(string.Format("Field '{1}' is mandatory."' value' rule.FieldIndicator)) }; " is 136.
Long Statement,NHapiTools.Base.Validation.Rule,MessageFieldIntOnlyRule,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\Rule\MessageFieldIntOnlyRule.cs,test,The length of the statement  "                        result = new ValidationException[1] { new ValidationException(string.Format("Value in '{0}' may not be null."' value)) }; " is 121.
Long Statement,NHapiTools.Base.Validation.Rule,MessageFieldIntOnlyRule,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\Rule\MessageFieldIntOnlyRule.cs,test,The length of the statement  "                        result = new ValidationException[1] { new ValidationException(string.Format("Value '{0}' in '{1}' isn't an Int32."' value' rule.FieldIndicator)) }; " is 147.
Long Statement,NHapiTools.Base.Validation.Rule,MessageRegExRule,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\Rule\MessageRegExRule.cs,test,The length of the statement  "                        result = new ValidationException[1] { new ValidationException(string.Format("Value in '{0}' may not be null."' value)) }; " is 121.
Long Statement,NHapiTools.Base.Validation.Rule,MessageRegExRule,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\Rule\MessageRegExRule.cs,test,The length of the statement  "                        result = new ValidationException[1] { new ValidationException(string.Format("Value '{0}' in '{1}' doesn't match regex '{2}'."' value' rule.FieldIndicator' rule.RegEx)) }; " is 170.
Long Statement,NHapiTools.Base.Validation.Rule,MessageSegmentMandatoryRule,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\Rule\MessageSegmentMandatoryRule.cs,test,The length of the statement  "                        result = new ValidationException[1] { new ValidationException(string.Format("Segment {0} not available in message"' rule.MadatorySegment)) }; " is 141.
Complex Conditional,NHapiTools.Base.IO,HL7FilterBase64AttachmentsStream,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7FilterBase64AttachmentsStream.cs,Read,The conditional expression  "subBuffer[i] != '|' && subBuffer[i] != '\r' && subBuffer[i] != '\n' && subBuffer[i] != '^' && subBuffer[i] != '~' && subBuffer[i] != '&'"  is complex.
Complex Conditional,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The conditional expression  "nextChar == '#' && myIgnoreComments && (prev == -1 || prev == '\n' || prev == '\r')"  is complex.
Virtual Method Call from Constructor,NHapiTools.Base.Validation,BaseContext,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\BaseContext.cs,BaseContext,The constructor "BaseContext" calls a virtual method "Init".
Empty Catch Block,NHapiTools.Base.Net,SimpleMLLPClient,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Net\SimpleMLLPClient.cs,Dispose,The method has an empty catch block.
Empty Catch Block,NHapiTools.Base.Validation,AutomatedContext,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Validation\AutomatedContext.cs,Init,The method has an empty catch block.
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: myBuffer[myBuffer.Length - 1] == 13
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: nextChar == 10
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: endOfBuffer = bLength - 3;
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: myBuffer[bLength - 4] < 32
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: myBuffer[bLength - 4] < 32
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: myBuffer[bLength - 3] == 'M'
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: myBuffer[bLength - 2] == 'S'
Magic Number,NHapiTools.Base.IO,HL7InputStreamMessageStringEnumerator,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\IO\HL7InputStreamMessageStringEnumerator.cs,MoveNext,The following statement contains a magic number: nextChar == 'H' && bLength >= 3
Magic Number,NHapiTools.Base.Util,Ack,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\Ack.cs,MakeACK,The following statement contains a magic number: version = Terser.Get(inboundHeader' 12' 0' 1' 1);
Magic Number,NHapiTools.Base.Util,Ack,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\Ack.cs,MakeACK,The following statement contains a magic number: terser.Set("/MSA-2"' Terser.Get(inboundHeader' 10' 0' 1' 1));
Magic Number,NHapiTools.Base.Util,MLLP,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\MLLP.cs,StripMLLPContainer,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,NHapiTools.Base.Util,MLLP,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\MLLP.cs,StripMLLPContainer,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,NHapiTools.Base.Util,MLLP,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\MLLP.cs,ValidateMLLPMessage,The following statement contains a magic number: ((int)sb[sb.Length - 2] == MLLP_FIRST_END_CHARACTER) && ((int)sb[sb.Length - 1] == MLLP_LAST_END_CHARACTER)
Magic Number,NHapiTools.Base.Util,MLLP,D:\research\architectureSmells\repos\dib0_NHapiTools\Base\Util\MLLP.cs,ValidateMLLPMessage,The following statement contains a magic number: sb.Length > 3
