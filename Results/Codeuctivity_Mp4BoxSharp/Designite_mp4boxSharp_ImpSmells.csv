Implementation smell,Namespace,Class,File,Method,Description
Long Statement,mp4boxSharp,mp4BoxSharpAsync,C:\repos\Codeuctivity_Mp4BoxSharp\mp4boxSharp\mp4BoxSharpAsync.cs,backgroundWorker1_DoWork,The length of the statement  "		//either StandardError or StandardOutput may be read synchronous  http://msdn.microsoft.com/de-de/library/system.diagnostics.processstartinfo.redirectstandarderror.aspx " is 168.
Long Statement,mp4boxSharp,mp4BoxSharpSync,C:\repos\Codeuctivity_Mp4BoxSharp\mp4boxSharp\mp4BoxSharpSync.cs,mp4BoxConcat,The length of the statement  "	//nur eins darf synchron gelesen werden!! http://msdn.microsoft.com/de-de/library/system.diagnostics.processstartinfo.redirectstandarderror.aspx " is 144.
Magic Number,mp4boxSharp,mp4BoxSharpAsync,C:\repos\Codeuctivity_Mp4BoxSharp\mp4boxSharp\mp4BoxSharpAsync.cs,backgroundWorker1_DoWork,The following statement contains a magic number: try {  	Process p = new Process ();  	//http://msdn.microsoft.com/de-de/library/system.diagnostics.process.beginoutputreadline.aspx  	p.StartInfo.FileName = pathToMp4boxExe;  	//http://msdn.microsoft.com/de-de/library/system.diagnostics.processstartinfo.redirectstandardoutput.aspx  	p.StartInfo.RedirectStandardOutput = true;  	p.StartInfo.RedirectStandardError = true;  	p.StartInfo.UseShellExecute = false;  	p.StartInfo.CreateNoWindow = true;  	foreach (var item in parameter.Sources) {  		concatedParameterAndSources += "-cat \"" + item.LocalPath + "\" ";  	}  	p.StartInfo.Arguments = concatedParameterAndSources + "\"" + parameter.Destination.LocalPath + "\"";  	p.Start ();  	//either StandardError or StandardOutput may be read synchronous  http://msdn.microsoft.com/de-de/library/system.diagnostics.processstartinfo.redirectstandarderror.aspx  	string standardError;  	int progress = 0;  	while (((standardError = p.StandardError.ReadLine ()) != null) && (!worker.CancellationPending)) {  		mp4BoxConsolOutput += standardError;  		if (standardError.TrimEnd ().EndsWith ("/100)")) {  			progress = Convert.ToInt32 (standardError.Split ('(') [1].Substring (0' 2).Trim ());  			worker.ReportProgress (progress' standardError);  		}  		else {  			worker.ReportProgress (progress' standardError);  		}  	}  	if (!worker.CancellationPending) {  		p.WaitForExit ();  		e.Result = "Mp4Box Exited with the Exitcode: " + p.ExitCode.ToString () + "\n" + mp4BoxConsolOutput;  	}  	else {  		e.Result = "Canceld!";  		p.Close ();  		p.CancelErrorRead ();  		p.Dispose ();  	}  }  catch (Exception ex) {  	e.Result = ex.Message;  	throw;  }  
Magic Number,mp4boxSharp,mp4BoxSharpAsync,C:\repos\Codeuctivity_Mp4BoxSharp\mp4boxSharp\mp4BoxSharpAsync.cs,backgroundWorker1_DoWork,The following statement contains a magic number: while (((standardError = p.StandardError.ReadLine ()) != null) && (!worker.CancellationPending)) {  	mp4BoxConsolOutput += standardError;  	if (standardError.TrimEnd ().EndsWith ("/100)")) {  		progress = Convert.ToInt32 (standardError.Split ('(') [1].Substring (0' 2).Trim ());  		worker.ReportProgress (progress' standardError);  	}  	else {  		worker.ReportProgress (progress' standardError);  	}  }  
Magic Number,mp4boxSharp,mp4BoxSharpAsync,C:\repos\Codeuctivity_Mp4BoxSharp\mp4boxSharp\mp4BoxSharpAsync.cs,backgroundWorker1_DoWork,The following statement contains a magic number: if (standardError.TrimEnd ().EndsWith ("/100)")) {  	progress = Convert.ToInt32 (standardError.Split ('(') [1].Substring (0' 2).Trim ());  	worker.ReportProgress (progress' standardError);  }  else {  	worker.ReportProgress (progress' standardError);  }  
Magic Number,mp4boxSharp,mp4BoxSharpAsync,C:\repos\Codeuctivity_Mp4BoxSharp\mp4boxSharp\mp4BoxSharpAsync.cs,backgroundWorker1_DoWork,The following statement contains a magic number: progress = Convert.ToInt32 (standardError.Split ('(') [1].Substring (0' 2).Trim ());  
