Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SteamDroidServer.Client,ClientCommandParser,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientCommandParser.cs,ParseCommand,Cyclomatic complexity of the method is 17
Complex Method,SteamDroidServer.Client,ClientCommandParser,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientCommandParser.cs,SetStatus,Cyclomatic complexity of the method is 24
Complex Method,SteamDroidServer.Client,ClientConnection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientConnection.cs,HandleCallback,Cyclomatic complexity of the method is 10
Long Statement,SteamDroidServer,SteamDroidServer,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\SteamDroidServer.cs,listener_ConnectionOpened,The length of the statement  "	Logger.Get ().Log ("Client connected: " + eArgs.Connection.RemoteEndPoint.Address + ":" + eArgs.Connection.RemoteEndPoint.Port); " is 128.
Long Statement,SteamDroidServer,Program,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Program.cs,CheckSteamKit,The length of the statement  "		Logger.Get ().Log ("Warning; missing SteamKit2.dll' please download it from https://bitbucket.org/VoiDeD/steamre/downloads"); " is 125.
Empty Catch Block,SteamDroidServer.Networking,Connection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Networking\Connection.cs,Listen,The method has an empty catch block.
Magic Number,SteamDroidServer.Client,ClientCommandParser,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientCommandParser.cs,ChatSend,The following statement contains a magic number: if (command.Parameters.Length == 2) {  	int count = friends.GetFriendCount ();  	for (int i = 0; i < count; i++) {  		SteamID id = friends.GetFriendByIndex (i);  		if (id.ToString () == command.Parameters [0]) {  			friends.SendChatMessage (id' EChatEntryType.ChatMsg' command.Parameters [1].Trim ('"'));  			return Protocol.Server.Success;  		}  	}  	return Protocol.Server.NoSuchFriend;  }  
Magic Number,SteamDroidServer.Client,ClientConnection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientConnection.cs,Authorize,The following statement contains a magic number: if (message.Length >= 2 && message [0].Length > 0) {  	if (Users.Instance ().IsAllowed (message [0])) {  		String authCode = (message.Length == 3) ? message [2] : null;  		ConnectToSteam (message [0]' message [1]' authCode);  		return;  	}  	Logger.Get ().Log ("User not in allowed list: " + message [0]);  }  else {  	Logger.Get ().Log ("Invalid command");  }  
Magic Number,SteamDroidServer.Client,ClientConnection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientConnection.cs,Authorize,The following statement contains a magic number: if (message.Length >= 2 && message [0].Length > 0) {  	if (Users.Instance ().IsAllowed (message [0])) {  		String authCode = (message.Length == 3) ? message [2] : null;  		ConnectToSteam (message [0]' message [1]' authCode);  		return;  	}  	Logger.Get ().Log ("User not in allowed list: " + message [0]);  }  else {  	Logger.Get ().Log ("Invalid command");  }  
Magic Number,SteamDroidServer.Client,ClientConnection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientConnection.cs,Authorize,The following statement contains a magic number: if (message.Length >= 2 && message [0].Length > 0) {  	if (Users.Instance ().IsAllowed (message [0])) {  		String authCode = (message.Length == 3) ? message [2] : null;  		ConnectToSteam (message [0]' message [1]' authCode);  		return;  	}  	Logger.Get ().Log ("User not in allowed list: " + message [0]);  }  else {  	Logger.Get ().Log ("Invalid command");  }  
Magic Number,SteamDroidServer.Client,ClientConnection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientConnection.cs,Authorize,The following statement contains a magic number: if (Users.Instance ().IsAllowed (message [0])) {  	String authCode = (message.Length == 3) ? message [2] : null;  	ConnectToSteam (message [0]' message [1]' authCode);  	return;  }  
Magic Number,SteamDroidServer.Client,ClientConnection,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Client\ClientConnection.cs,Authorize,The following statement contains a magic number: if (Users.Instance ().IsAllowed (message [0])) {  	String authCode = (message.Length == 3) ? message [2] : null;  	ConnectToSteam (message [0]' message [1]' authCode);  	return;  }  
Magic Number,SteamDroidServer.Networking,Listener,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Networking\Listener.cs,Start,The following statement contains a magic number: socket.Listen (5);  
Magic Number,SteamDroidServer,Program,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Program.cs,Main,The following statement contains a magic number: try {  	String ip = DefaultIp;  	int port = DefaultPort;  	if (CheckSteamKit ()) {  		// Use the specified ip address' if any  		if (args.Length >= 1) {  			String useIp = args [0];  			ip = useIp;  		}  		// Use the specified port number' if any  		if (args.Length >= 2) {  			int usePort;  			if (int.TryParse (args [1]' out usePort)) {  				port = usePort;  			}  		}  		SteamDroidServer server = new SteamDroidServer ();  		server.Start (ip' port);  	}  }  catch (Exception e) {  	Logger.Get ().Log ("Exception: " + e.Message);  	Console.ReadLine ();  }  
Magic Number,SteamDroidServer,Program,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Program.cs,Main,The following statement contains a magic number: if (CheckSteamKit ()) {  	// Use the specified ip address' if any  	if (args.Length >= 1) {  		String useIp = args [0];  		ip = useIp;  	}  	// Use the specified port number' if any  	if (args.Length >= 2) {  		int usePort;  		if (int.TryParse (args [1]' out usePort)) {  			port = usePort;  		}  	}  	SteamDroidServer server = new SteamDroidServer ();  	server.Start (ip' port);  }  
Magic Number,SteamDroidServer,Program,C:\repos\FlyingPie_SteamDroid\SteamDroidServer\SteamDroidServer\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 2) {  	int usePort;  	if (int.TryParse (args [1]' out usePort)) {  		port = usePort;  	}  }  
