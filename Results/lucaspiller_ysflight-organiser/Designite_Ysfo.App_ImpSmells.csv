Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Ysfo.App,YsfoWrapper,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\YsfoWrapper.cs,Dispose,Cyclomatic complexity of the method is 8
Long Statement,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,LoadData,The length of the statement  "		MessageBox.Show ("The path to your YsFlight directory is invalid!"' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Asterisk); " is 124.
Long Statement,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnAircraftLoad_Click,The length of the statement  "	ICollection<Ysfo.Core.AircraftAddon> items = lbxAircraftUnloaded.SelectedItems.Cast<Ysfo.Core.AircraftAddon> ().ToList (); " is 122.
Long Statement,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnAircraftUnload_Click,The length of the statement  "	ICollection<Ysfo.Core.AircraftAddon> items = lbxAircraftLoaded.SelectedItems.Cast<Ysfo.Core.AircraftAddon> ().ToList (); " is 120.
Magic Number,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnAircraftDown_Click,The following statement contains a magic number: if (lbxAircraftUnloaded.SelectedItems.Count > 0) {  	// unloaded  	for (int i = lbxAircraftUnloaded.Items.Count - 2; i >= 0; i--) {  		// if selected  		if (lbxAircraftUnloaded.GetSelected (i)) {  			_ysfo.UnloadedAircraft.MoveItem (i' Extensions.MoveDirection.Down);  			// update selection  			lbxAircraftUnloaded.SetSelected (i + 1' true);  			lbxAircraftUnloaded.SetSelected (i' false);  		}  	}  }  
Magic Number,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnAircraftDown_Click,The following statement contains a magic number: for (int i = lbxAircraftUnloaded.Items.Count - 2; i >= 0; i--) {  	// if selected  	if (lbxAircraftUnloaded.GetSelected (i)) {  		_ysfo.UnloadedAircraft.MoveItem (i' Extensions.MoveDirection.Down);  		// update selection  		lbxAircraftUnloaded.SetSelected (i + 1' true);  		lbxAircraftUnloaded.SetSelected (i' false);  	}  }  
Magic Number,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnGroundDown_Click,The following statement contains a magic number: if (lbxGroundUnloaded.SelectedItems.Count > 0) {  	// unloaded  	for (int i = lbxGroundUnloaded.Items.Count - 2; i >= 0; i--) {  		// if selected  		if (lbxGroundUnloaded.GetSelected (i)) {  			_ysfo.UnloadedGround.MoveItem (i' Extensions.MoveDirection.Down);  			// update selection  			lbxGroundUnloaded.SetSelected (i + 1' true);  			lbxGroundUnloaded.SetSelected (i' false);  		}  	}  }  
Magic Number,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnGroundDown_Click,The following statement contains a magic number: for (int i = lbxGroundUnloaded.Items.Count - 2; i >= 0; i--) {  	// if selected  	if (lbxGroundUnloaded.GetSelected (i)) {  		_ysfo.UnloadedGround.MoveItem (i' Extensions.MoveDirection.Down);  		// update selection  		lbxGroundUnloaded.SetSelected (i + 1' true);  		lbxGroundUnloaded.SetSelected (i' false);  	}  }  
Magic Number,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnSceneryDown_Click,The following statement contains a magic number: if (lbxSceneryUnloaded.SelectedItems.Count > 0) {  	// unloaded  	for (int i = lbxSceneryUnloaded.Items.Count - 2; i >= 0; i--) {  		// if selected  		if (lbxSceneryUnloaded.GetSelected (i)) {  			_ysfo.UnloadedScenery.MoveItem (i' Extensions.MoveDirection.Down);  			// update selection  			lbxSceneryUnloaded.SetSelected (i + 1' true);  			lbxSceneryUnloaded.SetSelected (i' false);  		}  	}  }  
Magic Number,Ysfo.App,MainForm,C:\repos\lucaspiller_ysflight-organiser\src\Ysfo.App\MainForm.cs,btnSceneryDown_Click,The following statement contains a magic number: for (int i = lbxSceneryUnloaded.Items.Count - 2; i >= 0; i--) {  	// if selected  	if (lbxSceneryUnloaded.GetSelected (i)) {  		_ysfo.UnloadedScenery.MoveItem (i' Extensions.MoveDirection.Down);  		// update selection  		lbxSceneryUnloaded.SetSelected (i + 1' true);  		lbxSceneryUnloaded.SetSelected (i' false);  	}  }  
