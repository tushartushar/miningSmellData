Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cinephile.Core.Infrastructure.HttpTools,HttpLoggingHandler,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Infrastructure\HttpTools\HttpLoggingHandler.cs,SendAsync,Cyclomatic complexity of the method is 9
Long Statement,Cinephile.Core.Infrastructure.HttpTools,HttpLoggingHandler,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Infrastructure\HttpTools\HttpLoggingHandler.cs,SendAsync,The length of the statement  "            Debug.WriteLine($"{msg} {req.RequestUri.Scheme.ToUpper(CultureInfo.InvariantCulture)}/{resp.Version} {(int)resp.StatusCode} {resp.ReasonPhrase}");" is 146.
Long Statement,Cinephile.Core.Infrastructure.HttpTools,HttpLoggingHandler,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Infrastructure\HttpTools\HttpLoggingHandler.cs,SendAsync,The length of the statement  "                if (resp.Content is StringContent || IsTextBasedContentType(resp.Headers) || IsTextBasedContentType(resp.Content.Headers))" is 122.
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: var hashCode = 745094178;
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(PosterSmall);
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(PosterBig);
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(Overview);
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + ReleaseDate.GetHashCode();
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + Id.GetHashCode();
Magic Number,Cinephile.Core.Models,Movie,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Models\Movie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(Title);
Missing Default,Cinephile.Core.Infrastructure,DynamicDataExtensions,C:\research\architectureSmells\repos\reactiveui_ReactiveUI.Samples\xamarin-forms\Cinephile\Cinephile.Core\Infrastructure\DynamicDataExtensions.cs,Transform,The following switch statement is missing a default case: switch (change.Reason)                         {                             case ChangeReason.Add:                                 cache.AddOrUpdate(factory(change.Current)' change.Key);                                 break;                             case ChangeReason.Update:                                 // get the transformed item:                                 var previousTransform = cache.Lookup(change.Key)                                     .ValueOrThrow(() => new MissingKeyException($"There is no key matching {change.Key} in the cache"));                                  // apply the update action                                 updateAction(previousTransform' change.Current);                                  // send a refresh so sort or filter on this item can work on the inline change [this is an optional step]                                 cache.Refresh(change.Key);                                 break;                             case ChangeReason.Remove:                                 cache.Remove(change.Key);                                 break;                             case ChangeReason.Refresh:                                 cache.Refresh(change.Key);                                 break;                             case ChangeReason.Moved:                                 // Do nothing !                                 break;                         }
