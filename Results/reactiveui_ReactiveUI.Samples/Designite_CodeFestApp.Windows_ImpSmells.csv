Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ReactiveUI.Samples.UniversalAppDemo.Data,SampleDataItem,C:\repos\reactiveui_ReactiveUI.Samples\ReactiveUI.Samples.UniversalAppDemo\ReactiveUI.Samples.UniversalAppDemo.Shared\DataModel\SampleDataSource.cs,SampleDataItem,The method has 6 parameters. Parameters: uniqueId' title' subtitle' imagePath' description' content
Long Parameter List,ReactiveUI.Samples.UniversalAppDemo.Data,SampleDataGroup,C:\repos\reactiveui_ReactiveUI.Samples\ReactiveUI.Samples.UniversalAppDemo\ReactiveUI.Samples.UniversalAppDemo.Shared\DataModel\SampleDataSource.cs,SampleDataGroup,The method has 5 parameters. Parameters: uniqueId' title' subtitle' imagePath' description
Long Statement,ReactiveUI.Samples.UniversalAppDemo.Data,SampleDataSource,C:\repos\reactiveui_ReactiveUI.Samples\ReactiveUI.Samples.UniversalAppDemo\ReactiveUI.Samples.UniversalAppDemo.Shared\DataModel\SampleDataSource.cs,GetItemAsync,The length of the statement  "            var matches = _sampleDataSource.Groups.SelectMany(group => group.Items).Where((item) => item.UniqueId.Equals(uniqueId)); " is 120.
Magic Number,ReactiveUI.Samples.UniversalAppDemo,HubPage,C:\repos\reactiveui_ReactiveUI.Samples\ReactiveUI.Samples.UniversalAppDemo\ReactiveUI.Samples.UniversalAppDemo.Windows\HubPage.xaml.cs,HubPage,The following statement contains a magic number: this.WhenAnyObservable(x => x.ViewModel.NavigateToSectionCommand)                  .Cast<HubSectionHeaderClickEventArgs>()                  .Select(x => x.Section.DataContext)                  .Cast<HubViewModel>()                  .Select(x => x.Groups[2])                  .BindTo(this' x => x.ViewModel.GroupToNavigate);
Magic Number,ReactiveUI.Samples.UniversalAppDemo,App,C:\repos\reactiveui_ReactiveUI.Samples\ReactiveUI.Samples.UniversalAppDemo\ReactiveUI.Samples.UniversalAppDemo.Shared\App.xaml.cs,OnLaunched,The following statement contains a magic number: if (rootFrame == null)              {                  // Create a Frame to act as the navigation context and navigate to the first page                  rootFrame = new Frame();                    // TODO: change this value to a cache size that is appropriate for your application                  rootFrame.CacheSize = 3;                    if (e.PreviousExecutionState == ApplicationExecutionState.Terminated)                  {                      // TODO: Load state from previously suspended application                  }                    // Place the frame in the current Window                  Window.Current.Content = rootFrame;              }
