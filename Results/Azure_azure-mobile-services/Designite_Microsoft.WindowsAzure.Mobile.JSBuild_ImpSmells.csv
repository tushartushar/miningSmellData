Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.WindowsAzure.Mobile.JSBuild,MergeJSModules,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Javascript\tools\JSBuild\MergeJSModules.cs,WriteHeader,The method has 102 lines of code.
Long Method,Microsoft.WindowsAzure.Mobile.JSBuild,MergeJSModules,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Javascript\tools\JSBuild\MergeJSModules.cs,WriteModule,The method has 102 lines of code.
Long Parameter List,Microsoft.WindowsAzure.Mobile.JSBuild,MergeJSModules,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Javascript\tools\JSBuild\MergeJSModules.cs,WriteModule,The method has 5 parameters. Parameters: script' rootPath' module' definedModules' entrypoints
Long Statement,Microsoft.WindowsAzure.Mobile.JSBuild,MergeJSModules,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Javascript\tools\JSBuild\MergeJSModules.cs,WriteHeader,The length of the statement  "            Debug.Assert(File.Exists(libraryDefinitionPath)' "libraryDefinitionPath should point to an existing library definition."); " is 122.
Magic Number,Microsoft.WindowsAzure.Mobile.JSBuild,MergeJSModules,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Javascript\tools\JSBuild\MergeJSModules.cs,MergeModulesIntoLibrary,The following statement contains a magic number: IEnumerable<string> conditions =                   library                  .Attributes()                  .Select(a => a.Name.ToString())                  .Where(n => n.EndsWith("Path"' StringComparison.Ordinal))                  .Select(n => n.Substring(0' n.Length - 4));
